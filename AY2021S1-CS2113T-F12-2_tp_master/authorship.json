[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 1,
      "-": 46
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Michael Dinata | [Github](https://github.com/michaeldinata) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Eyo Wei Chin | [Github](https://github.com/EyoWeiChin) | [Portfolio](docs/team/EyoWeiChin.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "![3](https://avatars1.githubusercontent.com/u/39303087?s\u003d400\u0026v\u003d4) | Ong De Zhi | [Github](https://github.com/OngDeZhi) | [Portfolio](docs/team/OngDeZhi.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "![](https://i.pinimg.com/564x/c4/0d/7a/c40d7a7060fb74926c257db982b6ddaf--funny-stuff-funny-things.jpg) | Chan Jian Hao | [Github](https://github.com/ChanJianHao) | [Portfolio](docs/team/jianhao.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Xin Bin | [Github](https://github.com/n3wsoldier) | [Portfolio](docs/team/xinbin.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 1,
      "n3wsoldier": 1,
      "OngDeZhi": 1,
      "ChanJianHao": 3,
      "-": 4,
      "michaeldinata": 1
    }
  },
  {
    "path": "docs/team/xinbin.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "# XinBin- Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.anime.Anime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.UserProfile;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String USER_PROFILE_FILE_NAME \u003d \"userprofile.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String WATCHLIST_FILE_NAME \u003d \"watchlist.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private static final String ANIME_DATA_SOURCE_FOLDER \u003d \"/data/AniListData\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private AnimeStorage animeStorage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private UserProfile userProfile;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private Watchlist currentWatchlist;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private ArrayList\u003cWatchlist\u003e watchlists;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private AnimeData animeData;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private Bookmark bookmark;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private Watchlist activeWatchlist;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        storage \u003d new Storage(USER_PROFILE_FILE_NAME, WATCHLIST_FILE_NAME);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        userProfile \u003d storage.readUserProfileFile(ui);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        watchlists \u003d storage.readWatchlistFile(ui);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        bookmark \u003d new Bookmark();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeStorage \u003d new AnimeStorage(ANIME_DATA_SOURCE_FOLDER);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeData \u003d new AnimeData(animeStorage.readAnimeDatabase());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (watchlists.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            activeWatchlist \u003d new Watchlist(\"Default\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            watchlists.add(activeWatchlist);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            storage.writeWatchlistFile(ui, watchlists);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            activeWatchlist \u003d watchlists.get(0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (userProfile \u003d\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            userProfile \u003d quickStart();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String userInput \u003d ui.readUserInput(userProfile.getFancyName(), activeWatchlist.getName());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                command \u003d Parser.getCommand(userInput);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                // now passing in many parameters into execute,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                // but maybe can reduce in the future after refactoring?"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                command.execute(ui, storage, animeData, currentWatchlist, watchlists, bookmark);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            } catch (AniException exception) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printErrorMessage(exception.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        } while (!Command.isExit(command));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    // TODO: Organize the methods below to their respective class."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    // TEMPORARY, REMOVE ALL BELOW WHEN DONE REFACTORING!"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final Scanner CONSOLE \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private UserProfile quickStart() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        UserProfile userProfile \u003d null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        boolean profileMade \u003d false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        while (!profileMade) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                userProfile \u003d createProfile();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                profileMade \u003d true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                storage.writeUserProfileFile(ui, userProfile);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printErrorMessage(\"Is your date in dd/MM/yyyy format?\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            } catch (AniException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return userProfile;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private UserProfile createProfile() throws ParseException, AniException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ui.printMessage(\"What\u0027s your name?\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String name \u003d ui.readQuickStartInput();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ui.printMessage(\"Hello \" + name + \"! What might your date of birth be?\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String dob \u003d ui.readQuickStartInput();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ui.printMessage(\"What might your gender be? (Male/Female/Others)\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String gender \u003d ui.readQuickStartInput();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        UserProfile newProfile \u003d new UserProfile(name, dob, gender);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ui.printMessage(newProfile.toString());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return newProfile;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    // Sample usage of Anime Class [To Be Deleted]"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private void addAnime() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003dRunning Sample Anime Class\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String[] releaseDate \u003d {\"2020\", \"12\", \"30\"};"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String[] genre \u003d {\"Science\", \"Action\", \"Dance\"};"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String animeName \u003d \"Adventures of Adventurers\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int animeID \u003d 0;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int rating \u003d 65;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int avgEpisodeLength \u003d 30;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int totalEpisodes \u003d 24;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Anime testAnime \u003d new Anime(animeName, releaseDate,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                rating, genre, avgEpisodeLength, totalEpisodes);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        System.out.println(\"Release Date in String: \" + testAnime.getReleaseDateInString());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003dEnd of Sample Anime Class\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Adds a new user profile."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private void addProfile(String description) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        // Code to be added"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        // Print for testing"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"New profile added!\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Edits an existing user profile."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private void editProfile(String description) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        // Code to be added"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        // Print for testing"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"Profile edited!\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Browses the list of anime."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void browseAnime(String description) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Browse Feature (Bare and un-refactored)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        System.out.println(\"Browse Options:\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                + \" 1 - Just Browse / 2 - List from (A-Z) / 3 - List from (Z-A) / 4 - Sort \""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                + \"Rating Ascending / 5 - Sort Rating Descending\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        ArrayList\u003cAnime\u003e usableList \u003d animeData.animeDataList;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        switch (description.trim()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case \"2\":"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            usableList.sort(Comparator.comparing(Anime::getAnimeName));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case \"3\":"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            usableList.sort(Comparator.comparing(Anime::getAnimeName).reversed());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case \"4\":"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            usableList.sort(Comparator.comparing(Anime::getRating));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case \"5\":"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            usableList.sort(Comparator.comparing(Anime::getRating).reversed());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            System.out.println(\"Invalid Option!\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int browseIndex \u003d 0;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        boolean isBrowsing \u003d true;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Looping Mechanism"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        System.out.println(\"Happy Browsing!\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        for (Anime anime : usableList) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            if (!isBrowsing) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            browseIndex++;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            System.out.println(\"\\t\" + browseIndex + \". \" + anime.getAnimeName());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //Print 20 first then wait for user input"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            if (browseIndex % 20 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                while (true) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    System.out.println(\"Enter ID : More info on that series\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    System.out.println(\"Enter \u0027c\u0027: Continue browsing\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    System.out.println(\"Enter \u0027q\u0027: Stop browsing\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    String browseOption \u003d input.nextLine();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    if (browseOption.matches(\"-?\\\\d+(\\\\.\\\\d+)?\")) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                        int indexObtained \u003d Integer.parseInt(browseOption);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                        System.out.println(\"Requested List ID: \" + indexObtained);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                        if (indexObtained \u003e browseIndex || indexObtained \u003c 1) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                            System.out.println(\"Out of Range query!\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                            Anime browseAnime \u003d usableList.get(indexObtained - 1);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                            System.out.println(\"ID          :   \" + browseAnime.getAnimeID());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                            System.out.println(\"Title       :   \" + browseAnime.getAnimeName());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                            System.out.println(\"Rating      :   \" + browseAnime.getRating());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                            System.out.println(\"Episodes    :   \" + browseAnime.getTotalEpisodes());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                            System.out.println(\"Release Date:   \" + browseAnime.getReleaseDateInString());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    if (browseOption.trim().equals(\"c\")) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    if (browseOption.trim().equals(\"q\")) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                        isBrowsing \u003d false;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        System.out.println(\"Total results found: \" + browseIndex);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Put the list back in its original form"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (!description.trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            usableList.sort(Comparator.comparing(Anime::getAnimeID));"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    //Sample Usage of AnimeList Class [To Be Deleted]"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private void createAnimeList() {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003dRunning Sample Anime List Class\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        ArrayList\u003cAnime\u003e animeStorageList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] releaseDate \u003d {\"2020\", \"12\", \"30\"};"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] genre \u003d {\"Science\", \"Action\", \"Dance\"};"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String animeName \u003d \"Adventures of Adventurers\";"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int animeID \u003d 1;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int rating \u003d 65;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int avgEpisodeLength \u003d 30;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int totalEpisodes \u003d 24;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Anime testAnime \u003d new Anime(animeName, releaseDate, rating, genre,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                avgEpisodeLength, totalEpisodes);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] releaseDate2 \u003d {\"1997\", \"4\", \"15\"};"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] genre2 \u003d {\"Adventure\", \"Action\", \"Dance\"};"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String animeName2 \u003d \"Actions in Action\";"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        animeID \u003d 2;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int rating2 \u003d 80;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int avgEpisodeLength2 \u003d 20;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int totalEpisodes2 \u003d 13;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Anime testAnime2 \u003d new Anime(animeName2, releaseDate2, rating2, genre2,"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                avgEpisodeLength2, totalEpisodes2);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeStorageList.add(testAnime);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeStorageList.add(testAnime2);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        AnimeData animeData \u003d new AnimeData(animeStorageList);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeData.printAll();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003dEnd of Sample Anime List Class\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 96,
      "n3wsoldier": 50,
      "OngDeZhi": 67,
      "ChanJianHao": 15,
      "-": 12,
      "michaeldinata": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/anime/Anime.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.anime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.Character;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Anime {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static int totalAnime \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private int animeID;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private ArrayList\u003cCharacter\u003e characters \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String animeName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private Date releaseDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private int rating;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String[] genre;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private int avgEpisodeLength;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private int totalEpisodes;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    //Default Constructor to create empty Anime class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Anime() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.animeID \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.animeName \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.rating \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.totalEpisodes \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.genre \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        totalAnime++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        animeID \u003d totalAnime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Anime(String animeName, String[] releaseDate, int rating,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                 String[] genre, int avgEpisodeLength, int totalEpisodes) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setAnimeID(animeID);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setAnimeName(animeName);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setReleaseDate(releaseDate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setRating(rating);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setGenre(genre);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setAvgEpisodeLength(avgEpisodeLength);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setTotalEpisodes(totalEpisodes);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        totalAnime++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        animeID \u003d totalAnime;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public int getAnimeID() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return animeID;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setAnimeID(int animeID) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.animeID \u003d animeID;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void addCharacter(Character newCharacter) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        characters.add(newCharacter);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ArrayList\u003cCharacter\u003e getCharacters() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return characters;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setTotalEpisodes(int totalEpisodes) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.totalEpisodes \u003d totalEpisodes;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public int getAvgEpisodeLength() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return avgEpisodeLength;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setAvgEpisodeLength(int avgEpisodeLength) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.avgEpisodeLength \u003d avgEpisodeLength;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public int getTotalEpisodes() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return totalEpisodes;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getAnimeName() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return animeName;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setAnimeName(String animeName) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.animeName \u003d animeName;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Date getReleaseDate() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return releaseDate;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getReleaseDateInString() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        SimpleDateFormat newDateFormat \u003d new SimpleDateFormat(\"dd/MMM/yyyy\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return newDateFormat.format(releaseDate);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setReleaseDate(String[] releaseDate) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Will parse according to how date is stored in JSON YYYY MM DD"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            String dateInString \u003d releaseDate[0] + \"-\" + releaseDate[1] + \"-\" + releaseDate[2];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            SimpleDateFormat stringToDate \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.releaseDate \u003d stringToDate.parse(dateInString);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (java.text.ParseException invalidDateFormat) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            System.out.println(\"Date error\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public int getRating() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return rating;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setRating(int rating) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (rating \u003e 100 || rating \u003c 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            System.out.println(\"Rating not within 0 to 100 range\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.rating \u003d 0;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.rating \u003d rating;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String[] getGenre() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return genre;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setGenre(String[] genre) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.genre \u003d genre;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return getAnimeName();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 128,
      "OngDeZhi": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/anime/AnimeData.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.anime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "public class AnimeData {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public ArrayList\u003cAnime\u003e animeDataList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public AnimeData(ArrayList\u003cAnime\u003e animeDataList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeDataList \u003d animeDataList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public Anime getAnime(Integer animeIndex) throws IndexOutOfBoundsException, NullPointerException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            return animeDataList.get(animeIndex);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return animeDataList.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void printAll() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        for (Anime anime : animeDataList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"---------------------------------\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"Index: \" + i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"Name: \" + anime.getAnimeName());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"Episodes: \" + anime.getTotalEpisodes());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"Release Date:\" + anime.getReleaseDateInString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"Rating: \" + anime.getRating());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"Genre: \" + Arrays.toString(anime.getGenre()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            i +\u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void printOne(int animeIndex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        Anime anime \u003d animeDataList.get(animeIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"---------------------------------\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Index: \" + animeIndex);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Name: \" + anime.getAnimeName());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Episodes: \" + anime.getTotalEpisodes());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Release Date:\" + anime.getReleaseDateInString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Rating: \" + anime.getRating());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Genre: \" + Arrays.toString(anime.getGenre()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public ArrayList\u003cAnime\u003e findName(String description) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        ArrayList\u003cAnime\u003e findList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Looking for \\\"\" + description + \"\\\"\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        for (Anime anime : animeDataList) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (anime.getAnimeName().contains(description)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                findList.add(anime);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return findList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public Anime getAnimeByID(Integer animeIndex) throws IndexOutOfBoundsException, NullPointerException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            for (Anime anime : animeDataList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                if (anime.getAnimeID() \u003d\u003d animeIndex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    return anime;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 77,
      "OngDeZhi": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/anime/AnimeStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.anime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "public class AnimeStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    /* Files */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private static final String RELATIVE_DIR \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private static final String FILE_SEPARATOR \u003d File.separator;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private File dataFile;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private String[] pathnames;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    //public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    //    AnimeStorage  animeStorage \u003d new AnimeStorage(\"/data/AniListData\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    //    AnimeData animeList \u003d new AnimeData(animeStorage.readAnimeDatabase());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    //    animeList.printAll();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public AnimeStorage(String fileFolder) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.dataFile \u003d new File(prepareFile(fileFolder));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        pathnames \u003d dataFile.list();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private String prepareFile(String fileFolder) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return RELATIVE_DIR + fileFolder.replace(\"\\\\\",FILE_SEPARATOR).replace(\"/\",FILE_SEPARATOR);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public ArrayList\u003cAnime\u003e readAnimeDatabase() throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        ArrayList\u003cAnime\u003e animeDataList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        for (String pathname : pathnames) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            FileReader fileData \u003d new FileReader(dataFile.getPath() + FILE_SEPARATOR"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    + pathname);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //System.out.println(fileData);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            parseJson(animeDataList, fileData);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return animeDataList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private void parseJson(ArrayList\u003cAnime\u003e animeDataList,FileReader  fileData) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        JSONArray jsonList \u003d new JSONArray();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            jsonList \u003d (JSONArray) parser.parse(fileData);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } catch (ParseException | IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        Iterator iterator \u003d jsonList.iterator();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        JSONObject jsonObject \u003d new JSONObject();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        while (iterator.hasNext()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String animeName;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            int animeEpisode \u003d 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            int animeRating \u003d 0;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            int animeDuration \u003d 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //Advance the Iterator"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            jsonObject \u003d (JSONObject) iterator.next();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            jsonObject \u003d (JSONObject) jsonObject.get(\"data\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            jsonObject \u003d (JSONObject) jsonObject.get(\"Media\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //Getting anime name"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            JSONObject jsonTitle \u003d (JSONObject) jsonObject.get(\"title\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (jsonTitle.get(\"english\") \u003d\u003d null) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                animeName \u003d (String) jsonTitle.get(\"romaji\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                animeName \u003d (String) jsonTitle.get(\"english\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //getting anime episode"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (jsonObject.get(\"episodes\") !\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                animeEpisode \u003d  (int) (long) jsonObject.get(\"episodes\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //getting start date"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            JSONObject jsonDate \u003d (JSONObject) jsonObject.get(\"startDate\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String[] animeReleaseDate;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeReleaseDate \u003d new String[] { String.valueOf((long) jsonDate.get(\"year\")),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    String.valueOf((long) jsonDate.get(\"month\")), String.valueOf((long) jsonDate.get(\"day\"))};"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //getting rating"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (jsonObject.get(\"averageScore\") !\u003d null) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                animeRating \u003d  (int) (long) jsonObject.get(\"averageScore\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //getting genre"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            ArrayList\u003cString\u003e animeGenre;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeGenre \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            JSONArray jsonGenre \u003d (JSONArray) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            for (Object genre : jsonGenre) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                animeGenre.add((String) genre);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String[] animeGenreArray;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeGenreArray \u003d new String[animeGenre.size()];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeGenreArray \u003d animeGenre.toArray(animeGenreArray);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //getting duration"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (jsonObject.get(\"duration\") !\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                animeDuration \u003d  (int) (long) jsonObject.get(\"duration\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            Anime anime \u003d new Anime(animeName, animeReleaseDate, animeRating, animeGenreArray, animeDuration,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    animeEpisode);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeDataList.add(anime);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 116,
      "OngDeZhi": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/bookmark/Bookmark.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "public class Bookmark {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private final ArrayList\u003cString\u003e animeBookmark;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private final ArrayList\u003cInteger\u003e animeEpisode;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public Bookmark() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeBookmark \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeEpisode \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public Bookmark(ArrayList\u003cString\u003e animeBookmark, ArrayList\u003cInteger\u003e animeEpisode) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeBookmark \u003d animeBookmark;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeEpisode \u003d animeEpisode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void addAnimeBookmark(String animeName) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeBookmark.add(animeName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeEpisode.add(-1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void removeAnimeBookmark(int bookmarkIndex) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeBookmark.remove(bookmarkIndex);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeEpisode.remove(bookmarkIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void editAnimeBookmarkEpisode(int bookmarkIndex, int episode) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeEpisode.set(bookmarkIndex, episode);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public String getAnimeBookmarkByIndex(Integer animeIndex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return this.animeBookmark.get(animeIndex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public String animeListInString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        StringBuilder sbAnimeList \u003d new StringBuilder(System.lineSeparator());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        if (animeBookmark.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            sbAnimeList.append(\"Uhh.. It\u0027s empty.. :(\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            sbAnimeList.append(System.lineSeparator());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        for (int i \u003d 0; i \u003c animeBookmark.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            sbAnimeList.append(i + 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            sbAnimeList.append(\". \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            sbAnimeList.append(animeBookmark.get(i));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (animeEpisode.get(i) !\u003d -1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                sbAnimeList.append(\" Ep: \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                sbAnimeList.append(animeEpisode.get(i));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            sbAnimeList.append(System.lineSeparator());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return sbAnimeList.toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return animeListInString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 59,
      "OngDeZhi": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddProfileCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class AddProfileCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public AddProfileCommand(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michaeldinata": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddToWatchlistCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class AddToWatchlistCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public AddToWatchlistCommand(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Adds an anime to current watchlist."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void execute(Ui ui, Storage storage, AnimeData animeData, Watchlist currentWatchlist,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                        ArrayList\u003cWatchlist\u003e watchlists, Bookmark bookmark) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String[] descriptionSplit \u003d description.split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            String commandOption \u003d descriptionSplit[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            String animeName \u003d descriptionSplit[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            if (commandOption.equals(\"-a\") \u0026\u0026 animeName !\u003d null \u0026\u0026 !animeName.trim().isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                currentWatchlist.addAnimeToList(animeName);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                ui.showInvalidDescription(\"addToWatchlist\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            ui.showInvalidDescription(\"addToWatchlist\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 4,
      "michaeldinata": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/BookmarkAnimeCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.Anime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class BookmarkAnimeCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public BookmarkAnimeCommand(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void execute(Ui ui, Storage storage, AnimeData animeData, Watchlist currentWatchlist,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                        ArrayList\u003cWatchlist\u003e watchlists, Bookmark bookmark) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        if (description.contains(\" \")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String[] descriptionSplit \u003d description.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            // Code to be added"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String commandOption \u003d descriptionSplit[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String commandArgument \u003d descriptionSplit[1];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (commandOption.equals(\"-a\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                if (isInteger(commandArgument)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    int animeDataListIndex \u003d Integer.parseInt(commandArgument);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    Anime anime \u003d animeData.getAnimeByID(animeDataListIndex);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    System.out.println(\"Saving \" + anime.getAnimeID() + \". \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                            + anime.getAnimeName() + \" \" + \" to bookmark.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    bookmark.addAnimeBookmark(anime.getAnimeName());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    ArrayList\u003cAnime\u003e findList \u003d animeData.findName(commandArgument);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    for (Anime anime : findList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                        System.out.println(\"\\t\" + anime.getAnimeID() + \". \" + anime.getAnimeName());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            } else if (commandOption.equals(\"-d\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                int bookmarkIndex \u003d Integer.parseInt(commandArgument);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                String animeName \u003d bookmark.getAnimeBookmarkByIndex(bookmarkIndex - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                System.out.println(\"Removing \" + animeName + \"! :(\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                bookmark.removeAnimeBookmark(bookmarkIndex - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                int bookmarkIndex \u003d Integer.parseInt(commandOption);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                String[] commandArgumentSplit \u003d commandArgument.split(\" \", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                String commandOption2 \u003d commandArgumentSplit[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                String commandArgument2 \u003d commandArgumentSplit[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                if (commandOption2.equals(\"-e\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    int episode \u003d Integer.parseInt(commandArgument2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    bookmark.editAnimeBookmarkEpisode(bookmarkIndex - 1, episode);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    String animeName \u003d bookmark.getAnimeBookmarkByIndex(bookmarkIndex - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    System.out.println(\"Editing \" + animeName + \" to have \" + episode + \" episode\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (description.equals(\"-l\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                String bookmarks \u003d bookmark.animeListInString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                System.out.println(bookmarks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public boolean isInteger(String str) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int length \u003d str.length();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        if (length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        if (str.charAt(0) \u003d\u003d \u0027-\u0027) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            i \u003d 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        for (; i \u003c length; i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            char c \u003d str.charAt(i);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (c \u003c \u00270\u0027 || c \u003e \u00279\u0027) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 78,
      "michaeldinata": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/BrowseAnimeCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class BrowseAnimeCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public BrowseAnimeCommand(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michaeldinata": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public Command(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        setDescription(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void execute(Ui ui, Storage storage, AnimeData animeData, Watchlist currentWatchlist,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                        ArrayList\u003cWatchlist\u003e watchlists, Bookmark bookmark) throws AniException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        throw new AniException(\"This method should be implemented in the child class\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        return command instanceof ExitCommand;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 4,
      "OngDeZhi": 4,
      "michaeldinata": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/CreateWatchlistCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class CreateWatchlistCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public CreateWatchlistCommand(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void execute(Ui ui, Storage storage, AnimeData animeData, Watchlist currentWatchlist,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                        ArrayList\u003cWatchlist\u003e watchlists, Bookmark bookmark) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String[] descriptionSplit \u003d description.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String commandOption \u003d descriptionSplit[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String watchlistName \u003d descriptionSplit[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        if (commandOption.equals(\"-n\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            Watchlist newWatchlist \u003d new Watchlist(watchlistName);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            watchlists.add(newWatchlist);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        storage.writeWatchlistFile(ui, watchlists);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        ui.printMessage(\"Watchlist created successfully!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 4,
      "michaeldinata": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/EditProfileCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class EditProfileCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public EditProfileCommand(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michaeldinata": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void execute(Ui ui, Storage storage, AnimeData animeData, Watchlist currentWatchlist,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                        ArrayList\u003cWatchlist\u003e watchlists, Bookmark bookmark) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 4,
      "michaeldinata": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Shows help function."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void execute(Ui ui, Storage storage, AnimeData animeData, Watchlist currentWatchlist,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                        ArrayList\u003cWatchlist\u003e watchlists, Bookmark bookmark) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        // Code to be added"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        // Print for testing"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"Help showed\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 4,
      "michaeldinata": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/WatchlistCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "public class WatchlistCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String CREATE_OPTION \u003d \"-n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final String option;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private String optionInformation \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public WatchlistCommand(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String[] descriptionSplit \u003d description.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        option \u003d descriptionSplit[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        optionInformation \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (descriptionSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            optionInformation \u003d descriptionSplit[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void execute(Ui ui, Storage storage, AnimeData animeData, Watchlist currentWatchlist,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                        ArrayList\u003cWatchlist\u003e watchlists, Bookmark bookmark) throws AniException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (CREATE_OPTION.equals(option)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            createWatchlist(ui, storage, watchlists);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            throw new AniException(\"Watchlist command only accepts the option: \\\"-n\\\".\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void createWatchlist(Ui ui, Storage storage, ArrayList\u003cWatchlist\u003e watchlists) throws AniException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (optionInformation.isBlank()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            throw new AniException(\"Watchlist name cannot be empty.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        Watchlist newWatchlist \u003d new Watchlist(optionInformation);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        watchlists.add(newWatchlist);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        storage.writeWatchlistFile(ui, watchlists);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ui.printMessage(\"Watchlist created successfully!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 4,
      "OngDeZhi": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/AniException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "public class AniException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "     * Constructor for exception message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "     * @param exceptionMessage exception message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public AniException(String exceptionMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        super(exceptionMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/human/Character.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "public class Character extends Human {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    protected ArrayList\u003cVoiceActor\u003e voiceActors \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public Character(String name) throws AniException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void addVoiceActor(VoiceActor newVoiceActor) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        voiceActors.add(newVoiceActor);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void printVoiceActors() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        System.out.println(\"Voice actors for \" + name + \" are:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        for (int i \u003d 0; i \u003c voiceActors.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            System.out.println(i + 1 + \". \" + voiceActors.get(i));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public int getTotalVoiceActors() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return voiceActors.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 3,
      "ChanJianHao": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/human/Gender.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "public enum Gender {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    Male,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    Female,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    Other"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 1,
      "ChanJianHao": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/human/Human.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "public abstract class Human {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public Human(String name) throws AniException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        if (!name.isEmpty()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            setName(name);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            throw new AniException(\"Is your name empty?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 3,
      "ChanJianHao": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/human/UserProfile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "public class UserProfile extends Human {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    private static final SimpleDateFormat DATE_MONTH_YEAR \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    protected Date birthdate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    protected Gender gender;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public UserProfile(String name, String birthdate, String gender) throws ParseException, AniException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        setBirthdate(birthdate);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        setGender(gender);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void setGender(String genderString) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        switch (genderString) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        case \"Male\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            gender \u003d Gender.Male;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        case \"Female\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            gender \u003d Gender.Female;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            gender \u003d Gender.Other;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void setBirthdate(String birthdateString) throws ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        birthdate \u003d DATE_MONTH_YEAR.parse(birthdateString);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public String getDobString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return DATE_MONTH_YEAR.format(birthdate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public Gender getGender() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return gender;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "     * Provides the name of the user with Japanese honorifics depending on his gender."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "     * @return name of user with honorifics."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public String getFancyName() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        if (gender \u003d\u003d Gender.Female) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            return name + \"-chan\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            return name + \"-san\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return \"Name\u003d \" + name + \", birthdate\u003d \" + getDobString() + \", gender\u003d \" + getGender();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return name + \" | \" + DATE_MONTH_YEAR.format(birthdate) + \" | \" + gender;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 7,
      "ChanJianHao": 59
    }
  },
  {
    "path": "src/main/java/seedu/duke/human/VoiceActor.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "public class VoiceActor extends Human {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    protected ArrayList\u003cCharacter\u003e characters \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public VoiceActor(String name) throws AniException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void addCharacter(Character newCharacter) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        characters.add(newCharacter);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void printCharacters() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        if (characters.size() \u003e 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            System.out.println(\"Characters voiced by \" + name + \" are:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            for (int i \u003d 0; i \u003c characters.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                System.out.println(i + 1 + \". \" + characters.get(i));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            System.out.println(name + \" has not voiced any characters yet.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public int getTotalCharacters() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return characters.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 3,
      "ChanJianHao": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.AddProfileCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.EditProfileCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.BrowseAnimeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.command.WatchlistCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.AddToWatchlistCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.BookmarkAnimeCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Prints the main menu of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * and requests for command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static Command getCommand(String fullCommand) throws AniException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String[] fullCommandSplit \u003d parseUserInput(fullCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String command \u003d fullCommandSplit[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        if (fullCommandSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            description \u003d fullCommandSplit[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"addprofile\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            return new AddProfileCommand(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"editprofile\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            return new EditProfileCommand(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": " "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"browse\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            return new BrowseAnimeCommand(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"watchlist\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            return new WatchlistCommand(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "           "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            return new AddToWatchlistCommand(description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"bookmark\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            return new BookmarkAnimeCommand(description);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            throw new AniException(\"Unknown command\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static String[] parseUserInput(String input) throws AniException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        if (input \u003d\u003d null || input.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            throw new AniException(\"Input is empty\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String[] inputSplit \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        return inputSplit;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 5,
      "ChanJianHao": 1,
      "michaeldinata": 60
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.UserProfile;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final String userProfileFilePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final String watchlistFilePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final String storageDirectory \u003d \"data\" + File.separator + \"AniChan\" + File.separator;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String FILE_LINE_DELIMITER \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public Storage(String userProfileFileName, String watchlistFileName) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        userProfileFilePath \u003d storageDirectory + userProfileFileName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        watchlistFilePath \u003d storageDirectory + watchlistFileName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public UserProfile readUserProfileFile(Ui ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        UserProfile userProfile \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String fileString \u003d readFile(ui, userProfileFilePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            if (fileString.isBlank()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                return userProfile;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String[] fileStringParts \u003d fileString.split(FILE_LINE_DELIMITER);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String name \u003d fileStringParts[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String birthDate \u003d fileStringParts[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String gender \u003d fileStringParts[2];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            userProfile \u003d new UserProfile(name, birthDate, gender);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } catch (AniException | ParseException exception) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            ui.printMessage(\"User profile object creation has failed.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return userProfile;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public ArrayList\u003cWatchlist\u003e readWatchlistFile(Ui ui) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ArrayList\u003cWatchlist\u003e watchlists \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String fileString \u003d readFile(ui, watchlistFilePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (fileString.isBlank()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            return watchlists;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String[] fileStringParts \u003d fileString.split(System.lineSeparator());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        for (String line : fileStringParts) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String[] lineSplit \u003d line.split(FILE_LINE_DELIMITER, 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String watchlistName \u003d lineSplit[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String animeListString \u003d lineSplit[1].substring(1, lineSplit[1].length() - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            ArrayList\u003cString\u003e animeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            if (!animeListString.isBlank()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                String[] animes \u003d animeListString.split(\", \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                animeList \u003d new ArrayList\u003c\u003e(Arrays.asList(animes));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            Watchlist savedWatchList \u003d new Watchlist(watchlistName, animeList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            watchlists.add(savedWatchList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return watchlists;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private String readFile(Ui ui, String filePath) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        StringBuilder sbFileString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            File fileToRead \u003d new File(filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            Scanner fileReader \u003d new Scanner(fileToRead);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            while (fileReader.hasNextLine()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                String line \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                sbFileString.append(line);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                sbFileString.append(System.lineSeparator());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            if (filePath.equals(userProfileFilePath)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printHorizontalLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printMessage(\"User profile file is not found.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printMessage(\"Watchlist file is not found.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printHorizontalLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return sbFileString.toString();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void writeUserProfileFile(Ui ui, UserProfile userProfile) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String userProfileString \u003d userProfile.toFileString();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        writeFile(ui, userProfileFilePath, userProfileString);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void writeWatchlistFile(Ui ui, ArrayList\u003cWatchlist\u003e watchlists) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        StringBuilder sbWatchlistString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        for (Watchlist watchlist : watchlists) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbWatchlistString.append(watchlist.toFileString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbWatchlistString.append(System.lineSeparator());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        writeFile(ui, watchlistFilePath, sbWatchlistString.toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private void writeFile(Ui ui, String filePath, String fileString) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        new File(storageDirectory).mkdirs();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            fileWriter.write(fileString);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            ui.printErrorMessage(\"Error occurred while writing to file.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 122
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.UserProfile;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final Scanner CONSOLE \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            \"                 _  _____ _\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            + \"      /\\\\         (_)/ ____| |\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            + \"     /  \\\\   _ __  _| |    | |__   __ _ _ __\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            + \"    / /\\\\ \\\\ | \u0027_ \\\\| | |    | \u0027_ \\\\ / _` | \u0027_ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            + \"   / ____ \\\\| | | | | |____| | | | (_| | | | |\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            + \"  /_/    \\\\_\\\\_| |_|_|\\\\_____|_| |_|\\\\__,_|_| |_|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            \"-------------------------------------------------------------\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        System.out.println(\" \" + message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void printErrorMessage(String errorMessage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! \" + errorMessage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        printMessage(\"Welcome to AniChan!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        printMessage(LOGO);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void printHorizontalLine() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String readUserInput(String userName, String watchlistName) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        System.out.print(System.lineSeparator() + \" \" + userName + \"(\" + watchlistName + \") #\u003e \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String userInput \u003d CONSOLE.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    // TEMPORARY, REMOVED WHEN DONE REFACTORING!"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String readQuickStartInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        System.out.print(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String userInput \u003d CONSOLE.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Greets existing user upon opening up application."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public void greetExisting(UserProfile userProfile) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        String userName \u003d userProfile.getFancyName();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"Welcome Back, \" + userName);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Prints out available commands."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public void showMainMenu() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"1. Add a profile (addprofile)\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"2. Edit a profile (editprofile)\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"3. Browse through all anime (browse)\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"4. Create a watchlist (watchlist)\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"5. Add to watchlist (add)\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"6. Bookmark an anime (bookmark)\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"7. Help (help)\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"8. Exit (exit)\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Prints out a line telling a user that"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * an invalid command was given."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public void showInvalidCommand() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"Please enter a valid command!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Tells the user that the input given is wrong"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * and shows the correct form of the command."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public void showInvalidDescription(String command) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case(\"addToWatchlist\"):"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println(\"The input needs to be of the form \\\"add -a AnimeName\\\"! \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println(\"Please enter a valid input!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Prints out bye message."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"Sayonara!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 38,
      "ChanJianHao": 1,
      "michaeldinata": 64
    }
  },
  {
    "path": "src/main/java/seedu/duke/watchlist/Watchlist.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.watchlist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "public class Watchlist {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final ArrayList\u003cString\u003e animeList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public Watchlist(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        this.animeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public Watchlist(String name, ArrayList\u003cString\u003e animeList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        this.animeList \u003d animeList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public ArrayList\u003cString\u003e getAnimeList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return animeList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public void addAnimeToList(String animeName) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        this.animeList.add(animeName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String animeListToString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        StringBuilder sbAnimeList \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (animeList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbAnimeList.append(\"Uhh.. It\u0027s empty.. :(\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbAnimeList.append(System.lineSeparator());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        for (int i \u003d 0; i \u003c animeList.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbAnimeList.append(i + 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbAnimeList.append(\". \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbAnimeList.append(animeList.get(i));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbAnimeList.append(System.lineSeparator());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return sbAnimeList.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return name + System.lineSeparator() + animeListToString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return name + \" | \" + animeList.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 52,
      "michaeldinata": 4
    }
  },
  {
    "path": "src/test/java/seedu/duke/anime/AnimeDataTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.anime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.anime.Anime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "class AnimeDataTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    void getAnime_negativeInteger_expectException() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        ArrayList\u003cAnime\u003e animeStorageList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] releaseDate \u003d {\"2020\", \"12\", \"30\"};"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] genre \u003d {\"Science\", \"Action\", \"Dance\"};"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String animeName \u003d \"Adventures of Adventurers\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int rating \u003d 65;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int avgEpisodeLength \u003d 30;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int totalEpisodes \u003d 24;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        Anime testAnime \u003d new Anime(animeName, releaseDate, rating, genre, avgEpisodeLength, totalEpisodes);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] releaseDate2 \u003d {\"1997\", \"4\", \"15\"};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] genre2 \u003d {\"Adventure\", \"Action\", \"Dance\"};"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String animeName2 \u003d \"Actions in Action\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int rating2 \u003d 80;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int avgEpisodeLength2 \u003d 20;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int totalEpisodes2 \u003d 13;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        Anime testAnime2 \u003d new Anime(animeName2, releaseDate2, rating2, genre2, avgEpisodeLength2, totalEpisodes2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeStorageList.add(testAnime);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeStorageList.add(testAnime2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        AnimeData animeData \u003d new AnimeData(animeStorageList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeData.getAnime(-1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        });"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    void getAnime_nullInput_expectException() throws NullPointerException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        ArrayList\u003cAnime\u003e animeStorageList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] releaseDate \u003d {\"2020\", \"12\", \"30\"};"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] genre \u003d {\"Science\", \"Action\", \"Dance\"};"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String animeName \u003d \"Adventures of Adventurers\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int rating \u003d 65;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int avgEpisodeLength \u003d 30;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int totalEpisodes \u003d 24;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        Anime testAnime \u003d new Anime(animeName, releaseDate, rating, genre, avgEpisodeLength, totalEpisodes);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] releaseDate2 \u003d {\"1997\", \"4\", \"15\"};"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] genre2 \u003d {\"Adventure\", \"Action\", \"Dance\"};"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String animeName2 \u003d \"Actions in Action\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int rating2 \u003d 80;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int avgEpisodeLength2 \u003d 20;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int totalEpisodes2 \u003d 13;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        Anime testAnime2 \u003d new Anime(animeName2, releaseDate2, rating2, genre2, avgEpisodeLength2, totalEpisodes2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeStorageList.add(testAnime);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeStorageList.add(testAnime2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        AnimeData animeData \u003d new AnimeData(animeStorageList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeData.getAnime(null);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 63,
      "OngDeZhi": 4
    }
  },
  {
    "path": "src/test/java/seedu/duke/anime/AnimeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.anime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.anime.Anime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "class AnimeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    void setReleaseDate_singleDigits_usableDateFormat() throws java.text.ParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Anime testAnime \u003d new Anime();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String[] inputDate \u003d {\"2020\", \"5\", \"1\"};"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        testAnime.setReleaseDate(inputDate);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        System.out.println(testAnime.getReleaseDate());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        SimpleDateFormat stringToDate \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Date testDate \u003d stringToDate.parse(\"2020-05-01\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        assertEquals(testAnime.getReleaseDate(), testDate);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    void setRating_greaterThan100_ratingWillBeZero() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Anime testAnime \u003d new Anime();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int largeRating \u003d 9999;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        testAnime.setRating(largeRating);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        assertEquals(testAnime.getRating(), 0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    void setRating_negativeNumbers_ratingWillBeZero() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Anime testAnime \u003d new Anime();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int negativeRating \u003d -1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        testAnime.setRating(negativeRating);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        assertEquals(testAnime.getRating(), 0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 37,
      "OngDeZhi": 2
    }
  },
  {
    "path": "src/test/java/seedu/duke/human/CharacterTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.Character;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.VoiceActor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "class CharacterTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void testCharacterCreation() throws AniException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        Character kirito \u003d new Character(\"Kirito\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(\"Kirito\", kirito.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    void getTotalVoiceActors_emptyList_returnZero() throws AniException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        Character kirito \u003d new Character(\"Kirito\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(0, kirito.getTotalVoiceActors());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    void getTotalVoiceActors_addTwo_returnTwo() throws AniException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        Character kirito \u003d new Character(\"Kirito\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        // Make voice actors"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        VoiceActor yoshitsuguMatsuoka \u003d new VoiceActor(\"Yoshitsugu Matsuoka\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        VoiceActor brycePapenbrook \u003d new VoiceActor(\"Bryce Papenbrook\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        // Assign characters voiced by voice actor"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        kirito.addVoiceActor(yoshitsuguMatsuoka);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        kirito.addVoiceActor(brycePapenbrook);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(2, kirito.getTotalVoiceActors());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 4,
      "ChanJianHao": 34
    }
  },
  {
    "path": "src/test/java/seedu/duke/human/UserProfileTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.UserProfile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "class UserProfileTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void testProfileCreation() throws ParseException, AniException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        UserProfile testProfile \u003d new UserProfile(\"Tim Apple\", \"1/11/1960\", \"Others\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(\"Name\u003d Tim Apple, birthdate\u003d 01/11/1960, gender\u003d Other\", testProfile.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 3,
      "ChanJianHao": 15
    }
  },
  {
    "path": "src/test/java/seedu/duke/human/VoiceActorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.Character;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.VoiceActor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "class VoiceActorTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void testVoiceActorCreation() throws AniException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        VoiceActor yoshitsuguMatsuoka \u003d new VoiceActor(\"Yoshitsugu Matsuoka\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(\"Yoshitsugu Matsuoka\", yoshitsuguMatsuoka.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    void getTotalCharacters_emptyList_returnZero() throws AniException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        VoiceActor yoshitsuguMatsuoka \u003d new VoiceActor(\"Yoshitsugu Matsuoka\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(0, yoshitsuguMatsuoka.getTotalCharacters());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    void getTotalCharacters_addTwo_returnTwo() throws AniException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        VoiceActor yoshitsuguMatsuoka \u003d new VoiceActor(\"Yoshitsugu Matsuoka\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        // Make characters"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        Character kirito \u003d new Character(\"Kirito\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        Character somaYukihira \u003d new Character(\"Soma Yukihira\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        // Assign characters voiced by voice actor"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        yoshitsuguMatsuoka.addCharacter(kirito); // Japanese va"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        yoshitsuguMatsuoka.addCharacter(somaYukihira);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(2, yoshitsuguMatsuoka.getTotalCharacters());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 4,
      "ChanJianHao": 34
    }
  },
  {
    "path": "src/test/java/seedu/duke/parser/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public void parseUserInput_emptyInput_showInvalidCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertThrows(AniException.class, () -\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            parser.parseUserInput(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void parseUserInput_oneWord_returnsOneString() throws AniException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String input \u003d \"test\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String[] stringParts \u003d parser.parseUserInput(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        assertEquals(stringParts.length, 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void parseUserInput_moreThanTwoWords_returnsTwoStrings() throws AniException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String input \u003d \"test more than two\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String[] stringParts \u003d parser.parseUserInput(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        assertEquals(stringParts.length, 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 3,
      "ChanJianHao": 3,
      "michaeldinata": 36
    }
  },
  {
    "path": "src/test/java/seedu/duke/watchlist/WatchlistTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.watchlist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "class WatchlistTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private Watchlist emptyWatchlist;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private Watchlist filledWatchlist;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ArrayList\u003cString\u003e animeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        animeList.add(\"Cowboy Bebop\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        animeList.add(\"Fullmetal Alchemist\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        animeList.add(\"R.O.D - READ OR DIE\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        emptyWatchlist \u003d new Watchlist(\"emptyWatchlist\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        filledWatchlist \u003d new Watchlist(\"filledWatchlist\", animeList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void testAnimeListToStringWithEmptyWatchlist() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String expected \u003d \"Uhh.. It\u0027s empty.. :(\" + System.lineSeparator();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertEquals(emptyWatchlist.animeListToString(), expected);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void testAnimeListToStringWithFilledWatchlist() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String expected \u003d \"1. Cowboy Bebop\" + System.lineSeparator();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"2. Fullmetal Alchemist\" + System.lineSeparator();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"3. R.O.D - READ OR DIE\" + System.lineSeparator();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertEquals(filledWatchlist.animeListToString(), expected);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void testToStringWithEmptyWatchlist() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String expected \u003d \"emptyWatchlist\" + System.lineSeparator();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"Uhh.. It\u0027s empty.. :(\" + System.lineSeparator();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertEquals(emptyWatchlist.toString(), expected);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void testToStringWithFilledWatchlist() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String expected \u003d \"filledWatchlist\" + System.lineSeparator();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"1. Cowboy Bebop\" + System.lineSeparator();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"2. Fullmetal Alchemist\" + System.lineSeparator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"3. R.O.D - READ OR DIE\" + System.lineSeparator();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertEquals(filledWatchlist.toString(), expected);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 54
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "James Gosling"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "01/02/1999"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "Male"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "watchlist -n a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "watchlist -n b"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 3,
      "ChanJianHao": 2,
      "-": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew clean shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "cd ..\\.."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "java -jar build\\libs\\%jarloc% \u003c text-ui-test\\input.txt \u003e text-ui-test\\ACTUAL.TXT"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 3,
      "-": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# change to script directory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"${0%/*}\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "./gradlew clean shadowJar"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "java  -jar $(find build/libs/ -mindepth 1 -print -quit) \u003c text-ui-test/input.txt \u003e text-ui-test/ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "diff EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test passed!\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test failed!\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 2,
      "-": 22
    }
  }
]
