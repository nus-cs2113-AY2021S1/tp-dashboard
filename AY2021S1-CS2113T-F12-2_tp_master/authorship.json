[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 1,
      "-": 46
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Michael Dinata | [Github](https://github.com/michaeldinata) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Eyo Wei Chin | [Github](https://github.com/EyoWeiChin) | [Portfolio](docs/team/EyoWeiChin.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "![3](https://avatars1.githubusercontent.com/u/39303087?s\u003d400\u0026v\u003d4) | Ong De Zhi | [Github](https://github.com/OngDeZhi) | [Portfolio](docs/team/OngDeZhi.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "![](https://i.pinimg.com/564x/c4/0d/7a/c40d7a7060fb74926c257db982b6ddaf--funny-stuff-funny-things.jpg) | Chan Jian Hao | [Github](https://github.com/ChanJianHao) | [Portfolio](docs/team/jianhao.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Xin Bin | [Github](https://github.com/n3wsoldier) | [Portfolio](docs/team/xinbin.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 1,
      "n3wsoldier": 1,
      "OngDeZhi": 1,
      "ChanJianHao": 3,
      "-": 4,
      "michaeldinata": 1
    }
  },
  {
    "path": "docs/team/xinbin.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "# XinBin- Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.anime.Anime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.User;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.human.UserManagement;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String USER_PROFILE_FILE_NAME \u003d \"userprofile.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String WATCHLIST_FILE_NAME \u003d \"watchlist.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private static final String ANIME_DATA_SOURCE_FOLDER \u003d \"/data/AniListData\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private AnimeStorage animeStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private AnimeData animeData;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private UserManagement userManagement;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private User activeUser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private Watchlist activeWatchlist;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private ArrayList\u003cWatchlist\u003e activeWatchlistList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        storage \u003d new Storage(USER_PROFILE_FILE_NAME, WATCHLIST_FILE_NAME);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        userManagement \u003d new UserManagement(storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        // Load user and watchlist list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ui.printHorizontalLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        userManagement.setActiveUser(storage.loadUser(ui));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        activeWatchlistList \u003d storage.loadWatchlist(ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ui.printHorizontalLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        // Initial SET UP for AnimeStorage / WatchLists / UserManagement / bookmark"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assert userManagement !\u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        // Create new user if no existing user detected"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        activeUser \u003d userManagement.getActiveUser();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (activeUser \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            userManagement.addUserDialogue(ui);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            activeUser \u003d userManagement.getActiveUser();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            assert userManagement.getActiveUser() !\u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (activeWatchlistList.isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            activeWatchlist \u003d new Watchlist(\"Default\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            activeWatchlistList.add(activeWatchlist);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                storage.saveWatchlist(activeWatchlistList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            } catch (AniException exception) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                ui.printErrorMessage(exception.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            activeWatchlist \u003d activeWatchlistList.get(0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            animeStorage \u003d new AnimeStorage(ANIME_DATA_SOURCE_FOLDER);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            animeData \u003d new AnimeData(animeStorage.readAnimeDatabase());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        boolean shouldExit \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        while (!shouldExit) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                String userInput \u003d ui.readUserInput(activeUser.getHonorificName(), activeWatchlist.getName());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                Command command \u003d parser.getCommand(userInput);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                String commandOutput \u003d command.execute(animeData, activeWatchlistList, activeWatchlist, userManagement);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printMessage(commandOutput);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                shouldExit \u003d command.getShouldExit();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            } catch (AniException exception) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printErrorMessage(exception.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    // TODO: Organize the methods below to their respective class."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    // TEMPORARY, REMOVE ALL BELOW WHEN DONE REFACTORING!"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final Scanner CONSOLE \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    //Sample Usage of AnimeList Class [To Be Deleted]"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private void createAnimeList() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003dRunning Sample Anime List Class\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        ArrayList\u003cAnime\u003e animeStorageList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] releaseDate \u003d {\"2020\", \"12\", \"30\"};"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] genre \u003d {\"Science\", \"Action\", \"Dance\"};"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String animeName \u003d \"Adventures of Adventurers\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int animeID \u003d 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int rating \u003d 65;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int avgEpisodeLength \u003d 30;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int totalEpisodes \u003d 24;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Anime testAnime \u003d new Anime(animeName, releaseDate, rating, genre,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                avgEpisodeLength, totalEpisodes);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] releaseDate2 \u003d {\"1997\", \"4\", \"15\"};"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String[] genre2 \u003d {\"Adventure\", \"Action\", \"Dance\"};"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        String animeName2 \u003d \"Actions in Action\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        animeID \u003d 2;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int rating2 \u003d 80;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int avgEpisodeLength2 \u003d 20;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int totalEpisodes2 \u003d 13;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Anime testAnime2 \u003d new Anime(animeName2, releaseDate2, rating2, genre2,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                avgEpisodeLength2, totalEpisodes2);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeStorageList.add(testAnime);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeStorageList.add(testAnime2);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        AnimeData animeData \u003d new AnimeData(animeStorageList);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeData.printAll();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003dEnd of Sample Anime List Class\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 18,
      "n3wsoldier": 34,
      "OngDeZhi": 67,
      "ChanJianHao": 6,
      "-": 9,
      "michaeldinata": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/anime/Anime.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.anime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.Character;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Anime {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static int totalAnime \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private int animeID;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private ArrayList\u003cCharacter\u003e characters \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String animeName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private Date releaseDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private int rating;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String[] genre;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private int avgEpisodeLength;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private int totalEpisodes;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    //Default Constructor to create empty Anime class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Anime() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.animeID \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.animeName \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.rating \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.totalEpisodes \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.genre \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        totalAnime++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        animeID \u003d totalAnime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Anime(String animeName, String[] releaseDate, int rating,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                 String[] genre, int avgEpisodeLength, int totalEpisodes) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setAnimeID(animeID);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setAnimeName(animeName);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setReleaseDate(releaseDate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setRating(rating);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setGenre(genre);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setAvgEpisodeLength(avgEpisodeLength);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        setTotalEpisodes(totalEpisodes);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        totalAnime++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        animeID \u003d totalAnime;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public int getAnimeID() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return animeID;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setAnimeID(int animeID) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.animeID \u003d animeID;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void addCharacter(Character newCharacter) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        characters.add(newCharacter);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ArrayList\u003cCharacter\u003e getCharacters() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return characters;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setTotalEpisodes(int totalEpisodes) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.totalEpisodes \u003d totalEpisodes;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public int getAvgEpisodeLength() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return avgEpisodeLength;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setAvgEpisodeLength(int avgEpisodeLength) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.avgEpisodeLength \u003d avgEpisodeLength;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public int getTotalEpisodes() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return totalEpisodes;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getAnimeName() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return animeName;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setAnimeName(String animeName) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.animeName \u003d animeName;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Date getReleaseDate() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return releaseDate;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getReleaseDateInString() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        SimpleDateFormat newDateFormat \u003d new SimpleDateFormat(\"dd/MMM/yyyy\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return newDateFormat.format(releaseDate);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setReleaseDate(String[] releaseDate) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Will parse according to how date is stored in JSON YYYY MM DD"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            String dateInString \u003d releaseDate[0] + \"-\" + releaseDate[1] + \"-\" + releaseDate[2];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            SimpleDateFormat stringToDate \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.releaseDate \u003d stringToDate.parse(dateInString);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (java.text.ParseException invalidDateFormat) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            System.out.println(\"Date error\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public int getRating() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return rating;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setRating(int rating) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (rating \u003e 100 || rating \u003c 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            System.out.println(\"Rating not within 0 to 100 range\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.rating \u003d 0;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.rating \u003d rating;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String[] getGenre() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return genre;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setGenre(String[] genre) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.genre \u003d genre;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return getAnimeName();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 128,
      "OngDeZhi": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/anime/AnimeData.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.anime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "public class AnimeData {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public ArrayList\u003cAnime\u003e animeDataList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public AnimeData(ArrayList\u003cAnime\u003e animeDataList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeDataList \u003d animeDataList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public Anime getAnime(Integer animeIndex) throws IndexOutOfBoundsException, NullPointerException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            return animeDataList.get(animeIndex);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return animeDataList.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public ArrayList\u003cAnime\u003e getAnimeDataList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return animeDataList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void printAll() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        for (Anime anime : animeDataList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"---------------------------------\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"Index: \" + i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"Name: \" + anime.getAnimeName());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"Episodes: \" + anime.getTotalEpisodes());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"Release Date:\" + anime.getReleaseDateInString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"Rating: \" + anime.getRating());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            System.out.println(\"Genre: \" + Arrays.toString(anime.getGenre()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            i +\u003d 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void printOne(int animeIndex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        Anime anime \u003d animeDataList.get(animeIndex);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"---------------------------------\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Index: \" + animeIndex);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Name: \" + anime.getAnimeName());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Episodes: \" + anime.getTotalEpisodes());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Release Date:\" + anime.getReleaseDateInString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Rating: \" + anime.getRating());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Genre: \" + Arrays.toString(anime.getGenre()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public ArrayList\u003cAnime\u003e findName(String description) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        ArrayList\u003cAnime\u003e findList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        System.out.println(\"Looking for \\\"\" + description + \"\\\"\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        for (Anime anime : animeDataList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (anime.getAnimeName().contains(description)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                findList.add(anime);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return findList;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public Anime getAnimeByID(Integer animeIndex) throws IndexOutOfBoundsException, NullPointerException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            for (Anime anime : animeDataList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                if (anime.getAnimeID() \u003d\u003d animeIndex) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    return anime;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 81,
      "OngDeZhi": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/anime/AnimeStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.anime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "public class AnimeStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    /* Files */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private static final String RELATIVE_DIR \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private static final String FILE_SEPARATOR \u003d File.separator;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private File dataFile;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private String[] pathnames;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    //public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    //    AnimeStorage  animeStorage \u003d new AnimeStorage(\"/data/AniListData\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    //    AnimeData animeList \u003d new AnimeData(animeStorage.readAnimeDatabase());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    //    animeList.printAll();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public AnimeStorage(String fileFolder) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.dataFile \u003d new File(prepareFile(fileFolder));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        pathnames \u003d dataFile.list();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private String prepareFile(String fileFolder) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return RELATIVE_DIR + fileFolder.replace(\"\\\\\",FILE_SEPARATOR).replace(\"/\",FILE_SEPARATOR);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public ArrayList\u003cAnime\u003e readAnimeDatabase() throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        ArrayList\u003cAnime\u003e animeDataList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        for (String pathname : pathnames) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            FileReader fileData \u003d new FileReader(dataFile.getPath() + FILE_SEPARATOR"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    + pathname);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //System.out.println(fileData);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            parseJson(animeDataList, fileData);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return animeDataList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private void parseJson(ArrayList\u003cAnime\u003e animeDataList,FileReader  fileData) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        JSONArray jsonList \u003d new JSONArray();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            jsonList \u003d (JSONArray) parser.parse(fileData);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } catch (ParseException | IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        Iterator iterator \u003d jsonList.iterator();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        JSONObject jsonObject \u003d new JSONObject();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        while (iterator.hasNext()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String animeName;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            int animeEpisode \u003d 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            int animeRating \u003d 0;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            int animeDuration \u003d 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //Advance the Iterator"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            jsonObject \u003d (JSONObject) iterator.next();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            jsonObject \u003d (JSONObject) jsonObject.get(\"data\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            jsonObject \u003d (JSONObject) jsonObject.get(\"Media\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //Getting anime name"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            JSONObject jsonTitle \u003d (JSONObject) jsonObject.get(\"title\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (jsonTitle.get(\"english\") \u003d\u003d null) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                animeName \u003d (String) jsonTitle.get(\"romaji\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                animeName \u003d (String) jsonTitle.get(\"english\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //getting anime episode"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (jsonObject.get(\"episodes\") !\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                animeEpisode \u003d  (int) (long) jsonObject.get(\"episodes\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //getting start date"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            JSONObject jsonDate \u003d (JSONObject) jsonObject.get(\"startDate\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String[] animeReleaseDate;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeReleaseDate \u003d new String[] { String.valueOf((long) jsonDate.get(\"year\")),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    String.valueOf((long) jsonDate.get(\"month\")), String.valueOf((long) jsonDate.get(\"day\"))};"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //getting rating"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (jsonObject.get(\"averageScore\") !\u003d null) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                animeRating \u003d  (int) (long) jsonObject.get(\"averageScore\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //getting genre"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            ArrayList\u003cString\u003e animeGenre;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeGenre \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            JSONArray jsonGenre \u003d (JSONArray) jsonObject.get(\"genres\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            for (Object genre : jsonGenre) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                animeGenre.add((String) genre);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String[] animeGenreArray;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeGenreArray \u003d new String[animeGenre.size()];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeGenreArray \u003d animeGenre.toArray(animeGenreArray);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            //getting duration"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (jsonObject.get(\"duration\") !\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                animeDuration \u003d  (int) (long) jsonObject.get(\"duration\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            Anime anime \u003d new Anime(animeName, animeReleaseDate, animeRating, animeGenreArray, animeDuration,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    animeEpisode);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeDataList.add(anime);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 116,
      "OngDeZhi": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/bookmark/Bookmark.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "public class Bookmark {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private final ArrayList\u003cString\u003e animeBookmark;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private final ArrayList\u003cInteger\u003e animeEpisode;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public Bookmark() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeBookmark \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeEpisode \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public Bookmark(ArrayList\u003cString\u003e animeBookmark, ArrayList\u003cInteger\u003e animeEpisode) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeBookmark \u003d animeBookmark;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeEpisode \u003d animeEpisode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void addAnimeBookmark(String animeName) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeBookmark.add(animeName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeEpisode.add(-1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void removeAnimeBookmark(int bookmarkIndex) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeBookmark.remove(bookmarkIndex);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeEpisode.remove(bookmarkIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public void editAnimeBookmarkEpisode(int bookmarkIndex, int episode) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        this.animeEpisode.set(bookmarkIndex, episode);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public String getAnimeBookmarkByIndex(Integer animeIndex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return this.animeBookmark.get(animeIndex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public String animeListInString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        StringBuilder sbAnimeList \u003d new StringBuilder(System.lineSeparator());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        if (animeBookmark.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            sbAnimeList.append(\"Uhh.. It\u0027s empty.. :(\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            sbAnimeList.append(System.lineSeparator());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        for (int i \u003d 0; i \u003c animeBookmark.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            sbAnimeList.append(i + 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            sbAnimeList.append(\". \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            sbAnimeList.append(animeBookmark.get(i));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (animeEpisode.get(i) !\u003d -1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                sbAnimeList.append(\" Ep: \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                sbAnimeList.append(animeEpisode.get(i));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            sbAnimeList.append(System.lineSeparator());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return sbAnimeList.toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return animeListInString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 59,
      "OngDeZhi": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddToWatchlistCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.human.UserManagement;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class AddToWatchlistCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public AddToWatchlistCommand(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Adds an anime to current watchlist."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String execute(AnimeData animeData, ArrayList\u003cWatchlist\u003e activeWatchlistList, Watchlist activeWatchlist,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                          UserManagement userManagement) throws AniException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String[] descriptionSplit \u003d description.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            String commandOption \u003d descriptionSplit[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            String animeName \u003d descriptionSplit[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            if (commandOption.equals(\"-a\") \u0026\u0026 animeName !\u003d null \u0026\u0026 !animeName.trim().isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                activeWatchlist.addAnimeToList(animeName);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                throw new AniException(\"addToWatchlist\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new AniException(\"addToWatchlist\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return \"Anime added to watchlist\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 5,
      "n3wsoldier": 3,
      "OngDeZhi": 3,
      "ChanJianHao": 1,
      "michaeldinata": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddUserCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.human.UserManagement;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "public class AddUserCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    String name \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    String dob \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    String gender \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public AddUserCommand(String userInput) throws AniException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            String[] parametersSplit \u003d userInput.split(\"-\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            for (String s : parametersSplit) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                String[] parameterTextSplit \u003d s.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                if (parameterTextSplit.length \u003d\u003d 2 \u0026\u0026 !parameterTextSplit[0].isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                    switch (parameterTextSplit[0]) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                    case \"n\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                        name \u003d parameterTextSplit[1];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                    case \"dob\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                        dob \u003d parameterTextSplit[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                    case \"g\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                        gender \u003d parameterTextSplit[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                        // Continue!"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            throw new AniException(\"Invalid parameters detected!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String execute(AnimeData animeData, ArrayList\u003cWatchlist\u003e activeWatchlistList, Watchlist activeWatchlist,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                          UserManagement userManagement) throws AniException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        if (name \u003d\u003d null || dob \u003d\u003d null || gender \u003d\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            throw new AniException(\"Invalid parameters detected!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return \"Successfully added new user: \" + userManagement.addUser(name, dob, gender);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new AniException(e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 2,
      "n3wsoldier": 1,
      "OngDeZhi": 1,
      "ChanJianHao": 54
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/BookmarkAnimeCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.Anime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.human.UserManagement;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class BookmarkAnimeCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public BookmarkAnimeCommand(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String execute(AnimeData animeData, ArrayList\u003cWatchlist\u003e activeWatchlistList, Watchlist activeWatchlist,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                          UserManagement userManagement) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        Bookmark bookmark \u003d userManagement.getActiveUser().bookmark;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        if (description.contains(\" \")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String[] descriptionSplit \u003d description.split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            // Code to be added"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String commandOption \u003d descriptionSplit[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String commandArgument \u003d descriptionSplit[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (commandOption.equals(\"-a\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                if (isInt(commandArgument)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    int animeDataListIndex \u003d Integer.parseInt(commandArgument);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    Anime anime \u003d animeData.getAnimeByID(animeDataListIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    result \u003d \"Saving \" + anime.getAnimeID() + \". \" + anime.getAnimeName() + \" \" + \" to bookmark.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    //System.out.println(\"Saving \" + anime.getAnimeID() + \"."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    // + anime.getAnimeName() + \" \" + \" to bookmark.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    bookmark.addAnimeBookmark(anime.getAnimeName());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    ArrayList\u003cAnime\u003e findList \u003d animeData.findName(commandArgument);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    for (Anime anime : findList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                        result +\u003d \"\\t\" + anime.getAnimeID() + \". \" + anime.getAnimeName() + System.lineSeparator();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                        //System.out.println(\"\\t\" + anime.getAnimeID() + \". \" + anime.getAnimeName());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            } else if (commandOption.equals(\"-d\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                int bookmarkIndex \u003d Integer.parseInt(commandArgument);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                String animeName \u003d bookmark.getAnimeBookmarkByIndex(bookmarkIndex - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                result \u003d \"Removing \" + animeName + \"! :(\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                //System.out.println(\"Removing \" + animeName + \"! :(\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                bookmark.removeAnimeBookmark(bookmarkIndex - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                int bookmarkIndex \u003d Integer.parseInt(commandOption);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                String[] commandArgumentSplit \u003d commandArgument.split(\" \", 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                String commandOption2 \u003d commandArgumentSplit[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                String commandArgument2 \u003d commandArgumentSplit[1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                if (commandOption2.equals(\"-e\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    int episode \u003d Integer.parseInt(commandArgument2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    bookmark.editAnimeBookmarkEpisode(bookmarkIndex - 1, episode);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                    String animeName \u003d bookmark.getAnimeBookmarkByIndex(bookmarkIndex - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    result \u003d \"Editing \" + animeName + \" to have \" + episode + \" episode\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    //System.out.println(\"Editing \" + animeName + \" to have \" + episode + \" episode\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            if (description.equals(\"-l\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                String bookmarks \u003d bookmark.animeListInString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                result \u003d bookmarks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                //System.out.println(bookmarks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private void parameterParser(String[] paramGiven) throws AniException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        for (String param : paramGiven) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String[] paramParts \u003d param.split(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            switch (paramParts[0].trim()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            case \"\": //skip the first empty param"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            case \"s\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                paramLengthCheck(paramParts);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            case \"f\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                paramLengthCheck(paramParts);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            case \"o\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                paramLengthCheck(paramParts);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            case \"p\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                paramLengthCheck(paramParts);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                String invalidParameter \u003d \"-\" + param + \" is an invalid parameter!\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                throw new AniException(invalidParameter);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    private void paramLengthCheck(String[] paramParts) throws AniException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        // Parameter Additional Field Check"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        if (paramParts.length \u003c 2) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String invalidParameter \u003d \"Parameter : \" + paramParts[0] + \" requires an additional field\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            throw new AniException(invalidParameter);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        } else if (paramParts.length \u003e 2) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            String invalidParameter \u003d \"Parameter : \" + paramParts[0] + \" has too much fields\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            throw new AniException(invalidParameter);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "     * Checks if String is a parsable int."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "     * @param checkStr string to check"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "     * @return true if parsable int"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public boolean isInt(String checkStr) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        return checkStr.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 13,
      "n3wsoldier": 98,
      "OngDeZhi": 2,
      "ChanJianHao": 1,
      "michaeldinata": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/BrowseCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import seedu.duke.anime.Anime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import seedu.duke.human.UserManagement;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class BrowseCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private int sortType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private int order;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private int page;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String filter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"BrowseLogger\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public BrowseCommand(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Default values for browse command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.sortType \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.order \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.page \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.filter \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Browse Feature (Bare and un-refactored)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //-s sort [name/rating]       Default :No sort"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //-o [asc/dsc]                Default :Descending"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //-f [filter]                 Default :No filter"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //-p [page 1 of 25 entries]   Default :1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //-i [Full Info]              Default :Off"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String execute(AnimeData animeData, ArrayList\u003cWatchlist\u003e activeWatchlistList, Watchlist activeWatchlist,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                          UserManagement userManagement) throws AniException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Parameter Parser for Browse Command"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String[] paramGiven \u003d description.split(\"-\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (paramGiven.length \u003e 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            parameterParser(paramGiven);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            logger.log(Level.INFO, \"Default values modified\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //else use default values"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        ArrayList\u003cAnime\u003e usableList \u003d animeData.getAnimeDataList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int indexToPrint \u003d (page - 1) * 20;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (indexToPrint \u003e\u003d usableList.size()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            logger.log(Level.SEVERE, \"Getting page: Tried to start at index: \" + indexToPrint);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new AniException(\"Invalid Page size!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Assert to ensure that sortType and orderType are all usable int"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        assert (sortType \u003c 3) : \"sortType should be \u003c 3\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        assert (order \u003c 2) : \"order should be \u003c 2\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        sortBrowseList(usableList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //else no sort ascending"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        for (int i \u003d indexToPrint; i \u003c indexToPrint + 20; i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            Anime browseAnime \u003d usableList.get(i);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result +\u003d Integer.toString(i + 1) + \". \" + browseAnime.getAnimeName() + System.lineSeparator();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //System.out.println(i + 1 + \". \" + browseAnime.getAnimeName());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            if (i + 1 \u003e\u003d usableList.size()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                logger.log(Level.WARNING, \"Printing Last Anime Series from source\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d \"Browsing Page: \" + page;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //System.out.println(\"Browsing Page: \" + page);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        usableList.sort(Comparator.comparing(Anime::getAnimeID));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void sortBrowseList(ArrayList\u003cAnime\u003e usableList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (sortType \u003d\u003d 0 \u0026\u0026 order \u003d\u003d 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //logger.log(Level.INFO, \"Sorting by ID descending\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            usableList.sort(Comparator.comparing(Anime::getAnimeID).reversed());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else if (sortType \u003d\u003d 1 \u0026\u0026 order \u003d\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //logger.log(Level.INFO, \"Sorting by Name Ascending (Z to A)\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            usableList.sort(Comparator.comparing(Anime::getAnimeName).reversed());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else if (sortType \u003d\u003d 1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //logger.log(Level.INFO, \"Sorting by Name Ascending (A to Z)\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            usableList.sort(Comparator.comparing(Anime::getAnimeName));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else if (sortType \u003d\u003d 2 \u0026\u0026 order \u003d\u003d 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //logger.log(Level.INFO, \"Sorting by Rating Ascending (low to high)\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            usableList.sort(Comparator.comparing(Anime::getRating));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else if (sortType \u003d\u003d 2) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //logger.log(Level.INFO, \"Sorting by Rating Descending (high to low)\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            usableList.sort(Comparator.comparing(Anime::getRating).reversed());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void parameterParser(String[] paramGiven) throws AniException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        for (String param : paramGiven) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            String[] paramParts \u003d param.split(\" \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            switch (paramParts[0].trim()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            case \"\": //skip the first empty param"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            case \"s\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                paramLengthCheck(paramParts);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                checkSortType(paramParts);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            case \"f\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                paramLengthCheck(paramParts);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                setFilter(paramParts[1]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            case \"o\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                paramLengthCheck(paramParts);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                checkOrderType(paramParts[1]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            case \"p\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                paramLengthCheck(paramParts);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                if (!isInt(paramParts[1].trim())) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    throw new AniException(\"Please specify an Int value for page number!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                setPage(Integer.parseInt(paramParts[1].trim()));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                String invalidParameter \u003d \"-\" + param + \" is an invalid parameter!\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                throw new AniException(invalidParameter);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void checkOrderType(String paramField) throws AniException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Logging here to set order type"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        switch (paramField.trim()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case \"asc\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            setOrder(0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case \"dsc\":"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            setOrder(1);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            String paramFieldError \u003d paramField + \" is not a valid option\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new AniException(paramFieldError);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void checkSortType(String[] paramParts) throws AniException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        switch (paramParts[1].trim()) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case \"name\":"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //Logging here to set sort type"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            setSortType(1);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case \"rating\":"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            setSortType(2);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            String paramFieldError \u003d paramParts[1] + \" is not a valid option\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new AniException(paramFieldError);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void paramLengthCheck(String[] paramParts) throws AniException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        // Parameter Additional Field Check"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (paramParts.length \u003c 2) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            String invalidParameter \u003d \"Parameter : \" + paramParts[0] + \" requires an additional field\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new AniException(invalidParameter);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else if (paramParts.length \u003e 2) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            String invalidParameter \u003d \"Parameter : \" + paramParts[0] + \" has too much fields\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new AniException(invalidParameter);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setFilter(String filter) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.filter \u003d filter;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setPage(int page) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.page \u003d page;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setSortType(int sortType) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.sortType \u003d sortType;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setOrder(int order) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.order \u003d order;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Checks if String is a parsable int."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param checkStr string to check"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return true if parsable int"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public boolean isInt(String checkStr) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return checkStr.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 191,
      "n3wsoldier": 2,
      "OngDeZhi": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.human.UserManagement;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private boolean shouldExit \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public boolean getShouldExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return shouldExit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void setShouldExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        this.shouldExit \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String execute(AnimeData animeData, ArrayList\u003cWatchlist\u003e activeWatchlistList, Watchlist activeWatchlist,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                          UserManagement userManagement) throws AniException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        throw new AniException(\"This method should be implemented in the child class\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 3,
      "OngDeZhi": 10,
      "ChanJianHao": 1,
      "michaeldinata": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/EditProfileCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class EditProfileCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public EditProfileCommand(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 1,
      "michaeldinata": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.human.UserManagement;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String NULL_STRING \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String execute(AnimeData animeData, ArrayList\u003cWatchlist\u003e activeWatchlistList, Watchlist activeWatchlist,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                          UserManagement userManagement) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        setShouldExit();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return NULL_STRING;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 3,
      "n3wsoldier": 3,
      "OngDeZhi": 2,
      "ChanJianHao": 1,
      "michaeldinata": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.human.UserManagement;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Shows help function."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String execute(AnimeData animeData, ArrayList\u003cWatchlist\u003e activeWatchlistList, Watchlist activeWatchlist,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                          UserManagement userManagement) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        // Code to be added"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        // Print for testing"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return \"Help showed\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //System.out.println(\"Help showed\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 2,
      "n3wsoldier": 3,
      "OngDeZhi": 1,
      "ChanJianHao": 1,
      "michaeldinata": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/WatchlistCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.human.UserManagement;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "public class WatchlistCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String CREATE_OPTION \u003d \"-n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final String option;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private String optionInformation;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public WatchlistCommand(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String[] descriptionSplit \u003d description.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        option \u003d descriptionSplit[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        optionInformation \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (descriptionSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            optionInformation \u003d descriptionSplit[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String execute(AnimeData animeData, ArrayList\u003cWatchlist\u003e activeWatchlistList, Watchlist activeWatchlist,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "                          UserManagement userManagement) throws AniException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (CREATE_OPTION.equals(option)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            createWatchlist(userManagement.getStorage(), activeWatchlistList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return \"Watchlist created successfully!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            throw new AniException(\"Watchlist command only accepts the option: \\\"-n\\\".\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void createWatchlist(Storage storage, ArrayList\u003cWatchlist\u003e activeWatchlistList) throws AniException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (optionInformation.isBlank()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            throw new AniException(\"Watchlist name cannot be empty.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        Watchlist newWatchlist \u003d new Watchlist(optionInformation);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        activeWatchlistList.add(newWatchlist);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        storage.saveWatchlist(activeWatchlistList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 1,
      "n3wsoldier": 3,
      "OngDeZhi": 42,
      "ChanJianHao": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/AniException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "public class AniException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "     * Constructor for exception message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "     * @param exceptionMessage exception message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public AniException(String exceptionMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        super(exceptionMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/human/Character.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "public class Character extends Human {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    protected ArrayList\u003cVoiceActor\u003e voiceActors \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public Character(String name) throws AniException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void addVoiceActor(VoiceActor newVoiceActor) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        voiceActors.add(newVoiceActor);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void printVoiceActors() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        System.out.println(\"Voice actors for \" + name + \" are:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        for (int i \u003d 0; i \u003c voiceActors.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            System.out.println(i + 1 + \". \" + voiceActors.get(i));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public int getTotalVoiceActors() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return voiceActors.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 3,
      "ChanJianHao": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/human/Gender.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "public enum Gender {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    Male,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    Female,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    Other"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 1,
      "ChanJianHao": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/human/Human.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "public abstract class Human {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public Human(String name) throws AniException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        if (!name.isEmpty()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            setName(name);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            throw new AniException(\"Is your name empty?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 3,
      "ChanJianHao": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/human/User.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "public class User extends Human {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    // Add Watchlist \u0026 Bookmarks here and/or UserManagement"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    public Bookmark bookmark;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    private static final SimpleDateFormat DATE_MONTH_YEAR \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    protected Date birthdate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    protected Gender gender;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public User(String name, String birthdate, String gender) throws ParseException, AniException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        setBirthdate(birthdate);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        setGender(gender);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        bookmark \u003d new Bookmark();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void setGender(String genderString) throws AniException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        genderString \u003d genderString.toLowerCase();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        switch (genderString) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        case \"male\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            gender \u003d Gender.Male;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        case \"female\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            gender \u003d Gender.Female;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        case \"other\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            gender \u003d Gender.Other;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            throw new AniException(\"Unexpected gender: \" + genderString);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void setBirthdate(String birthdateString) throws ParseException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        birthdate \u003d DATE_MONTH_YEAR.parse(birthdateString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assert birthdate !\u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public String getDobString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return DATE_MONTH_YEAR.format(birthdate);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public Gender getGender() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return gender;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "     * Provides the name of the user with Japanese honorifics depending on his gender."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "     * @return name of user with honorifics."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public String getHonorificName() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        if (gender \u003d\u003d Gender.Female) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            return name + \"-chan\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            return name + \"-san\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return \"\\nName: \" + name + \"\\nBirthdate: \" + getDobString() + \"\\nGender: \" + getGender();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 3,
      "OngDeZhi": 7,
      "ChanJianHao": 67
    }
  },
  {
    "path": "src/main/java/seedu/duke/human/UserManagement.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "public class UserManagement {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(UserManagement.class.getName());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    protected ArrayList\u003cUser\u003e userList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    protected User activeUser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public UserManagement(Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        activeUser \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public User getActiveUser() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return activeUser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void setActiveUser(User inputUser) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        activeUser \u003d inputUser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        if (activeUser !\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            LOGGER.log(Level.INFO, \"User switched: \" + inputUser.getName());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public int getTotalUsers() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return userList.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public User addUser(String name, String dob, String gender) throws ParseException, AniException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        User newUser \u003d new User(name, dob, gender);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        checkIfUserExist(name);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        userList.add(newUser);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        storage.saveUser(newUser);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        LOGGER.log(Level.INFO, \"User created: \" + name + \" | \" + dob + \" | \" + gender);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return newUser;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    private void checkIfUserExist(String name) throws AniException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        for (User existingUser : userList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            if (existingUser.getName().equals(name)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                throw new AniException(\"A user with \" + name + \" already exist. Choose a different name!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void addUserDialogue(Ui ui) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        boolean userCreated \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        LOGGER.log(Level.WARNING, \"No existing user found, prompting user to create one!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        while (!userCreated) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                ui.printMessage(\"What\u0027s your name?\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                String name \u003d ui.readInput();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                ui.printMessage(\"Hello \" + name + \"! What might your date of birth be? (DD/MM/YYYY)\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                String dob \u003d ui.readInput();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                ui.printMessage(\"What might your gender be? (Male/Female/Other)\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                String gender \u003d ui.readInput();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                activeUser \u003d addUser(name, dob, gender);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printMessage(\" Successfully added new user:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printMessage(activeUser.getName());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printMessage(activeUser.getDobString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printMessage(activeUser.getGender().toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                userCreated \u003d true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            } catch (ParseException | AniException exception) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                ui.printErrorMessage(exception.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 6,
      "OngDeZhi": 12,
      "ChanJianHao": 67
    }
  },
  {
    "path": "src/main/java/seedu/duke/human/VoiceActor.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "public class VoiceActor extends Human {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    protected ArrayList\u003cCharacter\u003e characters \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public VoiceActor(String name) throws AniException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void addCharacter(Character newCharacter) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        characters.add(newCharacter);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void printCharacters() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        if (characters.size() \u003e 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            System.out.println(\"Characters voiced by \" + name + \" are:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            for (int i \u003d 0; i \u003c characters.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "                System.out.println(i + 1 + \". \" + characters.get(i));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            System.out.println(name + \" has not voiced any characters yet.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public int getTotalCharacters() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return characters.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 3,
      "ChanJianHao": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.command.AddUserCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.EditProfileCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import seedu.duke.command.BrowseCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.command.WatchlistCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.AddToWatchlistCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.BookmarkAnimeCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * Prints the main menu of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     * and requests for command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Command getCommand(String fullCommand) throws AniException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String[] fullCommandSplit \u003d parseUserInput(fullCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String command \u003d fullCommandSplit[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        if (fullCommandSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            description \u003d fullCommandSplit[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        case \"adduser\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            return new AddUserCommand(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"editprofile\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            return new EditProfileCommand(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": " "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"browse\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new BrowseCommand(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "     "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"watchlist\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            return new WatchlistCommand(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "           "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            return new AddToWatchlistCommand(description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"bookmark\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            return new BookmarkAnimeCommand(description);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            throw new AniException(\"Unknown command\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static String[] parseUserInput(String input) throws AniException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        if (input \u003d\u003d null || input.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "            throw new AniException(\"Input is empty\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String[] inputSplit \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        return inputSplit;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 3,
      "OngDeZhi": 5,
      "ChanJianHao": 4,
      "michaeldinata": 54
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Decoder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.User;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "public class Decoder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String FILE_LINE_DELIMITER \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Storage.class.getName());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public User decodeUserString(Ui ui, String fileString) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        User user \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String[] fileStringParts \u003d fileString.split(FILE_LINE_DELIMITER);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String name \u003d fileStringParts[0].trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String birthDate \u003d fileStringParts[1].trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String gender \u003d fileStringParts[2].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            user \u003d new User(name, birthDate, gender);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            ui.printMessage(\"AniChan successfully loaded the user.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            LOGGER.info(\"User \\\"\" + name + \"\\\" successfully loaded.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } catch (AniException | ParseException | IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            ui.printErrorMessage(\"AniChan could not load the saved user.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            LOGGER.warning(\"Failed to load the user: \" + exception.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return user;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public ArrayList\u003cWatchlist\u003e decodeWatchlistString(Ui ui, String fileString) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ArrayList\u003cWatchlist\u003e watchlists \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assert fileString !\u003d null : \"fileString should not be null.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String[] fileStringLines \u003d fileString.split(System.lineSeparator());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        boolean hasCorruptedWatchlist \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        for (String line : fileStringLines) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            Watchlist savedWatchList \u003d createWatchlistObject(line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            if (savedWatchList \u003d\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                hasCorruptedWatchlist \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                LOGGER.warning(\"Failed to decode watchlist string: \" + line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            watchlists.add(savedWatchList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            LOGGER.info(\"Successfully decode watchlist string: \" + line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (hasCorruptedWatchlist) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            ui.printErrorMessage(\"AniChan could not load some of the saved watchlist(s).\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            LOGGER.warning(\"Some saved watchlist(s) could not be loaded.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            ui.printMessage(\"AniChan successfully loaded all of the saved watchlist(s).\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            LOGGER.info(\"All saved watchlist(s) are loaded successfully.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return watchlists;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private Watchlist createWatchlistObject(String line) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String[] lineSplit \u003d line.split(FILE_LINE_DELIMITER, 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (!isValidWatchlistString(lineSplit)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String watchlistName \u003d lineSplit[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String animeListString \u003d lineSplit[1].substring(1, lineSplit[1].length() - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        LOGGER.info(\"Watchlist: \" + watchlistName + System.lineSeparator() + \"Anime List: \" + animeListString);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ArrayList\u003cString\u003e animeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String[] animes \u003d animeListString.split(\", \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        for (String anime : animes) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            if (!anime.isBlank()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                animeList.add(anime);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return new Watchlist(watchlistName, animeList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private boolean isValidWatchlistString(String[] lineSplit) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        boolean isValidSplitLength \u003d (lineSplit.length \u003d\u003d 2);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (!isValidSplitLength) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            LOGGER.warning(\"Invalid split length of \" + lineSplit.length);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        boolean isValidWatchlistString \u003d (lineSplit[1].startsWith(\"[\")) \u0026\u0026 (lineSplit[1].endsWith(\"]\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (!isValidWatchlistString) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            LOGGER.warning(\"Watchlist string does not start with \\\"[\\\" and end with \\\"]\\\"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 100
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Encoder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.User;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "public class Encoder {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String FILE_LINE_DELIMITER \u003d \" | \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String encodeUser(User user) throws NullPointerException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String name \u003d user.getName();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String birthDate \u003d user.getDobString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String gender \u003d user.getGender().toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String encodedUserString \u003d name + FILE_LINE_DELIMITER + birthDate + FILE_LINE_DELIMITER + gender;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assert (name !\u003d null \u0026\u0026 birthDate !\u003d null \u0026\u0026 gender !\u003d null) : \"User details should not have any null.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return encodedUserString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String encodeWatchlist(ArrayList\u003cWatchlist\u003e watchlists) throws NullPointerException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        StringBuilder sbWatchlist \u003d new StringBuilder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        for (Watchlist watchlist : watchlists) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbWatchlist.append(watchlist.getName());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbWatchlist.append(FILE_LINE_DELIMITER);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbWatchlist.append(watchlist.getAnimeList().toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbWatchlist.append(System.lineSeparator());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String encodedWatchlistString \u003d sbWatchlist.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assert (!encodedWatchlistString.isBlank()) : \"Encoded watchlist string should not be blank.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return encodedWatchlistString;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import seedu.duke.human.User;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final Encoder encoder;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final Decoder decoder;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final String userFilePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final String watchlistFilePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final String storageDirectory \u003d \"data\" + File.separator + \"AniChan\" + File.separator;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Storage.class.getName());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public Storage(String userFileName, String watchlistFileName) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        encoder \u003d new Encoder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        decoder \u003d new Decoder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        userFilePath \u003d storageDirectory + userFileName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        watchlistFilePath \u003d storageDirectory + watchlistFileName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public User loadUser(Ui ui) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String fileString \u003d readFile(ui, userFilePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        LOGGER.info(\"Read \\\"\" + fileString + \"\\\" from \\\"\" + userFilePath + \"\\\".\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (fileString.isBlank()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return decoder.decodeUserString(ui, fileString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public ArrayList\u003cWatchlist\u003e loadWatchlist(Ui ui) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String fileString \u003d readFile(ui, watchlistFilePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        LOGGER.info(\"Read \\\"\" + fileString + \"\\\" from \\\"\" + watchlistFilePath + \"\\\".\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (fileString.isBlank()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return decoder.decodeWatchlistString(ui, fileString);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void saveUser(User user) throws AniException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String userString \u003d encoder.encodeUser(user);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            assert userString !\u003d null : \"Encoded user string should not be null.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            LOGGER.info(\"Encoded user object string: \" + userString);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            writeFile(userFilePath, userString);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } catch (NullPointerException exception) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            LOGGER.warning(\"Received null user object.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            throw new AniException(\"AniChan could not save this user.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void saveWatchlist(ArrayList\u003cWatchlist\u003e watchlists) throws AniException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            String watchlistString \u003d encoder.encodeWatchlist(watchlists);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            assert watchlistString !\u003d null : \"Encoded watchlist string should not be null.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            LOGGER.info(\"Encoded watchlist string: \" + watchlistString);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            writeFile(watchlistFilePath, watchlistString);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } catch (NullPointerException exception) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            LOGGER.warning(\"Received null watchlists object.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            throw new AniException(\"AniChan could not save the watchlist.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private String readFile(Ui ui, String filePath) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        StringBuilder sbFileString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            File fileToRead \u003d new File(filePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            Scanner fileReader \u003d new Scanner(fileToRead);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            while (fileReader.hasNextLine()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                String line \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                sbFileString.append(line);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                sbFileString.append(System.lineSeparator());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            if (filePath.equals(userFilePath)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printMessage(\"User file is not found, let\u0027s start afresh.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                LOGGER.info(\"User file does not exist at: \" + userFilePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                ui.printMessage(\"Watchlist file is not found, let\u0027s start a afresh.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "                LOGGER.info(\"Watchlist file does not exist at: \" + watchlistFilePath);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return sbFileString.toString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void writeFile(String filePath, String fileString) throws AniException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        new File(storageDirectory).mkdirs();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            fileWriter.write(fileString);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            LOGGER.warning(\"Failed to write to file at: \" + filePath);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            throw new AniException(\"AniChan could not write to the file.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 1,
      "OngDeZhi": 108,
      "ChanJianHao": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final Scanner CONSOLE \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            \"                 _  _____ _\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            + \"      /\\\\         (_)/ ____| |\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            + \"     /  \\\\   _ __  _| |    | |__   __ _ _ __\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            + \"    / /\\\\ \\\\ | \u0027_ \\\\| | |    | \u0027_ \\\\ / _` | \u0027_ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            + \"   / ____ \\\\| | | | | |____| | | | (_| | | | |\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            + \"  /_/    \\\\_\\\\_| |_|_|\\\\_____|_| |_|\\\\__,_|_| |_|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            \"-------------------------------------------------------------\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (!message.isBlank()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            System.out.println(\" \" + message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void printErrorMessage(String errorMessage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! \" + errorMessage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void printHorizontalLine() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        printMessage(\"Welcome to AniChan!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        printMessage(LOGO);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        printMessage(\"Sayonara!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        System.out.print(\" #\u003e \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        return CONSOLE.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String readUserInput(String userName, String watchlistName) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        System.out.print(System.lineSeparator() + \" \" + userName + \" (\" + watchlistName + \") #\u003e \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String userInput \u003d CONSOLE.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 2,
      "OngDeZhi": 35,
      "ChanJianHao": 4,
      "michaeldinata": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/watchlist/Watchlist.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.watchlist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "public class Watchlist {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private final ArrayList\u003cString\u003e animeList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public Watchlist(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        this.animeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public Watchlist(String name, ArrayList\u003cString\u003e animeList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        this.animeList \u003d animeList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public ArrayList\u003cString\u003e getAnimeList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return animeList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public void addAnimeToList(String animeName) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        this.animeList.add(animeName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String animeListToString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        StringBuilder sbAnimeList \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        if (animeList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbAnimeList.append(\"Uhh.. It\u0027s empty.. :(\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbAnimeList.append(System.lineSeparator());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        for (int i \u003d 0; i \u003c animeList.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbAnimeList.append(i + 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbAnimeList.append(\". \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbAnimeList.append(animeList.get(i));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            sbAnimeList.append(System.lineSeparator());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return sbAnimeList.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        return name + System.lineSeparator() + animeListToString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 48,
      "michaeldinata": 4
    }
  },
  {
    "path": "src/test/java/seedu/duke/anime/AnimeDataTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.anime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.anime.Anime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.anime.AnimeData;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "class AnimeDataTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    void getAnime_negativeInteger_expectException() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        ArrayList\u003cAnime\u003e animeStorageList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeStorageList.add(new Anime());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeStorageList.add(new Anime());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        AnimeData animeData \u003d new AnimeData(animeStorageList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeData.getAnime(-1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    void getAnime_nullInput_expectException() throws NullPointerException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        ArrayList\u003cAnime\u003e animeStorageList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeStorageList.add(new Anime());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        animeStorageList.add(new Anime());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        AnimeData animeData \u003d new AnimeData(animeStorageList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "            animeData.getAnime(null);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "        });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 30,
      "OngDeZhi": 4
    }
  },
  {
    "path": "src/test/java/seedu/duke/anime/AnimeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.anime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.anime.Anime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "class AnimeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    void setReleaseDate_singleDigits_usableDateFormat() throws java.text.ParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Anime testAnime \u003d new Anime();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String[] inputDate \u003d {\"2020\", \"5\", \"1\"};"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        testAnime.setReleaseDate(inputDate);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        System.out.println(testAnime.getReleaseDate());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        SimpleDateFormat stringToDate \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Date testDate \u003d stringToDate.parse(\"2020-05-01\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        assertEquals(testAnime.getReleaseDate(), testDate);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    void setRating_greaterThan100_ratingWillBeZero() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Anime testAnime \u003d new Anime();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int largeRating \u003d 9999;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        testAnime.setRating(largeRating);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        assertEquals(testAnime.getRating(), 0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    void setRating_negativeNumbers_ratingWillBeZero() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Anime testAnime \u003d new Anime();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int negativeRating \u003d -1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        testAnime.setRating(negativeRating);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        assertEquals(testAnime.getRating(), 0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 37,
      "OngDeZhi": 2
    }
  },
  {
    "path": "src/test/java/seedu/duke/human/CharacterTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.Character;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.VoiceActor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "class CharacterTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void testCharacterCreation() throws AniException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        Character kirito \u003d new Character(\"Kirito\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(\"Kirito\", kirito.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    void getTotalVoiceActors_emptyList_returnZero() throws AniException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        Character kirito \u003d new Character(\"Kirito\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(0, kirito.getTotalVoiceActors());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    void getTotalVoiceActors_addTwo_returnTwo() throws AniException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        Character kirito \u003d new Character(\"Kirito\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        // Make voice actors"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        VoiceActor yoshitsuguMatsuoka \u003d new VoiceActor(\"Yoshitsugu Matsuoka\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        VoiceActor brycePapenbrook \u003d new VoiceActor(\"Bryce Papenbrook\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        // Assign characters voiced by voice actor"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        kirito.addVoiceActor(yoshitsuguMatsuoka);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        kirito.addVoiceActor(brycePapenbrook);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(2, kirito.getTotalVoiceActors());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 4,
      "ChanJianHao": 34
    }
  },
  {
    "path": "src/test/java/seedu/duke/human/UserManagementTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "class UserManagementTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    void getTotalUsers_noUsers_sizeZero() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        UserManagement userManagement \u003d new UserManagement(null);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(0, userManagement.getTotalUsers());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 1,
      "ChanJianHao": 13
    }
  },
  {
    "path": "src/test/java/seedu/duke/human/UserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "class UserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void testProfileCreation() throws ParseException, AniException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        User testProfile \u003d new User(\"Tim\", \"1/11/1960\", \"Other\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(\"Tim-san\", testProfile.getHonorificName());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(\"01/11/1960\", testProfile.getDobString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 2,
      "ChanJianHao": 17
    }
  },
  {
    "path": "src/test/java/seedu/duke/human/VoiceActorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.human;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.Character;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.VoiceActor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "class VoiceActorTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void testVoiceActorCreation() throws AniException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        VoiceActor yoshitsuguMatsuoka \u003d new VoiceActor(\"Yoshitsugu Matsuoka\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(\"Yoshitsugu Matsuoka\", yoshitsuguMatsuoka.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    void getTotalCharacters_emptyList_returnZero() throws AniException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        VoiceActor yoshitsuguMatsuoka \u003d new VoiceActor(\"Yoshitsugu Matsuoka\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(0, yoshitsuguMatsuoka.getTotalCharacters());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    void getTotalCharacters_addTwo_returnTwo() throws AniException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        VoiceActor yoshitsuguMatsuoka \u003d new VoiceActor(\"Yoshitsugu Matsuoka\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        // Make characters"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        Character kirito \u003d new Character(\"Kirito\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        Character somaYukihira \u003d new Character(\"Soma Yukihira\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        // Assign characters voiced by voice actor"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        yoshitsuguMatsuoka.addCharacter(kirito); // Japanese va"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        yoshitsuguMatsuoka.addCharacter(somaYukihira);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertEquals(2, yoshitsuguMatsuoka.getTotalCharacters());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 4,
      "ChanJianHao": 34
    }
  },
  {
    "path": "src/test/java/seedu/duke/parser/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public void parseUserInput_emptyInput_showInvalidCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "        assertThrows(AniException.class, () -\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            parser.parseUserInput(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void parseUserInput_oneWord_returnsOneString() throws AniException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String input \u003d \"test\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String[] stringParts \u003d parser.parseUserInput(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        assertEquals(stringParts.length, 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "    public void parseUserInput_moreThanTwoWords_returnsTwoStrings() throws AniException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String input \u003d \"test more than two\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String[] stringParts \u003d parser.parseUserInput(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        assertEquals(stringParts.length, 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 3,
      "ChanJianHao": 3,
      "michaeldinata": 36
    }
  },
  {
    "path": "src/test/java/seedu/duke/storage/DecoderTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.User;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "class DecoderTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private Decoder decoder;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        decoder \u003d new Decoder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void decodeUserProfileString_validString_decodedUserProfileObject() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String userString \u003d \"Tester | 01/01/2020 | Other\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        User userProfile \u003d decoder.decodeUserString(ui, userString);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String expected \u003d \"\\nName: Tester\\nBirthdate: 01/01/2020\\nGender: Other\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertEquals(userProfile.toString(), expected);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void decodeUserProfileString_invalidString_nullObject() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String userString \u003d \"Tester | 01/01/2020\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        User user \u003d decoder.decodeUserString(ui, userString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertNull(user);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void decodeWatchlistString_validString_decodedWatchlistObject() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String watchlistString \u003d \"Test A | [abc, def]\" + System.lineSeparator() + \"Test B | []\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ArrayList\u003cWatchlist\u003e watchlists \u003d decoder.decodeWatchlistString(ui, watchlistString);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String expected \u003d \"Test A\" + System.lineSeparator();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"1. abc\" + System.lineSeparator() + \"2. def\" + System.lineSeparator() + System.lineSeparator();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"Test B\" + System.lineSeparator() + \"Uhh.. It\u0027s empty.. :(\" + System.lineSeparator();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String actual \u003d watchlists.get(0).toString() + System.lineSeparator() + watchlists.get(1).toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertEquals(actual, expected);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void decodeWatchlistString_invalidString_notNullObject() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String watchlistString \u003d \"Test A\" + System.lineSeparator() + \"Test B\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ArrayList\u003cWatchlist\u003e watchlists \u003d decoder.decodeWatchlistString(ui, watchlistString);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertNotNull(watchlists);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 59
    }
  },
  {
    "path": "src/test/java/seedu/duke/storage/EncoderTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.exception.AniException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.User;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "class EncoderTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private Encoder encoder;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        encoder \u003d new Encoder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void encodeUserProfile_validObject_encodedString() throws ParseException, AniException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        User user \u003d new User(\"Human\", \"01/01/1990\", \"Other\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String expected \u003d \"Human | 01/01/1990 | Other\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertEquals(encoder.encodeUser(user), expected);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void encodeUserProfile_nullObject_throwsNullPointerException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            encoder.encodeUser(null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void encodeWatchlist_validObject_encodedString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ArrayList\u003cString\u003e actionAnimeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        actionAnimeList.add(\"Elfen Lied\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        actionAnimeList.add(\"Gungrave\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        actionAnimeList.add(\"Mezzo\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ArrayList\u003cString\u003e adventureAnimeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        adventureAnimeList.add(\"The Slayers Next\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        adventureAnimeList.add(\"My Neighbor Totoro\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        adventureAnimeList.add(\"Pokémon\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ArrayList\u003cWatchlist\u003e watchlists \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        watchlists.add(new Watchlist(\"Action Anime\", actionAnimeList));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        watchlists.add(new Watchlist(\"Adventure Anime\", adventureAnimeList));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        watchlists.add(new Watchlist(\"Empty List\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String expected \u003d \"Action Anime | [Elfen Lied, Gungrave, Mezzo]\" + System.lineSeparator();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"Adventure Anime | [The Slayers Next, My Neighbor Totoro, Pokémon]\" + System.lineSeparator();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"Empty List | []\" + System.lineSeparator();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertEquals(encoder.encodeWatchlist(watchlists), expected);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void encodeWatchlist_nullObject_throwsNullPointerException() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            encoder.encodeWatchlist(null);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 69
    }
  },
  {
    "path": "src/test/java/seedu/duke/storage/StorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.human.User;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import seedu.duke.watchlist.Watchlist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String INVALID_USER_PROFILE_FILE \u003d \"a/b/c/invalid_userprofile.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private static final String INVALID_WATCHLIST_FILE \u003d \"a/b/c/invalid_watchlist.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private Storage invalidStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        invalidStorage \u003d new Storage(INVALID_USER_PROFILE_FILE, INVALID_WATCHLIST_FILE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void loadUserProfile_invalidStorage_nullObject() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        User user \u003d invalidStorage.loadUser(ui);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertNull(user);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void loadWatchlist_invalidStorage_notNullObject() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ArrayList\u003cWatchlist\u003e watchlists \u003d invalidStorage.loadWatchlist(ui);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertNotNull(watchlists);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 38
    }
  },
  {
    "path": "src/test/java/seedu/duke/watchlist/WatchlistTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "package seedu.duke.watchlist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "class WatchlistTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private Watchlist emptyWatchlist;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    private Watchlist filledWatchlist;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        ArrayList\u003cString\u003e animeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        animeList.add(\"Cowboy Bebop\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        animeList.add(\"Fullmetal Alchemist\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        animeList.add(\"R.O.D - READ OR DIE\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        emptyWatchlist \u003d new Watchlist(\"emptyWatchlist\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        filledWatchlist \u003d new Watchlist(\"filledWatchlist\", animeList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void testAnimeListToStringWithEmptyWatchlist() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String expected \u003d \"Uhh.. It\u0027s empty.. :(\" + System.lineSeparator();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertEquals(emptyWatchlist.animeListToString(), expected);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void testAnimeListToStringWithFilledWatchlist() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String expected \u003d \"1. Cowboy Bebop\" + System.lineSeparator();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"2. Fullmetal Alchemist\" + System.lineSeparator();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"3. R.O.D - READ OR DIE\" + System.lineSeparator();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertEquals(filledWatchlist.animeListToString(), expected);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void testToStringWithEmptyWatchlist() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String expected \u003d \"emptyWatchlist\" + System.lineSeparator();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"Uhh.. It\u0027s empty.. :(\" + System.lineSeparator();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertEquals(emptyWatchlist.toString(), expected);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    void testToStringWithFilledWatchlist() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        String expected \u003d \"filledWatchlist\" + System.lineSeparator();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"1. Cowboy Bebop\" + System.lineSeparator();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"2. Fullmetal Alchemist\" + System.lineSeparator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        expected +\u003d \"3. R.O.D - READ OR DIE\" + System.lineSeparator();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "        assertEquals(filledWatchlist.toString(), expected);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OngDeZhi": 54
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "Abec"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "01/02/1996"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChanJianHao"
        },
        "content": "Female"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "watchlist -n a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "watchlist -n b"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "add -a MyFirstAnime"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OngDeZhi"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 1,
      "OngDeZhi": 3,
      "ChanJianHao": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew clean shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "cd ..\\.."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "java -jar build\\libs\\%jarloc% \u003c text-ui-test\\input.txt \u003e text-ui-test\\ACTUAL.TXT"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 3,
      "-": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# change to script directory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"${0%/*}\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "./gradlew clean shadowJar"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "java  -jar $(find build/libs/ -mindepth 1 -print -quit) \u003c text-ui-test/input.txt \u003e text-ui-test/ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "n3wsoldier"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "diff EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test passed!\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test failed!\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "n3wsoldier": 2,
      "-": 22
    }
  }
]
