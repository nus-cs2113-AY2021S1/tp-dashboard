[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 1,
      "-": 46
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Xie Yaoyue | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Walter Kong | [Github](https://github.com/k-walter) | [Portfolio](docs/team/walterkong.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wu Haitao | [Github](https://github.com/Wu-Haitao) | [Portfolio](docs/team/WuHaitao.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yen Pin Fang | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Zihao | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 1,
      "k-walter": 1,
      "killingbear999": 1,
      "xieyaoyue": 1,
      "-": 4,
      "pinfang": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import seedu.duke.exceptions.InvalidStorageFilePathException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import seedu.duke.exceptions.StorageOperationException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private static SpendingList spendingList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Runs the program until termination."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    private static void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String filePath \u003d storage.getFilePath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ui.printWelcomeMessage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                String fullCommand \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                Command c \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                c.execute(spendingList, ui);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                ui.printErrorMessage(e.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        } while (!isExit);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Sets up the required objects and loads data from the storage file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            spendingList \u003d storage.load();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            ui.printErrorMessage(e.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 1,
      "k-walter": 33,
      "-": 10,
      "pinfang": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/Item.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": "public class Item {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    protected double amount;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    protected String symbol;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public Item(String description, String symbol, double amount) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.symbol \u003d symbol;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        this.date \u003d currentDate();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    protected String currentDate() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return date.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void editDescription(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void editAmount(double amount) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public void editSymbol(String symbol) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.symbol \u003d symbol;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        return symbol;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public String getYearMonth() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return date.substring(0, 7);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return date + \" \" + description + \" \" + symbol + amount;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pinfang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "killingbear999": 15,
      "pinfang": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.ClearCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.ConvertCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.command.EditCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.SummaryCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private enum CommandPattern {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        HELP(\"^help$\", \"help\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        CLEAR_ALL(\"^clear\\\\s*-all$\", \"clearAll\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        CLEAR_INDEX(\"^clear\\\\s*\\\\d+$\", \"clear\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ADD(\"^add\\\\s*-d.+-s\\\\s*.\\\\d+([.]\\\\d*)?$\", \"add\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        EDIT(\"^edit\\\\s*\\\\d+\\\\s*-d.+\\\\s*-s\\\\s*.\\\\d+([.]\\\\d*)?$\", \"edit\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        LIST(\"^list$\",\"list\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        LOGOUT(\"^logout$\", \"logout\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        CONVERT(\"^convert\\\\s*-d.+\\\\s*-d.+$\", \"convert\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        SUMMARY(\"^summary$\", \"summary\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        SUMMARY_YEAR(\"^summary\\\\s*\\\\d{4}$\", \"summaryYear\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        SUMMARY_YEAR_MONTH(\"^summary\\\\s*\\\\d{4}\\\\s*[a-zA-Z]{3}$\", \"summaryYearMonth\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        private final String pattern;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        private final String action;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        CommandPattern(String pattern, String action) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            this.pattern \u003d pattern;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            this.action \u003d action;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    private static String getAction(String userInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        for (CommandPattern command: CommandPattern.values()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            if (userInput.matches(command.pattern)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                return command.action;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        throw new InvalidCommandException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    private static Command getAddCommand(String commandParameters) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int descriptionBeginIndex \u003d commandParameters.indexOf(\"-d\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int spendingBeginIndex \u003d commandParameters.indexOf(\"-s\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String description \u003d commandParameters.substring(descriptionBeginIndex + \"-d\".length(),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                spendingBeginIndex).strip();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String spending \u003d commandParameters.substring(spendingBeginIndex + \"-s\".length()).strip();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String symbol \u003d spending.substring(0, 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        double amount \u003d Double.parseDouble(spending.substring(1));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return new AddCommand(description, symbol, amount);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    private static Command getEditCommand(String commandParameters) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int descriptionBeginIndex \u003d commandParameters.indexOf(\"-d\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int spendingBeginIndex \u003d commandParameters.indexOf(\"-s\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        int number \u003d Integer.parseInt(commandParameters.substring(0, descriptionBeginIndex).strip()) - 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String description \u003d commandParameters.substring(descriptionBeginIndex + \"-d\".length(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                spendingBeginIndex).strip();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String spending \u003d commandParameters.substring(spendingBeginIndex + \"-s\".length()).strip();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String symbol \u003d spending.substring(0, 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        double amount \u003d Double.parseDouble(spending.substring(1));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        return new EditCommand(number, description, symbol, amount);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public static Command parseCommand(String userInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        userInput \u003d userInput.strip();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String action \u003d getAction(userInput);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int parameterStartIndex;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        for (parameterStartIndex \u003d 0; parameterStartIndex \u003c action.length(); parameterStartIndex++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            if (Character.isUpperCase(action.charAt(parameterStartIndex))) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String commandParameters \u003d userInput.substring(parameterStartIndex).strip();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            Command newAddCommand \u003d getAddCommand(commandParameters);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            assert newAddCommand instanceof AddCommand : \"Getting new add command failed.\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return newAddCommand;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"help\": return new HelpCommand();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"clear\": return new ClearCommand(false, Integer.parseInt(commandParameters));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"clearAll\": return new ClearCommand(true, 0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"convert\": return new ConvertCommand(commandParameters);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"summary\": return new SummaryCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"summaryYear\": return new SummaryCommand(commandParameters);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"summaryYearMonth\": return new SummaryCommand(commandParameters.substring(0, 4),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                commandParameters.substring(4).strip());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"logout\": return new ExitCommand();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"edit\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            Command newEditCommand \u003d getEditCommand(commandParameters);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            assert newEditCommand instanceof EditCommand : \"Getting new edit command failed.\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return newEditCommand;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        case \"list\": return new ListCommand();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        default: throw new InvalidCommandException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 87,
      "k-walter": 9,
      "killingbear999": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/SpendingList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.command.ConvertCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pinfang"
        },
        "content": "public class SpendingList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private ArrayList\u003cItem\u003e spendingList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public SpendingList(String description, ArrayList\u003cItem\u003e spendingList, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.spendingList \u003d spendingList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public SpendingList(String description, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this(description, new ArrayList\u003c\u003e(), storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public SpendingList(Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this(\"\", storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public SpendingList(ArrayList\u003cItem\u003e spendingList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this(\"\", spendingList, null);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    private void save() throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        if (storage \u003d\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        storage.save(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void addItem(String description, String symbol, double amount) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        Item item \u003d new Item(description, symbol, amount);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        spendingList.add(item);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void deleteItem(int index) throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        spendingList.remove(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void clearAllItems() throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        spendingList.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        assert getListSize() \u003d\u003d 0 : \"list size should be 0\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public Item getItem(int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return spendingList.get(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return spendingList.size();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public ArrayList\u003cItem\u003e getSpendingList() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return spendingList;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public double getSpendingAmount(String period) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        double totalAmount \u003d 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        for (Item i: spendingList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            if (i.getYearMonth().contains(period)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                totalAmount +\u003d i.getAmount();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return totalAmount;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void editItem(int number, String description, String symbol, double amount) throws IOException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        Item item \u003d getItem(number);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        item.editDescription(description);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        item.editSymbol(symbol);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        item.editAmount(amount);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void updateSpendingList() throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        ConvertCommand convertCommand \u003d new ConvertCommand(description);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        spendingList \u003d convertCommand.updateSpendingList();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pinfang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 30,
      "killingbear999": 14,
      "xieyaoyue": 4,
      "pinfang": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.exceptions.InvalidStorageFileExtensionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.exceptions.InvalidStorageFilePathException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    private static Gson gson;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    private static final String defaultPath \u003d \"data/duke.json\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Creates the Storage object based on the the default storage path."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws InvalidStorageFilePathException for empty or blank file path"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws InvalidStorageFileExtensionException for non-json file path"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public Storage() throws InvalidStorageFilePathException, InvalidStorageFileExtensionException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this(defaultPath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Creates the Storage object based on the user-specified file path."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param path relative path to json file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws InvalidStorageFilePathException for empty or blank file path"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws InvalidStorageFileExtensionException for non-json file path"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public Storage(String path) throws InvalidStorageFilePathException, InvalidStorageFileExtensionException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        // Validate path"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String[] parts \u003d path.split(\"\\\\.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        if (path.isBlank() || parts.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            throw new InvalidStorageFilePathException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String extension \u003d parts[parts.length - 1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        if (parts.length \u003d\u003d 1 || !extension.equals(\"json\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            throw new InvalidStorageFileExtensionException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        // Create or Initialise object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        file \u003d new File(path);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        gson \u003d new Gson();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            throw new InvalidStorageFilePathException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Exposes location of storage for Duke applications."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return file path"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return file.getPath();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public SpendingList load() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingList sl;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            String jsonContent \u003d s"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                    .useDelimiter(\"\\\\Z\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                    .next();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            sl \u003d gson.fromJson(jsonContent, SpendingList.class);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            sl \u003d new SpendingList(this);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return sl;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void save(SpendingList spendingList) throws IOException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String jsonContent \u003d gson.toJson(spendingList);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        fw.write(jsonContent);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pinfang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 79,
      "pinfang": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private PrintStream out;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static final String SEPARATE_LINE_CHAR \u003d \"-\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final int SEPARATE_LINE_LENGTH \u003d 108;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private static final String LOGO \u003d \"  _____         __ _      ___              \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            + \" / ___/__ ___  / /| | /| / (_)__ ___       \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            + \"/ /__/ -_) _ \\\\/ __/ |/ |/ / (_-\u003c/ -_)      \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            + \"\\\\___/\\\\__/_//_/\\\\__/|__/|__/_/___/\\\\__/       \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            + \"  / _ \\\\___  / / /__ ____| | /| / (_)__ ___ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            + \" / // / _ \\\\/ / / _ `/ __/ |/ |/ / (_-\u003c/ -_)\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            + \"/____/\\\\___/_/_/\\\\_,_/_/  |__/|__/_/___/\\\\__/ \\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String BORDER_CORNER \u003d \"+\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String BORDER_HORIZONTAL \u003d \"-\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String BORDER_VERTICAL \u003d \"|\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final int TABLE_SIZE \u003d 115;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String[][] TABLE_OF_COMMANDS \u003d {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"ACTION\", \"FORMAT\", \"EXAMPLES (IF ANY)\"},"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"add\", \"add [-c CATEGORY] [-d DESCRIPTION] [-s SPENDING]\", \"add -d chicken rice -s SGD 3.00\"},"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"clear\", \"clear INDEX\", \"clear 1\"},"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR clear all\", \"\"},"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"convert\", \"convert -d INPUT_CURRENCY -d OUTPUT_CURRENCY\", \"convert -d SGD -d USD\"},"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"draw\", \"draw [YEAR \u003d current year] [MONTH \u003d current month]\", \"draw 2020 Jun\"},"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"edit\", \"edit INDEX [-d NEW_DESCRIPTION] [-s NEW_SPENDING]\", \"edit 1 -d bubble tea -s SGD 4.00\"},"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"export\", \"export PATH\", \"export F:\\\\MyFolder\"},"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"help\", \"help\", \"\"},"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"logout\", \"logout\", \"\"},"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"repay\", \"repay [-d NAME] [-s AMOUNT] [-t DEADLINE]\", \"repay -d Johnny -s SGD 5.00 -t 2020-12-02\"},"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"repayment list\", \"repayment list\", \"\"},"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"set\", \"set [-s AMOUNT]\", \"set -s SGD 100.00\"},"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"spending\", \"spending list\", \"\"},"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"list\", \"OR spending list YEAR\", \"list 2020\"},"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR spending list YEAR MONTH\", \"list 2020 Jul\"},"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR spending list -c CATEGORY\", \"spending list -c food\"},"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR spending list YEAR -c CATEGORY\", \"spending list 2020 -c food\"},"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR spending list YEAR MONTH -c CATEGORY\", \"spending list 2020 Jul -c food\"},"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR spending list -a\", \"\"},"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"summary\", \"summary\", \"\"},"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR summary YEAR\", \"summary 2020\"},"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR summary YEAR MONTH\", \"summary 2020 Jul\"},"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR summary -c CATEGORY\", \"summary -c food\"},"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR summary YEAR -c CATEGORY\", \"summary 2020 -c food\"},"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR summary YEAR MONTH -c CATEGORY\", \"summary 2020 Jul -c food\"},"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR summary -a\", \"\"},"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"purge data\", \"purge data\", \"\"}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    };"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this(new Scanner(System.in), System.out);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Ui(Scanner in, PrintStream out) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.in \u003d in;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(LOGO);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printWelcomeMessage(String filePath) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        out.println(\"Local file path: \" + filePath);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"See you next time!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private void drawSeparateLine() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(SEPARATE_LINE_CHAR.repeat(SEPARATE_LINE_LENGTH));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String getSpendingList(SpendingList spendingList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ByteArrayOutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        spendingList.getSpendingList()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                .forEach(ps::println);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return os.toString(StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void printSpendingList(SpendingList spendingList) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String spendingString \u003d getSpendingList(spendingList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (!spendingString.isEmpty()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            out.print(spendingString);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            out.println(\"Nothing in the list.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private void printTopBottomBorder() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(BORDER_CORNER + BORDER_HORIZONTAL.repeat(TABLE_SIZE - 2) + BORDER_CORNER);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private void printWithinTableBorder() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        System.out.println(BORDER_HORIZONTAL.repeat(TABLE_SIZE));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printHelp() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"Here is a summary of the commands you can use:\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        printTopBottomBorder();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        for (int i \u003d 0; i \u003c 28; i++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            out.format(\"%1s%-15s%1s%-55s%1s%-41s%1s\\n\", BORDER_VERTICAL, TABLE_OF_COMMANDS[i][0],"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    BORDER_VERTICAL, TABLE_OF_COMMANDS[i][1], BORDER_VERTICAL, TABLE_OF_COMMANDS[i][2],"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    BORDER_VERTICAL);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            if (i \u003d\u003d 0 || i \u003d\u003d 1 || (i \u003e\u003d 3 \u0026\u0026 i \u003c\u003d 12) || i \u003d\u003d 19 || i \u003d\u003d 26) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                printWithinTableBorder();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        printTopBottomBorder();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printClearIndex(Item item) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"You\u0027ve deleted the record:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(item);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printClearAll() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"You\u0027ve deleted all the records.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printAdd(SpendingList spendingList) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"You\u0027ve added the record:\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(spendingList.getItem(spendingList.getListSize() - 1));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public void printConvertCurrency(String outputCurrency) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        out.println(\"The currency has been changed to \" + outputCurrency + \" .\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public void printEdit(SpendingList spendingList, int index) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"You\u0027ve updated the record:\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        out.println(spendingList.getItem(index));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printSummaryMessage(double amount) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        out.printf(\"You\u0027ve spent $%f.%n\", amount);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void printErrorMessage(String message) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 83,
      "k-walter": 17,
      "killingbear999": 10,
      "xieyaoyue": 56,
      "pinfang": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public double amount;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String symbol;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"AddCommand\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public AddCommand(String description, String symbol, double amount) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.symbol \u003d symbol;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        logger.log(Level.FINE, \"going to add item\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        spendingList.addItem(description, symbol, amount);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ui.printAdd(spendingList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 4,
      "k-walter": 3,
      "killingbear999": 4,
      "xieyaoyue": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ClearCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private boolean isClearAll;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private int clearIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public ClearCommand(boolean isClearAll, int clearIndex) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.isClearAll \u003d isClearAll;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if (!isClearAll) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            this.clearIndex \u003d clearIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if (!isClearAll) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            assert (clearIndex \u003e 0 \u0026\u0026 clearIndex \u003c\u003d spendingList.getListSize()) : \"Wrong index\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            ui.printClearIndex(spendingList.getItem(clearIndex - 1));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            spendingList.deleteItem(clearIndex - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            spendingList.clearAllItems();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            assert spendingList.getListSize() \u003d\u003d 0 : \"List size should be 0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            ui.printClearAll();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 3,
      "xieyaoyue": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import seedu.duke.exceptions.InvalidMonthException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public abstract void execute(SpendingList spendingList, Ui ui) throws InvalidCommandException, IOException,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            InvalidMonthException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 2,
      "xieyaoyue": 12,
      "pinfang": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ConvertCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class ConvertCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String currencies;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private String outputCurrency;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private double exchangeRate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public static ArrayList\u003cItem\u003e newSpendingList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"ConvertCommand\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /** SGD to USD; USD to SGD; SGD to Yuan; Yuan to SGD. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private final String[][] exchangeRates \u003d {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"SGD USD\", \"USD SGD\", \"SGD Yuan\", \"Yuan SGD\"},"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"0.74\", \"1.36\", \"4.99\", \"0.20\"},"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    };"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public ConvertCommand(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public String identifyCurrency(String description) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        int firstCurrencyStartingPosition \u003d description.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        assert firstCurrencyStartingPosition \u003d\u003d 3 : \"The value of firstCurrencyStartingPosition should be 3\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        int firstCurrencyEndingPosition \u003d description.indexOf(\"-d\", firstCurrencyStartingPosition);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        int secondCurrencyStartingPosition \u003d description.indexOf(\"-d\", firstCurrencyStartingPosition) + 3;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        int length \u003d description.length();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        String inputCurrency \u003d description.substring(firstCurrencyStartingPosition, firstCurrencyEndingPosition);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        assert inputCurrency.equals(description.substring(firstCurrencyStartingPosition, firstCurrencyEndingPosition)) :"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "                \"Incorrect input currency\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        outputCurrency \u003d description.substring(secondCurrencyStartingPosition, length);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        assert outputCurrency.equals(description.substring(secondCurrencyStartingPosition, length)) :"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "                \"Incorrect output currency\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        return inputCurrency + outputCurrency;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private void findExchangeRate() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            if (exchangeRates[0][i].equals(currencies)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                exchangeRate \u003d Double.parseDouble(exchangeRates[1][i]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "                assert exchangeRate \u003d\u003d Double.parseDouble(exchangeRates[1][i]) : \"Incorrect exchange rate\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        logger.log(Level.FINE, \"going to start processing\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        newSpendingList \u003d spendingList.getSpendingList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        currencies \u003d identifyCurrency(description);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        findExchangeRate();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        for (int i \u003d 0; i \u003c newSpendingList.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "            Item currentString \u003d newSpendingList.get(0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "            newSpendingList.remove(0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            updateNewAmount(currentString);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            updateCurrency(currentString);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            newSpendingList.add(currentString);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        ui.printConvertCurrency(outputCurrency);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        spendingList.updateSpendingList();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        logger.log(Level.FINE, \"end of processing\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private void updateNewAmount(Item currentString) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        double amount \u003d currentString.getAmount();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        amount \u003d amount * exchangeRate;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        currentString.editAmount(amount);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private void updateCurrency(Item currentString) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        switch (currencies) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"SGD USD\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            currentString.editSymbol(\"$\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"USD SGD\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            currentString.editSymbol(\"S$\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"SGD Yuan\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            currentString.editSymbol(\"¥\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"Yuan SGD\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            currentString.editSymbol(\"S$\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public ArrayList\u003cItem\u003e updateSpendingList() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return newSpendingList;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "killingbear999": 26,
      "xieyaoyue": 75
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/EditCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private String symbol;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public EditCommand(int index, String description, String symbol, double amount) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.symbol \u003d symbol;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        spendingList.editItem(index, description, symbol, amount);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        ui.printEdit(spendingList, index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 3,
      "killingbear999": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 1,
      "xieyaoyue": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ui.printHelp();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/IncorrectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public IncorrectCommand(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) throws InvalidCommandException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if (!checkValidCommand()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public boolean checkValidCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if (description.startsWith(\"convert\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if (description.startsWith(\"help\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if (description.startsWith(\"add\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if (description.startsWith(\"edit\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if (description.startsWith(\"clear\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if (description.startsWith(\"summary\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if (description.startsWith(\"logout\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) throws InvalidCommandException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ArrayList\u003cItem\u003e list \u003d spendingList.getSpendingList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ui.printSpendingList(spendingList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/SummaryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import seedu.duke.exceptions.InvalidMonthException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class SummaryCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String year;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String month;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String period;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private boolean isValidMonth \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(\"SummaryCommand\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public SummaryCommand(String year, String month) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.month \u003d changeMonthFormat(month);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        period \u003d this.year + \"-\" + this.month;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public SummaryCommand(String year) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        period \u003d year;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public SummaryCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.year \u003d getCurrentYear();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.month \u003d getCurrentMonth();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        period \u003d year + \"-\" + month;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) throws InvalidMonthException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        if (isValidMonth) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            logger.log(Level.FINE, \"going to start processing\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            double amountSpent \u003d spendingList.getSpendingAmount(period);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            logger.log(Level.FINE, \"end of processing\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            ui.printSummaryMessage(amountSpent);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            throw new InvalidMonthException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String currentDate() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return date.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String getCurrentMonth() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return currentDate().substring(5, 7);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String getCurrentYear() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return currentDate().substring(0, 4);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private String changeMonthFormat(String month) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        String newFormat;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        HashMap\u003cString, String\u003e months \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Jan\", \"01\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Feb\", \"02\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Mar\", \"03\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Apr\", \"04\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"May\", \"05\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Jun\", \"06\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Jul\", \"07\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Aug\", \"08\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Sep\", \"09\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Oct\", \"10\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Nov\", \"11\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Dec\", \"12\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if (months.containsKey(month)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            newFormat \u003d months.get(month);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            newFormat \u003d null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            isValidMonth \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return newFormat;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 67,
      "pinfang": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/DukeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return \"Sorry, the command input is invalid. Please re-enter a new command.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 4,
      "killingbear999": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidMonthException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "public class InvalidMonthException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return \"Invalid month input.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pinfang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pinfang": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidStorageFileExtensionException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class InvalidStorageFileExtensionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return \"Please indicate a .json file\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidStorageFilePathException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class InvalidStorageFilePathException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return \"Sorry, the file path is invalid.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 6,
      "killingbear999": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/StorageOperationException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class StorageOperationException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return \"Sorry, the system fails to store the information.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 4,
      "killingbear999": 4
    }
  },
  {
    "path": "src/test/java/seedu/duke/ItemTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "public class ItemTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private Item rice \u003d new Item(\"rice\", \"S$\", 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        String expectedString \u003d date.toString() + \" rice S$2.0\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        assertEquals(expectedString, rice.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void editAmount() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        String expectedString \u003d date.toString() + \" rice S$5.0\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        rice.editAmount(5);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        assertEquals(expectedString, rice.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void editDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        String expectedString \u003d date.toString() + \" chicken rice S$2.0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        rice.editDescription(\"chicken rice\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        assertEquals(expectedString, rice.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void editSymbol() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        String expectedString \u003d date.toString() + \" rice $2.0\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        rice.editSymbol(\"$\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        assertEquals(expectedString, rice.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void getAmount() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        Double expectedAmount \u003d 2.0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        assertEquals(expectedAmount, rice.getAmount());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void getDescription() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        String expectedDescription \u003d \"rice\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        assertEquals(expectedDescription, rice.getDescription());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void getSymbol() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        String expectedSymbol \u003d \"S$\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        assertEquals(expectedSymbol, rice.getSymbol());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void getYearMonth() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        String expectedString \u003d date.toString().substring(0, 7);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        assertEquals(expectedString, rice.getYearMonth());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pinfang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pinfang": 63
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    void parseCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        AddCommand actualCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            actualCommand \u003d (AddCommand) parser.parseCommand(\"add -d Item0 -s $114.514\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            AddCommand expectedCommand \u003d new AddCommand(\"Item0\", \"$\", 114.514);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            assertEquals(expectedCommand.description, actualCommand.description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            assertEquals(expectedCommand.symbol, actualCommand.symbol);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            assertEquals(expectedCommand.amount, actualCommand.amount);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 24
    }
  },
  {
    "path": "src/test/java/seedu/duke/SpendingListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "class SpendingListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void addItem() throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingList expectedList \u003d initSpendingList("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"buy book\", \"S$\", 10)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingList realList \u003d new SpendingList((Storage) null);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        realList.addItem(\"buy book\", \"S$\", 10);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assert realList.getListSize() \u003d\u003d 1 : \"item not added\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEqualList(expectedList, realList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public static void assertEqualList(SpendingList expectedList, SpendingList realList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String expectedString \u003d Arrays.toString(expectedList.getSpendingList().toArray());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String realString \u003d Arrays.toString(realList.getSpendingList().toArray());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEquals(expectedString, realString);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public static ArrayList\u003cItem\u003e initList(Item... items) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(items));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public static SpendingList initSpendingList(Item... items) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return new SpendingList(initList(items));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void deleteItem() throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingList expectedList \u003d initSpendingList("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"noodle\", \"S$\", 1.5),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                new Item(\"fish\", \"S$\", 10),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"books\", \"S$\", 8.9)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingList realList \u003d initSpendingList("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"rice\", \"S$\", 2),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"noodle\", \"S$\", 1.5),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"fish\", \"S$\", 10),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"books\", \"S$\", 8.9)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        realList.deleteItem(0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assert realList.getListSize() \u003d\u003d 3 : \"item is not deleted\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEqualList(expectedList, realList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void getItem() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingList realList \u003d initSpendingList("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"buy book\", \"S$\", 10)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        Item firstItem \u003d realList.getItem(0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEquals(firstItem.description, \"buy book\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEquals(firstItem.symbol, \"S$\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEquals(firstItem.amount, 10);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    void getListSize() throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingList realList \u003d new SpendingList((Storage) null);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        realList.addItem(\"buy book\", \"S$\", 10);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEquals(realList.getListSize(), 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        realList.addItem(\"buy stationary\", \"S$\", 5);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEquals(realList.getListSize(), 2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        realList.deleteItem(0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEquals(realList.getListSize(), 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        realList.addItem(\"buy grocery\", \"S$\", 10);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEquals(realList.getListSize(), 2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    void getList() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ArrayList\u003cItem\u003e expectedList \u003d initList("
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"rice\", \"S$\", 2),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"noodle\", \"S$\", 1.5),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"fish\", \"S$\", 10),"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"books\", \"S$\", 8.9)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingList realSL \u003d new SpendingList(expectedList);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ArrayList\u003cItem\u003e realList \u003d realSL.getSpendingList();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEquals(expectedList, realList, \"List not same\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    void clearAllItems() throws IOException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        final SpendingList expectedList \u003d new SpendingList((Storage) null);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingList realList \u003d initSpendingList("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"buy book\", \"S$\", 10),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"buy stationary\", \"S$\", 5)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEquals(realList.getListSize(), 2, \"List not instantiated with 2 items\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        realList.clearAllItems();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assert realList.getListSize() \u003d\u003d 0 : \"List is not cleared\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEqualList(expectedList, realList);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    void editItem() throws IOException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingList realList \u003d initSpendingList("
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"buy book\", \"S$\", 10)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        realList.editItem(0, \"buy book\", \"S$\", 12);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEquals(realList.getItem(0).amount, 12);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void getSpendingAmount() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        double expectedAmount \u003d 22.4;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String expectedYear \u003d Integer.toString(LocalDate.now().getYear());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingList realList \u003d initSpendingList("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"rice\", \"S$\", 2),"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"noodle\", \"S$\", 1.5),"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"fish\", \"S$\", 10),"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                new Item(\"books\", \"S$\", 8.9)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertEquals(realList.getSpendingAmount(expectedYear), expectedAmount);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 105,
      "xieyaoyue": 20,
      "pinfang": 20
    }
  },
  {
    "path": "src/test/java/seedu/duke/StoragePathTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.exceptions.InvalidStorageFileExtensionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.exceptions.InvalidStorageFilePathException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "class StoragePathTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    static class Rule\u003cT extends Throwable\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        final String path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        final Class\u003cT\u003e exception;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        final String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        Rule(String path, Class\u003cT\u003e exception, String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            this.path \u003d path;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            this.exception \u003d exception;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    static Rule[] rules \u003d new Rule[]{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        new Rule(\"       \", InvalidStorageFilePathException.class, \"Allowed blank file path/names\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        new Rule(\"json\", InvalidStorageFileExtensionException.class, \"Must specify file extension\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        new Rule(\"data/test.txt\", InvalidStorageFileExtensionException.class, \"Allowed non JSON files\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void fullFileName() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        for (Rule r : rules) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            assertThrows(r.exception, () -\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                Storage s \u003d new Storage(r.path);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            }, r.description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 38
    }
  },
  {
    "path": "src/test/java/seedu/duke/StorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.exceptions.InvalidStorageFileExtensionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import seedu.duke.exceptions.InvalidStorageFilePathException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.UUID;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void createFileAndPath() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String path \u003d storage.getFilePath();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        File f \u003d new File(path);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertTrue(f.exists(), \"Did not create path or file\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void saveAndLoad() throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingList expectedList \u003d new SpendingList(storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        expectedList.addItem(\"noodle\", \"S$\", 1.5);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        expectedList.addItem(\"fish\", \"S$\", 10);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        expectedList.addItem(\"books\", \"S$\", 8.9);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingList actualList \u003d storage.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        SpendingListTest.assertEqualList(expectedList, actualList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void initStorage() throws InvalidStorageFilePathException, InvalidStorageFileExtensionException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String randomPath \u003d String.format(\"data/%s.json\", UUID.randomUUID().toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        storage \u003d new Storage(randomPath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void deleteStorage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String path \u003d storage.getFilePath();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        storage \u003d null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        File f \u003d new File(path);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertTrue(f.delete(), \"Unable to delete file\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        assertFalse(f.exists(), \"Did not delete file\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "k-walter": 54
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/AddCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.exceptions.InvalidStorageFileExtensionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.exceptions.InvalidStorageFilePathException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "class AddCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    void execute() throws IOException, InvalidStorageFileExtensionException, InvalidStorageFilePathException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(\"buy sushi\", \"$\", 3.0);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        SpendingList spendingList \u003d new SpendingList(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        addCommand.execute(spendingList, ui);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        assertEquals(spendingList.getItem(0).getDescription(), \"buy sushi\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        assertEquals(spendingList.getItem(0).getSymbol(), \"$\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        assertEquals(spendingList.getItem(0).getAmount(), 3.0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 27
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/ClearCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.exceptions.InvalidStorageFileExtensionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.exceptions.InvalidStorageFilePathException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "class ClearCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    void execute_clearIndex() throws InvalidStorageFileExtensionException,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            InvalidStorageFilePathException, IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ClearCommand clearCommand \u003d new ClearCommand(false, 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        SpendingList spendingList \u003d new SpendingList(storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        spendingList.addItem(\"buy chicken rice\", \"$\", 3.0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        spendingList.addItem(\"buy sushi\", \"$\", 5.1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        clearCommand.execute(spendingList, ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        assertEquals(spendingList.getListSize(), 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    void execute_clearAll() throws InvalidStorageFileExtensionException, InvalidStorageFilePathException, IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ClearCommand clearCommand \u003d new ClearCommand(true, 0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        SpendingList spendingList \u003d new SpendingList(storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        spendingList.addItem(\"buy chicken rice\", \"$\", 3.0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        spendingList.addItem(\"buy sushi\", \"$\", 5.1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        clearCommand.execute(spendingList, ui);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        assertEquals(spendingList.getListSize(), 0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 41
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/ConvertCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "public class ConvertCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public void identifyCurrencySgdUsd() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        String expectedCurrency \u003d \"SGD USD\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        String description \u003d \"-d SGD -d USD\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        ConvertCommand convertCommand \u003d new ConvertCommand(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        assertEquals(expectedCurrency, convertCommand.identifyCurrency(description));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "killingbear999": 14,
      "xieyaoyue": 1
    }
  }
]
