[
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Xie Yaoyue | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Walter Kong | [Github](https://github.com/k-walter) | [Portfolio](docs/team/walterkong.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wu Haitao | [Github](https://github.com/Wu-Haitao) | [Portfolio](docs/team/WuHaitao.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yen Pin Fang | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Zihao | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 1,
      "k-walter": 1,
      "killingbear999": 1,
      "xieyaoyue": 1,
      "-": 4,
      "pinfang": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import seedu.duke.exceptions.InvalidStorageFilePathException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import seedu.duke.exceptions.StorageOperationException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private static SpendingList spendingList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //   /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //    * Runs the program until termination."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //    */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //   private static void run(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //       start(args);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //       runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //   }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //     * Sets up the required objects and loads data from the storage file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //     * @param args arguments supplied by the user at program launch."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //    private static void start(String[] args) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //            storage \u003d initializeStorage(args);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //            spendingList \u003d storage.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //        } catch(Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //            System.exit(0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //     * Reads the user command and executes it, until the user issues the \u0027logout\u0027 command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //    private static void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //        ui.printWelcomeMessage(storage.filepath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //        do {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //                String fullCommand \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //                Command c \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //                c.execute(spendingList, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //            } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //                ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //        } while(!isExit);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //   /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //    * Creates the Storage object based on the user-specified file path (if any) or the default storage path."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //    * @param Args arguments supplied by the user at program launch."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //    * @throws InvalidStorageFilePathException if the target file path is incorrect."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //    * @throws StorageOperationException if there some error in creating storage file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //    */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //   private static Storage initializeStorage(String[] Args) throws InvalidStorageFilePathException,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //          StorageOperationException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //       boolean isStorageFileSpecifiedByUser \u003d Args.length \u003e 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //       return isStorageFileSpecifiedByUser? new Storage(Args[0]) : new Storage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    //   }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        // run(args);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\"hello world\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "pinfang": 64
    }
  },
  {
    "path": "src/main/java/seedu/duke/Item.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": "public class Item {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    protected double amount;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    protected String symbol;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public Item(String description, String symbol, double amount) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.symbol \u003d symbol;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    protected String currentDate() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return date.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void editDescription(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void editAmount(double amount) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public void editSymbol(String symbol) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.symbol \u003d symbol;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        return symbol;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public String getYearMonth() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return currentDate().substring(0, 7);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        return currentDate() + \" \" + description + \" \" + symbol + \" \" + amount;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pinfang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "killingbear999": 16,
      "pinfang": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.ClearCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.ConvertCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.HelpCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.command.SummaryCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "import seedu.duke.command.EditCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private String getAction(String userInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String action;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            action \u003d userInput.substring(0, userInput.indexOf(\" \"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return action;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Command getAddCommand(String commandParameters) throws InvalidCommandException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        commandParameters +\u003d \u0027-\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (!((commandParameters.contains(\"-d\")) \u0026\u0026 (commandParameters.contains(\"-s\")))) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int descriptionBeginIndex \u003d commandParameters.indexOf(\"-d\") + \"-d\".length();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String description \u003d commandParameters.substring(descriptionBeginIndex,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                commandParameters.indexOf(\u0027-\u0027, descriptionBeginIndex)).strip();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int spendingBeginIndex \u003d commandParameters.indexOf(\"-s\") + \"-s\".length();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String spending \u003d commandParameters.substring(spendingBeginIndex,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                commandParameters.indexOf(\u0027-\u0027, spendingBeginIndex)).strip();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String symbol;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        double amount;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            symbol \u003d spending.substring(0, 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            amount \u003d Double.parseDouble(spending.substring(1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return new AddCommand(description, symbol, amount);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Command getHelpCommand(String commandParameters) throws InvalidCommandException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (commandParameters.isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Command getClearCommand(String commandParameters) throws InvalidCommandException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (commandParameters.toLowerCase().equals(\"all\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new ClearCommand(true, 0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            int clearIndex;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                clearIndex \u003d Integer.parseInt(commandParameters);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new ClearCommand(false, clearIndex);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Command getConvertCommand(String commandParameters) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return new ConvertCommand(commandParameters);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Command getLogoutCommand(String commandParameters) throws InvalidCommandException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (commandParameters.isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private boolean isNumeric(String string) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        for (int i \u003d 0; i \u003c string.length(); i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            if (!Character.isDigit(string.charAt(i))) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Command getSummaryCommand(String commandParameters) throws InvalidCommandException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (commandParameters.isEmpty()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new SummaryCommand();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            int dividerIndex \u003d commandParameters.indexOf(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            if (dividerIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                String year \u003d commandParameters;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                if (isNumeric(year)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    return new SummaryCommand(year);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                String year \u003d commandParameters.substring(0, dividerIndex);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                String month \u003d commandParameters.substring(dividerIndex + 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                if (isNumeric(year) \u0026\u0026 isNumeric(month)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    return new SummaryCommand(year, month);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private Command getEditCommand(String commandParameters) throws InvalidCommandException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        commandParameters +\u003d \u0027-\u0027;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        if (!((commandParameters.contains(\"-d\")) \u0026\u0026 (commandParameters.contains(\"-s\")))) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        int numberBeginIndex \u003d commandParameters.indexOf(\"edit\") + \"edit \".length();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        int numberEndIndex \u003d commandParameters.indexOf(\"-d\") - \" \".length();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        int number \u003d Integer.parseInt(commandParameters.substring(numberBeginIndex, numberEndIndex));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        int descriptionBeginIndex \u003d commandParameters.indexOf(\"-d\") + \"-d\".length();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        String description \u003d commandParameters.substring(descriptionBeginIndex,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "                commandParameters.indexOf(\u0027-\u0027, descriptionBeginIndex)).strip();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        int spendingBeginIndex \u003d commandParameters.indexOf(\"-s\") + \"-s\".length();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        String spending \u003d commandParameters.substring(spendingBeginIndex,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "                commandParameters.indexOf(\u0027-\u0027, spendingBeginIndex)).strip();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        String symbol;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        double amount;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "            symbol \u003d spending.substring(0, 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "            amount \u003d Double.parseDouble(spending.substring(1));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        return new EditCommand(number, description, symbol, amount);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Command getCommand(String userInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        userInput \u003d userInput.strip();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String action;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        action \u003d getAction(userInput);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String commandParameters \u003d userInput.substring(action.length()).strip();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"add\": return getAddCommand(commandParameters);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"help\": return getHelpCommand(commandParameters);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"clear\": return getClearCommand(commandParameters);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"convert\": return getConvertCommand(commandParameters);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"summary\": return getSummaryCommand(commandParameters);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"logout\": return getLogoutCommand(commandParameters);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        case \"edit\": return getEditCommand(commandParameters);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        default: return null;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 129,
      "killingbear999": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/SpendingList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.command.ConvertCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": "public class SpendingList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private ArrayList\u003cItem\u003e spendingList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public SpendingList(ArrayList\u003cItem\u003e spendingList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.spendingList \u003d spendingList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public SpendingList(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public void addItem(String description, String symbol, double amount) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        Item item \u003d new Item(description, symbol, amount);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        spendingList.add(item);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void deleteItem(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        spendingList.remove(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public void clearAllItems() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        spendingList.clear();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public Item getItem(int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return spendingList.get(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return spendingList.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public ArrayList\u003cItem\u003e getSpendingList() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return spendingList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public double getSpendingAmount(String period) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        double totalAmount \u003d 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        for (Item i: spendingList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            if (i.getYearMonth().contains(period)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                totalAmount +\u003d i.getAmount();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return totalAmount;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public void editItem(int number, String description, String symbol, double amount) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        Item item \u003d getItem(number);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        item.editDescription(description);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        item.editSymbol(symbol);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        item.editAmount(amount);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public void updateSpendingList() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        ConvertCommand convertCommand \u003d new ConvertCommand(description);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        spendingList \u003d convertCommand.updateSpendingList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pinfang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "killingbear999": 20,
      "xieyaoyue": 2,
      "pinfang": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pinfang": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "import seedu.duke.command.ConvertCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private PrintStream out;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static final String SEPARATE_LINE_CHAR \u003d \"-\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static final int SEPARATE_LINE_LENGTH \u003d 40;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private static final String LOGO \u003d \"  _____         __ _      ___              \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            + \" / ___/__ ___  / /| | /| / (_)__ ___       \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            + \"/ /__/ -_) _ \\\\/ __/ |/ |/ / (_-\u003c/ -_)      \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            + \"\\\\___/\\\\__/_//_/\\\\__/|__/|__/_/___/\\\\__/       \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            + \"  / _ \\\\___  / / /__ ____| | /| / (_)__ ___ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            + \" / // / _ \\\\/ / / _ `/ __/ |/ |/ / (_-\u003c/ -_)\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            + \"/____/\\\\___/_/_/\\\\_,_/_/  |__/|__/_/___/\\\\__/ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            + \"                                          \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String BORDER_CORNER \u003d \"+\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String BORDER_HORIZONTAL \u003d \"-\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String BORDER_VERTICAL \u003d \"|\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final int TABLE_SIZE \u003d 104;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String MESSAGE_HELP \u003d \"Here is a summary of the commands you can use:\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String MESSAGE_GOODBYE \u003d \"Goodbye!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String[][] TABLE_OF_COMMANDS \u003d {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"ACTION\", \"FORMAT\", \"EXAMPLES (IF ANY)\"},"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"add\", \"add -d DESCRIPTION -s SPENDING [-f SKIP CONFIRMATION]\", \"add -d chicken rice -s $3.00 -f\"},"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"clear\", \"clear INDEX\", \"clear 1\"},"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR clear -all\", \"\"},"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"convert\", \"convert -d DESCRIPTION -d DESCRIPTION\", \"convert -d SGD -d USD\"},"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"edit\", \"edit INDEX [-d NEW_DESCRIPTION] [-s NEW_SPENDING]\", \"edit 1 -d buy grocery -s $15\"},"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"help\", \"help\", \"\"},"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"list\", \"list\", \"\"},"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR list YEAR\", \"list 2020\"},"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR list YEAR MONTH\", \"list 2020 July\"},"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR list -all\", \"\"},"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"logout\", \"logout\", \"\"},"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"summary\", \"summary\", \"\"},"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR summary [YEAR]\", \"summary 2020\"},"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR summary [YEAR] [MONTH]\", \"summary 2020 July\"},"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"\", \"OR list -all\", \"\"}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    };"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this(new Scanner(System.in), System.out);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Ui(Scanner in, PrintStream out) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.in \u003d in;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(LOGO);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printWelcomeMessage(String filePath) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"Local file path:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        out.println(MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private void drawSeparateLine() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(SEPARATE_LINE_CHAR.repeat(SEPARATE_LINE_LENGTH));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printSpendingList(SpendingList spendingList) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        for (int i \u003d 0; i \u003c spendingList.getListSize(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            out.println(spendingList.getItem(i));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static void printTopBottomBorder() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        System.out.println(BORDER_CORNER + BORDER_HORIZONTAL.repeat(TABLE_SIZE - 2) + BORDER_CORNER);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static void printWithinTableBorder() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        System.out.println(BORDER_HORIZONTAL.repeat(TABLE_SIZE));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printHelp() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        out.println(MESSAGE_HELP);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        printTopBottomBorder();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        for (int i \u003d 0; i \u003c 16; i++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            System.out.format(\"%1s%-10s%1s%-55s%1s%-35s%1s\\n\", BORDER_VERTICAL, TABLE_OF_COMMANDS[i][0],"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    BORDER_VERTICAL, TABLE_OF_COMMANDS[i][1], BORDER_VERTICAL, TABLE_OF_COMMANDS[i][2],"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    BORDER_VERTICAL);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            if (i \u003d\u003d 0 || i \u003d\u003d 1 || i \u003d\u003d 3 || i \u003d\u003d 4 || i \u003d\u003d 5 || i \u003d\u003d 6 || i \u003d\u003d 10 || i \u003d\u003d 11) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                printWithinTableBorder();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        printTopBottomBorder();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printClearIndex(Item item) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"You\u0027ve deleted the record:\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.print(item);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printClearAll() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"You\u0027ve deleted all the records.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printAdd(SpendingList spendingList) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"You\u0027ve added the record:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(spendingList.getItem(spendingList.getListSize() - 1));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public void printConvertCurrency(String outputCurrency) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        out.println(\"The currency has been changed to \" + outputCurrency + \" .\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public void printEdit(SpendingList spendingList, int index) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        out.println(\"You\u0027ve update the record:\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        out.println(spendingList.getItem(index));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        drawSeparateLine();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 73,
      "killingbear999": 13,
      "xieyaoyue": 48,
      "pinfang": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private String symbol;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public AddCommand(String description, String symbol, double amount) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.symbol \u003d symbol;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        spendingList.addItem(description, symbol, amount);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ui.printAdd(spendingList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 1,
      "killingbear999": 5,
      "xieyaoyue": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ClearCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private boolean isClearAll;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private int clearIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public ClearCommand(boolean isClearAll, int clearIndex) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.isClearAll \u003d isClearAll;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if (!isClearAll) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            this.clearIndex \u003d clearIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if (!isClearAll) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            ui.printClearIndex(spendingList.getItem(clearIndex - 1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            spendingList.deleteItem(clearIndex - 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            spendingList.clearAllItems();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            ui.printClearAll();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public abstract void execute(SpendingList spendingList, Ui ui) throws InvalidCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ConvertCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class ConvertCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String currencies;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private String outputCurrency;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private double exchangeRate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public static ArrayList\u003cItem\u003e newSpendingList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /** SGD to USD; USD to SGD; SGD to Yuan; Yuan to SGD. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private final String[][] exchangeRates \u003d {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"SGDUSD\", \"USDSGD\", \"SGDYuan\", \"YuanSGD\"},"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            {\"0.74\", \"1.36\", \"4.99\", \"0.20\"},"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    };"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public ConvertCommand(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private void identifyCurrency(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        int firstBlankSpacePosition \u003d description.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        int secondBlankSpacePosition \u003d description.indexOf(\" \", firstBlankSpacePosition) + 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        int length \u003d description.length();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        String inputCurrency \u003d description.substring(firstBlankSpacePosition, secondBlankSpacePosition);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        outputCurrency \u003d description.substring(secondBlankSpacePosition, length);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        currencies \u003d inputCurrency + outputCurrency;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private void findExchangeRate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            if (exchangeRates[0][i].equals(currencies)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                exchangeRate \u003d Double.parseDouble(exchangeRates[1][i]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        newSpendingList \u003d spendingList.getSpendingList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        identifyCurrency(description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        findExchangeRate();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        for (int i \u003d 0; i \u003c newSpendingList.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            Item currentString \u003d newSpendingList.get(i);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            newSpendingList.remove(i);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            updateNewAmount(currentString);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            updateCurrency(currentString);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            newSpendingList.add(currentString);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        ui.printConvertCurrency(outputCurrency);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private void updateNewAmount(Item currentString) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        double amount \u003d currentString.getAmount();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        amount \u003d amount * exchangeRate;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        currentString.editAmount(amount);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private void updateCurrency(Item currentString) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        switch (currencies) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"SGDUSD\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            currentString.editSymbol(\"$\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"USDSGD\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            currentString.editSymbol(\"S$\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"SGDYuan\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            currentString.editSymbol(\"¥\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"YuanSGD\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            currentString.editSymbol(\"S$\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public ArrayList\u003cItem\u003e updateSpendingList() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return newSpendingList;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "killingbear999": 3,
      "xieyaoyue": 84
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/EditCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private String symbol;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public EditCommand(int index, String description, String symbol, double amount) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        this.symbol \u003d symbol;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        spendingList.editItem(index, description, symbol, amount);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        ui.printEdit(spendingList, index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "killingbear999": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 1,
      "xieyaoyue": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ui.printHelp();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/IncorrectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public IncorrectCommand(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) throws InvalidCommandException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if (!checkValidCommand()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public boolean checkValidCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if (description.startsWith(\"convert\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if (description.startsWith(\"help\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if (description.startsWith(\"add\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if (description.startsWith(\"edit\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if (description.startsWith(\"clear\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if (description.startsWith(\"summary\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if (description.startsWith(\"logout\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/SummaryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.SpendingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class SummaryCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String year;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String month;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String period;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public SummaryCommand(String year, String month) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            this.year \u003d year;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            this.month \u003d changeMonthFormat(month);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            period \u003d year + \"-\" + month;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            // ui.showError(\"No such month.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public SummaryCommand(String year) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        period \u003d year;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public SummaryCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.year \u003d getCurrentYear();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.month \u003d getCurrentMonth();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        period \u003d year + \"-\" + month;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(SpendingList spendingList, Ui ui) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        double amountSpent \u003d spendingList.getSpendingAmount(period);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        // ui.showSummary(amountSpent);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String currentDate() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return date.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String getCurrentMonth() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return currentDate().substring(6, 7);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String getCurrentYear() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return currentDate().substring(0, 3);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String changeMonthFormat(String month) throws Exception {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        String newFormat;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        HashMap\u003cString, String\u003e months \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Jan\", \"01\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Feb\", \"02\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Mar\", \"03\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Apr\", \"04\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"May\", \"05\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Jun\", \"06\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Jul\", \"07\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Aug\", \"08\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Sep\", \"09\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Oct\", \"10\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Nov\", \"11\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        months.put(\"Dec\", \"12\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if (months.containsKey(month)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            newFormat \u003d months.get(month);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new Exception();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return newFormat;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 83
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        System.out.println(\"Sorry, the command input is invalid. Please re-enter a new command.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "killingbear999": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidStorageFilePathException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "public class InvalidStorageFilePathException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public InvalidStorageFilePathException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        System.out.println(\"Sorry, the file path is invalid.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "killingbear999": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/StorageOperationException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "killingbear999"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "public class StorageOperationException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    public StorageOperationException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "        System.out.println(\"Sorry, the system fails to store the information.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "killingbear999": 7
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest2.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "class DukeTest2 {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "chcp 65001"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pinfang"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pinfang"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "javac -encoding utf-8 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\seedu\\duke\\*.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pinfang"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pinfang"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pinfang"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pinfang"
        },
        "content": "java -classpath ..\\bin seedu.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pinfang"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pinfang"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "pinfang": 19,
      "-": 5
    }
  }
]
