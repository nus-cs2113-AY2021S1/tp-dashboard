[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"    implementation \u0027junit:junit:4.12\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"    implementation \u0027commons-cli:commons-cli:1.4\u0027"},{"lineNumber":18,"author":{"gitId":"Wu-Haitao"},"content":"    compile \"org.apache.poi:poi:4.1.2\"\t     // For `.xls` files"},{"lineNumber":19,"author":{"gitId":"Wu-Haitao"},"content":"    compile \"org.apache.poi:poi-ooxml:4.1.2\"\t // For `.xlsx` files"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":51,"author":{"gitId":"pinfang"},"content":"    enableAssertions \u003d true"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Wu-Haitao":2,"k-walter":3,"-":46,"pinfang":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"pinfang"},"content":"|Display | Name | Github Profile | Portfolio |"},{"lineNumber":4,"author":{"gitId":"pinfang"},"content":"|--------|:----:|:--------------:|:---------:|"},{"lineNumber":5,"author":{"gitId":"pinfang"},"content":"|![](https://via.placeholder.com/100.png?text\u003dPhoto) | Xie Yaoyue | [Github](https://github.com/xieyaoyue) | [Portfolio](team/xieyaoyue.md)|"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"|![](https://via.placeholder.com/100.png?text\u003dPhoto) | Walter Kong | [Github](https://github.com/k-walter) | [Portfolio](team/k-walter.md)|"},{"lineNumber":7,"author":{"gitId":"Wu-Haitao"},"content":"|![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wu Haitao | [Github](https://github.com/Wu-Haitao) | [Portfolio](team/wu-haitao.md)|"},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":"|![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yen Pin Fang | [Github](https://github.com/pinfang) | [Portfolio](team/pinfang.md)|"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"|![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Zihao | [Github](https://github.com/killingbear999) | [Portfolio](team/killingbear999.md)|"}],"authorContributionMap":{"Wu-Haitao":1,"k-walter":1,"killingbear999":1,"-":2,"pinfang":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"pinfang"},"content":"![cover page](images/CentWiseDollarWise.png)"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"pinfang"},"content":"-----"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"pinfang"},"content":"## Content Page"},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":"1. [Introduction](#1-introduction)"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":"2. [Setting Up](#2-setting-up)"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":"    2.1 [Prerequisites](#21-prerequisites)"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"pinfang"},"content":"    2.2 [Setting Up the Project in your Computer](#22-setting-up-the-project-in-your-computer)"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"pinfang"},"content":"    2.3 [Verifying the Setup](#23-verifying-the-setup)"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"pinfang"},"content":"3. [Design](#3-design)"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"pinfang"},"content":"    3.1 [Architecture](#31-architecture)"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"pinfang"},"content":"    3.2 [UI Component](#32-ui-component)"},{"lineNumber":22,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":23,"author":{"gitId":"pinfang"},"content":"    3.3 [Parser Component](#33-parser-component)"},{"lineNumber":24,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":25,"author":{"gitId":"pinfang"},"content":"    3.4 [Command Component](#34-command-component)"},{"lineNumber":26,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":27,"author":{"gitId":"pinfang"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.4.1 [CLI `Command`s related to Spending List](#341-cli-commands-related-to-spending-list)"},{"lineNumber":28,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":29,"author":{"gitId":"pinfang"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.4.2 [CLI `Command`s related to Repayment List](#342-cli-commands-related-to-repayment-list)"},{"lineNumber":30,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":31,"author":{"gitId":"pinfang"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.4.3 [CLI `Command`s related to Budget](#343-cli-commands-related-to-budget)"},{"lineNumber":32,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":33,"author":{"gitId":"pinfang"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.4.4 [General CLI `Command`s](#344-general-cli-commands)"},{"lineNumber":34,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":35,"author":{"gitId":"pinfang"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.4.5 [Hidden `Command`s](#345-hidden-commands)"},{"lineNumber":36,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":37,"author":{"gitId":"pinfang"},"content":"    3.5 [Data Component](#35-data-component)"},{"lineNumber":38,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":39,"author":{"gitId":"pinfang"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.5.1 [Spending List](#351-spending-list)"},{"lineNumber":40,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":41,"author":{"gitId":"pinfang"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.5.2 [Repayment List](#352-repayment-list)"},{"lineNumber":42,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":43,"author":{"gitId":"k-walter"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.5.3 [Budget](#353-budget)"},{"lineNumber":44,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":45,"author":{"gitId":"pinfang"},"content":"    3.6 [Storage Component](#36-storage-component)"},{"lineNumber":46,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":47,"author":{"gitId":"pinfang"},"content":"4. [Implementation](#4-implementation)"},{"lineNumber":48,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":49,"author":{"gitId":"pinfang"},"content":"    4.1 [Add Feature](#41-add-feature)"},{"lineNumber":50,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":51,"author":{"gitId":"pinfang"},"content":"    4.2 [Clear Feature](#42-clear-feature)"},{"lineNumber":52,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":53,"author":{"gitId":"pinfang"},"content":"    4.3 [Edit Feature](#43-edit-feature)"},{"lineNumber":54,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":55,"author":{"gitId":"pinfang"},"content":"    4.4 [Convert Feature](#44-convert-feature)"},{"lineNumber":56,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":57,"author":{"gitId":"pinfang"},"content":"    4.5 [Set Budget Feature](#45-set-budget-feature)"},{"lineNumber":58,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":59,"author":{"gitId":"pinfang"},"content":"    4.6 [Warn Feature](#46-warn-feature)"},{"lineNumber":60,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":61,"author":{"gitId":"pinfang"},"content":"    4.7 [Repay Feature](#47-repay-feature)"},{"lineNumber":62,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":63,"author":{"gitId":"pinfang"},"content":"    4.8 [Summary Feature](#48-summary-feature)"},{"lineNumber":64,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":65,"author":{"gitId":"pinfang"},"content":"    4.9 [Reminder Feature](#49-reminder-feature)"},{"lineNumber":66,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":67,"author":{"gitId":"pinfang"},"content":"    4.10 [Encouragement Feature](#410-encouragement-feature)"},{"lineNumber":68,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":69,"author":{"gitId":"pinfang"},"content":"    4.11 [Export Feature](#411-export-feature)"},{"lineNumber":70,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":71,"author":{"gitId":"pinfang"},"content":"    4.12 [Draw Feature](#412-draw-feature)"},{"lineNumber":72,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":73,"author":{"gitId":"pinfang"},"content":"5. [Dev Ops](#5-dev-ops)"},{"lineNumber":74,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":75,"author":{"gitId":"pinfang"},"content":"    5.1 [Build Automation](#51-build-automation)"},{"lineNumber":76,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":77,"author":{"gitId":"pinfang"},"content":"    5.2 [Continuous Integration](#52-continuous-integration-ci)"},{"lineNumber":78,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":79,"author":{"gitId":"pinfang"},"content":"    5.3 [Making a Release](#53-making-a-release)"},{"lineNumber":80,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":81,"author":{"gitId":"pinfang"},"content":"    5.4 [Coverage Reporting](#54-coverage-reporting)"},{"lineNumber":82,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":83,"author":{"gitId":"pinfang"},"content":"Appendix A: [About the Product](#appendix-a-about-the-product)"},{"lineNumber":84,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":85,"author":{"gitId":"pinfang"},"content":"Appendix B: [User Stories](#appendix-b-user-stories)"},{"lineNumber":86,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":87,"author":{"gitId":"pinfang"},"content":"Appendix C: [Non-Functional Requirements](#appendix-c-non-functional-requirements)"},{"lineNumber":88,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":89,"author":{"gitId":"pinfang"},"content":"Appendix D: [Glossary](#appendix-d-glossary)"},{"lineNumber":90,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":91,"author":{"gitId":"pinfang"},"content":"Appendix E: [Instructions for Manual Testing](#appendix-e-instructions-for-manual-testing)"},{"lineNumber":92,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":93,"author":{"gitId":"pinfang"},"content":"------"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"xieyaoyue"},"content":"## 1. Introduction"},{"lineNumber":96,"author":{"gitId":"xieyaoyue"},"content":"Cent Wise Dollar Wise is a desktop application for money management, optimised for use via a Command Line Interface (CLI). This application aims to help NUS hostel students manage their financial situation and track their spending efficiently. "},{"lineNumber":97,"author":{"gitId":"pinfang"},"content":"This developer guide provides information on the architecture and design of the application. It will not only help you get started as a Cent Wise Dollar Wise contributor, but that you will find useful to refer to even if you are already a contributor of this project. "},{"lineNumber":98,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":99,"author":{"gitId":"xieyaoyue"},"content":"## 2. Setting Up"},{"lineNumber":100,"author":{"gitId":"xieyaoyue"},"content":"### 2.1 Prerequisites"},{"lineNumber":101,"author":{"gitId":"xieyaoyue"},"content":"- JDK 11 \u003cbr\u003e"},{"lineNumber":102,"author":{"gitId":"xieyaoyue"},"content":"- IntelliJ IDE \u003cbr\u003e"},{"lineNumber":103,"author":{"gitId":"k-walter"},"content":"Note: IntelliJ by default has Gradle and JavaFx plugins installed. \u003cbr\u003e"},{"lineNumber":104,"author":{"gitId":"k-walter"},"content":"Note: Do not disable them. If you have disabled them, go to File \u003e Settings \u003e Plugins to re-enable them."},{"lineNumber":105,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":106,"author":{"gitId":"xieyaoyue"},"content":"### 2.2 Setting Up the Project in your Computer"},{"lineNumber":107,"author":{"gitId":"xieyaoyue"},"content":"The following are the steps to set up the project on your computer:"},{"lineNumber":108,"author":{"gitId":"xieyaoyue"},"content":"1. Fork this repo, and clone the fork to your computer."},{"lineNumber":109,"author":{"gitId":"xieyaoyue"},"content":"2. Open IntelliJ. If you are not on the welcome screen, click File \u003e Close Project to close the existing project dialog first."},{"lineNumber":110,"author":{"gitId":"xieyaoyue"},"content":"3. Set up the correct JDK version for Gradle."},{"lineNumber":111,"author":{"gitId":"xieyaoyue"},"content":"4. Click Configure \u003e Project Defaults \u003e Project Structure."},{"lineNumber":112,"author":{"gitId":"xieyaoyue"},"content":"5. Click New…​ and find the directory of the JDK."},{"lineNumber":113,"author":{"gitId":"xieyaoyue"},"content":"6. Click Import Project."},{"lineNumber":114,"author":{"gitId":"xieyaoyue"},"content":"7. Locate the build.gradle file and select it. Click OK"},{"lineNumber":115,"author":{"gitId":"xieyaoyue"},"content":"8. Click Open as Project"},{"lineNumber":116,"author":{"gitId":"xieyaoyue"},"content":"9. Click OK to accept the default settings"},{"lineNumber":117,"author":{"gitId":"xieyaoyue"},"content":"10. Open a console and run the command `gradlew processResources` (Mac/Linux: `./gradlew processResources`). It should finish with the BUILD SUCCESSFUL message. This will generate all resources required by the application and tests."},{"lineNumber":118,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":119,"author":{"gitId":"xieyaoyue"},"content":"### 2.3 Verifying the Setup"},{"lineNumber":120,"author":{"gitId":"xieyaoyue"},"content":"The following are the steps to verify your setup:"},{"lineNumber":121,"author":{"gitId":"xieyaoyue"},"content":"1. Run the seedu.duke.Duke and try a few commands."},{"lineNumber":122,"author":{"gitId":"xieyaoyue"},"content":"2. Run the tests and ensure all the tests pass."},{"lineNumber":123,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":124,"author":{"gitId":"xieyaoyue"},"content":"## 3. Design"},{"lineNumber":125,"author":{"gitId":"xieyaoyue"},"content":"### 3.1 Architecture"},{"lineNumber":126,"author":{"gitId":"k-walter"},"content":"![image](images/architecture.png) \u003cbr\u003e"},{"lineNumber":127,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":128,"author":{"gitId":"k-walter"},"content":"The architecture diagram above explains the high-level design of the application. Below is a quick overview of each component:"},{"lineNumber":129,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":130,"author":{"gitId":"xieyaoyue"},"content":"`Main`: Initializes spending list at app launch and coordinates the interaction between other components"},{"lineNumber":131,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":132,"author":{"gitId":"xieyaoyue"},"content":"`Data`: Stores the data collected from the user"},{"lineNumber":133,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":134,"author":{"gitId":"k-walter"},"content":"`Storage`: Reads data from and writes data to the hard disk"},{"lineNumber":135,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":136,"author":{"gitId":"xieyaoyue"},"content":"`Ui`: Interacts with the user"},{"lineNumber":137,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":138,"author":{"gitId":"xieyaoyue"},"content":"`Command`: Executes the user command or system-issued command"},{"lineNumber":139,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":140,"author":{"gitId":"xieyaoyue"},"content":"`Parser`: Analyzes the user command"},{"lineNumber":141,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":142,"author":{"gitId":"xieyaoyue"},"content":"`Utilities`: Contains classes that are used by multiple components"},{"lineNumber":143,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":144,"author":{"gitId":"xieyaoyue"},"content":"**How the Architecture Components Interact with Each Other** \u003cbr\u003e"},{"lineNumber":145,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":146,"author":{"gitId":"xieyaoyue"},"content":"The sequence diagram below shows how the components interact with each other when the user issues a general command. \u003cbr\u003e"},{"lineNumber":147,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":148,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"https://user-images.githubusercontent.com/45732128/97735507-62c0d580-1b15-11eb-9f14-aab54bf5b29d.png\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":149,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":150,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":151,"author":{"gitId":"xieyaoyue"},"content":"### 3.2 UI Component"},{"lineNumber":152,"author":{"gitId":"xieyaoyue"},"content":"This component, consisting of the `Ui` class, is responsible for receiving user input and displaying appropriate output messages for the user. This includes error messages, warning messages, encouragement quotes, and messages that indicate if a command is successfully executed. "},{"lineNumber":153,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":154,"author":{"gitId":"xieyaoyue"},"content":"### 3.3 Parser Component"},{"lineNumber":155,"author":{"gitId":"k-walter"},"content":"Parser component is responsible for interpreting given input as a command.  It verifies that the format complies with [User Guide](UserGuide.md) specification. Then, it matches the appropriate command or error, and formats the provided arguments into parameters for internal methods."},{"lineNumber":156,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":157,"author":{"gitId":"k-walter"},"content":"Each command can take either no argument or some arguments. Commands taking no arguments will call `checkRemainingCommands()` to verify correct input format. Commands with arguments will extend `Parser` superclass and implement 2 methods:"},{"lineNumber":158,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":159,"author":{"gitId":"k-walter"},"content":"* `Parser()` to initialise `Parser` subclass with the expected arguments for the detected command"},{"lineNumber":160,"author":{"gitId":"k-walter"},"content":"* `parse(String[] args)` verifies argument format and returns the appropriate `Exception` or `Command` subclass instance with their formatted arguments."},{"lineNumber":161,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":162,"author":{"gitId":"xieyaoyue"},"content":"### 3.4 Command Component"},{"lineNumber":163,"author":{"gitId":"xieyaoyue"},"content":"Every command that a user can input into the application is represented by an object that extends the abstract class `Command`. In addition, hidden commands that do not require user inputs also extends from the same abstract class `Command`. `Command` contains some basic methods that are shared by all types of commands, including:"},{"lineNumber":164,"author":{"gitId":"k-walter"},"content":"* `execute()`, which is called after setting up the object appropriately, to perform the action requested by the user; and"},{"lineNumber":165,"author":{"gitId":"k-walter"},"content":"* `isExit()`, which returns a boolean that indicates whether the program should terminate after the command is executed."},{"lineNumber":166,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":167,"author":{"gitId":"xieyaoyue"},"content":"The following sections classify the `Command`s into different types based on their functionality within the application."},{"lineNumber":168,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":169,"author":{"gitId":"xieyaoyue"},"content":"#### 3.4.1 CLI `Command`s related to Spending List"},{"lineNumber":170,"author":{"gitId":"xieyaoyue"},"content":"The following class diagram describes the CLI `Command`s specifically related to the spending list. \u003cbr\u003e"},{"lineNumber":171,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":172,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/CommandsSpendingListClass.png\" width\u003d\"600\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":173,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":174,"author":{"gitId":"xieyaoyue"},"content":"#### 3.4.2 CLI `Command`s related to Repayment List"},{"lineNumber":175,"author":{"gitId":"xieyaoyue"},"content":"The following class diagram describes the CLI `Command`s specifically related to the repayment list. \u003cbr\u003e"},{"lineNumber":176,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":177,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/CommandsRepaymentListClass.png\" width\u003d\"500\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":178,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":179,"author":{"gitId":"xieyaoyue"},"content":"#### 3.4.3 CLI `Command`s related to Budget"},{"lineNumber":180,"author":{"gitId":"xieyaoyue"},"content":"The following class diagram describes the CLI `Command`s specifically related to the budget. \u003cbr\u003e"},{"lineNumber":181,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":182,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/CommandsBudgetClass.png\" width\u003d\"500\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":183,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":184,"author":{"gitId":"xieyaoyue"},"content":"#### 3.4.4 General CLI `Command`s "},{"lineNumber":185,"author":{"gitId":"xieyaoyue"},"content":"The following class diagram describes general CLI `Command`s that apply to the whole application. \u003cbr\u003e"},{"lineNumber":186,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":187,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/GeneralCLICommandsClass.png\" width\u003d\"400\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":188,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":189,"author":{"gitId":"xieyaoyue"},"content":"#### 3.4.5 Hidden `Command`s"},{"lineNumber":190,"author":{"gitId":"xieyaoyue"},"content":"The following class diagram describes the hidden commands within the program. \u003cbr\u003e"},{"lineNumber":191,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":192,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/HiddenCommandsClass.png\" width\u003d\"600\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":193,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":194,"author":{"gitId":"xieyaoyue"},"content":"### 3.5 Data Component"},{"lineNumber":195,"author":{"gitId":"k-walter"},"content":"This component holds the data of the application, including the `SpendingList`, `RepaymentList` and `Budget` class in the memory."},{"lineNumber":196,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":197,"author":{"gitId":"pinfang"},"content":"#### 3.5.1 Spending List"},{"lineNumber":198,"author":{"gitId":"k-walter"},"content":"The SpendingList class stores a list of `Item` objects that the user has spent. The `SpendingList` does not depend on Ui, Parser and Storage components. "},{"lineNumber":199,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":200,"author":{"gitId":"k-walter"},"content":"below shows a class diagram of how `SpendingList` interacts with other classes. \u003cbr\u003e"},{"lineNumber":201,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":202,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/spendingListClass.png\" width\u003d\"400\" align\u003d\"center\"\u003e"},{"lineNumber":203,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":204,"author":{"gitId":"pinfang"},"content":"#### 3.5.2 Repayment List"},{"lineNumber":205,"author":{"gitId":"k-walter"},"content":"The RepaymentList class stores a list of `Repay` objects. Similar to SpendingList class, RepaymentList class does not depend on other components. "},{"lineNumber":206,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":207,"author":{"gitId":"k-walter"},"content":"below shows a class diagram of how `RepaymentList` interacts with other classes. \u003cbr\u003e"},{"lineNumber":208,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":209,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/repaymentListClass.png\" width\u003d\"400\" align\u003d\"center\"\u003e"},{"lineNumber":210,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":211,"author":{"gitId":"k-walter"},"content":"#### 3.5.3 Budget"},{"lineNumber":212,"author":{"gitId":"k-walter"},"content":"The Budget class stores the budget in the specified currency and the date it was updated. Similar to SpendingList class, Budget class does not "},{"lineNumber":213,"author":{"gitId":"k-walter"},"content":"depend on other components. "},{"lineNumber":214,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":215,"author":{"gitId":"k-walter"},"content":"below shows a class diagram of how `Budget` interacts with other classes. \u003cbr\u003e"},{"lineNumber":216,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":217,"author":{"gitId":"k-walter"},"content":"\u003cimg src\u003d\"images/budgetClass.png\" width\u003d\"400\" align\u003d\"center\"\u003e"},{"lineNumber":218,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":219,"author":{"gitId":"xieyaoyue"},"content":"### 3.6 Storage Component"},{"lineNumber":220,"author":{"gitId":"k-walter"},"content":"Storage component persists user data across sessions by storing data in a `.json` file. To avoid coupling between unrelated components (e.g. `Ui` and `Item`), objects are persisted by reflection of their variables and methods. Thus, only `SpendingList`, `RepaymentList` and `Budget` maintain instances of `Storage` to trigger writes to file upon changes in their memory."},{"lineNumber":221,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":222,"author":{"gitId":"k-walter"},"content":"Since this component relies on the external package `com.google.code.gson:gson:2.8.6` for reflection, we encapsulate gson methods in the following class diagram: \u003cbr\u003e"},{"lineNumber":223,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":224,"author":{"gitId":"k-walter"},"content":"\u003cimg src\u003d\"images/storageClass.png\" width\u003d\"400\" align\u003d\"center\"\u003e"},{"lineNumber":225,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":226,"author":{"gitId":"pinfang"},"content":"## 4. Implementation"},{"lineNumber":227,"author":{"gitId":"xieyaoyue"},"content":"### 4.1 Add Feature"},{"lineNumber":228,"author":{"gitId":"xieyaoyue"},"content":"`SpendingList`, `SpendingListCategoriser` and `Ui` facilitate this feature. The Add feature is able to add a new item into the spending list. It implements the following operations:"},{"lineNumber":229,"author":{"gitId":"k-walter"},"content":"* `AmountConverter#updateAmount` → converts amount to SGD"},{"lineNumber":230,"author":{"gitId":"k-walter"},"content":"* `AmountConverter#updateCurrency` → updates currency to SGD"},{"lineNumber":231,"author":{"gitId":"xieyaoyue"},"content":"* `SpendingList#addItem` → adds item into the spending list"},{"lineNumber":232,"author":{"gitId":"xieyaoyue"},"content":"* `Ui#printAdd` → prints the message that the item is successfully added into the spending list"},{"lineNumber":233,"author":{"gitId":"xieyaoyue"},"content":"* `SpendingListCategoriser#execute`→ categorises the item in the spending list"},{"lineNumber":234,"author":{"gitId":"xieyaoyue"},"content":"* `WarnCommand#execute` → prints a warning message if total spending amount approaches the threshold of 90% of the budget limit or when the total spending amount exceeds the budget limit"},{"lineNumber":235,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":236,"author":{"gitId":"xieyaoyue"},"content":"Below shows an example of usage:"},{"lineNumber":237,"author":{"gitId":"k-walter"},"content":"1. User types `add -c food -d beer -s USD 10` to add beer into the spending list"},{"lineNumber":238,"author":{"gitId":"xieyaoyue"},"content":"2. The `add` command calls `AddCommand#execute`"},{"lineNumber":239,"author":{"gitId":"xieyaoyue"},"content":"3. `AddCommand#execute` calls the following operations in order:"},{"lineNumber":240,"author":{"gitId":"k-walter"},"content":"   1. `AmountConverter#updateAmount` to convert the amount “10” to SGD"},{"lineNumber":241,"author":{"gitId":"k-walter"},"content":"   2. `AmountConverter#updateCurrency` to update the currency from “USD” to “SGD”"},{"lineNumber":242,"author":{"gitId":"k-walter"},"content":"   3. `SpendingList#addItem` to add beer into the spending list"},{"lineNumber":243,"author":{"gitId":"k-walter"},"content":"   4. `Ui#printAdd` to print a message if beer is successfully added into the spending list"},{"lineNumber":244,"author":{"gitId":"k-walter"},"content":"   5. `SpendingListCategoriser#execute` to categorise beer under the food category of the spending list"},{"lineNumber":245,"author":{"gitId":"k-walter"},"content":"   6. `WarnCommand#execute` to print a warning message if required"},{"lineNumber":246,"author":{"gitId":"xieyaoyue"},"content":"   "},{"lineNumber":247,"author":{"gitId":"xieyaoyue"},"content":"The following sequence diagram illustrates how this feature works. \u003cbr\u003e"},{"lineNumber":248,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":249,"author":{"gitId":"killingbear999"},"content":"![image](images/AddCommand.png) \u003cbr\u003e"},{"lineNumber":250,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":251,"author":{"gitId":"xieyaoyue"},"content":"### 4.2 Clear Feature"},{"lineNumber":252,"author":{"gitId":"xieyaoyue"},"content":"`SpendingList`, `RepaymentList` and `Budget` facilitate this feature. The Clear feature is able to clear existing data (either budget, repayment entries, spending entries, or all), according to the user’s command. It implements the following operations:"},{"lineNumber":253,"author":{"gitId":"xieyaoyue"},"content":"* `ClearBudgetCommand#execute` → clears budget and prints message output"},{"lineNumber":254,"author":{"gitId":"xieyaoyue"},"content":"* `ClearSpendingListCommand#execute` → clears spending list and prints message output"},{"lineNumber":255,"author":{"gitId":"xieyaoyue"},"content":"* `ClearRepaymentListCommand#execute` → clears repayment list and prints message output"},{"lineNumber":256,"author":{"gitId":"xieyaoyue"},"content":"* `PurgeDataCommand#execute` → clears all data from budget, spending list and repayment list, and prints message output"},{"lineNumber":257,"author":{"gitId":"xieyaoyue"},"content":"* `Budget#clearBudget` → clears budget"},{"lineNumber":258,"author":{"gitId":"xieyaoyue"},"content":"* `RepaymentList#deleteRepaymentEntry` → deletes a particular entry of the repayment list"},{"lineNumber":259,"author":{"gitId":"xieyaoyue"},"content":"* `RepaymentList#clearAllEntries` → clears all entries of the repayment list"},{"lineNumber":260,"author":{"gitId":"xieyaoyue"},"content":"* `Ui#printClearAllRepaymentList` → prints the message that all entries in the repayment list are cleared"},{"lineNumber":261,"author":{"gitId":"xieyaoyue"},"content":"* `SpendingList#deleteItem` → deletes a particular entry of the spending list"},{"lineNumber":262,"author":{"gitId":"xieyaoyue"},"content":"* `SpendingList#clearAllItems` → clears all entries of the spending list"},{"lineNumber":263,"author":{"gitId":"xieyaoyue"},"content":"* `Ui#printClearAllSpendingList` → prints the message that all entries in the spending list are cleared"},{"lineNumber":264,"author":{"gitId":"xieyaoyue"},"content":"* `Ui#printClearIndex` → prints the message that an entry is cleared from either the repayment list or the spending list"},{"lineNumber":265,"author":{"gitId":"xieyaoyue"},"content":"* `Ui#printPurgeData` → prints the message that all data is cleared"},{"lineNumber":266,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":267,"author":{"gitId":"xieyaoyue"},"content":"Below shows an example of usage:"},{"lineNumber":268,"author":{"gitId":"xieyaoyue"},"content":"1. User types `clear -s 1` to clear the first entry in the spending list."},{"lineNumber":269,"author":{"gitId":"xieyaoyue"},"content":"2. ClearSpendingListCommand calls `ClearSpendingListCommand#execute`, which calls the following operations in order:"},{"lineNumber":270,"author":{"gitId":"k-walter"},"content":"   1. `SpendingList#clearAllItems` to clear all items in the spending list and saves the updated spending list in storage."},{"lineNumber":271,"author":{"gitId":"k-walter"},"content":"   2. `Ui#printClearAllSpendingList` to print a message if the spending list is cleared successfully"},{"lineNumber":272,"author":{"gitId":"xieyaoyue"},"content":"   "},{"lineNumber":273,"author":{"gitId":"xieyaoyue"},"content":"The following sequence diagram illustrates how clearing a spending list works. \u003cbr\u003e"},{"lineNumber":274,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":275,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/ClearCommand.png\" width\u003d\"400\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":276,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":277,"author":{"gitId":"xieyaoyue"},"content":"### 4.3 Edit Feature"},{"lineNumber":278,"author":{"gitId":"killingbear999"},"content":"`SpendingList`, `AmountConverter`, `DecimalFormatter` and `Ui` facilitate this feature. The Edit feature is able to edit the existing items in the spending list. "},{"lineNumber":279,"author":{"gitId":"killingbear999"},"content":"It implements the following operations:"},{"lineNumber":280,"author":{"gitId":"xieyaoyue"},"content":"* `EditCommand#execute` → edit the spending list accordingly and calls the Ui to print message output"},{"lineNumber":281,"author":{"gitId":"xieyaoyue"},"content":"* `SpendingList#editItemDescription` → updates the description of the item in the spending list"},{"lineNumber":282,"author":{"gitId":"xieyaoyue"},"content":"* `SpendingList#editItemCategory` → updates the category of the item in the spending list"},{"lineNumber":283,"author":{"gitId":"xieyaoyue"},"content":"* `SpendingList#editItemAmount` → updates the amount of the item in the spending list"},{"lineNumber":284,"author":{"gitId":"killingbear999"},"content":"* `AmountConverter#updateAmount` → converts the amount based on the default currency"},{"lineNumber":285,"author":{"gitId":"killingbear999"},"content":"* `AmountConverter#updateCurrency` → converts the currency to the default currency"},{"lineNumber":286,"author":{"gitId":"killingbear999"},"content":"* `DecimalFormatter#convert` → converts the amount to 4 d.p."},{"lineNumber":287,"author":{"gitId":"xieyaoyue"},"content":"* `Ui#printEdit` → prints the message to show the successful completion of the edition process"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"killingbear999"},"content":"Below shows an example of the usage:"},{"lineNumber":290,"author":{"gitId":"killingbear999"},"content":"1. User executes `edit 1 bubble tea` command to edit the first item in the spending list to bubble tea"},{"lineNumber":291,"author":{"gitId":"xieyaoyue"},"content":"2. The `edit` command calls the `EditCommand#execute` to complete the edition process"},{"lineNumber":292,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":293,"author":{"gitId":"xieyaoyue"},"content":"The following sequence diagram illustrates how this feature works. \u003cbr\u003e"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/EditCommand.png\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":296,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":297,"author":{"gitId":"xieyaoyue"},"content":"### 4.4 Convert Feature"},{"lineNumber":298,"author":{"gitId":"killingbear999"},"content":"`SpendingList` and `Ui` facilitate this feature. The Convert feature is able to convert the currency of the items "},{"lineNumber":299,"author":{"gitId":"killingbear999"},"content":"stored in the spending list. It implements the following operations:"},{"lineNumber":300,"author":{"gitId":"xieyaoyue"},"content":"* `ConvertCommand#execute` → converts currency and calls the ui to print message output"},{"lineNumber":301,"author":{"gitId":"xieyaoyue"},"content":"* `SpendingList#getSpendingList` → retrieves the current spending list"},{"lineNumber":302,"author":{"gitId":"xieyaoyue"},"content":"* `ConvertCommand#identifyCurrency` → identifies the currency after conversion"},{"lineNumber":303,"author":{"gitId":"xieyaoyue"},"content":"* `ConvertCommand#findExchangeRate` → finds the corresponding exchange rate"},{"lineNumber":304,"author":{"gitId":"killingbear999"},"content":"* `ConvertCommand#updateList` → updates the new amount and the new currency after conversion"},{"lineNumber":305,"author":{"gitId":"xieyaoyue"},"content":"* `SpendingList#updateSpendingList` → updates the spending list after conversion "},{"lineNumber":306,"author":{"gitId":"killingbear999"},"content":"* `ConvertCommand#updateBudgetList` → updates the budget limit after conversion "},{"lineNumber":307,"author":{"gitId":"xieyaoyue"},"content":"* `Ui#printConvertCurrency` → prints the message to show the successful completion of the conversion "},{"lineNumber":308,"author":{"gitId":"killingbear999"},"content":"process"},{"lineNumber":309,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":310,"author":{"gitId":"killingbear999"},"content":"Below shows an example of the usage:"},{"lineNumber":311,"author":{"gitId":"killingbear999"},"content":"1. User executes `convert SGD USD` command to convert the currency from SGD to USD"},{"lineNumber":312,"author":{"gitId":"xieyaoyue"},"content":"2. The `convert` command calls the `ConvertCommand#execute` to complete the conversion process"},{"lineNumber":313,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":314,"author":{"gitId":"xieyaoyue"},"content":"The following sequence diagram illustrates how this feature works. \u003cbr\u003e"},{"lineNumber":315,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":316,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/ConvertCommand.png\" width\u003d\"500\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"xieyaoyue"},"content":"### 4.5 Set Budget Feature"},{"lineNumber":319,"author":{"gitId":"killingbear999"},"content":"`Budget`, `AmountConverter` , `DecimalFormatter` and `Ui` facilitate this feature. The Set Budget feature is able to set the budget limit for the spending. "},{"lineNumber":320,"author":{"gitId":"killingbear999"},"content":"It implements the following operations:"},{"lineNumber":321,"author":{"gitId":"killingbear999"},"content":"* `AmountConverter#updateAmount` → converts the budget limit based on the default currency"},{"lineNumber":322,"author":{"gitId":"killingbear999"},"content":"* `AmountConverter#updateCurrency` → converts the currency to the default currency"},{"lineNumber":323,"author":{"gitId":"killingbear999"},"content":"* `DecimalFormatter#convert` → converts the budget limit to 4 d.p."},{"lineNumber":324,"author":{"gitId":"xieyaoyue"},"content":"* `Budget#addBudget` → stores the budget limit with its corresponding currency"},{"lineNumber":325,"author":{"gitId":"xieyaoyue"},"content":"* `Ui#printBudgetLimit` → prints the message to show the successful completion of the setting "},{"lineNumber":326,"author":{"gitId":"killingbear999"},"content":"budget process"},{"lineNumber":327,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":328,"author":{"gitId":"killingbear999"},"content":"Below shows an example of usage:"},{"lineNumber":329,"author":{"gitId":"killingbear999"},"content":"1. User executes `set SGD 100.0` to set the budget limit to SGD 100.0"},{"lineNumber":330,"author":{"gitId":"xieyaoyue"},"content":"2. The `set` command calls `SetBudgetCommand#execute` to complete the set budget process"},{"lineNumber":331,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":332,"author":{"gitId":"xieyaoyue"},"content":"The following sequence diagram illustrates how this feature works. \u003cbr\u003e"},{"lineNumber":333,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":334,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/SetBudgetCommand.png\" width\u003d\"700\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":335,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":336,"author":{"gitId":"xieyaoyue"},"content":"### 4.6 Warn Feature"},{"lineNumber":337,"author":{"gitId":"killingbear999"},"content":"`Budget`, `SpendingList` and `Ui` facilitate this feature. The Warn feature is able to warn the user when the total "},{"lineNumber":338,"author":{"gitId":"killingbear999"},"content":"spending amount approaches the threshold of 90% of the budget limit or when the total spending amount exceeds "},{"lineNumber":339,"author":{"gitId":"killingbear999"},"content":"the budget limit. It implements the following operations:"},{"lineNumber":340,"author":{"gitId":"xieyaoyue"},"content":"* `Budget#getCurrency` → retrieves the corresponding currency for the budget"},{"lineNumber":341,"author":{"gitId":"xieyaoyue"},"content":"* `Budget#getBudgetLimit` → retrieves the budget limit"},{"lineNumber":342,"author":{"gitId":"xieyaoyue"},"content":"* `SpendingList#getCurrentAmount` → gets the total amount of spending in the spending list"},{"lineNumber":343,"author":{"gitId":"xieyaoyue"},"content":"* `Ui#printApproachingWarningMessage` → prints the warning message that the spending "},{"lineNumber":344,"author":{"gitId":"xieyaoyue"},"content":"is approaching the budget limit (i.e. exceeds the threshold value of 90% of the budget limit but not yet exceed it), with "},{"lineNumber":345,"author":{"gitId":"killingbear999"},"content":"the amount remaining"},{"lineNumber":346,"author":{"gitId":"xieyaoyue"},"content":"* `Ui#printExceedingWarningMessage` → prints the warning message that the spending has exceeded the budget limit"},{"lineNumber":347,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":348,"author":{"gitId":"killingbear999"},"content":"Below shows an example of usage:"},{"lineNumber":349,"author":{"gitId":"killingbear999"},"content":"1. User adds the spending to the spending list after setting the budget limit"},{"lineNumber":350,"author":{"gitId":"xieyaoyue"},"content":"2. The `add` command calls `WarnCommand#execute` to check if the user approaches or exceeds the budget "},{"lineNumber":351,"author":{"gitId":"killingbear999"},"content":"limit "},{"lineNumber":352,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":353,"author":{"gitId":"xieyaoyue"},"content":"The following sequence diagram illustrates how this feature works. \u003cbr\u003e"},{"lineNumber":354,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":355,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/WarnCommand.png\" width\u003d\"700\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":356,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":357,"author":{"gitId":"xieyaoyue"},"content":"### 4.7 Repay Feature"},{"lineNumber":358,"author":{"gitId":"killingbear999"},"content":"`RepaymentList`, `DecimalFomatter` and `Ui` facilitate this feature. The Repay feature is able to store the repayment information as a "},{"lineNumber":359,"author":{"gitId":"xieyaoyue"},"content":"reminder to the user. It implements the following operations:"},{"lineNumber":360,"author":{"gitId":"killingbear999"},"content":"* `DecimalFormatter#convert` → converts the repayment amount to 4 d.p."},{"lineNumber":361,"author":{"gitId":"killingbear999"},"content":"* `RepaymentList#AddItem` → adds the repayment information to the repayment list"},{"lineNumber":362,"author":{"gitId":"killingbear999"},"content":"* `Ui#printRepay` → prints the repayment information which has been successfully stored"},{"lineNumber":363,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":364,"author":{"gitId":"killingbear999"},"content":"Below shows an example of usage:"},{"lineNumber":365,"author":{"gitId":"killingbear999"},"content":"1. User executes `repay Johnny SGD 5.0 2020-12-20` command to add the repayment information that one has to repay "},{"lineNumber":366,"author":{"gitId":"killingbear999"},"content":"SGD 5.0 to Johnny before 2020-12-20"},{"lineNumber":367,"author":{"gitId":"xieyaoyue"},"content":"2. The `repay` command calls the `RepayCommand#execute` to complete the adding process"},{"lineNumber":368,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":369,"author":{"gitId":"xieyaoyue"},"content":"The following sequence diagram illustrates how this feature works. \u003cbr\u003e"},{"lineNumber":370,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":371,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/RepayCommand.png\" width\u003d\"600\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":372,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":373,"author":{"gitId":"xieyaoyue"},"content":"### 4.8 Summary Feature"},{"lineNumber":374,"author":{"gitId":"pinfang"},"content":"`SpendingList` and `Item` facilitate this feature. The Summary feature is able to summarise the total amount spent "},{"lineNumber":375,"author":{"gitId":"pinfang"},"content":"given a date. It implements the following operations:"},{"lineNumber":376,"author":{"gitId":"xieyaoyue"},"content":"* `Item#getDate` → gets the date when user spent on the item"},{"lineNumber":377,"author":{"gitId":"xieyaoyue"},"content":"* `Item#getAmount` → gets the amount spent on the item"},{"lineNumber":378,"author":{"gitId":"xieyaoyue"},"content":"* `SpendingList#getSpendingAmountTime` → gets the total amount spent during a period"},{"lineNumber":379,"author":{"gitId":"xieyaoyue"},"content":"* `SpendingList#getSpendingAmountCategory` → gets the total amount spent of a given category"},{"lineNumber":380,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":381,"author":{"gitId":"pinfang"},"content":"Below shows an example of usage:"},{"lineNumber":382,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":383,"author":{"gitId":"pinfang"},"content":"1. User executes the `summary 2020` command to get the amount spent during year 2020."},{"lineNumber":384,"author":{"gitId":"pinfang"},"content":"2. The `summary` command will first update the current currency symbol."},{"lineNumber":385,"author":{"gitId":"xieyaoyue"},"content":"3. The `summary` command calls `SpendingList#getSpendingAmountTime` which checks the spending date of every item"},{"lineNumber":386,"author":{"gitId":"pinfang"},"content":"stored in the memory."},{"lineNumber":387,"author":{"gitId":"pinfang"},"content":"4. If the item is spent during year 2020, the amount spent will be summed up."},{"lineNumber":388,"author":{"gitId":"xieyaoyue"},"content":"5. The `summary` command will also call `SpendingList#getSpendingAmountCategory` to sum up the expenses in each"},{"lineNumber":389,"author":{"gitId":"xieyaoyue"},"content":"category during the year 2020."},{"lineNumber":390,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":391,"author":{"gitId":"xieyaoyue"},"content":"The following sequence diagram illustrates how this feature works.\u003cbr\u003e"},{"lineNumber":392,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":393,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/SummaryCommand.png\" width\u003d\"700\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":394,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":395,"author":{"gitId":"xieyaoyue"},"content":"### 4.9 Reminder Feature"},{"lineNumber":396,"author":{"gitId":"pinfang"},"content":"`SpendingList` and `WarnCommand` facilitate this feature. The Reminder feature is able to provide the user about the "},{"lineNumber":397,"author":{"gitId":"pinfang"},"content":"total expenditure of the current week, starting on Monday. It implements the following operations:"},{"lineNumber":398,"author":{"gitId":"pinfang"},"content":"* `SpendingList#getSpendingAmountTime` → gets the total amount spent during a period"},{"lineNumber":399,"author":{"gitId":"pinfang"},"content":"* `WarnCommand#execute` → gives out warnings if overspending"},{"lineNumber":400,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":401,"author":{"gitId":"pinfang"},"content":"Below shows an example of usage:"},{"lineNumber":402,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":403,"author":{"gitId":"pinfang"},"content":"1. User starts the application."},{"lineNumber":404,"author":{"gitId":"pinfang"},"content":"2. The `ReminderCommand` will be instantiated. The dates of the current week (starting from Monday) will be saved to a list."},{"lineNumber":405,"author":{"gitId":"pinfang"},"content":"3. The `reminder` command will first update the current currency symbol."},{"lineNumber":406,"author":{"gitId":"xieyaoyue"},"content":"4. In the `ReminderCommand#execute(Data, Ui)`, a check will be done to see if there is any budget being set by the user."},{"lineNumber":407,"author":{"gitId":"pinfang"},"content":"    * If no budget is being set, the total expenditure of current week will be tallied up. "},{"lineNumber":408,"author":{"gitId":"xieyaoyue"},"content":"    * If there is, `WarnCommand#execute(Data, Ui)` will be called first before tallying up the expenditure. "},{"lineNumber":409,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":410,"author":{"gitId":"xieyaoyue"},"content":"The following sequence diagram illustrates how this feature works. \u003cbr\u003e"},{"lineNumber":411,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":412,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/reminder.png\" width\u003d\"700\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":413,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":414,"author":{"gitId":"xieyaoyue"},"content":"### 4.10 Encouragement Feature"},{"lineNumber":415,"author":{"gitId":"xieyaoyue"},"content":"`Ui` facilitates this feature. The Encouragement feature regularly encourages the user to keep up his effort in using the application. It implements the following operation: \u003cbr\u003e"},{"lineNumber":416,"author":{"gitId":"xieyaoyue"},"content":"`Ui#printEncouragementMessage()` → prints an encouragement message for the user"},{"lineNumber":417,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":418,"author":{"gitId":"xieyaoyue"},"content":"This is a hidden feature that will be executed automatically by the application for every four spending entries that the user inputs. "},{"lineNumber":419,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":420,"author":{"gitId":"xieyaoyue"},"content":"The following sequence diagram illustrates how this feature works. \u003cbr\u003e"},{"lineNumber":421,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":422,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/EncouragementCommand.png\" width\u003d\"400\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":423,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":424,"author":{"gitId":"xieyaoyue"},"content":"### 4.11 Export Feature"},{"lineNumber":425,"author":{"gitId":"Wu-Haitao"},"content":"`Workbook`, `FileOutputStream`, `SpendingList` and `Ui` facilitate this feature. The export data feature could extract the current data and export to an Excel file. It implements the following operations:"},{"lineNumber":426,"author":{"gitId":"xieyaoyue"},"content":"* `Workbook#createSheet` → creates a sheet in the workbook"},{"lineNumber":427,"author":{"gitId":"xieyaoyue"},"content":"* `SpendingList#getItem` → gets the item waiting to be added to the workbook"},{"lineNumber":428,"author":{"gitId":"xieyaoyue"},"content":"* `Workbook#write` → writes the data to an Excel file"},{"lineNumber":429,"author":{"gitId":"xieyaoyue"},"content":"* `Ui#printExportMessage` → prints the message indicating that the Excel file has been created successfully"},{"lineNumber":430,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":431,"author":{"gitId":"Wu-Haitao"},"content":"Below shows an example of usage:"},{"lineNumber":432,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":433,"author":{"gitId":"Wu-Haitao"},"content":"1. User executes the `export F:\\` command to export the data to the location `F:\\`."},{"lineNumber":434,"author":{"gitId":"Wu-Haitao"},"content":"2. The `exportCommand` calls the `Workbook#createSheet()` to create an Excel workbook sheet."},{"lineNumber":435,"author":{"gitId":"xieyaoyue"},"content":"3. `SpendingList#getItem` will be called repeatedly to get items and set the cells\u0027 values accordingly."},{"lineNumber":436,"author":{"gitId":"xieyaoyue"},"content":"3. After writing to an Excel file at the location `F:\\` using `Workbook#write`, a prompt message will be shown by `Ui`."},{"lineNumber":437,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":438,"author":{"gitId":"xieyaoyue"},"content":"The following sequence diagram illustrates how this feature works. \u003cbr\u003e"},{"lineNumber":439,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":440,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/ExportCommand.png\" width\u003d\"600\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":441,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":442,"author":{"gitId":"Wu-Haitao"},"content":"### 4.12 Draw Feature"},{"lineNumber":443,"author":{"gitId":"xieyaoyue"},"content":"`Workbook`, `FileOutputStream`, `SpendingList` and `Ui` facilitate this feature. The draw feature analyzes the target records and plot two charts accordingly. It implements the following operations:"},{"lineNumber":444,"author":{"gitId":"Wu-Haitao"},"content":"* `Workbook#createSheet` → creates a sheet in the workbook"},{"lineNumber":445,"author":{"gitId":"Wu-Haitao"},"content":"* `SpendingList#getItem` → gets the item waiting to be added to the workbook"},{"lineNumber":446,"author":{"gitId":"Wu-Haitao"},"content":"* `DrawCommand#getYearMap` `DrawCommand#getMonthMap` `DrawCommand#getDayMap` → returns a map containing the information of sum of amount in records"},{"lineNumber":447,"author":{"gitId":"Wu-Haitao"},"content":"* `DrawCommand#getCategories` → returns a map containing the information of proportions of different categories"},{"lineNumber":448,"author":{"gitId":"Wu-Haitao"},"content":"* `DrawCommand#drawChart` → generate charts in the worksheet"},{"lineNumber":449,"author":{"gitId":"Wu-Haitao"},"content":"* `Workbook#write` → writes the data to an Excel file"},{"lineNumber":450,"author":{"gitId":"Wu-Haitao"},"content":"* `Ui#printDrawMessage` → prints the message indicating that the charts have been generated successfully"},{"lineNumber":451,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":452,"author":{"gitId":"Wu-Haitao"},"content":"Below shows an example of usage:"},{"lineNumber":453,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":454,"author":{"gitId":"xieyaoyue"},"content":"1. User executes the `draw 2020` command to generate charts for the year 2020."},{"lineNumber":455,"author":{"gitId":"Wu-Haitao"},"content":"2. The `drawCommand` calls the `Workbook#createSheet()` twice to create two Excel workbook sheet."},{"lineNumber":456,"author":{"gitId":"Wu-Haitao"},"content":"3. `SpendingList#getItem` will be called repeatedly to get items."},{"lineNumber":457,"author":{"gitId":"xieyaoyue"},"content":"4. `DrawCommand#getMonthMap` and `DrawCommand#getCategories` will be called to analyze the data and decide which data are going to be shown in the charts."},{"lineNumber":458,"author":{"gitId":"Wu-Haitao"},"content":"5. After processing of data, `DrawCommand#drawChart` will be called to generate charts in worksheets."},{"lineNumber":459,"author":{"gitId":"Wu-Haitao"},"content":"6. After writing to an Excel file using `Workbook#write`, a prompt message will be shown by `Ui`."},{"lineNumber":460,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":461,"author":{"gitId":"Wu-Haitao"},"content":"The following sequence diagram illustrates how this feature works. \u003cbr\u003e"},{"lineNumber":462,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":463,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"images/DrawCommand.png\" width\u003d\"600\" align\u003d\"center\"\u003e \u003cbr\u003e"},{"lineNumber":464,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":465,"author":{"gitId":"xieyaoyue"},"content":"## 5. Dev Ops"},{"lineNumber":466,"author":{"gitId":"xieyaoyue"},"content":"### 5.1 Build Automation"},{"lineNumber":467,"author":{"gitId":"xieyaoyue"},"content":"This project uses Gradle for build automation and dependency management. \u003cbr\u003e"},{"lineNumber":468,"author":{"gitId":"-"},"content":""},{"lineNumber":469,"author":{"gitId":"xieyaoyue"},"content":"Given below are how to use Gradle for some important project tasks: \u003cbr\u003e"},{"lineNumber":470,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":471,"author":{"gitId":"xieyaoyue"},"content":"* `clean`: Deletes the files created during the previous build tasks (e.g. files in the build folder). e.g. ./gradlew clean"},{"lineNumber":472,"author":{"gitId":"xieyaoyue"},"content":"* `shadowJar`: Uses the ShadowJar plugin to creat a fat JAR file in the build/lib folder, if the current file is outdated. e.g. ./gradlew shadowJar"},{"lineNumber":473,"author":{"gitId":"xieyaoyue"},"content":"* `run`: Builds and run the program. "},{"lineNumber":474,"author":{"gitId":"xieyaoyue"},"content":"* `runShadow`: Builds the application as a fat JAR, and then runs it."},{"lineNumber":475,"author":{"gitId":"xieyaoyue"},"content":"* `checkstyleMain`: Runs the code style check for the main code base. "},{"lineNumber":476,"author":{"gitId":"xieyaoyue"},"content":"* `checkstyleTest`: Runs the code style check for the test code base."},{"lineNumber":477,"author":{"gitId":"xieyaoyue"},"content":"* `test`: Runs all tests."},{"lineNumber":478,"author":{"gitId":"xieyaoyue"},"content":"  * `./gradlew test` — Runs all tests"},{"lineNumber":479,"author":{"gitId":"xieyaoyue"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests"},{"lineNumber":480,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":481,"author":{"gitId":"xieyaoyue"},"content":"### 5.2 Continuous Integration (CI)"},{"lineNumber":482,"author":{"gitId":"xieyaoyue"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the .github/workflows folder). "},{"lineNumber":483,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":484,"author":{"gitId":"xieyaoyue"},"content":"### 5.3 Making a release"},{"lineNumber":485,"author":{"gitId":"xieyaoyue"},"content":"Here are the steps to create a new release:"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"xieyaoyue"},"content":"1. Generate a fat JAR file using Gradle by using the command `gradlew shadow` (Mac/Linux: `./gradlew clean shadowJar`)."},{"lineNumber":488,"author":{"gitId":"xieyaoyue"},"content":"2. Find the JAR file in the `build/libs` directory."},{"lineNumber":489,"author":{"gitId":"xieyaoyue"},"content":"3. Tag the repository with a new version number."},{"lineNumber":490,"author":{"gitId":"xieyaoyue"},"content":"4. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created."},{"lineNumber":491,"author":{"gitId":"-"},"content":""},{"lineNumber":492,"author":{"gitId":"xieyaoyue"},"content":"### 5.4 Coverage Reporting"},{"lineNumber":493,"author":{"gitId":"xieyaoyue"},"content":"We use the IntelliJ IDEA’s coverage analysis tool for coverage reporting. A video tutorial on how to use this tool can be found [here](https://www.youtube.com/watch?v\u003dyNYzZvyA2ik\u0026feature\u003dyoutu.be)."},{"lineNumber":494,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":495,"author":{"gitId":"xieyaoyue"},"content":"## Appendix A: About the Product"},{"lineNumber":496,"author":{"gitId":"xieyaoyue"},"content":"### Target User Profile"},{"lineNumber":497,"author":{"gitId":"xieyaoyue"},"content":"The target user is NUS hostel students including both local students and international students."},{"lineNumber":498,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":499,"author":{"gitId":"xieyaoyue"},"content":"### Value Proposition"},{"lineNumber":500,"author":{"gitId":"killingbear999"},"content":"We observed that hostel students are encountering tight budgets due to expensive hostel fees, on top of their school "},{"lineNumber":501,"author":{"gitId":"killingbear999"},"content":"tuition fees. Hence, we are developing a money manager targeted at NUS hostel students. This money manager   "},{"lineNumber":502,"author":{"gitId":"xieyaoyue"},"content":"Cent Wise Dollar Wise aims to help hostel students to have better financial management with a limited budget. "},{"lineNumber":503,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":504,"author":{"gitId":"xieyaoyue"},"content":"## Appendix B: User Stories"},{"lineNumber":505,"author":{"gitId":"xieyaoyue"},"content":"This table describes the user stories considered while implementing the features in Section 4: \u003cbr\u003e"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"xieyaoyue"},"content":"|Version| As a (/an) ... | I want to ... | So that I can ...|"},{"lineNumber":508,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":509,"author":{"gitId":"killingbear999"},"content":"|v1.0|international student|convert local currency to foreign currency or the reverse way|trace my spending easily|"},{"lineNumber":510,"author":{"gitId":"killingbear999"},"content":"|v1.0|careless user|view and edit the previous input|ensure the data input is correct|"},{"lineNumber":511,"author":{"gitId":"pinfang"},"content":"|v1.0|user|have a monthly/yearly summary|know how much I had spent|"},{"lineNumber":512,"author":{"gitId":"killingbear999"},"content":"|v1.0|user|clear specific data|ensure all data stored are up-to-date and correct|"},{"lineNumber":513,"author":{"gitId":"killingbear999"},"content":"|v2.0|user|set a budget limit|be less likely to overspend my money|"},{"lineNumber":514,"author":{"gitId":"killingbear999"},"content":"|v2.0|user|be warned when my spending approaches the budget limit or exceeds the budget limit|be less likely to overspend my money|"},{"lineNumber":515,"author":{"gitId":"pinfang"},"content":"|v2.0|big spender|tag purchases according to categories|for an easier overview|"},{"lineNumber":516,"author":{"gitId":"pinfang"},"content":"|v2.0|user|have weekly reminders on how much has spent|take note of future spending|"},{"lineNumber":517,"author":{"gitId":"killingbear999"},"content":"|v2.0|forgetful user|include a list to summarise the repayment to others|repay the debt on time|"},{"lineNumber":518,"author":{"gitId":"killingbear999"},"content":"|v2.0|user|be encouraged while managing the finance|keep managing the fiance persistently|"},{"lineNumber":519,"author":{"gitId":"killingbear999"},"content":"|v2.0|user|export all saving data to other devices|keep managing the fiance after changing the device|"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"xieyaoyue"},"content":"## Appendix C: Non-Functional Requirements"},{"lineNumber":522,"author":{"gitId":"xieyaoyue"},"content":"The following statements describe the non-functional requirements for the application: \u003cbr\u003e"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"xieyaoyue"},"content":"1. The system should respond within two seconds."},{"lineNumber":525,"author":{"gitId":"xieyaoyue"},"content":"2. The system should be easy to use, do not require much effort to learn."},{"lineNumber":526,"author":{"gitId":"xieyaoyue"},"content":"3. The system should work on any *mainstream* OS that has Java 11 or above installed."},{"lineNumber":527,"author":{"gitId":"xieyaoyue"},"content":"4. Users with faster typing speed than average should be able to use this program with ease."},{"lineNumber":528,"author":{"gitId":"-"},"content":""},{"lineNumber":529,"author":{"gitId":"xieyaoyue"},"content":"## Appendix D: Glossary"},{"lineNumber":530,"author":{"gitId":"xieyaoyue"},"content":"* Mainstream OS: Windows, Linux, macOS"},{"lineNumber":531,"author":{"gitId":"-"},"content":""},{"lineNumber":532,"author":{"gitId":"xieyaoyue"},"content":"## Appendix E: Instructions for Manual Testing"},{"lineNumber":533,"author":{"gitId":"xieyaoyue"},"content":"Given below are the instructions to test the application manually."},{"lineNumber":534,"author":{"gitId":"-"},"content":""},{"lineNumber":535,"author":{"gitId":"xieyaoyue"},"content":"### E.1 Launch"},{"lineNumber":536,"author":{"gitId":"xieyaoyue"},"content":"1. Download the jar file and copy into an empty folder."},{"lineNumber":537,"author":{"gitId":"xieyaoyue"},"content":"2. Navigate to the folder in the command prompt."},{"lineNumber":538,"author":{"gitId":"xieyaoyue"},"content":"3. Enter `java -jar Duke.jar` and press `enter` to launch the application. "},{"lineNumber":539,"author":{"gitId":"xieyaoyue"},"content":"4. You should expect a new `data` folder created within the same folder as the jar file."},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"xieyaoyue"},"content":"### E.2 Application Commands"},{"lineNumber":542,"author":{"gitId":"xieyaoyue"},"content":"#### 1. `Draw` Command"},{"lineNumber":543,"author":{"gitId":"xieyaoyue"},"content":"Download `duke_spending.json` [here](https://github.com/AY2021S1-CS2113T-F14-2/tp/tree/master/data) and copy the file into the \u0027data\u0027 folder. Test the command by executing `draw 2020`. You should expect to see the following output in Microsoft Excel. \u003cbr\u003e"},{"lineNumber":544,"author":{"gitId":"xieyaoyue"},"content":"\u003cimg src\u003d\"https://user-images.githubusercontent.com/45732128/98440296-04a67a80-2133-11eb-8304-94714b91e38f.png\" align\u003d\"center\"\u003e"},{"lineNumber":545,"author":{"gitId":"-"},"content":""},{"lineNumber":546,"author":{"gitId":"xieyaoyue"},"content":"#### 2. Other Commands"},{"lineNumber":547,"author":{"gitId":"xieyaoyue"},"content":"Please refer to [Cent Wise Dollar Wise User Guide](https://ay2021s1-cs2113t-f14-2.github.io/tp/UserGuide.html)."}],"authorContributionMap":{"Wu-Haitao":25,"k-walter":44,"killingbear999":59,"xieyaoyue":262,"-":26,"pinfang":131}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"# Cent Wise Dollar Wise"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"Cent Wise Dollar Wise is a desktop application for money manager, optimised for use via a Command Line Interface (CLI). "},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"It is specially designed for the hostel students in NUS which aims to help these students to manage their "},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"financial situation and track their spending efficiently. "},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"Useful links:"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"* [User Guide](https://ay2021s1-cs2113t-f14-2.github.io/tp/UserGuide.html)"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":"* [Developer Guide](https://ay2021s1-cs2113t-f14-2.github.io/tp/DeveloperGuide.html)"},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":"* [About Us](https://ay2021s1-cs2113t-f14-2.github.io/tp/AboutUs.html)"}],"authorContributionMap":{"killingbear999":6,"xieyaoyue":2,"-":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"pinfang"},"content":"![image](images/CentWiseDollarWise.png)"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"pinfang"},"content":"--------"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"pinfang"},"content":"## Table of Contents"},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":"1. [Introduction](#1-introduction)"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":"2. [Quick Start](#2-quick-start)"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":"3. [Command Features](#3-command-features)  "},{"lineNumber":12,"author":{"gitId":"pinfang"},"content":"    3.1 [Adding Spending: `add`](#31-adding-spending-add)\u003cbr\u003e"},{"lineNumber":13,"author":{"gitId":"pinfang"},"content":"    3.2 [Clearing Data: `clear`](#32-clearing-data-clear)     "},{"lineNumber":14,"author":{"gitId":"pinfang"},"content":"    3.3 [Viewing Help: `help`](#33-viewing-help-help)    "},{"lineNumber":15,"author":{"gitId":"pinfang"},"content":"    3.4 [Purging Data: `purge`](#34-purging-data-purge-data)    "},{"lineNumber":16,"author":{"gitId":"pinfang"},"content":"    3.5 [Viewing Repayment List Summary: `repayment list`](#35-viewing-repayment-list-summary-repayment-list)    "},{"lineNumber":17,"author":{"gitId":"pinfang"},"content":"    3.6 [Viewing Spending List Summary: `spending list`](#36-viewing-spending-list-summary-spending-list)    "},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"    3.7 [Viewing Budget Limit: `view`](#37-viewing-budget-limit-view)    "},{"lineNumber":19,"author":{"gitId":"pinfang"},"content":"    3.8 [Setting Budget Limit: `set`](#38-setting-budget-limit-set)    "},{"lineNumber":20,"author":{"gitId":"pinfang"},"content":"    3.9 [Inputting Repayment Information: `repay`](#39-inputting-repayment-information-repay)    "},{"lineNumber":21,"author":{"gitId":"pinfang"},"content":"    3.10 [Converting Currency: `convert`](#310-converting-currency-convert)       "},{"lineNumber":22,"author":{"gitId":"pinfang"},"content":"    3.11 [Viewing Summary: `summary`](#311-viewing-summary-summary)        "},{"lineNumber":23,"author":{"gitId":"pinfang"},"content":"    3.12 [Visualizing Data: `draw`](#312-visualizing-data-draw)    "},{"lineNumber":24,"author":{"gitId":"pinfang"},"content":"    3.13 [Exporting Data: `export`](#313-exporting-data-export)     "},{"lineNumber":25,"author":{"gitId":"pinfang"},"content":"    3.14 [Editing Spending: `edit`](#314-editing-spending-edit)        "},{"lineNumber":26,"author":{"gitId":"pinfang"},"content":"    3.15 [Exiting Program: `logout`](#315-exiting-program-logout)"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"pinfang"},"content":"4. [Useful Hidden Features](#4-useful-hidden-features)    "},{"lineNumber":29,"author":{"gitId":"pinfang"},"content":"    4.1 [Reminder](#41-reminder)    "},{"lineNumber":30,"author":{"gitId":"pinfang"},"content":"    4.2 [Warning](#42-warning)   "},{"lineNumber":31,"author":{"gitId":"pinfang"},"content":"    4.3 [Encouragement](#43-encouragement)"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"pinfang"},"content":"5. [FAQ](#5-faq)"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"pinfang"},"content":"6. [Command Summary](#6-command-summary)"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"xieyaoyue"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"xieyaoyue"},"content":"## **1. Introduction**"},{"lineNumber":40,"author":{"gitId":"xieyaoyue"},"content":"Welcome to Cent Wise Dollar Wise User Guide! Cent Wise Dollar Wise is a desktop application for money management, optimized for use via a Command Line Interface (CLI). This application aims to help NUS hostel students manage their financial situation and track their spending efficiently. "},{"lineNumber":41,"author":{"gitId":"xieyaoyue"},"content":"This user guide provides in-depth documentation on the application’s installation process and command features. "},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"xieyaoyue"},"content":"## **2. Quick Start**"},{"lineNumber":44,"author":{"gitId":"xieyaoyue"},"content":"1. Ensure that you have Java 11 or above installed in your computer."},{"lineNumber":45,"author":{"gitId":"killingbear999"},"content":"2. Download the latest version of `Duke` from [here](https://github.com/AY2021S1-CS2113T-F14-2/tp/releases)."},{"lineNumber":46,"author":{"gitId":"xieyaoyue"},"content":"3. Copy the file to a home folder you would like to use."},{"lineNumber":47,"author":{"gitId":"xieyaoyue"},"content":"4. Open a terminal in that home folder and enter java -jar duke.jar to begin."},{"lineNumber":48,"author":{"gitId":"xieyaoyue"},"content":"5. Type the desired command and press Enter to execute it. Tips: entering help will display the help window with a list of commands that could be executed."},{"lineNumber":49,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":50,"author":{"gitId":"xieyaoyue"},"content":"Refer to the [Command Features](#3-command-features) below for details of each command."},{"lineNumber":51,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":52,"author":{"gitId":"xieyaoyue"},"content":"## **3. Command Features**"},{"lineNumber":53,"author":{"gitId":"killingbear999"},"content":"In this section, specific information about each command will be explained. This includes the purpose of each command, and how it is formatted."},{"lineNumber":54,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":55,"author":{"gitId":"xieyaoyue"},"content":"Before we begin, do take note of the following information which applies to all commands:"},{"lineNumber":56,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":57,"author":{"gitId":"xieyaoyue"},"content":"* The format of a command line is as follows: `command DESCRIPTION [-f DESCRIPTION] -f DESCRIPTION1 DESCRIPTION2`"},{"lineNumber":58,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":59,"author":{"gitId":"k-walter"},"content":"    * `command` in lowercase can be any command in this section, such as `add` or `spending list`. You must specify it first in the command line."},{"lineNumber":60,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":61,"author":{"gitId":"k-walter"},"content":"    * `DESCRIPTION` in uppercase is a description of the argument you should provide. Each word in the description corresponds to the expected argument. "},{"lineNumber":62,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":63,"author":{"gitId":"k-walter"},"content":"        * **Example**: `export PATH` asks for the file path to export your data to."},{"lineNumber":64,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":65,"author":{"gitId":"k-walter"},"content":"        * **Example**: `add -s CURRENCY AMOUNT` asks for the added currency and amount, to be separated by spaces. One valid command line is `add -s SGD 1.00`."},{"lineNumber":66,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":67,"author":{"gitId":"k-walter"},"content":"    * `-f` is a flag. Arguments are either flagged or unflagged. You must specify unflagged arguments after the command and flagged arguments after unflagged arguments."},{"lineNumber":68,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":69,"author":{"gitId":"xieyaoyue"},"content":"        * **Example**: One valid command line for `edit INDEX [-d NEW_DESCRIPTION] [-c CATEGORY]` is `edit 1 -c Food -d Rice`, which edits the category and description of the item at index 1."},{"lineNumber":70,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":71,"author":{"gitId":"k-walter"},"content":"        * `INDEX` in `edit INDEX [-d NEW_DESCRIPTION] [-c CATEGORY]` is an unflagged argument and must be specified in the given order (after `edit`)."},{"lineNumber":72,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":73,"author":{"gitId":"k-walter"},"content":"        * `CATEGORY` and `NEW_DESCRIPTION` in `edit INDEX [-d NEW_DESCRIPTION] [-c CATEGORY]` are flagged arguments and can be specified in any order after `INDEX`."},{"lineNumber":74,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":75,"author":{"gitId":"k-walter"},"content":"    * Arguments are either optional or required. Optional arguments are enclosed in square brackets (i.e. `[]`), while required arguments are not."},{"lineNumber":76,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":77,"author":{"gitId":"k-walter"},"content":"        * Do not enter `[]` within your command line. It is used only in documentations."},{"lineNumber":78,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":79,"author":{"gitId":"k-walter"},"content":"        * You must specify required arguments to run the command."},{"lineNumber":80,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":81,"author":{"gitId":"k-walter"},"content":"        * You can specify any combination of optional arguments, including none of them unless otherwise stated."},{"lineNumber":82,"author":{"gitId":"k-walter"},"content":"    "},{"lineNumber":83,"author":{"gitId":"k-walter"},"content":"* The abbreviation of `MONTH` is case-insensitive. The system accepts the English abbreviation of `MONTH` with at least 3 characters. "},{"lineNumber":84,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":85,"author":{"gitId":"k-walter"},"content":"    * Example: `Jul` or `july` for July, but not `Ju` or `007`."},{"lineNumber":86,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":87,"author":{"gitId":"k-walter"},"content":"* If you specify `-a` all flag, do not specify the optional arguments `YEAR` and `MONTH`."},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"k-walter"},"content":"* The system only supports three different currencies including SGD, USD and CNY as of `v2.1`."},{"lineNumber":90,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":91,"author":{"gitId":"k-walter"},"content":"* The default currency of the system is SGD. Only after calling `convert` feature will the default currency will be changed to the currency you have converted to."},{"lineNumber":92,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":93,"author":{"gitId":"xieyaoyue"},"content":"* There are 7 categories of spending items. If you did not specify a category or categorize an item in a category not within the first 6, the item will default to Others:"},{"lineNumber":94,"author":{"gitId":"pinfang"},"content":"    1. Education"},{"lineNumber":95,"author":{"gitId":"k-walter"},"content":"    1. Entertainment"},{"lineNumber":96,"author":{"gitId":"k-walter"},"content":"    1. Food"},{"lineNumber":97,"author":{"gitId":"k-walter"},"content":"    1. Health"},{"lineNumber":98,"author":{"gitId":"k-walter"},"content":"    1. Transportation"},{"lineNumber":99,"author":{"gitId":"k-walter"},"content":"    1. Utilities"},{"lineNumber":100,"author":{"gitId":"k-walter"},"content":"    1. Others (default)"},{"lineNumber":101,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":102,"author":{"gitId":"xieyaoyue"},"content":"### 3.1 Adding Spending: `add`"},{"lineNumber":103,"author":{"gitId":"xieyaoyue"},"content":"This command allows you to add a spending record to the application. "},{"lineNumber":104,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":105,"author":{"gitId":"xieyaoyue"},"content":"Format:"},{"lineNumber":106,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":107,"author":{"gitId":"pinfang"},"content":"`add -c CATEGORY -d DESCRIPTION -s CURRENCY AMOUNT`"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"xieyaoyue"},"content":"`add -c Food -d chicken rice -s SGD 3.00` → adds chicken rice which costs SGD 3.00 into the food category of the spending list"},{"lineNumber":112,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":113,"author":{"gitId":"xieyaoyue"},"content":"Figure below shows an example for Add Spending feature: \u003cbr\u003e"},{"lineNumber":114,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":115,"author":{"gitId":"xieyaoyue"},"content":"![image](https://user-images.githubusercontent.com/45732128/98068206-6302fd00-1e96-11eb-9f94-af0daeed3175.png) \u003cbr\u003e"},{"lineNumber":116,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":117,"author":{"gitId":"xieyaoyue"},"content":"🛈 The date shown in the UI output refers to the date when an entry is recorded."},{"lineNumber":118,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":119,"author":{"gitId":"xieyaoyue"},"content":"### 3.2 Clearing Data: `clear`"},{"lineNumber":120,"author":{"gitId":"xieyaoyue"},"content":"The `clear` command allows you to clear specific data that you have stored in the application. This includes your spending list, repayment list and budget. You can choose to clear all entries or specified entries of either your spending list or repayment list (or both). "},{"lineNumber":121,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":122,"author":{"gitId":"xieyaoyue"},"content":"🛈 If you do not specify SPENDING_INDEX or REPAYMENT_INDEX but specify its corresponding prefix, the whole list representing it will be cleared."},{"lineNumber":123,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":124,"author":{"gitId":"xieyaoyue"},"content":"Format:"},{"lineNumber":125,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":126,"author":{"gitId":"xieyaoyue"},"content":"`clear [-b] [-s SPENDING_INDEX] [-r REPAYMENT_INDEX]`"},{"lineNumber":127,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":128,"author":{"gitId":"xieyaoyue"},"content":"Example of usage:"},{"lineNumber":129,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":130,"author":{"gitId":"xieyaoyue"},"content":"`clear -b` → clears the budget limit set previously"},{"lineNumber":131,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":132,"author":{"gitId":"xieyaoyue"},"content":"`clear -s 1` → clears entry 1 of the spending list"},{"lineNumber":133,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":134,"author":{"gitId":"xieyaoyue"},"content":"`clear -r 1` → clears entry 1 of the repayment list"},{"lineNumber":135,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":136,"author":{"gitId":"xieyaoyue"},"content":"`clear -s` → clears the entire spending list"},{"lineNumber":137,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":138,"author":{"gitId":"xieyaoyue"},"content":"`clear -r` → clears the entire repayment list"},{"lineNumber":139,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":140,"author":{"gitId":"xieyaoyue"},"content":"Figure below shows an example for Clear Data feature: \u003cbr\u003e"},{"lineNumber":141,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":142,"author":{"gitId":"xieyaoyue"},"content":"![image](https://user-images.githubusercontent.com/45732128/98068110-1b7c7100-1e96-11eb-9bc8-82e839885d6a.png)"},{"lineNumber":143,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":144,"author":{"gitId":"xieyaoyue"},"content":"### 3.3 Viewing Help: `help`"},{"lineNumber":145,"author":{"gitId":"xieyaoyue"},"content":"If you are unsure on how to use a command, or would like to know more uses of a command, you can use this command to get more information."},{"lineNumber":146,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":147,"author":{"gitId":"xieyaoyue"},"content":"Format:"},{"lineNumber":148,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":149,"author":{"gitId":"xieyaoyue"},"content":"`help`"},{"lineNumber":150,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":151,"author":{"gitId":"k-walter"},"content":"Figure below shows the corresponding example for Help feature: \u003cbr\u003e"},{"lineNumber":152,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":153,"author":{"gitId":"pinfang"},"content":"![image](images/help.png)"},{"lineNumber":154,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":155,"author":{"gitId":"xieyaoyue"},"content":"### 3.4. Purging Data: `purge data`"},{"lineNumber":156,"author":{"gitId":"xieyaoyue"},"content":"This command is similar to the `clear` command, except that it allows you to clear all data, including your spending list, repayment list and budget, all at one go."},{"lineNumber":157,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":158,"author":{"gitId":"xieyaoyue"},"content":"Format:"},{"lineNumber":159,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":160,"author":{"gitId":"xieyaoyue"},"content":"`purge data`"},{"lineNumber":161,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":162,"author":{"gitId":"killingbear999"},"content":"Figure below shows an example for Purge Data feature: \u003cbr\u003e"},{"lineNumber":163,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":164,"author":{"gitId":"killingbear999"},"content":"![Example for Purging Data](images/Purge.png)"},{"lineNumber":165,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":166,"author":{"gitId":"xieyaoyue"},"content":"### 3.5 Viewing Repayment List Summary: `repayment list`"},{"lineNumber":167,"author":{"gitId":"k-walter"},"content":"This command shows all creditors with their respective amount and deadline in chronological order of deadline."},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"killingbear999"},"content":"Format:"},{"lineNumber":170,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":171,"author":{"gitId":"killingbear999"},"content":"`repayment list`"},{"lineNumber":172,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":173,"author":{"gitId":"killingbear999"},"content":"Figure below shows an example for View Repayment List Summary feature: \u003cbr\u003e"},{"lineNumber":174,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":175,"author":{"gitId":"killingbear999"},"content":"![Example for Viewing Repayment List](images/RepaymentList.png)"},{"lineNumber":176,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":177,"author":{"gitId":"xieyaoyue"},"content":"### 3.6 Viewing Spending List Summary: `spending list`"},{"lineNumber":178,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":179,"author":{"gitId":"k-walter"},"content":"This command shows your spending records during the specified period (a particular year or month, or both)."},{"lineNumber":180,"author":{"gitId":"k-walter"},"content":"You can also choose to view your spending records belonging to a specific category."},{"lineNumber":181,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":182,"author":{"gitId":"killingbear999"},"content":"Format:"},{"lineNumber":183,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":184,"author":{"gitId":"pinfang"},"content":"`spending list [YEAR] [MONTH] [-c CATEGORY] [-a]`"},{"lineNumber":185,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":186,"author":{"gitId":"killingbear999"},"content":"Examples of usage:"},{"lineNumber":187,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":188,"author":{"gitId":"k-walter"},"content":"`spending list` → lists all entries for the current month (November 2020 at time of screenshot)"},{"lineNumber":189,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":190,"author":{"gitId":"k-walter"},"content":"`spending list -a` → lists all entries"},{"lineNumber":191,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":192,"author":{"gitId":"k-walter"},"content":"`spending list 2020` → lists all entries for year 2020"},{"lineNumber":193,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":194,"author":{"gitId":"k-walter"},"content":"`spending list 2020 Sep` → lists all entries for September 2020"},{"lineNumber":195,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":196,"author":{"gitId":"k-walter"},"content":"`spending list -c Food` → lists all food entries for the current month"},{"lineNumber":197,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":198,"author":{"gitId":"k-walter"},"content":"Figure below shows the corresponding example for Spending List feature: \u003cbr\u003e"},{"lineNumber":199,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":200,"author":{"gitId":"k-walter"},"content":"![Example for viewing Spending list](images/SpendingList.png)"},{"lineNumber":201,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":202,"author":{"gitId":"xieyaoyue"},"content":"### 3.7 Viewing Budget Limit: `view`"},{"lineNumber":203,"author":{"gitId":"killingbear999"},"content":"This command shows the current budget limit you have set."},{"lineNumber":204,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":205,"author":{"gitId":"killingbear999"},"content":"Format:"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"killingbear999"},"content":"`view`"},{"lineNumber":208,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":209,"author":{"gitId":"killingbear999"},"content":"Example of usage:"},{"lineNumber":210,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":211,"author":{"gitId":"killingbear999"},"content":"`view` → views the budget limit that was set previously"},{"lineNumber":212,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":213,"author":{"gitId":"xieyaoyue"},"content":"Figure below shows an example for View Budget Limit feature (i.e. budget limit has not been set yet): \u003cbr\u003e"},{"lineNumber":214,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":215,"author":{"gitId":"killingbear999"},"content":"![Example for Viewing Budget Limit](images/NoBudgetExample.png)"},{"lineNumber":216,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":217,"author":{"gitId":"xieyaoyue"},"content":"Figure below shows an example for View Budget Limit feature (i.e. budget limit has been set): \u003cbr\u003e"},{"lineNumber":218,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":219,"author":{"gitId":"killingbear999"},"content":"![Example for Viewing Budget Limit](images/ViewBudget.png)"},{"lineNumber":220,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":221,"author":{"gitId":"xieyaoyue"},"content":"### 3.8 Setting Budget Limit: `set`"},{"lineNumber":222,"author":{"gitId":"killingbear999"},"content":"This command allows you to set a budget limit. You will receive a Ui warning message when your spending approaches "},{"lineNumber":223,"author":{"gitId":"killingbear999"},"content":"the limit or exceeds the limit after setting the budget limit."},{"lineNumber":224,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":225,"author":{"gitId":"killingbear999"},"content":"🛈 The system only supports three different currencies, including SGD, USD and CNY."},{"lineNumber":226,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":227,"author":{"gitId":"killingbear999"},"content":"🛈 Only spending items that are added after/on the date of setting the budget limit will be taken into consideration"},{"lineNumber":228,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":229,"author":{"gitId":"killingbear999"},"content":"Format:"},{"lineNumber":230,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":231,"author":{"gitId":"killingbear999"},"content":"`set -s CURRENCY AMOUNT`"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"killingbear999"},"content":"`set -s SGD 100.0` → sets the budget limit to SGD 100.00"},{"lineNumber":236,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":237,"author":{"gitId":"killingbear999"},"content":"Figure below shows an example for Set Budget Limit feature: \u003cbr\u003e"},{"lineNumber":238,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":239,"author":{"gitId":"killingbear999"},"content":"![Example for Setting Budget Limit](images/SetBudget.png)"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"xieyaoyue"},"content":"### 3.9 Inputting Repayment Information: `repay`"},{"lineNumber":242,"author":{"gitId":"killingbear999"},"content":"This command adds a repayment record to your repayment list."},{"lineNumber":243,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":244,"author":{"gitId":"killingbear999"},"content":"🛈 The system only supports three different currencies, including SGD, USD and CNY."},{"lineNumber":245,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":246,"author":{"gitId":"killingbear999"},"content":"🛈 The format of deadline is yyyy-MM-dd, and the deadline should be after/including current date."},{"lineNumber":247,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":248,"author":{"gitId":"killingbear999"},"content":"Format:"},{"lineNumber":249,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":250,"author":{"gitId":"killingbear999"},"content":"`repay -d NAME -s CURRENCY AMOUNT -t DEADLINE`"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"killingbear999"},"content":"`repay -d Johnny -s SGD 5.0 -t 2020-12-02` → stores the information that you need to repay SGD 5.0 to Johnny before "},{"lineNumber":255,"author":{"gitId":"killingbear999"},"content":"2020-12-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"xieyaoyue"},"content":"Figure below shows an example for Input Repayment Information feature: \u003cbr\u003e"},{"lineNumber":258,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":259,"author":{"gitId":"killingbear999"},"content":"![Example for Inputting Repayment Information](images/Repay.png)"},{"lineNumber":260,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":261,"author":{"gitId":"xieyaoyue"},"content":"### 3.10 Converting Currency: `convert`"},{"lineNumber":262,"author":{"gitId":"killingbear999"},"content":"This command converts the currency in your spending list to another currency you prefer."},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"killingbear999"},"content":"🛈 The currency converter only supports currency conversion from SGD to USD, or USD to SGD, or SGD to CNY, or CNY to SGD."},{"lineNumber":265,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":266,"author":{"gitId":"killingbear999"},"content":"🛈 The input currency must match with the default currency in the spending list."},{"lineNumber":267,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":268,"author":{"gitId":"killingbear999"},"content":"Format: "},{"lineNumber":269,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":270,"author":{"gitId":"killingbear999"},"content":"`convert -s INPUT_CURRENCY -t OUTPUT_CURRENCY`"},{"lineNumber":271,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":272,"author":{"gitId":"killingbear999"},"content":"Example of usage:"},{"lineNumber":273,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":274,"author":{"gitId":"killingbear999"},"content":"`convert -s SGD -t USD` → converts the currency from SGD to USD"},{"lineNumber":275,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":276,"author":{"gitId":"xieyaoyue"},"content":"Figure below shows an example for Convert Currency feature: \u003cbr\u003e"},{"lineNumber":277,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":278,"author":{"gitId":"killingbear999"},"content":"![Example for Converting Currency](images/Convert.png)"},{"lineNumber":279,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":280,"author":{"gitId":"xieyaoyue"},"content":"### 3.11 Viewing Summary: `summary`"},{"lineNumber":281,"author":{"gitId":"killingbear999"},"content":"This command generates a statement of your total expenditure during a specific period of time (a particular year or "},{"lineNumber":282,"author":{"gitId":"killingbear999"},"content":"month, or both). Statements based on each spending category will also be shown."},{"lineNumber":283,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":284,"author":{"gitId":"pinfang"},"content":"Format: "},{"lineNumber":285,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":286,"author":{"gitId":"killingbear999"},"content":"`summary [YEAR] [MONTH] [-a]`"},{"lineNumber":287,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":288,"author":{"gitId":"killingbear999"},"content":"Examples of usage:"},{"lineNumber":289,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":290,"author":{"gitId":"killingbear999"},"content":"`summary` → shows summary of current month "},{"lineNumber":291,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":292,"author":{"gitId":"killingbear999"},"content":"`summary 2020` → shows summary of a specific year "},{"lineNumber":293,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":294,"author":{"gitId":"pinfang"},"content":"`summary 2020 Oct` → shows summary of a specific year and month"},{"lineNumber":295,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":296,"author":{"gitId":"pinfang"},"content":"`summary -a` → shows the summary of total expenditure"},{"lineNumber":297,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":298,"author":{"gitId":"pinfang"},"content":"Figure below shows an example for Summary feature: \u003cbr\u003e"},{"lineNumber":299,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":300,"author":{"gitId":"pinfang"},"content":"![Output for Summary](images/summaryOutput.png)"},{"lineNumber":301,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":302,"author":{"gitId":"xieyaoyue"},"content":"### 3.12 Visualizing Data: `draw` "},{"lineNumber":303,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":304,"author":{"gitId":"Wu-Haitao"},"content":"This command generates graphs showing your spending records of a particular year or month. The graphs will be in an Excel file at the same folder of this application."},{"lineNumber":305,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":306,"author":{"gitId":"Wu-Haitao"},"content":"Format: "},{"lineNumber":307,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":308,"author":{"gitId":"pinfang"},"content":"`draw [YEAR] [MONTH] [-a]`"},{"lineNumber":309,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":310,"author":{"gitId":"Wu-Haitao"},"content":"Examples of usage: "},{"lineNumber":311,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":312,"author":{"gitId":"Wu-Haitao"},"content":"`draw` → shows the graph of current month"},{"lineNumber":313,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":314,"author":{"gitId":"Wu-Haitao"},"content":"`draw -a` → shows graph of all expenses"},{"lineNumber":315,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":316,"author":{"gitId":"Wu-Haitao"},"content":"Figure below shows an example for exporting data feature: \u003cbr\u003e"},{"lineNumber":317,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":318,"author":{"gitId":"Wu-Haitao"},"content":"![image](images/drawCommand1_1.png)"},{"lineNumber":319,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":320,"author":{"gitId":"Wu-Haitao"},"content":"In the Excel file generated you\u0027ll get the charts shown below:"},{"lineNumber":321,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":322,"author":{"gitId":"Wu-Haitao"},"content":"This chart shows the spendings in all years"},{"lineNumber":323,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":324,"author":{"gitId":"Wu-Haitao"},"content":"![image](images/drawCommand1_2.png)"},{"lineNumber":325,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":326,"author":{"gitId":"Wu-Haitao"},"content":"This chart shows the proportions of spendings with different categories in all years"},{"lineNumber":327,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":328,"author":{"gitId":"Wu-Haitao"},"content":"![image](images/drawCommand1_3.png)"},{"lineNumber":329,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":330,"author":{"gitId":"Wu-Haitao"},"content":"`draw 2020` → shows the graph of year 2020"},{"lineNumber":331,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":332,"author":{"gitId":"Wu-Haitao"},"content":"Figure below shows an example for exporting data feature: \u003cbr\u003e"},{"lineNumber":333,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":334,"author":{"gitId":"Wu-Haitao"},"content":"![image](images/drawCommand2_1.png)"},{"lineNumber":335,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":336,"author":{"gitId":"Wu-Haitao"},"content":"In the Excel file generated you\u0027ll get the charts shown below:"},{"lineNumber":337,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":338,"author":{"gitId":"Wu-Haitao"},"content":"This chart shows the spendings of different months in year 2020"},{"lineNumber":339,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":340,"author":{"gitId":"Wu-Haitao"},"content":"![image](images/drawCommand2_2.png)"},{"lineNumber":341,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":342,"author":{"gitId":"Wu-Haitao"},"content":"This chart shows the proportions of spendings with different categories in year 2020"},{"lineNumber":343,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":344,"author":{"gitId":"Wu-Haitao"},"content":"![image](images/drawCommand2_3.png)"},{"lineNumber":345,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":346,"author":{"gitId":"Wu-Haitao"},"content":"`draw 2020 Oct` → shows the graph of Oct 2020"},{"lineNumber":347,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":348,"author":{"gitId":"Wu-Haitao"},"content":"Figure below shows an example for exporting data feature: \u003cbr\u003e"},{"lineNumber":349,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":350,"author":{"gitId":"Wu-Haitao"},"content":"![image](images/drawCommand3_1.png)"},{"lineNumber":351,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":352,"author":{"gitId":"Wu-Haitao"},"content":"In the Excel file generated you\u0027ll get the charts shown below:"},{"lineNumber":353,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":354,"author":{"gitId":"Wu-Haitao"},"content":"This chart shows the spendings of different days in October 2020"},{"lineNumber":355,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":356,"author":{"gitId":"Wu-Haitao"},"content":"![image](images/drawCommand3_2.png)"},{"lineNumber":357,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":358,"author":{"gitId":"Wu-Haitao"},"content":"This chart shows the proportions of spendings with different categories in October 2020"},{"lineNumber":359,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":360,"author":{"gitId":"Wu-Haitao"},"content":"![image](images/drawCommand3_3.png)"},{"lineNumber":361,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":362,"author":{"gitId":"xieyaoyue"},"content":"### 3.13 Exporting Data: `export` "},{"lineNumber":363,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":364,"author":{"gitId":"Wu-Haitao"},"content":"This command exports the data to an Excel file at the given location."},{"lineNumber":365,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":366,"author":{"gitId":"Wu-Haitao"},"content":"Format: "},{"lineNumber":367,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":368,"author":{"gitId":"Wu-Haitao"},"content":"`export PATH`"},{"lineNumber":369,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":370,"author":{"gitId":"Wu-Haitao"},"content":"Example of usage: "},{"lineNumber":371,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":372,"author":{"gitId":"pinfang"},"content":"`export F:\\MyFolder` → exports the records to an Excel file located at F:\\MyFolder"},{"lineNumber":373,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":374,"author":{"gitId":"Wu-Haitao"},"content":"Figure below shows an example for exporting data feature: \u003cbr\u003e"},{"lineNumber":375,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":376,"author":{"gitId":"Wu-Haitao"},"content":"![image](images/exportCommand_1.png)"},{"lineNumber":377,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":378,"author":{"gitId":"Wu-Haitao"},"content":"The Excel file generated will contain all the spending records as shown below: \u003cbr\u003e"},{"lineNumber":379,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":380,"author":{"gitId":"Wu-Haitao"},"content":"![image](images/exportCommand_2.png)"},{"lineNumber":381,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":382,"author":{"gitId":"xieyaoyue"},"content":"### 3.14 Editing Spending: `edit`"},{"lineNumber":383,"author":{"gitId":"killingbear999"},"content":"This command edits the existing records in the spending list."},{"lineNumber":384,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":385,"author":{"gitId":"killingbear999"},"content":"🛈 The system only supports three different currencies, including SGD, USD and CNY."},{"lineNumber":386,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":387,"author":{"gitId":"killingbear999"},"content":"🛈 You shall enter the command `spending list -a` before entering `edit` to get the actual `INDEX` of items in the spending list"},{"lineNumber":388,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":389,"author":{"gitId":"killingbear999"},"content":"Format:"},{"lineNumber":390,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":391,"author":{"gitId":"killingbear999"},"content":"`edit INDEX [-c CATEGORY] [-d NEW DESCRIPTION] [-s CURRENCY NEW SPENDING]`"},{"lineNumber":392,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":393,"author":{"gitId":"killingbear999"},"content":"Example of usage:"},{"lineNumber":394,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":395,"author":{"gitId":"killingbear999"},"content":"`edit 2 -c others` → edits the category of the second item in the spending list to others"},{"lineNumber":396,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":397,"author":{"gitId":"xieyaoyue"},"content":"Figure below shows an example for Edit Spending feature: \u003cbr\u003e"},{"lineNumber":398,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":399,"author":{"gitId":"killingbear999"},"content":"![Example for Editing Spending](images/EditExample.png)"},{"lineNumber":400,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":401,"author":{"gitId":"xieyaoyue"},"content":"### 3.15 Exiting Program: `logout`"},{"lineNumber":402,"author":{"gitId":"xieyaoyue"},"content":"This command exits the application."},{"lineNumber":403,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":404,"author":{"gitId":"killingbear999"},"content":"Format:"},{"lineNumber":405,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":406,"author":{"gitId":"killingbear999"},"content":"`logout`"},{"lineNumber":407,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":408,"author":{"gitId":"killingbear999"},"content":"Example of usage:"},{"lineNumber":409,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":410,"author":{"gitId":"killingbear999"},"content":"`logout` → exits the program"},{"lineNumber":411,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":412,"author":{"gitId":"killingbear999"},"content":"Figure below shows an example for Exiting Program feature: \u003cbr\u003e"},{"lineNumber":413,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":414,"author":{"gitId":"killingbear999"},"content":"![Example for Exiting Program](images/Exit.png)"},{"lineNumber":415,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":416,"author":{"gitId":"xieyaoyue"},"content":"## **4. Useful Hidden Features**"},{"lineNumber":417,"author":{"gitId":"killingbear999"},"content":"This section shows you the hidden features which serve as notifications and interactions with the user."},{"lineNumber":418,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":419,"author":{"gitId":"xieyaoyue"},"content":"### 4.1 Reminder "},{"lineNumber":420,"author":{"gitId":"killingbear999"},"content":"Reminds you about your weekly expenditures, and the amount of budget left when you start the application."},{"lineNumber":421,"author":{"gitId":"xieyaoyue"},"content":"It will also warn you if you are reaching your budget limit. \u003cbr\u003e"},{"lineNumber":422,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":423,"author":{"gitId":"pinfang"},"content":"![reminder message](images/reminderMessage.png)"},{"lineNumber":424,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":425,"author":{"gitId":"pinfang"},"content":"Note: A new week starts on Monday."},{"lineNumber":426,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":427,"author":{"gitId":"xieyaoyue"},"content":"### 4.2 Warning"},{"lineNumber":428,"author":{"gitId":"xieyaoyue"},"content":"Warns you when you are about to overspend. After you add a spending item and the total expenditure is more than the budget threshold, the below warning message will appear. \u003cbr\u003e"},{"lineNumber":429,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":430,"author":{"gitId":"pinfang"},"content":"![reminder message](images/warningMessage.png)"},{"lineNumber":431,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":432,"author":{"gitId":"pinfang"},"content":"Note: You would receive the warning message only after setting the budget limit."},{"lineNumber":433,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":434,"author":{"gitId":"xieyaoyue"},"content":"### 4.3 Encouragement"},{"lineNumber":435,"author":{"gitId":"xieyaoyue"},"content":"Being able to create your budget is a great start, but if you do not have the willpower to stick to the budget you have set, you will soon discover that using this application is a waste of your time. Hence, this feature is implemented to motivate you in keeping up your efforts in budgeting. An encouragement message will be shown every four times you add an item to the spending list."},{"lineNumber":436,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":437,"author":{"gitId":"xieyaoyue"},"content":"Figure below shows an example of encouragement message. \u003cbr\u003e"},{"lineNumber":438,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":439,"author":{"gitId":"xieyaoyue"},"content":"![image](https://user-images.githubusercontent.com/45732128/97827031-108ed880-1cfe-11eb-8071-fb5dc906b216.png)"},{"lineNumber":440,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":441,"author":{"gitId":"xieyaoyue"},"content":"## **5. FAQ**"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? "},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"xieyaoyue"},"content":"**A**: Install the app in the other computer and copy the data/duke.json to the same folder. When you start the app, it will automatically detect and load the backup data."},{"lineNumber":446,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":447,"author":{"gitId":"xieyaoyue"},"content":"**Q**: Are the commands case-sensitive?"},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"Wu-Haitao"},"content":"**A**: Yes, they are. To execute the commands properly, please strictly follow the format given above."},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"xieyaoyue"},"content":"## **6. Command Summary**"},{"lineNumber":452,"author":{"gitId":"-"},"content":""},{"lineNumber":453,"author":{"gitId":"pinfang"},"content":"| Action | Format | Examples |"},{"lineNumber":454,"author":{"gitId":"pinfang"},"content":"|:------:|--------|----------|"},{"lineNumber":455,"author":{"gitId":"pinfang"},"content":"|[add](#31-adding-spending-add) | `add -c CATEGORY -d DESCRIPTION -s CURRENCY SPENDING` | add -c Food -d chicken rice -s SGD 5.0|"},{"lineNumber":456,"author":{"gitId":"pinfang"},"content":"|[clear](#32-clearing-data-clear) | `clear [-b] [-s SPENDING_INDEX] [-r REPAYMENT_INDEX]` | clear -s 1|"},{"lineNumber":457,"author":{"gitId":"pinfang"},"content":"|[convert](#310-converting-currency-convert) | `convert -s INPUT_CURRENCY -t OUTPUT_CURRENCY` | convert -s SGD -t USD|"},{"lineNumber":458,"author":{"gitId":"pinfang"},"content":"|[draw](#312-visualizing-data-draw) | `draw [YEAR] [MONTH] [-a]`| draw 2020|"},{"lineNumber":459,"author":{"gitId":"xieyaoyue"},"content":"|[edit](#314-editing-spending-edit) | `edit INDEX [-c NEW_CATEGORY] [-d NEW_DESCRIPTION] [-s NEW_CURRENCY NEW_SPENDING]` | edit 1 -d bubble tea|"},{"lineNumber":460,"author":{"gitId":"pinfang"},"content":"|[export](#313-exporting-data-export) | `export PATH`| export F:\\MyFolder|"},{"lineNumber":461,"author":{"gitId":"killingbear999"},"content":"|[help](#33-viewing-help-help) | `help`| help|"},{"lineNumber":462,"author":{"gitId":"killingbear999"},"content":"|[logout](#315-exiting-program-logout) | `logout`| logout|"},{"lineNumber":463,"author":{"gitId":"killingbear999"},"content":"|[purge data](#34-purging-data-purge-data) | `purge data`| purge data|"},{"lineNumber":464,"author":{"gitId":"pinfang"},"content":"|[repay](#39-inputting-repayment-information-repay) | `repay -d NAME -s CURRENCY AMOUNT -t DEADLINE` | repay -d Johnny -s SGD 5.00 -t 2020-12-02|"},{"lineNumber":465,"author":{"gitId":"pinfang"},"content":"|[repayment list](#35-viewing-repayment-list-summary-repayment-list) | `repayment list`| repayment list|"},{"lineNumber":466,"author":{"gitId":"pinfang"},"content":"|[set](#38-setting-budget-limit-set) | `set -s CURRENCY AMOUNT` | set -s SGD 100.00|"},{"lineNumber":467,"author":{"gitId":"pinfang"},"content":"|[spending list](#36-viewing-spending-list-summary-spending-list) | `spending list [YEAR] [MONTH] [-c CATEGORY] [-a]`| spending list 2020 Jul|"},{"lineNumber":468,"author":{"gitId":"pinfang"},"content":"|[summary](#311-viewing-summary-summary) | `summary [YEAR] [MONTH] [-a]` | summary 2020 Jul |"},{"lineNumber":469,"author":{"gitId":"killingbear999"},"content":"|[view](#37-viewing-budget-limit-view) | `view`| view|"}],"authorContributionMap":{"Wu-Haitao":74,"k-walter":47,"killingbear999":128,"xieyaoyue":110,"-":32,"pinfang":78}},{"path":"docs/team/k-walter.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"# Walter Kong - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"Cent Wise Dollar Wise is a desktop application for money manager, optimised for use via a Command Line Interface (CLI). "},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"It is specially designed for the hostel students in NUS which aims to help these students to manage their "},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"financial situation and track their spending efficiently. "},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"### Summary of Contributions"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"* Code contribution: General"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"  1. `Data` class"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"  1. `Command` superclass, to standardise implementation and guarantee behaviour"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"  1. `Command#execute` refactor, to pass `SpendingList`, `Budget`, `RepaymentList` to commands"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"  1. `DukeException#getMessage` refactor, to use with Java `Exception`"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"  1. `Parser` superclass, to standardise implementation and guarantee behaviour"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"  1. `Parser` static methods, to reuse common arguments and parsing"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"  1. `Storage` class"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"  1. `Storage` methods within `SpendingList`, `Budget`, `RepaymentList`"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"  1. `Item#getClass` method, as a comparator"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"  1. `RepaymentList` methods"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"  1. `SpendingList` methods"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"  "},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"* Code contribution: Parser"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"  1. `AddParser` class"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"  1. `ClearParser` class"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"  1. `ConvertParser` class"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"  1. `DateParser` superclass, to reflect `DateCommand` subclass"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"  1. `EditParser` class"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"  1. `RepayParser` class"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"  1. `SetParser` class"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"  1. `SpendingListParser` class"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"  1. `Spending` class, as wrapper for `symbol` and `amount`"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"  1. `YearMonth` class, as wrapper for `year` and `month`"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"* Code contribution: Command"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"  1. `DateCommand` abstract class, to guarantee input format for `DrawCommand`, `SpendingListCommand`, `Summarycommand`"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"  1. `MultipleCommand` wrapper, for `Command`s"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"  1. `SpendingListCommand` class"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"  "},{"lineNumber":39,"author":{"gitId":"k-walter"},"content":"* Code contribution: Test"},{"lineNumber":40,"author":{"gitId":"k-walter"},"content":"  1. `ParserTest` all `Parser`, by abstracting tests"},{"lineNumber":41,"author":{"gitId":"k-walter"},"content":"  1. `SpendingListTest`"},{"lineNumber":42,"author":{"gitId":"k-walter"},"content":"  1. `StoragePathTest`"},{"lineNumber":43,"author":{"gitId":"k-walter"},"content":"  1. `StorageTest`"},{"lineNumber":44,"author":{"gitId":"k-walter"},"content":"  "},{"lineNumber":45,"author":{"gitId":"k-walter"},"content":"  Refer this link for more information: "},{"lineNumber":46,"author":{"gitId":"k-walter"},"content":"  [code contributions](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dk-walter\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dk-walter\u0026tabRepo\u003dAY2021S1-CS2113T-F14-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003dfunctional-code~test-code~other)"},{"lineNumber":47,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":48,"author":{"gitId":"k-walter"},"content":"* UG documentation contributions:"},{"lineNumber":49,"author":{"gitId":"k-walter"},"content":"  1. [Section 3 Command Features interpretation, examples and summary of command line specification](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#3-command-features)"},{"lineNumber":50,"author":{"gitId":"k-walter"},"content":"  1. [Section 3.5 Repayment List and its screenshot](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#35-viewing-repayment-list-summary-repayment-list)"},{"lineNumber":51,"author":{"gitId":"k-walter"},"content":"  1. [Section 3.6 Spending List, examples and its screenshot](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#36-viewing-spending-list-summary-spending-list)"},{"lineNumber":52,"author":{"gitId":"k-walter"},"content":"  "},{"lineNumber":53,"author":{"gitId":"k-walter"},"content":"* DG documentation contributions:"},{"lineNumber":54,"author":{"gitId":"k-walter"},"content":"  1. [Section 3.1 Edit Architecture UML](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#31-architecture)"},{"lineNumber":55,"author":{"gitId":"k-walter"},"content":"  1. [Section 3.3 Edit Parser component](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#33-parser-component)"},{"lineNumber":56,"author":{"gitId":"k-walter"},"content":"  1. [Section 3.5.1 Edit Spending List class diagram](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#351-spending-list)"},{"lineNumber":57,"author":{"gitId":"k-walter"},"content":"  1. [Section 3.5.2 Edit Repayment List class diagram](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#352-repayment-list)"},{"lineNumber":58,"author":{"gitId":"k-walter"},"content":"  1. [Section 3.5.3 Edit Budget and its class diagram](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#353-budget)"},{"lineNumber":59,"author":{"gitId":"k-walter"},"content":"  1. [Section 3.6 Edit Storage component and its class diagram](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#36-storage-component)"},{"lineNumber":60,"author":{"gitId":"k-walter"},"content":"  "},{"lineNumber":61,"author":{"gitId":"k-walter"},"content":"* Team-based tasks contributions:"},{"lineNumber":62,"author":{"gitId":"k-walter"},"content":"  1. Code quality enhancements, eg SLAP, happy path, reusing code, `stream`"},{"lineNumber":63,"author":{"gitId":"k-walter"},"content":"  1. Fix bugs and closed [\u003e20 issues](https://github.com/AY2021S1-CS2113T-F14-2/tp/issues?q\u003dis%3Aclosed+is%3Aissue+assignee%3Ak-walter+)"},{"lineNumber":64,"author":{"gitId":"k-walter"},"content":"  1. TDD approach of red-green-refactor, increasing coverage and preventing breakage during refactors"},{"lineNumber":65,"author":{"gitId":"k-walter"},"content":"  1. Multiple abstraction and refactor of major methods"},{"lineNumber":66,"author":{"gitId":"k-walter"},"content":"  1. Debugging of logical errors during refactoring"},{"lineNumber":67,"author":{"gitId":"k-walter"},"content":"  1. Proofread DG"},{"lineNumber":68,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":69,"author":{"gitId":"k-walter"},"content":"* Review/mentoring contributions:"},{"lineNumber":70,"author":{"gitId":"k-walter"},"content":"  1. Reviews PRs: [Link to PRs Reviewed](https://github.com/AY2021S1-CS2113T-F14-2/tp/pulls?q\u003dis%3Apr+reviewed-by%3Ak-walter+)"},{"lineNumber":71,"author":{"gitId":"k-walter"},"content":"  1. Tests and reports bugs"},{"lineNumber":72,"author":{"gitId":"k-walter"},"content":"  1. Zoom debugging."},{"lineNumber":73,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":74,"author":{"gitId":"k-walter"},"content":"* Contributions beyond the project team:"},{"lineNumber":75,"author":{"gitId":"k-walter"},"content":"  1. Bugs reported in PE dry run: [Link to PE dry run](https://github.com/k-walter/ped/issues) "},{"lineNumber":76,"author":{"gitId":"k-walter"},"content":"  2. DG reviews"}],"authorContributionMap":{"k-walter":76}},{"path":"docs/team/killingbear999.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"# Wang Zihao - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"Cent Wise Dollar Wise is a desktop application for money manager, optimised for use via a Command Line Interface (CLI). "},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"It is specially designed for the hostel students in NUS which aims to help these students to manage their "},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"financial situation and track their spending efficiently. "},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"### Summary of Contributions"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"* Code contribution: "},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"  1. `ConvertCommand` class"},{"lineNumber":11,"author":{"gitId":"killingbear999"},"content":"  2. `EditCommand` class"},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":"  3. `ExitCommand` class"},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":"  4. `RepayCommand` class"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"  5. `RepaymentListCommand` class"},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":"  6. `SetBudgetCommmand` class"},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":"  7. `ViewBudgetCommand` class"},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"  8. `WarnCommand` class"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"  9. `Repay` class"},{"lineNumber":19,"author":{"gitId":"killingbear999"},"content":"  10. `DateTimeFormatter` class"},{"lineNumber":20,"author":{"gitId":"killingbear999"},"content":"  11. `DecimalFormatter` class"},{"lineNumber":21,"author":{"gitId":"killingbear999"},"content":"  12. `AmountConverter` class"},{"lineNumber":22,"author":{"gitId":"killingbear999"},"content":"  13. `SpendingListCategoriser` class"},{"lineNumber":23,"author":{"gitId":"killingbear999"},"content":"  14. `Ui` class (some functions and methods)"},{"lineNumber":24,"author":{"gitId":"killingbear999"},"content":"  15. `SpendingList` class (some functions and methods)"},{"lineNumber":25,"author":{"gitId":"killingbear999"},"content":"  16. `AddCommand` class (some functions and methods)"},{"lineNumber":26,"author":{"gitId":"killingbear999"},"content":"  17. `exceptions` related to the above classes"},{"lineNumber":27,"author":{"gitId":"killingbear999"},"content":"  18. `test` some tests"},{"lineNumber":28,"author":{"gitId":"killingbear999"},"content":"  "},{"lineNumber":29,"author":{"gitId":"killingbear999"},"content":"  Refer this link for more information: "},{"lineNumber":30,"author":{"gitId":"killingbear999"},"content":"  [functional code](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dkillingbear999\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dkillingbear999\u0026tabRepo\u003dAY2021S1-CS2113T-F14-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code)"},{"lineNumber":31,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":32,"author":{"gitId":"killingbear999"},"content":"* UG documentation contributions:"},{"lineNumber":33,"author":{"gitId":"killingbear999"},"content":"  1. [Section 3.7 Viewing Budget Limit](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#37-viewing-budget-limit-view)"},{"lineNumber":34,"author":{"gitId":"killingbear999"},"content":"  2. [Section 3.8 Setting Budget Limit](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#38-setting-budget-limit-set)"},{"lineNumber":35,"author":{"gitId":"killingbear999"},"content":"  3. [Section 3.9 Inputting Repayment Information](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#39-inputting-repayment-information-repay)"},{"lineNumber":36,"author":{"gitId":"killingbear999"},"content":"  4. [Section 3.10 Converting Currency](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#310-converting-currency-convert)"},{"lineNumber":37,"author":{"gitId":"killingbear999"},"content":"  5. [Section 3.14 Editing Spending](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#314-editing-spending-edit)"},{"lineNumber":38,"author":{"gitId":"killingbear999"},"content":"  6. [Section 3.15 Exiting Program](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#315-exiting-program-logout)"},{"lineNumber":39,"author":{"gitId":"killingbear999"},"content":"  "},{"lineNumber":40,"author":{"gitId":"killingbear999"},"content":"* DG documentation contributions:"},{"lineNumber":41,"author":{"gitId":"killingbear999"},"content":"  1. [Section 4.3 Edit Feature and its sequence diagram](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#43-edit-feature)"},{"lineNumber":42,"author":{"gitId":"killingbear999"},"content":"  2. [Section 4.4 Convert Feature and its sequence diagram](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#44-convert-feature)"},{"lineNumber":43,"author":{"gitId":"killingbear999"},"content":"  3. [Section 4.5 Set Budget Feature and its sequence diagram](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#45-set-budget-feature)"},{"lineNumber":44,"author":{"gitId":"killingbear999"},"content":"  4. [Section 4.6 Warn Feature and its sequence diagram](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#46-warn-feature)"},{"lineNumber":45,"author":{"gitId":"killingbear999"},"content":"  5. [Section 4.7 Repay Feature and its sequence diagram](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#47-repay-feature)"},{"lineNumber":46,"author":{"gitId":"killingbear999"},"content":"  6. [Appendix B User Stories](https://ay2021s1-cs2113t-f14-2.github.io/tp/DeveloperGuide.html#appendix-b-user-stories)"},{"lineNumber":47,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":48,"author":{"gitId":"killingbear999"},"content":"* Team-based tasks contributions:"},{"lineNumber":49,"author":{"gitId":"killingbear999"},"content":"  1. Necessary general code enhancements"},{"lineNumber":50,"author":{"gitId":"killingbear999"},"content":"  2. Maintaining the issue tracker"},{"lineNumber":51,"author":{"gitId":"killingbear999"},"content":"  3. Updating user/developer docs that are not specific to a feature"},{"lineNumber":52,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":53,"author":{"gitId":"killingbear999"},"content":"* Review/mentoring contributions:"},{"lineNumber":54,"author":{"gitId":"killingbear999"},"content":"  1. Reviews PRs: [Link to PRs Reviewed](https://github.com/AY2021S1-CS2113T-F14-2/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3Akillingbear999)"},{"lineNumber":55,"author":{"gitId":"killingbear999"},"content":"  2. Comments in the issue trackers"},{"lineNumber":56,"author":{"gitId":"killingbear999"},"content":"  3. Tests and reports bugs"},{"lineNumber":57,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":58,"author":{"gitId":"killingbear999"},"content":"* Contributions beyond the project team:"},{"lineNumber":59,"author":{"gitId":"killingbear999"},"content":"  1. Bugs reported in PE dry run: [Link to PE dry run](https://github.com/killingbear999/ped/issues) "},{"lineNumber":60,"author":{"gitId":"killingbear999"},"content":"  2. DG reviews"}],"authorContributionMap":{"killingbear999":60}},{"path":"docs/team/pinfang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pinfang"},"content":"# Yen Pin Fang - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":3,"author":{"gitId":"pinfang"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"pinfang"},"content":"Cent Wise Dollar Wise is a desktop application for money manager, optimised for use via a Command Line Interface (CLI). "},{"lineNumber":5,"author":{"gitId":"pinfang"},"content":"It is specially designed for the hostel students in NUS which aims to help these students to manage their "},{"lineNumber":6,"author":{"gitId":"pinfang"},"content":"financial situation and track their spending efficiently. "},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":"### Summary of Contributions"},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":"* Code contribution: "},{"lineNumber":10,"author":{"gitId":"pinfang"},"content":"    * `Item` class"},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":"    * `Category` class"},{"lineNumber":12,"author":{"gitId":"pinfang"},"content":"    * `SpendingList` class"},{"lineNumber":13,"author":{"gitId":"pinfang"},"content":"    * `SummaryCommand` class"},{"lineNumber":14,"author":{"gitId":"pinfang"},"content":"    * `ReminderCommand` class"},{"lineNumber":15,"author":{"gitId":"pinfang"},"content":"    * `DateFormatter` class"},{"lineNumber":16,"author":{"gitId":"pinfang"},"content":"    * `Ui` class (some parts)"},{"lineNumber":17,"author":{"gitId":"pinfang"},"content":"    * `InvalidMonthException` class"},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"    * `InvalidYearException` class"},{"lineNumber":19,"author":{"gitId":"pinfang"},"content":"    "},{"lineNumber":20,"author":{"gitId":"pinfang"},"content":"    Refer this link for more information: "},{"lineNumber":21,"author":{"gitId":"pinfang"},"content":"    [`functional code`](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dpinfang\u0026tabRepo\u003dAY2021S1-CS2113T-F14-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":22,"author":{"gitId":"pinfang"},"content":" "},{"lineNumber":23,"author":{"gitId":"pinfang"},"content":"* UG documentation contributions:"},{"lineNumber":24,"author":{"gitId":"pinfang"},"content":"    * [Section 3.11 Viewing summary](https://github.com/pinfang/tp/blob/update_UG/docs/UserGuide.md#311-viewing-summary-summary)"},{"lineNumber":25,"author":{"gitId":"pinfang"},"content":"    * [Section 4.1 Reminder](https://github.com/pinfang/tp/blob/update_UG/docs/UserGuide.md#41-reminder)"},{"lineNumber":26,"author":{"gitId":"pinfang"},"content":"    * [Section 4.2 Warning](https://github.com/pinfang/tp/blob/update_UG/docs/UserGuide.md#42-warning)"},{"lineNumber":27,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":28,"author":{"gitId":"pinfang"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":30,"author":{"gitId":"pinfang"},"content":"* DG documentation contributions: "},{"lineNumber":31,"author":{"gitId":"pinfang"},"content":"    * [Section 3.5 Data Component](https://github.com/pinfang/tp/blob/update_UG/docs/DeveloperGuide.md#35-data-component)"},{"lineNumber":32,"author":{"gitId":"pinfang"},"content":"    * [Section 4.8 Summary Feature](https://github.com/pinfang/tp/blob/update_UG/docs/DeveloperGuide.md#48-summary-feature)"},{"lineNumber":33,"author":{"gitId":"pinfang"},"content":"    * [Section 4.9 Reminder Feature](https://github.com/pinfang/tp/blob/update_UG/docs/DeveloperGuide.md#49-reminder-feature)"},{"lineNumber":34,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":35,"author":{"gitId":"pinfang"},"content":"* Contributions to team-based tasks:"},{"lineNumber":36,"author":{"gitId":"pinfang"},"content":"    * Maintaining the issue tracker"},{"lineNumber":37,"author":{"gitId":"pinfang"},"content":"    * Setting the deadline of milestone"},{"lineNumber":38,"author":{"gitId":"pinfang"},"content":"    * Updating user/developer docs that are not specific to a feature"},{"lineNumber":39,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":40,"author":{"gitId":"pinfang"},"content":"* Review/mentoring contributions:"},{"lineNumber":41,"author":{"gitId":"killingbear999"},"content":"    * Reviewing PRs: [link](https://github.com/AY2021S1-CS2113T-F14-2/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3Apinfang)"},{"lineNumber":42,"author":{"gitId":"pinfang"},"content":"    * Reporting bugs to team members"},{"lineNumber":43,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":44,"author":{"gitId":"pinfang"},"content":"* Contributions beyond the project team:"},{"lineNumber":45,"author":{"gitId":"pinfang"},"content":"    * Reporting bugs for other team\u0027s product during PE dry-run: [link](https://github.com/pinfang/ped/issues)"},{"lineNumber":46,"author":{"gitId":"pinfang"},"content":"    * DG reviews for other team "}],"authorContributionMap":{"killingbear999":1,"pinfang":45}},{"path":"docs/team/wu-haitao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Wu-Haitao"},"content":"# Wu Haitao - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":3,"author":{"gitId":"Wu-Haitao"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"Wu-Haitao"},"content":"Cent Wise Dollar Wise is a desktop application for money manager, optimised for use via a Command Line Interface (CLI). "},{"lineNumber":5,"author":{"gitId":"Wu-Haitao"},"content":"It is specially designed for the hostel students in NUS which aims to help these students to manage their "},{"lineNumber":6,"author":{"gitId":"Wu-Haitao"},"content":"financial situation and track their spending efficiently. "},{"lineNumber":7,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":8,"author":{"gitId":"Wu-Haitao"},"content":"### Summary of Contributions"},{"lineNumber":9,"author":{"gitId":"Wu-Haitao"},"content":"* Code contribution: "},{"lineNumber":10,"author":{"gitId":"Wu-Haitao"},"content":"  1. `Ui` class"},{"lineNumber":11,"author":{"gitId":"Wu-Haitao"},"content":"  2. `ExportCommand` class"},{"lineNumber":12,"author":{"gitId":"Wu-Haitao"},"content":"  3. `DrawCommand` class"},{"lineNumber":13,"author":{"gitId":"Wu-Haitao"},"content":"  4. `DateFormatter` class (some functions and methods)"},{"lineNumber":14,"author":{"gitId":"Wu-Haitao"},"content":"  "},{"lineNumber":15,"author":{"gitId":"Wu-Haitao"},"content":"  Refer these links for more information: "},{"lineNumber":16,"author":{"gitId":"Wu-Haitao"},"content":"  [Functional Code](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dWu-Haitao\u0026tabRepo\u003dAY2021S1-CS2113T-F14-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code)"},{"lineNumber":17,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":18,"author":{"gitId":"Wu-Haitao"},"content":"* UG documentation contributions:"},{"lineNumber":19,"author":{"gitId":"Wu-Haitao"},"content":"  1. Section 3.12 Data visualization"},{"lineNumber":20,"author":{"gitId":"Wu-Haitao"},"content":"   "},{"lineNumber":21,"author":{"gitId":"Wu-Haitao"},"content":"     [3.12 Visualizing Data](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#312-visualizing-data-draw)"},{"lineNumber":22,"author":{"gitId":"Wu-Haitao"},"content":"     "},{"lineNumber":23,"author":{"gitId":"Wu-Haitao"},"content":"  2. Section 3.13 Exporting Data"},{"lineNumber":24,"author":{"gitId":"Wu-Haitao"},"content":"  "},{"lineNumber":25,"author":{"gitId":"Wu-Haitao"},"content":"     [3.13 Exporting Data](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#313-exporting-data-export)"},{"lineNumber":26,"author":{"gitId":"Wu-Haitao"},"content":"     "},{"lineNumber":27,"author":{"gitId":"Wu-Haitao"},"content":"  3. Section 5 FAQ"},{"lineNumber":28,"author":{"gitId":"Wu-Haitao"},"content":"     "},{"lineNumber":29,"author":{"gitId":"Wu-Haitao"},"content":"     [5 FAQ](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#5-faq)"},{"lineNumber":30,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":31,"author":{"gitId":"Wu-Haitao"},"content":"* DG documentation contributions:"},{"lineNumber":32,"author":{"gitId":"Wu-Haitao"},"content":"  1. Section 4.11 Export Feature and its sequence diagram"},{"lineNumber":33,"author":{"gitId":"Wu-Haitao"},"content":"     "},{"lineNumber":34,"author":{"gitId":"Wu-Haitao"},"content":"     [4.11 Export Feature](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#411-export-feature)"},{"lineNumber":35,"author":{"gitId":"Wu-Haitao"},"content":"      "},{"lineNumber":36,"author":{"gitId":"Wu-Haitao"},"content":"  2. Section 4.12 Draw Feature and its sequence diagram"},{"lineNumber":37,"author":{"gitId":"Wu-Haitao"},"content":"    "},{"lineNumber":38,"author":{"gitId":"Wu-Haitao"},"content":"     [4.12 Draw Feature](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#412-draw-feature)"},{"lineNumber":39,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":40,"author":{"gitId":"Wu-Haitao"},"content":"* Team-based tasks contributions:"},{"lineNumber":41,"author":{"gitId":"Wu-Haitao"},"content":"  1. Necessary general code enhancements"},{"lineNumber":42,"author":{"gitId":"Wu-Haitao"},"content":"  2. Issue tracker maintenance"},{"lineNumber":43,"author":{"gitId":"Wu-Haitao"},"content":"  3. User/developer docs updates"},{"lineNumber":44,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":45,"author":{"gitId":"Wu-Haitao"},"content":"* Review/mentoring contributions:"},{"lineNumber":46,"author":{"gitId":"Wu-Haitao"},"content":"  1. PR Reviewing "},{"lineNumber":47,"author":{"gitId":"Wu-Haitao"},"content":"     "},{"lineNumber":48,"author":{"gitId":"Wu-Haitao"},"content":"     Refer this link for more information:"},{"lineNumber":49,"author":{"gitId":"Wu-Haitao"},"content":"     [PRs Reviewed](https://github.com/AY2021S1-CS2113T-F14-2/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3AWu-Haitao)"},{"lineNumber":50,"author":{"gitId":"Wu-Haitao"},"content":"  "},{"lineNumber":51,"author":{"gitId":"Wu-Haitao"},"content":"  2. Commenting in the issue trackers"},{"lineNumber":52,"author":{"gitId":"Wu-Haitao"},"content":"  3. Tests and bug reports "},{"lineNumber":53,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":54,"author":{"gitId":"Wu-Haitao"},"content":"* Contributions beyond the project team:"},{"lineNumber":55,"author":{"gitId":"Wu-Haitao"},"content":"  1. Bugs reported in PE dry run and actual PE"},{"lineNumber":56,"author":{"gitId":"Wu-Haitao"},"content":"    "},{"lineNumber":57,"author":{"gitId":"Wu-Haitao"},"content":"     Refer these links for more information:"},{"lineNumber":58,"author":{"gitId":"Wu-Haitao"},"content":"     [PE dry run](https://github.com/Wu-Haitao/ped/issues)"},{"lineNumber":59,"author":{"gitId":"Wu-Haitao"},"content":"     "},{"lineNumber":60,"author":{"gitId":"Wu-Haitao"},"content":"  2. UG\u0026DG reviews"},{"lineNumber":61,"author":{"gitId":"Wu-Haitao"},"content":"  "}],"authorContributionMap":{"Wu-Haitao":61}},{"path":"docs/team/xieyaoyue.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"# Xie Yaoyue - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"Cent Wise Dollar Wise is a desktop application for money manager, optimised for use via a Command Line Interface (CLI). "},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":"It is specially designed for the hostel students in NUS which aims to help these students to manage their "},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"financial situation and track their spending efficiently. "},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":"### Summary of Contributions"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":"* Code contribution:"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":"  1. `Ui` class (some functions and methods)"},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":"  2. `AddCommand` class (some functions and methods)"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"  3. `ClearBudgetCommand` class"},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":"  4. `ClearRepaymentListCommand` class"},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":"  5. `ClearSpendingListCommand` class"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":"  6. `EncouragementCommand` class"},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":"  7. `PurgeDataCommand` class"},{"lineNumber":17,"author":{"gitId":"xieyaoyue"},"content":"  8. `HelpCommand` class"},{"lineNumber":18,"author":{"gitId":"xieyaoyue"},"content":"  9. `Budget` class"},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":"  10. `InvalidClearBudgetException` class"},{"lineNumber":20,"author":{"gitId":"xieyaoyue"},"content":"  11. `InvalidClearRepaymentException` class"},{"lineNumber":21,"author":{"gitId":"xieyaoyue"},"content":"  12. `InvalidClearSpendingException` class"},{"lineNumber":22,"author":{"gitId":"xieyaoyue"},"content":"  "},{"lineNumber":23,"author":{"gitId":"xieyaoyue"},"content":"  Refer to this link for more information: "},{"lineNumber":24,"author":{"gitId":"xieyaoyue"},"content":"  [functional code](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dxieyaoyue\u0026tabRepo\u003dAY2021S1-CS2113T-F14-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003dfunctional-code)"},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":"  "},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":" * UG documentation contributions"},{"lineNumber":27,"author":{"gitId":"xieyaoyue"},"content":"   1. [Section 1 Introduction](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#1-introduction)"},{"lineNumber":28,"author":{"gitId":"xieyaoyue"},"content":"   2. [Section 2 Quick Start](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#2-quick-start)"},{"lineNumber":29,"author":{"gitId":"xieyaoyue"},"content":"   3. [Section 3.1 Adding Spending](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#31-adding-spending-add)"},{"lineNumber":30,"author":{"gitId":"xieyaoyue"},"content":"   4. [Section 3.2 Clearing Data](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#32-clearing-data-clear)"},{"lineNumber":31,"author":{"gitId":"xieyaoyue"},"content":"   5. [Section 3.3 Viewing Help](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#33-viewing-help-help)"},{"lineNumber":32,"author":{"gitId":"xieyaoyue"},"content":"   6. [Section 3.4 Purging Data](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#34-purging-data-purge-data)"},{"lineNumber":33,"author":{"gitId":"xieyaoyue"},"content":"   7. [Section 4.3 Encouragement](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/UserGuide.md#43-encouragement)"},{"lineNumber":34,"author":{"gitId":"xieyaoyue"},"content":"    "},{"lineNumber":35,"author":{"gitId":"xieyaoyue"},"content":" * DG documentation contributions"},{"lineNumber":36,"author":{"gitId":"xieyaoyue"},"content":"   1. [Section 1 Introduction](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#1-introduction)"},{"lineNumber":37,"author":{"gitId":"xieyaoyue"},"content":"   2. [Section 2 Setting up](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#2-setting-up)"},{"lineNumber":38,"author":{"gitId":"xieyaoyue"},"content":"   3. [Section 3.1 Architecture](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#31-architecture)"},{"lineNumber":39,"author":{"gitId":"xieyaoyue"},"content":"   4. [Section 3.2 UI Component](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#32-ui-component)"},{"lineNumber":40,"author":{"gitId":"xieyaoyue"},"content":"   5. [Section 3.4 Command Component](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#34-command-component)"},{"lineNumber":41,"author":{"gitId":"xieyaoyue"},"content":"   6. [Section 4.1 Add Feature](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#41-add-feature)"},{"lineNumber":42,"author":{"gitId":"xieyaoyue"},"content":"   7. [Section 4.2 Clear Feature](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#42-clear-feature)"},{"lineNumber":43,"author":{"gitId":"xieyaoyue"},"content":"   8. [Section 4.10 Encouragement Feature](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#410-encouragement-feature)"},{"lineNumber":44,"author":{"gitId":"xieyaoyue"},"content":"   9. [Appendix C: Non-Functional Requirements](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#appendix-c-non-functional-requirements)"},{"lineNumber":45,"author":{"gitId":"xieyaoyue"},"content":"   9. [Appendix E: Instructions for Manual Testing](https://github.com/AY2021S1-CS2113T-F14-2/tp/blob/master/docs/DeveloperGuide.md#appendix-e-instructions-for-manual-testing)"},{"lineNumber":46,"author":{"gitId":"xieyaoyue"},"content":"    "},{"lineNumber":47,"author":{"gitId":"xieyaoyue"},"content":" * Team-based tasks contributions:"},{"lineNumber":48,"author":{"gitId":"xieyaoyue"},"content":"   1. Necessary general code enhancements"},{"lineNumber":49,"author":{"gitId":"xieyaoyue"},"content":"   2. Maintaining the issue tracker"},{"lineNumber":50,"author":{"gitId":"xieyaoyue"},"content":"   3. Updating user/developer docs that are not specific to a feature"},{"lineNumber":51,"author":{"gitId":"xieyaoyue"},"content":"    "},{"lineNumber":52,"author":{"gitId":"xieyaoyue"},"content":" * Review/mentoring contributions:"},{"lineNumber":53,"author":{"gitId":"xieyaoyue"},"content":"   1. [Reviews PRs](https://github.com/AY2021S1-CS2113T-F14-2/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3Axieyaoyue)"},{"lineNumber":54,"author":{"gitId":"xieyaoyue"},"content":"   2. [Comments in the issue trackers](https://github.com/AY2021S1-CS2113T-F14-2/tp/issues?q\u003dis%3Aissue+commenter%3Axieyaoyue+is%3Aclosed)"},{"lineNumber":55,"author":{"gitId":"xieyaoyue"},"content":"   3. [Tests and reports bugs](https://github.com/AY2021S1-CS2113T-F14-2/tp/issues?q\u003dis%3Aissue+author%3Axieyaoyue+is%3Aclosed+label%3Atype.Bug+)"},{"lineNumber":56,"author":{"gitId":"xieyaoyue"},"content":"    "},{"lineNumber":57,"author":{"gitId":"xieyaoyue"},"content":" * Contributions beyond the team project:"},{"lineNumber":58,"author":{"gitId":"xieyaoyue"},"content":"   1. Report bugs for other teams during [PE dry run](https://github.com/xieyaoyue/ped/issues) and actual PE"},{"lineNumber":59,"author":{"gitId":"xieyaoyue"},"content":"   2. Review DG and UG for other teams"}],"authorContributionMap":{"xieyaoyue":59}},{"path":"gradlew.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":":init"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"-"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"-"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"@rem Execute Gradle"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":":end"},{"lineNumber":92,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":93,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":":fail"},{"lineNumber":96,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":97,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":98,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":99,"author":{"gitId":"-"},"content":"exit /b 1"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":":mainEnd"},{"lineNumber":102,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":":omega"}],"authorContributionMap":{"-":103,"pinfang":1}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.ReminderCommand;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidCommandException;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidNumberException;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import seedu.duke.parser.Parser;"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"import java.text.ParseException;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application."},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"pinfang"},"content":"    private static Ui ui;"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"    private static ReminderCommand reminderCommand;"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"    private static Data data;"},{"lineNumber":20,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"     * Runs the program until termination."},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"    private static void run() {"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"        ui.printWelcomeMessage();"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"        reminderCommand.execute(data, ui);"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"        boolean isExit \u003d false;"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"        do {"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"            try {"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"                String fullCommand \u003d ui.getUserInput();"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"                Command c \u003d Parser.parseCommand(fullCommand);"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"                c.execute(data, ui);"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"            } catch (ParseException e) {"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"                ui.printErrorMessage(new InvalidCommandException().getMessage());"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"                ui.printErrorMessage(new InvalidNumberException().getMessage());"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"            } catch (Exception e) {"},{"lineNumber":39,"author":{"gitId":"k-walter"},"content":"                ui.printErrorMessage(e.getMessage());"},{"lineNumber":40,"author":{"gitId":"k-walter"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"k-walter"},"content":"        } while (!isExit);"},{"lineNumber":42,"author":{"gitId":"Wu-Haitao"},"content":"        ui.printGoodbyeMessage();"},{"lineNumber":43,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"k-walter"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"k-walter"},"content":"     * Sets up the required objects and loads data from the storage file."},{"lineNumber":47,"author":{"gitId":"k-walter"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"k-walter"},"content":"    public Duke() {"},{"lineNumber":49,"author":{"gitId":"k-walter"},"content":"        ui \u003d new Ui();"},{"lineNumber":50,"author":{"gitId":"k-walter"},"content":"        reminderCommand \u003d new ReminderCommand();"},{"lineNumber":51,"author":{"gitId":"k-walter"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"k-walter"},"content":"            data \u003d new Data();"},{"lineNumber":53,"author":{"gitId":"k-walter"},"content":"        } catch (Exception e) {"},{"lineNumber":54,"author":{"gitId":"k-walter"},"content":"            ui.printErrorMessage(e.toString());"},{"lineNumber":55,"author":{"gitId":"k-walter"},"content":"            System.exit(0);"},{"lineNumber":56,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":59,"author":{"gitId":"pinfang"},"content":"    public static void main(String[] args) {"},{"lineNumber":60,"author":{"gitId":"k-walter"},"content":"        new Duke().run();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Wu-Haitao":1,"k-walter":45,"xieyaoyue":1,"-":10,"pinfang":5}},{"path":"src/main/java/seedu/duke/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidAmountException;"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidInputCurrencyException;"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidNameException;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.utilities.AmountConverter;"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.utilities.DecimalFormatter;"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"import java.util.logging.Level;"},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":"import java.util.logging.Logger;"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":" * Adds a spending entry to the spending list."},{"lineNumber":17,"author":{"gitId":"xieyaoyue"},"content":" */"},{"lineNumber":18,"author":{"gitId":"Wu-Haitao"},"content":"public class AddCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"Wu-Haitao"},"content":"    public String description;"},{"lineNumber":20,"author":{"gitId":"Wu-Haitao"},"content":"    public double amount;"},{"lineNumber":21,"author":{"gitId":"xieyaoyue"},"content":"    public String currency;"},{"lineNumber":22,"author":{"gitId":"xieyaoyue"},"content":"    public String category;"},{"lineNumber":23,"author":{"gitId":"killingbear999"},"content":"    private String defaultCurrency \u003d \"SGD\";"},{"lineNumber":24,"author":{"gitId":"xieyaoyue"},"content":"    private static Logger logger \u003d Logger.getLogger(\"AddCommand\");"},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":"    //@@author xieyaoyue"},{"lineNumber":27,"author":{"gitId":"xieyaoyue"},"content":"    public AddCommand(String description, String currency, double amount, String category) {"},{"lineNumber":28,"author":{"gitId":"xieyaoyue"},"content":"        this.description \u003d description;"},{"lineNumber":29,"author":{"gitId":"xieyaoyue"},"content":"        this.amount \u003d amount;"},{"lineNumber":30,"author":{"gitId":"xieyaoyue"},"content":"        this.currency \u003d currency;"},{"lineNumber":31,"author":{"gitId":"xieyaoyue"},"content":"        this.category \u003d category;"},{"lineNumber":32,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"xieyaoyue"},"content":"    "},{"lineNumber":34,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":35,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"killingbear999"},"content":"    public void execute(Data data, Ui ui) throws IOException,"},{"lineNumber":37,"author":{"gitId":"killingbear999"},"content":"            InvalidInputCurrencyException, InvalidAmountException, InvalidNameException {"},{"lineNumber":38,"author":{"gitId":"killingbear999"},"content":"        logger.log(Level.FINE, \"going to add item\");"},{"lineNumber":39,"author":{"gitId":"killingbear999"},"content":"        int size \u003d data.spendingList.getListSize();"},{"lineNumber":40,"author":{"gitId":"killingbear999"},"content":"        if (size !\u003d 0) {"},{"lineNumber":41,"author":{"gitId":"killingbear999"},"content":"            defaultCurrency \u003d data.spendingList.getItem(0).getSymbol();"},{"lineNumber":42,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"killingbear999"},"content":"        if (!(currency.equals(\"SGD\") || currency.equals(\"USD\") || currency.equals(\"CNY\"))) {"},{"lineNumber":44,"author":{"gitId":"killingbear999"},"content":"            throw new InvalidInputCurrencyException();"},{"lineNumber":45,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"killingbear999"},"content":"        if (!currency.equals(defaultCurrency)) {"},{"lineNumber":47,"author":{"gitId":"killingbear999"},"content":"            AmountConverter amountConverter \u003d new AmountConverter(currency, amount, defaultCurrency);"},{"lineNumber":48,"author":{"gitId":"killingbear999"},"content":"            amount \u003d amountConverter.updateAmount();"},{"lineNumber":49,"author":{"gitId":"killingbear999"},"content":"            currency \u003d amountConverter.updateCurrency();"},{"lineNumber":50,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"killingbear999"},"content":"        if (!isValidName()) {"},{"lineNumber":52,"author":{"gitId":"killingbear999"},"content":"            throw new InvalidNameException();"},{"lineNumber":53,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"killingbear999"},"content":"        if (amount \u003c 0.01) {"},{"lineNumber":55,"author":{"gitId":"killingbear999"},"content":"            throw new InvalidAmountException();"},{"lineNumber":56,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":58,"author":{"gitId":"killingbear999"},"content":"        DecimalFormatter decimalFormatter \u003d new DecimalFormatter();"},{"lineNumber":59,"author":{"gitId":"killingbear999"},"content":"        amount \u003d decimalFormatter.convert(amount);"},{"lineNumber":60,"author":{"gitId":"killingbear999"},"content":"        data.spendingList.addItem(description, currency, amount, category);"},{"lineNumber":61,"author":{"gitId":"killingbear999"},"content":"        ui.printAdd(data.spendingList);"},{"lineNumber":62,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":63,"author":{"gitId":"killingbear999"},"content":"        /*if (size \u003e 1) {"},{"lineNumber":64,"author":{"gitId":"killingbear999"},"content":"            SpendingListCategoriser spendingListCategoriser \u003d new SpendingListCategoriser();"},{"lineNumber":65,"author":{"gitId":"killingbear999"},"content":"            spendingListCategoriser.execute(data.spendingList);"},{"lineNumber":66,"author":{"gitId":"killingbear999"},"content":"        }*/"},{"lineNumber":67,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":68,"author":{"gitId":"killingbear999"},"content":"        if (size \u003e 0 \u0026\u0026 size % 4 \u003d\u003d 0) {"},{"lineNumber":69,"author":{"gitId":"killingbear999"},"content":"            EncouragementCommand encouragementCommand \u003d new EncouragementCommand();"},{"lineNumber":70,"author":{"gitId":"killingbear999"},"content":"            encouragementCommand.execute(data, ui);"},{"lineNumber":71,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":73,"author":{"gitId":"killingbear999"},"content":"        if (data.budget.hasBudget) {"},{"lineNumber":74,"author":{"gitId":"killingbear999"},"content":"            WarnCommand warnCommand \u003d new WarnCommand();"},{"lineNumber":75,"author":{"gitId":"killingbear999"},"content":"            warnCommand.execute(data, ui);"},{"lineNumber":76,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":79,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":80,"author":{"gitId":"killingbear999"},"content":"    private boolean isValidName() {"},{"lineNumber":81,"author":{"gitId":"killingbear999"},"content":"        return description.matches(\".*[a-zA-Z]+.*\");"},{"lineNumber":82,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"Wu-Haitao":3,"k-walter":4,"killingbear999":56,"xieyaoyue":20}},{"path":"src/main/java/seedu/duke/command/ClearBudgetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidClearBudgetException;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":"import java.util.logging.Level;"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":"import java.util.logging.Logger;"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":" * Represents the command for clearing the budget previously set by the user."},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":" */"},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":"//@@author xieyaoyue"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":"public class ClearBudgetCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ClearBudgetCommand\");"},{"lineNumber":17,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":18,"author":{"gitId":"xieyaoyue"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":"     * Clears the budget previously set by the user."},{"lineNumber":20,"author":{"gitId":"xieyaoyue"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"xieyaoyue"},"content":"     * @param data current data stored by the application"},{"lineNumber":22,"author":{"gitId":"xieyaoyue"},"content":"     * @param ui user interface of the application"},{"lineNumber":23,"author":{"gitId":"xieyaoyue"},"content":"     * @throws InvalidClearBudgetException if the budget data is already empty"},{"lineNumber":24,"author":{"gitId":"xieyaoyue"},"content":"     * @throws IOException if the application fails to clear the budget"},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"xieyaoyue"},"content":"    public void execute(Data data, Ui ui) throws"},{"lineNumber":28,"author":{"gitId":"xieyaoyue"},"content":"        InvalidClearBudgetException, IOException {"},{"lineNumber":29,"author":{"gitId":"xieyaoyue"},"content":"        if (!data.budget.hasBudget) {"},{"lineNumber":30,"author":{"gitId":"xieyaoyue"},"content":"            throw new InvalidClearBudgetException();"},{"lineNumber":31,"author":{"gitId":"xieyaoyue"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"xieyaoyue"},"content":"        logger.log(Level.FINE, \"going to clear budget\");"},{"lineNumber":33,"author":{"gitId":"xieyaoyue"},"content":"        data.budget.clearBudget();"},{"lineNumber":34,"author":{"gitId":"xieyaoyue"},"content":"        ui.printClearBudget();"},{"lineNumber":35,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"k-walter":2,"xieyaoyue":34}},{"path":"src/main/java/seedu/duke/command/ClearRepaymentListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidClearRepaymentException;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidNumberException;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":"import java.util.logging.Level;"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":"import java.util.logging.Logger;"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":" * Represents the command for clearing the repayment list."},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":" */"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":"//@@author xieyaoyue"},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":"public class ClearRepaymentListCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"xieyaoyue"},"content":"    public boolean isClearAll;"},{"lineNumber":18,"author":{"gitId":"xieyaoyue"},"content":"    public Integer clearIndex;"},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ClearRepaymentListCommand\");"},{"lineNumber":20,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":21,"author":{"gitId":"xieyaoyue"},"content":"    public ClearRepaymentListCommand(boolean isClearAll, Integer clearIndex) {"},{"lineNumber":22,"author":{"gitId":"xieyaoyue"},"content":"        this.isClearAll \u003d isClearAll;"},{"lineNumber":23,"author":{"gitId":"xieyaoyue"},"content":"        this.clearIndex \u003d clearIndex;"},{"lineNumber":24,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"xieyaoyue"},"content":"     * Clears the repayment list by either clearing a single entry or the whole list."},{"lineNumber":28,"author":{"gitId":"xieyaoyue"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"xieyaoyue"},"content":"     * @param data current data stored by the application"},{"lineNumber":30,"author":{"gitId":"xieyaoyue"},"content":"     * @param ui user interface of the application"},{"lineNumber":31,"author":{"gitId":"xieyaoyue"},"content":"     * @throws IOException if the application fails to clear the repayment list"},{"lineNumber":32,"author":{"gitId":"xieyaoyue"},"content":"     * @throws InvalidClearRepaymentException if the repayment list is already empty"},{"lineNumber":33,"author":{"gitId":"xieyaoyue"},"content":"     * @throws InvalidNumberException if the user inputs an invalid index of the repayment list"},{"lineNumber":34,"author":{"gitId":"xieyaoyue"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"xieyaoyue"},"content":"    public void execute(Data data, Ui ui) throws IOException,"},{"lineNumber":36,"author":{"gitId":"xieyaoyue"},"content":"            InvalidClearRepaymentException, InvalidNumberException {"},{"lineNumber":37,"author":{"gitId":"xieyaoyue"},"content":"        int size \u003d data.repaymentList.getListSize();"},{"lineNumber":38,"author":{"gitId":"xieyaoyue"},"content":"        if (size \u003d\u003d 0) {"},{"lineNumber":39,"author":{"gitId":"xieyaoyue"},"content":"            throw new InvalidClearRepaymentException();"},{"lineNumber":40,"author":{"gitId":"xieyaoyue"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"xieyaoyue"},"content":"        if (clearIndex \u003e size) {"},{"lineNumber":42,"author":{"gitId":"xieyaoyue"},"content":"            logger.log(Level.FINE, \"clearIndex is invalid\");"},{"lineNumber":43,"author":{"gitId":"xieyaoyue"},"content":"            throw new InvalidNumberException();"},{"lineNumber":44,"author":{"gitId":"xieyaoyue"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"xieyaoyue"},"content":"        logger.log(Level.FINE, \"going to clear repayment list\");"},{"lineNumber":46,"author":{"gitId":"xieyaoyue"},"content":"        if (!isClearAll) {"},{"lineNumber":47,"author":{"gitId":"xieyaoyue"},"content":"            int beforeClearSize \u003d data.repaymentList.getListSize();"},{"lineNumber":48,"author":{"gitId":"xieyaoyue"},"content":"            ui.printClearIndex(data.repaymentList.getEntry(clearIndex - 1));"},{"lineNumber":49,"author":{"gitId":"xieyaoyue"},"content":"            data.repaymentList.deleteRepaymentEntry(clearIndex - 1);"},{"lineNumber":50,"author":{"gitId":"xieyaoyue"},"content":"            int afterClearSize \u003d data.repaymentList.getListSize();"},{"lineNumber":51,"author":{"gitId":"xieyaoyue"},"content":"            assert beforeClearSize - afterClearSize \u003d\u003d 1 : \"One item should be cleared from repayment list\";"},{"lineNumber":52,"author":{"gitId":"xieyaoyue"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"xieyaoyue"},"content":"            data.repaymentList.clearAllEntries();"},{"lineNumber":54,"author":{"gitId":"xieyaoyue"},"content":"            assert data.repaymentList.getListSize() \u003d\u003d 0 : \"List size should be 0\";"},{"lineNumber":55,"author":{"gitId":"xieyaoyue"},"content":"            ui.printClearAllRepaymentList();"},{"lineNumber":56,"author":{"gitId":"xieyaoyue"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"k-walter":3,"xieyaoyue":55}},{"path":"src/main/java/seedu/duke/command/ClearSpendingListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidClearSpendingException;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidNumberException;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":"import java.util.logging.Level;"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":"import java.util.logging.Logger;"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":" * Represents the command for clearing the spending list."},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":" */"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":"//@@author xieyaoyue"},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":"public class ClearSpendingListCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"xieyaoyue"},"content":"    private boolean isClearAll;"},{"lineNumber":18,"author":{"gitId":"xieyaoyue"},"content":"    private int clearIndex;"},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ClearSpendingListCommand\");"},{"lineNumber":20,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":21,"author":{"gitId":"xieyaoyue"},"content":"    public ClearSpendingListCommand(boolean isClearAll, int clearIndex) {"},{"lineNumber":22,"author":{"gitId":"xieyaoyue"},"content":"        this.isClearAll \u003d isClearAll;"},{"lineNumber":23,"author":{"gitId":"xieyaoyue"},"content":"        this.clearIndex \u003d clearIndex;"},{"lineNumber":24,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"xieyaoyue"},"content":"     * Clears the spending list by either clearing a single entry or the whole list."},{"lineNumber":28,"author":{"gitId":"xieyaoyue"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"xieyaoyue"},"content":"     * @param data current data stored by the application"},{"lineNumber":30,"author":{"gitId":"xieyaoyue"},"content":"     * @param ui user interface of the application"},{"lineNumber":31,"author":{"gitId":"xieyaoyue"},"content":"     * @throws IOException if the application fails to clear the spending list"},{"lineNumber":32,"author":{"gitId":"xieyaoyue"},"content":"     * @throws InvalidClearSpendingException if the spending list is already empty"},{"lineNumber":33,"author":{"gitId":"xieyaoyue"},"content":"     * @throws InvalidNumberException if the user inputs an invalid index of the spending list"},{"lineNumber":34,"author":{"gitId":"xieyaoyue"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"xieyaoyue"},"content":"    public void execute(Data data, Ui ui) throws IOException,"},{"lineNumber":36,"author":{"gitId":"xieyaoyue"},"content":"            InvalidClearSpendingException, InvalidNumberException {"},{"lineNumber":37,"author":{"gitId":"xieyaoyue"},"content":"        int size \u003d data.spendingList.getListSize();"},{"lineNumber":38,"author":{"gitId":"xieyaoyue"},"content":"        if (size \u003d\u003d 0) {"},{"lineNumber":39,"author":{"gitId":"xieyaoyue"},"content":"            throw new InvalidClearSpendingException();"},{"lineNumber":40,"author":{"gitId":"xieyaoyue"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"xieyaoyue"},"content":"        if (clearIndex \u003e size) {"},{"lineNumber":42,"author":{"gitId":"xieyaoyue"},"content":"            logger.log(Level.FINE, \"clearIndex is invalid\");"},{"lineNumber":43,"author":{"gitId":"xieyaoyue"},"content":"            throw new InvalidNumberException();"},{"lineNumber":44,"author":{"gitId":"xieyaoyue"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"xieyaoyue"},"content":"        logger.log(Level.FINE, \"going to clear spending list\");"},{"lineNumber":46,"author":{"gitId":"xieyaoyue"},"content":"        if (!isClearAll) {"},{"lineNumber":47,"author":{"gitId":"xieyaoyue"},"content":"            int beforeClearSize \u003d data.spendingList.getListSize();"},{"lineNumber":48,"author":{"gitId":"xieyaoyue"},"content":"            ui.printClearIndex(data.spendingList.getItem(clearIndex - 1));"},{"lineNumber":49,"author":{"gitId":"xieyaoyue"},"content":"            data.spendingList.deleteItem(clearIndex - 1);"},{"lineNumber":50,"author":{"gitId":"xieyaoyue"},"content":"            int afterClearSize \u003d data.spendingList.getListSize();"},{"lineNumber":51,"author":{"gitId":"xieyaoyue"},"content":"            assert beforeClearSize - afterClearSize \u003d\u003d 1 : \"One item should be cleared from spending list\";"},{"lineNumber":52,"author":{"gitId":"xieyaoyue"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"xieyaoyue"},"content":"            data.spendingList.clearAllItems();"},{"lineNumber":54,"author":{"gitId":"xieyaoyue"},"content":"            assert data.spendingList.getListSize() \u003d\u003d 0 : \"List size should be 0\";"},{"lineNumber":55,"author":{"gitId":"xieyaoyue"},"content":"            ui.printClearAllSpendingList();"},{"lineNumber":56,"author":{"gitId":"xieyaoyue"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"k-walter":3,"xieyaoyue":55}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.EmptyCommandException;"},{"lineNumber":5,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.EmptyListException;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidAmountException;"},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.InvalidBudgetException;"},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.InvalidClearBudgetException;"},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.InvalidClearRepaymentException;"},{"lineNumber":10,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.InvalidClearSpendingException;"},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.InvalidCurrencyException;"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidDateException;"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidInputCurrencyException;"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidMonthException;"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidNameException;"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidNumberException;"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidOutputCurrencyException;"},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.InvalidYearException;"},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":20,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":23,"author":{"gitId":"xieyaoyue"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"xieyaoyue"},"content":" * Represents the command that the user wants the program to execute."},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":" */"},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":"//@@author xieyaoyue"},{"lineNumber":27,"author":{"gitId":"xieyaoyue"},"content":"public abstract class Command {"},{"lineNumber":28,"author":{"gitId":"xieyaoyue"},"content":"    //@author k-walter"},{"lineNumber":29,"author":{"gitId":"xieyaoyue"},"content":"    public abstract void execute(Data data, Ui ui) throws IOException,"},{"lineNumber":30,"author":{"gitId":"xieyaoyue"},"content":"            InvalidMonthException, InvalidClearRepaymentException, InvalidClearSpendingException,"},{"lineNumber":31,"author":{"gitId":"xieyaoyue"},"content":"            InvalidClearBudgetException, InvalidAmountException, InvalidInputCurrencyException,"},{"lineNumber":32,"author":{"gitId":"xieyaoyue"},"content":"            InvalidOutputCurrencyException, InvalidCurrencyException, EmptyListException, InvalidDateException,"},{"lineNumber":33,"author":{"gitId":"xieyaoyue"},"content":"            InvalidNameException, InvalidBudgetException, InvalidNumberException, EmptyCommandException,"},{"lineNumber":34,"author":{"gitId":"xieyaoyue"},"content":"            InvalidYearException;"},{"lineNumber":35,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":36,"author":{"gitId":"xieyaoyue"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"xieyaoyue"},"content":"     * Checks whether the application should exit after the command is executed."},{"lineNumber":38,"author":{"gitId":"xieyaoyue"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"xieyaoyue"},"content":"     * @return true if the user wants to end program, false if otherwise."},{"lineNumber":40,"author":{"gitId":"xieyaoyue"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"xieyaoyue"},"content":"    public boolean isExit() {"},{"lineNumber":42,"author":{"gitId":"xieyaoyue"},"content":"        return false;"},{"lineNumber":43,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"k-walter":11,"xieyaoyue":26,"pinfang":7}},{"path":"src/main/java/seedu/duke/command/ConvertCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.Item;"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.EmptyListException;"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidCurrencyException;"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidInputCurrencyException;"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidOutputCurrencyException;"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.utilities.DecimalFormatter;"},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"import java.util.logging.Level;"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"import java.util.logging.Logger;"},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"/** This class is to convert the currency to another one. */"},{"lineNumber":19,"author":{"gitId":"killingbear999"},"content":"public class ConvertCommand extends Command {"},{"lineNumber":20,"author":{"gitId":"killingbear999"},"content":"    private String currencies;"},{"lineNumber":21,"author":{"gitId":"killingbear999"},"content":"    private String outputCurrency;"},{"lineNumber":22,"author":{"gitId":"killingbear999"},"content":"    private String inputCurrency;"},{"lineNumber":23,"author":{"gitId":"killingbear999"},"content":"    private double exchangeRate \u003d 1.0;"},{"lineNumber":24,"author":{"gitId":"killingbear999"},"content":"    public static ArrayList\u003cItem\u003e newSpendingList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"killingbear999"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ConvertCommand\");"},{"lineNumber":26,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":27,"author":{"gitId":"killingbear999"},"content":"    /** SGD to USD; USD to SGD; SGD to CNY; CNY to SGD. */"},{"lineNumber":28,"author":{"gitId":"killingbear999"},"content":"    private final String[][] exchangeRates \u003d {"},{"lineNumber":29,"author":{"gitId":"killingbear999"},"content":"            {\"SGDUSD\", \"USDSGD\", \"SGDCNY\", \"CNYSGD\"},"},{"lineNumber":30,"author":{"gitId":"killingbear999"},"content":"            {\"0.74\", \"1.35135\", \"5.00\", \"0.20\"},"},{"lineNumber":31,"author":{"gitId":"killingbear999"},"content":"    };"},{"lineNumber":32,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":33,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":34,"author":{"gitId":"killingbear999"},"content":"    public ConvertCommand() {"},{"lineNumber":35,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":37,"author":{"gitId":"killingbear999"},"content":"    public ConvertCommand(String source, String target) {"},{"lineNumber":38,"author":{"gitId":"killingbear999"},"content":"        this.inputCurrency \u003d source;"},{"lineNumber":39,"author":{"gitId":"killingbear999"},"content":"        this.outputCurrency \u003d target;"},{"lineNumber":40,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":42,"author":{"gitId":"killingbear999"},"content":"    private String identifyCurrency() {"},{"lineNumber":43,"author":{"gitId":"killingbear999"},"content":"        return inputCurrency + outputCurrency;"},{"lineNumber":44,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":46,"author":{"gitId":"killingbear999"},"content":"    /** It is to identify the exchange rate for the corresponding input and output currencies. */"},{"lineNumber":47,"author":{"gitId":"killingbear999"},"content":"    private void findExchangeRate() {"},{"lineNumber":48,"author":{"gitId":"killingbear999"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {"},{"lineNumber":49,"author":{"gitId":"killingbear999"},"content":"            if (exchangeRates[0][i].equals(currencies)) {"},{"lineNumber":50,"author":{"gitId":"killingbear999"},"content":"                exchangeRate \u003d Double.parseDouble(exchangeRates[1][i]);"},{"lineNumber":51,"author":{"gitId":"killingbear999"},"content":"                assert exchangeRate \u003d\u003d Double.parseDouble(exchangeRates[1][i]) : \"Incorrect exchange rate\";"},{"lineNumber":52,"author":{"gitId":"killingbear999"},"content":"                break;"},{"lineNumber":53,"author":{"gitId":"killingbear999"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":57,"author":{"gitId":"killingbear999"},"content":"    /** It is to check if the input and output currencies are valid. */"},{"lineNumber":58,"author":{"gitId":"killingbear999"},"content":"    private boolean isValid() {"},{"lineNumber":59,"author":{"gitId":"killingbear999"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {"},{"lineNumber":60,"author":{"gitId":"killingbear999"},"content":"            if (exchangeRates[0][i].equals(currencies)) {"},{"lineNumber":61,"author":{"gitId":"killingbear999"},"content":"                return true;"},{"lineNumber":62,"author":{"gitId":"killingbear999"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"killingbear999"},"content":"        return false;"},{"lineNumber":65,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":67,"author":{"gitId":"killingbear999"},"content":"    /** It is to convert the currency for the whole spending list."},{"lineNumber":68,"author":{"gitId":"killingbear999"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"killingbear999"},"content":"     * @throws InvalidInputCurrencyException If input currency is invalid"},{"lineNumber":70,"author":{"gitId":"killingbear999"},"content":"     * @throws InvalidOutputCurrencyException If output currency is invalid"},{"lineNumber":71,"author":{"gitId":"killingbear999"},"content":"     * @throws InvalidCurrencyException If the exchange rate for the pair of currencies are not stored in the system"},{"lineNumber":72,"author":{"gitId":"killingbear999"},"content":"     * @throws EmptyListException If the spending list is empty and the convert command is called"},{"lineNumber":73,"author":{"gitId":"killingbear999"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":75,"author":{"gitId":"killingbear999"},"content":"    public void execute(Data data, Ui ui) throws IOException,"},{"lineNumber":76,"author":{"gitId":"killingbear999"},"content":"            InvalidInputCurrencyException, InvalidOutputCurrencyException, InvalidCurrencyException,"},{"lineNumber":77,"author":{"gitId":"killingbear999"},"content":"            EmptyListException {"},{"lineNumber":78,"author":{"gitId":"killingbear999"},"content":"        if (!(outputCurrency.equals(\"SGD\") || outputCurrency.equals(\"USD\") || outputCurrency.equals(\"CNY\"))) {"},{"lineNumber":79,"author":{"gitId":"killingbear999"},"content":"            throw new InvalidOutputCurrencyException();"},{"lineNumber":80,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":82,"author":{"gitId":"killingbear999"},"content":"        if (!(inputCurrency.equals(\"SGD\") || inputCurrency.equals(\"USD\") || inputCurrency.equals(\"CNY\"))) {"},{"lineNumber":83,"author":{"gitId":"killingbear999"},"content":"            throw new InvalidInputCurrencyException();"},{"lineNumber":84,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":86,"author":{"gitId":"killingbear999"},"content":"        int size \u003d data.spendingList.getListSize();"},{"lineNumber":87,"author":{"gitId":"killingbear999"},"content":"        if (size \u003d\u003d 0) {"},{"lineNumber":88,"author":{"gitId":"killingbear999"},"content":"            throw new EmptyListException();"},{"lineNumber":89,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":91,"author":{"gitId":"killingbear999"},"content":"        String defaultCurrency \u003d data.spendingList.getItem(0).getSymbol();"},{"lineNumber":92,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":93,"author":{"gitId":"killingbear999"},"content":"        if (inputCurrency.equals(defaultCurrency)) {"},{"lineNumber":94,"author":{"gitId":"killingbear999"},"content":"            logger.log(Level.FINE, \"going to start processing\");"},{"lineNumber":95,"author":{"gitId":"killingbear999"},"content":"            newSpendingList \u003d data.spendingList.getSpendingList();"},{"lineNumber":96,"author":{"gitId":"killingbear999"},"content":"            currencies \u003d identifyCurrency();"},{"lineNumber":97,"author":{"gitId":"killingbear999"},"content":"            findExchangeRate();"},{"lineNumber":98,"author":{"gitId":"killingbear999"},"content":"            updateList();"},{"lineNumber":99,"author":{"gitId":"killingbear999"},"content":"            if (isValid()) {"},{"lineNumber":100,"author":{"gitId":"killingbear999"},"content":"                ui.printConvertCurrency(outputCurrency);"},{"lineNumber":101,"author":{"gitId":"killingbear999"},"content":"            } else {"},{"lineNumber":102,"author":{"gitId":"killingbear999"},"content":"                throw new InvalidCurrencyException();"},{"lineNumber":103,"author":{"gitId":"killingbear999"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"killingbear999"},"content":"            data.spendingList.updateSpendingList();"},{"lineNumber":105,"author":{"gitId":"killingbear999"},"content":"            updateBudgetList(data);"},{"lineNumber":106,"author":{"gitId":"killingbear999"},"content":"            logger.log(Level.FINE, \"end of processing\");"},{"lineNumber":107,"author":{"gitId":"killingbear999"},"content":"        } else {"},{"lineNumber":108,"author":{"gitId":"killingbear999"},"content":"            ui.printInvalidConversion(defaultCurrency);"},{"lineNumber":109,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":112,"author":{"gitId":"killingbear999"},"content":"    /** It is to update the new amount and currency symbol after conversion for the whole spending list. */"},{"lineNumber":113,"author":{"gitId":"killingbear999"},"content":"    private void updateList() {"},{"lineNumber":114,"author":{"gitId":"killingbear999"},"content":"        for (Item item : newSpendingList) {"},{"lineNumber":115,"author":{"gitId":"killingbear999"},"content":"            if (!item.getSymbol().equals(outputCurrency)) {"},{"lineNumber":116,"author":{"gitId":"killingbear999"},"content":"                updateNewAmount(item);"},{"lineNumber":117,"author":{"gitId":"killingbear999"},"content":"                updateCurrency(item);"},{"lineNumber":118,"author":{"gitId":"killingbear999"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":122,"author":{"gitId":"killingbear999"},"content":"    /** It is to update the new amount for a specific item. */"},{"lineNumber":123,"author":{"gitId":"killingbear999"},"content":"    private void updateNewAmount(Item currentString) {"},{"lineNumber":124,"author":{"gitId":"killingbear999"},"content":"        double amount \u003d currentString.getAmount();"},{"lineNumber":125,"author":{"gitId":"killingbear999"},"content":"        amount \u003d amount * exchangeRate;"},{"lineNumber":126,"author":{"gitId":"killingbear999"},"content":"        DecimalFormatter decimalFormatter \u003d new DecimalFormatter();"},{"lineNumber":127,"author":{"gitId":"killingbear999"},"content":"        amount \u003d decimalFormatter.convert(amount);"},{"lineNumber":128,"author":{"gitId":"killingbear999"},"content":"        currentString.editAmount(amount);"},{"lineNumber":129,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":131,"author":{"gitId":"killingbear999"},"content":"    /** It is to update the new currency symbol for a specific item. */"},{"lineNumber":132,"author":{"gitId":"killingbear999"},"content":"    private void updateCurrency(Item currentString) {"},{"lineNumber":133,"author":{"gitId":"killingbear999"},"content":"        switch (currencies) {"},{"lineNumber":134,"author":{"gitId":"killingbear999"},"content":"        case \"SGDUSD\":"},{"lineNumber":135,"author":{"gitId":"killingbear999"},"content":"            currentString.editSymbol(\"USD\");"},{"lineNumber":136,"author":{"gitId":"killingbear999"},"content":"            break;"},{"lineNumber":137,"author":{"gitId":"killingbear999"},"content":"        case \"USDSGD\":"},{"lineNumber":138,"author":{"gitId":"killingbear999"},"content":"            currentString.editSymbol(\"SGD\");"},{"lineNumber":139,"author":{"gitId":"killingbear999"},"content":"            break;"},{"lineNumber":140,"author":{"gitId":"killingbear999"},"content":"        case \"SGDCNY\":"},{"lineNumber":141,"author":{"gitId":"killingbear999"},"content":"            currentString.editSymbol(\"CNY\");"},{"lineNumber":142,"author":{"gitId":"killingbear999"},"content":"            break;"},{"lineNumber":143,"author":{"gitId":"killingbear999"},"content":"        case \"CNYSGD\":"},{"lineNumber":144,"author":{"gitId":"killingbear999"},"content":"            currentString.editSymbol(\"SGD\");"},{"lineNumber":145,"author":{"gitId":"killingbear999"},"content":"            break;"},{"lineNumber":146,"author":{"gitId":"killingbear999"},"content":"        default:"},{"lineNumber":147,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":150,"author":{"gitId":"killingbear999"},"content":"    /** It is to update the budget limit after conversion. */"},{"lineNumber":151,"author":{"gitId":"killingbear999"},"content":"    public void updateBudgetList(Data data) throws IOException {"},{"lineNumber":152,"author":{"gitId":"killingbear999"},"content":"        if (!data.budget.getCurrency().equals(outputCurrency)) {"},{"lineNumber":153,"author":{"gitId":"killingbear999"},"content":"            double budgetLimit \u003d data.budget.getBudgetLimit();"},{"lineNumber":154,"author":{"gitId":"killingbear999"},"content":"            double newBudgetLimit \u003d budgetLimit * exchangeRate;"},{"lineNumber":155,"author":{"gitId":"killingbear999"},"content":"            data.budget.updateBudget(outputCurrency, newBudgetLimit);"},{"lineNumber":156,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":159,"author":{"gitId":"killingbear999"},"content":"    /** It is to update the whole spending list after conversion. */"},{"lineNumber":160,"author":{"gitId":"killingbear999"},"content":"    public ArrayList\u003cItem\u003e updateSpendingList() {"},{"lineNumber":161,"author":{"gitId":"killingbear999"},"content":"        return newSpendingList;"},{"lineNumber":162,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":2,"killingbear999":154,"xieyaoyue":7}},{"path":"src/main/java/seedu/duke/command/DateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"public abstract class DateCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"    protected String period \u003d null;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"     * Checks required year and optional month parameters."},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"     * @param year  NOT NULL, eg \"2020\""},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"     * @param month NULL or \"01\"..\"12\""},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"    public DateCommand(String year, String month) {"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"        assert year !\u003d null;"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"        period \u003d year;"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"        if (month !\u003d null) {"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"            boolean mthWithinRange \u003d (1 \u003c\u003d Integer.parseInt(month) \u0026\u0026 Integer.parseInt(month) \u003c\u003d 12);"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"            boolean mthLength2 \u003d month.length() \u003d\u003d 2;"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"            assert mthWithinRange \u0026\u0026 mthLength2;"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"            period \u003d String.format(\"%s-%s\", period, month);"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"    public DateCommand() {"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":27}},{"path":"src/main/java/seedu/duke/command/DrawCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pinfang"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":3,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xddf.usermodel.chart.AxisPosition;"},{"lineNumber":4,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xddf.usermodel.chart.ChartTypes;"},{"lineNumber":5,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xddf.usermodel.chart.XDDFChartAxis;"},{"lineNumber":6,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xddf.usermodel.chart.XDDFChartData;"},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xddf.usermodel.chart.XDDFChartLegend;"},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xddf.usermodel.chart.XDDFDataSource;"},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xddf.usermodel.chart.XDDFDataSourcesFactory;"},{"lineNumber":10,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xddf.usermodel.chart.XDDFNumericalDataSource;"},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xddf.usermodel.chart.XDDFValueAxis;"},{"lineNumber":12,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xssf.usermodel.XSSFChart;"},{"lineNumber":13,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xssf.usermodel.XSSFClientAnchor;"},{"lineNumber":14,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xssf.usermodel.XSSFDrawing;"},{"lineNumber":15,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xssf.usermodel.XSSFSheet;"},{"lineNumber":16,"author":{"gitId":"pinfang"},"content":"import org.apache.poi.xssf.usermodel.XSSFWorkbook;"},{"lineNumber":17,"author":{"gitId":"pinfang"},"content":"import org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean;"},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"import org.openxmlformats.schemas.drawingml.x2006.chart.CTLineChart;"},{"lineNumber":19,"author":{"gitId":"pinfang"},"content":"import org.openxmlformats.schemas.drawingml.x2006.chart.CTLineSer;"},{"lineNumber":20,"author":{"gitId":"pinfang"},"content":"import org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea;"},{"lineNumber":21,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Item;"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.SpendingList;"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"import seedu.duke.utilities.FileExplorer;"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"import java.io.FileOutputStream;"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"import java.util.ArrayList;"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"import java.util.TreeMap;"},{"lineNumber":32,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":33,"author":{"gitId":"Wu-Haitao"},"content":"/**"},{"lineNumber":34,"author":{"gitId":"Wu-Haitao"},"content":" * This class represents the command for generating charts for specific data."},{"lineNumber":35,"author":{"gitId":"Wu-Haitao"},"content":" */"},{"lineNumber":36,"author":{"gitId":"Wu-Haitao"},"content":"//@@author Wu-Haitao"},{"lineNumber":37,"author":{"gitId":"Wu-Haitao"},"content":"public class DrawCommand extends DateCommand {"},{"lineNumber":38,"author":{"gitId":"Wu-Haitao"},"content":"    private final String filePath \u003d \"Charts.xlsx\";"},{"lineNumber":39,"author":{"gitId":"Wu-Haitao"},"content":"    private final FileExplorer fileExplorer \u003d new FileExplorer(filePath);"},{"lineNumber":40,"author":{"gitId":"Wu-Haitao"},"content":"    private boolean isOpening;"},{"lineNumber":41,"author":{"gitId":"Wu-Haitao"},"content":"    private String timePeriod;"},{"lineNumber":42,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":43,"author":{"gitId":"Wu-Haitao"},"content":"    public DrawCommand() {"},{"lineNumber":44,"author":{"gitId":"Wu-Haitao"},"content":"        this(true);"},{"lineNumber":45,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":47,"author":{"gitId":"Wu-Haitao"},"content":"    public DrawCommand(boolean isOpening) {"},{"lineNumber":48,"author":{"gitId":"Wu-Haitao"},"content":"        timePeriod \u003d \"\";"},{"lineNumber":49,"author":{"gitId":"Wu-Haitao"},"content":"        this.isOpening \u003d isOpening;"},{"lineNumber":50,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":52,"author":{"gitId":"Wu-Haitao"},"content":"    public DrawCommand(String year, String month) {"},{"lineNumber":53,"author":{"gitId":"Wu-Haitao"},"content":"        this(year, month, true);"},{"lineNumber":54,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":56,"author":{"gitId":"Wu-Haitao"},"content":"    public DrawCommand(String year, String month, boolean isOpening) {"},{"lineNumber":57,"author":{"gitId":"Wu-Haitao"},"content":"        if (month \u003d\u003d null) {"},{"lineNumber":58,"author":{"gitId":"Wu-Haitao"},"content":"            timePeriod \u003d year;"},{"lineNumber":59,"author":{"gitId":"Wu-Haitao"},"content":"        } else {"},{"lineNumber":60,"author":{"gitId":"Wu-Haitao"},"content":"            timePeriod \u003d year + \"-\" + month;"},{"lineNumber":61,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Wu-Haitao"},"content":"        this.isOpening \u003d isOpening;"},{"lineNumber":63,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":65,"author":{"gitId":"Wu-Haitao"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"Wu-Haitao"},"content":"     * Filters the data and generates charts accordingly."},{"lineNumber":67,"author":{"gitId":"Wu-Haitao"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"Wu-Haitao"},"content":"     * @param data current data stored by the application"},{"lineNumber":69,"author":{"gitId":"Wu-Haitao"},"content":"     * @param ui user interface of the application"},{"lineNumber":70,"author":{"gitId":"Wu-Haitao"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"Wu-Haitao"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"Wu-Haitao"},"content":"    public void execute(Data data, Ui ui) {"},{"lineNumber":73,"author":{"gitId":"Wu-Haitao"},"content":"        XSSFWorkbook workbook \u003d new XSSFWorkbook();"},{"lineNumber":74,"author":{"gitId":"Wu-Haitao"},"content":"        XSSFSheet sheet0 \u003d workbook.createSheet(\"Sheet 0\");"},{"lineNumber":75,"author":{"gitId":"Wu-Haitao"},"content":"        XSSFSheet sheet1 \u003d workbook.createSheet(\"Sheet 1\");"},{"lineNumber":76,"author":{"gitId":"Wu-Haitao"},"content":"        sheet0.setDefaultColumnWidth(5);"},{"lineNumber":77,"author":{"gitId":"Wu-Haitao"},"content":"        sheet1.setDefaultColumnWidth(5);"},{"lineNumber":78,"author":{"gitId":"Wu-Haitao"},"content":"        ArrayList\u003cItem\u003e items \u003d new ArrayList\u003c\u003e();"},{"lineNumber":79,"author":{"gitId":"Wu-Haitao"},"content":"        SpendingList targetSpendingList \u003d new SpendingList(items);"},{"lineNumber":80,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":81,"author":{"gitId":"Wu-Haitao"},"content":"        for (int i \u003d 0; i \u003c data.spendingList.getListSize(); i++) {"},{"lineNumber":82,"author":{"gitId":"Wu-Haitao"},"content":"            if (data.spendingList.getItem(i).getDate().startsWith(timePeriod)) {"},{"lineNumber":83,"author":{"gitId":"Wu-Haitao"},"content":"                targetSpendingList.getSpendingList().add(data.spendingList.getItem(i));"},{"lineNumber":84,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"Wu-Haitao"},"content":"        if (targetSpendingList.getListSize() !\u003d 0) {"},{"lineNumber":87,"author":{"gitId":"Wu-Haitao"},"content":"            TreeMap\u003cInteger, Double\u003e dateMap;"},{"lineNumber":88,"author":{"gitId":"Wu-Haitao"},"content":"            if (timePeriod.equals(\"\")) {"},{"lineNumber":89,"author":{"gitId":"Wu-Haitao"},"content":"                dateMap \u003d getYearMap(targetSpendingList);"},{"lineNumber":90,"author":{"gitId":"Wu-Haitao"},"content":"            } else if (timePeriod.length() \u003d\u003d 4) {"},{"lineNumber":91,"author":{"gitId":"Wu-Haitao"},"content":"                dateMap \u003d getMonthMap(targetSpendingList);"},{"lineNumber":92,"author":{"gitId":"Wu-Haitao"},"content":"            } else {"},{"lineNumber":93,"author":{"gitId":"Wu-Haitao"},"content":"                dateMap \u003d getDayMap(targetSpendingList);"},{"lineNumber":94,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"Wu-Haitao"},"content":"            Integer[] dates \u003d dateMap.keySet().toArray(new Integer[0]);"},{"lineNumber":96,"author":{"gitId":"Wu-Haitao"},"content":"            Double[] amountsForDates \u003d dateMap.values().toArray(new Double[0]);"},{"lineNumber":97,"author":{"gitId":"Wu-Haitao"},"content":"            drawChart(sheet0, dates, amountsForDates, 0, 0, 15, 10);"},{"lineNumber":98,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":99,"author":{"gitId":"Wu-Haitao"},"content":"            TreeMap\u003cString, Double\u003e categoryMap \u003d getCategoryMap(targetSpendingList);"},{"lineNumber":100,"author":{"gitId":"Wu-Haitao"},"content":"            String[] categories \u003d categoryMap.keySet().toArray(new String[0]);"},{"lineNumber":101,"author":{"gitId":"Wu-Haitao"},"content":"            Double[] amountsForCategories \u003d categoryMap.values().toArray(new Double[0]);"},{"lineNumber":102,"author":{"gitId":"Wu-Haitao"},"content":"            drawChart(sheet1, categories, amountsForCategories, 0, 0, 8, 12);"},{"lineNumber":103,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":104,"author":{"gitId":"Wu-Haitao"},"content":"            try {"},{"lineNumber":105,"author":{"gitId":"Wu-Haitao"},"content":"                FileOutputStream fileOut \u003d new FileOutputStream(filePath);"},{"lineNumber":106,"author":{"gitId":"Wu-Haitao"},"content":"                workbook.write(fileOut);"},{"lineNumber":107,"author":{"gitId":"Wu-Haitao"},"content":"                fileOut.flush();"},{"lineNumber":108,"author":{"gitId":"Wu-Haitao"},"content":"                fileOut.close();"},{"lineNumber":109,"author":{"gitId":"Wu-Haitao"},"content":"            } catch (Exception e) {"},{"lineNumber":110,"author":{"gitId":"Wu-Haitao"},"content":"                assert false : \"Failed to create Excel file\";"},{"lineNumber":111,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":113,"author":{"gitId":"Wu-Haitao"},"content":"            ui.printDrawMessage(true);"},{"lineNumber":114,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":115,"author":{"gitId":"Wu-Haitao"},"content":"            if (isOpening) {"},{"lineNumber":116,"author":{"gitId":"Wu-Haitao"},"content":"                try {"},{"lineNumber":117,"author":{"gitId":"Wu-Haitao"},"content":"                    fileExplorer.openFile();"},{"lineNumber":118,"author":{"gitId":"Wu-Haitao"},"content":"                } catch (IOException e) {"},{"lineNumber":119,"author":{"gitId":"Wu-Haitao"},"content":"                    ui.printOpenFileFailedMessage();"},{"lineNumber":120,"author":{"gitId":"Wu-Haitao"},"content":"                }"},{"lineNumber":121,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"Wu-Haitao"},"content":"        } else {"},{"lineNumber":123,"author":{"gitId":"Wu-Haitao"},"content":"            ui.printDrawMessage(false);"},{"lineNumber":124,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":127,"author":{"gitId":"Wu-Haitao"},"content":"    private TreeMap\u003cString, Double\u003e getCategoryMap(SpendingList spendingList) {"},{"lineNumber":128,"author":{"gitId":"Wu-Haitao"},"content":"        TreeMap\u003cString, Double\u003e map \u003d new TreeMap\u003c\u003e();"},{"lineNumber":129,"author":{"gitId":"Wu-Haitao"},"content":"        for (int i \u003d 0; i \u003c spendingList.getListSize(); i++) {"},{"lineNumber":130,"author":{"gitId":"Wu-Haitao"},"content":"            Item item \u003d spendingList.getItem(i);"},{"lineNumber":131,"author":{"gitId":"Wu-Haitao"},"content":"            if (map.containsKey(item.getCategory())) {"},{"lineNumber":132,"author":{"gitId":"Wu-Haitao"},"content":"                map.replace(item.getCategory(), map.get(item.getCategory()) + item.getAmount());"},{"lineNumber":133,"author":{"gitId":"Wu-Haitao"},"content":"            } else {"},{"lineNumber":134,"author":{"gitId":"Wu-Haitao"},"content":"                map.put(item.getCategory(), item.getAmount());"},{"lineNumber":135,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"Wu-Haitao"},"content":"        return map;"},{"lineNumber":138,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":140,"author":{"gitId":"Wu-Haitao"},"content":"    private TreeMap\u003cInteger, Double\u003e getYearMap(SpendingList spendingList) {"},{"lineNumber":141,"author":{"gitId":"Wu-Haitao"},"content":"        TreeMap\u003cInteger, Double\u003e map \u003d new TreeMap\u003c\u003e();"},{"lineNumber":142,"author":{"gitId":"Wu-Haitao"},"content":"        int minYear \u003d Integer.parseInt(spendingList.getItem(0).getDate().substring(0, 4));"},{"lineNumber":143,"author":{"gitId":"Wu-Haitao"},"content":"        int maxYear \u003d minYear;"},{"lineNumber":144,"author":{"gitId":"Wu-Haitao"},"content":"        for (int i \u003d 0; i \u003c spendingList.getListSize(); i++) {"},{"lineNumber":145,"author":{"gitId":"Wu-Haitao"},"content":"            Item item \u003d spendingList.getItem(i);"},{"lineNumber":146,"author":{"gitId":"Wu-Haitao"},"content":"            int year \u003d Integer.parseInt(item.getDate().substring(0, 4));"},{"lineNumber":147,"author":{"gitId":"Wu-Haitao"},"content":"            if (year \u003e maxYear) {"},{"lineNumber":148,"author":{"gitId":"Wu-Haitao"},"content":"                maxYear \u003d year;"},{"lineNumber":149,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"Wu-Haitao"},"content":"            if (year \u003c minYear) {"},{"lineNumber":151,"author":{"gitId":"Wu-Haitao"},"content":"                minYear \u003d year;"},{"lineNumber":152,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":153,"author":{"gitId":"Wu-Haitao"},"content":"            if (map.containsKey(year)) {"},{"lineNumber":154,"author":{"gitId":"Wu-Haitao"},"content":"                map.replace(year, map.get(year) + item.getAmount());"},{"lineNumber":155,"author":{"gitId":"Wu-Haitao"},"content":"            } else {"},{"lineNumber":156,"author":{"gitId":"Wu-Haitao"},"content":"                map.put(year, item.getAmount());"},{"lineNumber":157,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":158,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"Wu-Haitao"},"content":"        for (int i \u003d minYear; i \u003c\u003d maxYear; i++) {"},{"lineNumber":160,"author":{"gitId":"Wu-Haitao"},"content":"            map.putIfAbsent(i, 0.0);"},{"lineNumber":161,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"Wu-Haitao"},"content":"        return map;"},{"lineNumber":163,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":165,"author":{"gitId":"Wu-Haitao"},"content":"    private TreeMap\u003cInteger, Double\u003e getMonthMap(SpendingList spendingList) {"},{"lineNumber":166,"author":{"gitId":"Wu-Haitao"},"content":"        TreeMap\u003cInteger, Double\u003e map \u003d new TreeMap\u003c\u003e();"},{"lineNumber":167,"author":{"gitId":"Wu-Haitao"},"content":"        final int minMonth \u003d 1;"},{"lineNumber":168,"author":{"gitId":"Wu-Haitao"},"content":"        final int maxMonth \u003d 12;"},{"lineNumber":169,"author":{"gitId":"Wu-Haitao"},"content":"        for (int i \u003d 0; i \u003c spendingList.getListSize(); i++) {"},{"lineNumber":170,"author":{"gitId":"Wu-Haitao"},"content":"            Item item \u003d spendingList.getItem(i);"},{"lineNumber":171,"author":{"gitId":"Wu-Haitao"},"content":"            int month \u003d Integer.parseInt(item.getDate().substring(5, 7));"},{"lineNumber":172,"author":{"gitId":"Wu-Haitao"},"content":"            if ((month \u003c minMonth) || (month \u003e maxMonth)) {"},{"lineNumber":173,"author":{"gitId":"Wu-Haitao"},"content":"                continue;"},{"lineNumber":174,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":175,"author":{"gitId":"Wu-Haitao"},"content":"            if (map.containsKey(month)) {"},{"lineNumber":176,"author":{"gitId":"Wu-Haitao"},"content":"                map.replace(month, map.get(month) + item.getAmount());"},{"lineNumber":177,"author":{"gitId":"Wu-Haitao"},"content":"            } else {"},{"lineNumber":178,"author":{"gitId":"Wu-Haitao"},"content":"                map.put(month, item.getAmount());"},{"lineNumber":179,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":180,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"Wu-Haitao"},"content":"        for (int i \u003d minMonth; i \u003c\u003d maxMonth; i++) {"},{"lineNumber":182,"author":{"gitId":"Wu-Haitao"},"content":"            map.putIfAbsent(i, 0.0);"},{"lineNumber":183,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"Wu-Haitao"},"content":"        return map;"},{"lineNumber":185,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":187,"author":{"gitId":"Wu-Haitao"},"content":"    private TreeMap\u003cInteger, Double\u003e getDayMap(SpendingList spendingList) {"},{"lineNumber":188,"author":{"gitId":"Wu-Haitao"},"content":"        TreeMap\u003cInteger, Double\u003e map \u003d new TreeMap\u003c\u003e();"},{"lineNumber":189,"author":{"gitId":"Wu-Haitao"},"content":"        final int minDay \u003d 1;"},{"lineNumber":190,"author":{"gitId":"Wu-Haitao"},"content":"        final int maxDay \u003d 31;"},{"lineNumber":191,"author":{"gitId":"Wu-Haitao"},"content":"        for (int i \u003d 0; i \u003c spendingList.getListSize(); i++) {"},{"lineNumber":192,"author":{"gitId":"Wu-Haitao"},"content":"            Item item \u003d spendingList.getItem(i);"},{"lineNumber":193,"author":{"gitId":"Wu-Haitao"},"content":"            int day \u003d Integer.parseInt(item.getDate().substring(8, 10));"},{"lineNumber":194,"author":{"gitId":"Wu-Haitao"},"content":"            if ((day \u003c minDay) || (day \u003e maxDay)) {"},{"lineNumber":195,"author":{"gitId":"Wu-Haitao"},"content":"                continue;"},{"lineNumber":196,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":197,"author":{"gitId":"Wu-Haitao"},"content":"            if (map.containsKey(day)) {"},{"lineNumber":198,"author":{"gitId":"Wu-Haitao"},"content":"                map.replace(day, map.get(day) + item.getAmount());"},{"lineNumber":199,"author":{"gitId":"Wu-Haitao"},"content":"            } else {"},{"lineNumber":200,"author":{"gitId":"Wu-Haitao"},"content":"                map.put(day, item.getAmount());"},{"lineNumber":201,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":202,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":203,"author":{"gitId":"Wu-Haitao"},"content":"        for (int i \u003d minDay; i \u003c\u003d maxDay; i++) {"},{"lineNumber":204,"author":{"gitId":"Wu-Haitao"},"content":"            map.putIfAbsent(i, 0.0);"},{"lineNumber":205,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"Wu-Haitao"},"content":"        return map;"},{"lineNumber":207,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":209,"author":{"gitId":"Wu-Haitao"},"content":"    /**"},{"lineNumber":210,"author":{"gitId":"Wu-Haitao"},"content":"     * Plots a pie chart in a sheet according to the given data."},{"lineNumber":211,"author":{"gitId":"Wu-Haitao"},"content":"     *"},{"lineNumber":212,"author":{"gitId":"Wu-Haitao"},"content":"     * @param sheet target sheet which the chart will be positioned in"},{"lineNumber":213,"author":{"gitId":"Wu-Haitao"},"content":"     * @param category categories of the chart"},{"lineNumber":214,"author":{"gitId":"Wu-Haitao"},"content":"     * @param values values of the chart"},{"lineNumber":215,"author":{"gitId":"Wu-Haitao"},"content":"     * @param x1 x value of the upper left corner of the chart"},{"lineNumber":216,"author":{"gitId":"Wu-Haitao"},"content":"     * @param y1 y value of the upper left corner of the chart"},{"lineNumber":217,"author":{"gitId":"Wu-Haitao"},"content":"     * @param x2 x value of the lower right corner of the chart"},{"lineNumber":218,"author":{"gitId":"Wu-Haitao"},"content":"     * @param y2 y value of the lower right corner of the chart"},{"lineNumber":219,"author":{"gitId":"Wu-Haitao"},"content":"     */"},{"lineNumber":220,"author":{"gitId":"Wu-Haitao"},"content":"    private void drawChart(XSSFSheet sheet, String[] category, Double[] values, int x1, int y1, int x2, int y2) {"},{"lineNumber":221,"author":{"gitId":"Wu-Haitao"},"content":"        XSSFDrawing drawing \u003d sheet.createDrawingPatriarch();"},{"lineNumber":222,"author":{"gitId":"Wu-Haitao"},"content":"        XSSFClientAnchor anchor \u003d drawing.createAnchor(0, 0, 0, 0, x1, y1, x2, y2);"},{"lineNumber":223,"author":{"gitId":"Wu-Haitao"},"content":"        XSSFChart chart \u003d drawing.createChart(anchor);"},{"lineNumber":224,"author":{"gitId":"Wu-Haitao"},"content":"        XDDFChartLegend legend \u003d chart.getOrAddLegend();"},{"lineNumber":225,"author":{"gitId":"Wu-Haitao"},"content":"        legend.setPosition(org.apache.poi.xddf.usermodel.chart.LegendPosition.TOP_RIGHT);"},{"lineNumber":226,"author":{"gitId":"Wu-Haitao"},"content":"        XDDFDataSource\u003cString\u003e cat \u003d XDDFDataSourcesFactory.fromArray(category);"},{"lineNumber":227,"author":{"gitId":"Wu-Haitao"},"content":"        XDDFNumericalDataSource\u003cDouble\u003e val \u003d XDDFDataSourcesFactory.fromArray(values);"},{"lineNumber":228,"author":{"gitId":"Wu-Haitao"},"content":"        XDDFChartData chartData \u003d chart.createData(ChartTypes.PIE, null, null);"},{"lineNumber":229,"author":{"gitId":"Wu-Haitao"},"content":"        chartData.addSeries(cat, val);"},{"lineNumber":230,"author":{"gitId":"Wu-Haitao"},"content":"        chart.plot(chartData);"},{"lineNumber":231,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":233,"author":{"gitId":"Wu-Haitao"},"content":"    /**"},{"lineNumber":234,"author":{"gitId":"Wu-Haitao"},"content":"     * Plots a line chart in a sheet according to the given data."},{"lineNumber":235,"author":{"gitId":"Wu-Haitao"},"content":"     *"},{"lineNumber":236,"author":{"gitId":"Wu-Haitao"},"content":"     * @param sheet target sheet which the chart will be positioned in"},{"lineNumber":237,"author":{"gitId":"Wu-Haitao"},"content":"     * @param category categories of the chart"},{"lineNumber":238,"author":{"gitId":"Wu-Haitao"},"content":"     * @param values values of the chart"},{"lineNumber":239,"author":{"gitId":"Wu-Haitao"},"content":"     * @param x1 x value of the upper left corner of the chart"},{"lineNumber":240,"author":{"gitId":"Wu-Haitao"},"content":"     * @param y1 y value of the upper left corner of the chart"},{"lineNumber":241,"author":{"gitId":"Wu-Haitao"},"content":"     * @param x2 x value of the lower right corner of the chart"},{"lineNumber":242,"author":{"gitId":"Wu-Haitao"},"content":"     * @param y2 y value of the lower right corner of the chart"},{"lineNumber":243,"author":{"gitId":"Wu-Haitao"},"content":"     */"},{"lineNumber":244,"author":{"gitId":"Wu-Haitao"},"content":"    private void drawChart(XSSFSheet sheet, Integer[] category, Double[] values, int x1, int y1, int x2, int y2) {"},{"lineNumber":245,"author":{"gitId":"Wu-Haitao"},"content":"        XSSFDrawing drawing \u003d sheet.createDrawingPatriarch();"},{"lineNumber":246,"author":{"gitId":"Wu-Haitao"},"content":"        XSSFClientAnchor anchor \u003d drawing.createAnchor(0, 0, 0, 0, x1, y1, x2, y2);"},{"lineNumber":247,"author":{"gitId":"Wu-Haitao"},"content":"        XSSFChart chart \u003d drawing.createChart(anchor);"},{"lineNumber":248,"author":{"gitId":"Wu-Haitao"},"content":"        XDDFDataSource\u003cInteger\u003e cat \u003d XDDFDataSourcesFactory.fromArray(category);"},{"lineNumber":249,"author":{"gitId":"Wu-Haitao"},"content":"        XDDFNumericalDataSource\u003cDouble\u003e val \u003d XDDFDataSourcesFactory.fromArray(values);"},{"lineNumber":250,"author":{"gitId":"Wu-Haitao"},"content":"        XDDFChartAxis chartAxis \u003d chart.createCategoryAxis(AxisPosition.LEFT);"},{"lineNumber":251,"author":{"gitId":"Wu-Haitao"},"content":"        XDDFValueAxis valueAxis \u003d chart.createValueAxis(AxisPosition.BOTTOM);"},{"lineNumber":252,"author":{"gitId":"Wu-Haitao"},"content":"        XDDFChartData chartData \u003d chart.createData(ChartTypes.LINE, chartAxis, valueAxis);"},{"lineNumber":253,"author":{"gitId":"Wu-Haitao"},"content":"        chartData.addSeries(cat, val);"},{"lineNumber":254,"author":{"gitId":"Wu-Haitao"},"content":"        chart.plot(chartData);"},{"lineNumber":255,"author":{"gitId":"Wu-Haitao"},"content":"        CTPlotArea plotArea \u003d chart.getCTChart().getPlotArea();"},{"lineNumber":256,"author":{"gitId":"Wu-Haitao"},"content":"        for (CTLineChart ch : plotArea.getLineChartList()) {"},{"lineNumber":257,"author":{"gitId":"Wu-Haitao"},"content":"            for (CTLineSer ser : ch.getSerList()) {"},{"lineNumber":258,"author":{"gitId":"Wu-Haitao"},"content":"                CTBoolean ctBool \u003d CTBoolean.Factory.newInstance();"},{"lineNumber":259,"author":{"gitId":"Wu-Haitao"},"content":"                ctBool.setVal(false);"},{"lineNumber":260,"author":{"gitId":"Wu-Haitao"},"content":"                ser.setSmooth(ctBool);"},{"lineNumber":261,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":262,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":263,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":265,"author":{"gitId":"Wu-Haitao"},"content":"}"}],"authorContributionMap":{"Wu-Haitao":234,"k-walter":10,"pinfang":21}},{"path":"src/main/java/seedu/duke/command/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.EmptyCommandException;"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.EmptyListException;"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidAmountException;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidInputCurrencyException;"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidNameException;"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidNumberException;"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.utilities.AmountConverter;"},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.utilities.DecimalFormatter;"},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"/** This class is to edit the item in the spending list. */"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"public class EditCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"killingbear999"},"content":"    public String description;"},{"lineNumber":20,"author":{"gitId":"killingbear999"},"content":"    public Double amount;"},{"lineNumber":21,"author":{"gitId":"killingbear999"},"content":"    public String currency;"},{"lineNumber":22,"author":{"gitId":"killingbear999"},"content":"    public int index;"},{"lineNumber":23,"author":{"gitId":"killingbear999"},"content":"    public String category;"},{"lineNumber":24,"author":{"gitId":"killingbear999"},"content":"    private String defaultCurrency \u003d \"SGD\";"},{"lineNumber":25,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":26,"author":{"gitId":"killingbear999"},"content":"    public EditCommand(int index, String description, String currency, Double amount, String category) {"},{"lineNumber":27,"author":{"gitId":"killingbear999"},"content":"        this.index \u003d index - 1;"},{"lineNumber":28,"author":{"gitId":"killingbear999"},"content":"        this.description \u003d description;"},{"lineNumber":29,"author":{"gitId":"killingbear999"},"content":"        this.currency \u003d currency;"},{"lineNumber":30,"author":{"gitId":"killingbear999"},"content":"        this.amount \u003d amount;"},{"lineNumber":31,"author":{"gitId":"killingbear999"},"content":"        this.category \u003d category;"},{"lineNumber":32,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":34,"author":{"gitId":"killingbear999"},"content":"    /** It is to convert the currency for the whole spending list."},{"lineNumber":35,"author":{"gitId":"killingbear999"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"killingbear999"},"content":"     * @throws InvalidInputCurrencyException If input currency is invalid"},{"lineNumber":37,"author":{"gitId":"killingbear999"},"content":"     * @throws EmptyListException If the spending list is empty and the convert command is called"},{"lineNumber":38,"author":{"gitId":"killingbear999"},"content":"     * @throws InvalidAmountException If the amount input is less than 0.01 or negative"},{"lineNumber":39,"author":{"gitId":"killingbear999"},"content":"     * @throws InvalidNumberException If the index input is out of bound"},{"lineNumber":40,"author":{"gitId":"killingbear999"},"content":"     * @throws InvalidNameException If the name input is invalid or does not match with the format"},{"lineNumber":41,"author":{"gitId":"killingbear999"},"content":"     * @throws EmptyCommandException If no command is given except for the index"},{"lineNumber":42,"author":{"gitId":"killingbear999"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"killingbear999"},"content":"    public void execute(Data data, Ui ui) throws IOException,"},{"lineNumber":45,"author":{"gitId":"killingbear999"},"content":"            InvalidAmountException, InvalidNumberException, InvalidInputCurrencyException, InvalidNameException,"},{"lineNumber":46,"author":{"gitId":"killingbear999"},"content":"            EmptyListException, EmptyCommandException {"},{"lineNumber":47,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":48,"author":{"gitId":"killingbear999"},"content":"        if (description \u003d\u003d null \u0026\u0026 amount \u003d\u003d null \u0026\u0026 category \u003d\u003d null) {"},{"lineNumber":49,"author":{"gitId":"killingbear999"},"content":"            throw new EmptyCommandException();"},{"lineNumber":50,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":52,"author":{"gitId":"killingbear999"},"content":"        if (data.spendingList.getListSize() \u003d\u003d 0) {"},{"lineNumber":53,"author":{"gitId":"killingbear999"},"content":"            throw new EmptyListException();"},{"lineNumber":54,"author":{"gitId":"killingbear999"},"content":"        } else if (index \u003e\u003d data.spendingList.getListSize() \u0026\u0026 data.spendingList.getListSize() !\u003d 0) {"},{"lineNumber":55,"author":{"gitId":"killingbear999"},"content":"            throw new InvalidNumberException();"},{"lineNumber":56,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":58,"author":{"gitId":"killingbear999"},"content":"        if (description !\u003d null) {"},{"lineNumber":59,"author":{"gitId":"killingbear999"},"content":"            if (!isValidName()) {"},{"lineNumber":60,"author":{"gitId":"killingbear999"},"content":"                throw new InvalidNameException();"},{"lineNumber":61,"author":{"gitId":"killingbear999"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"killingbear999"},"content":"            data.spendingList.editItemDescription(index, description);"},{"lineNumber":63,"author":{"gitId":"killingbear999"},"content":"            ui.printEdit(data.spendingList, index);"},{"lineNumber":64,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":66,"author":{"gitId":"killingbear999"},"content":"        if (amount !\u003d null) {"},{"lineNumber":67,"author":{"gitId":"killingbear999"},"content":"            int size \u003d data.spendingList.getListSize();"},{"lineNumber":68,"author":{"gitId":"killingbear999"},"content":"            if (size !\u003d 0) {"},{"lineNumber":69,"author":{"gitId":"killingbear999"},"content":"                defaultCurrency \u003d data.spendingList.getItem(0).getSymbol();"},{"lineNumber":70,"author":{"gitId":"killingbear999"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"killingbear999"},"content":"            if (!currency.equals(defaultCurrency)) {"},{"lineNumber":72,"author":{"gitId":"killingbear999"},"content":"                AmountConverter amountConverter \u003d new AmountConverter(currency, amount, defaultCurrency);"},{"lineNumber":73,"author":{"gitId":"killingbear999"},"content":"                amount \u003d amountConverter.updateAmount();"},{"lineNumber":74,"author":{"gitId":"killingbear999"},"content":"                currency \u003d amountConverter.updateCurrency();"},{"lineNumber":75,"author":{"gitId":"killingbear999"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"killingbear999"},"content":"            if (!(currency.equals(\"SGD\") || currency.equals(\"USD\") || currency.equals(\"CNY\"))) {"},{"lineNumber":77,"author":{"gitId":"killingbear999"},"content":"                throw new InvalidInputCurrencyException();"},{"lineNumber":78,"author":{"gitId":"killingbear999"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"killingbear999"},"content":"            if (amount \u003c 0.01) {"},{"lineNumber":80,"author":{"gitId":"killingbear999"},"content":"                throw new InvalidAmountException();"},{"lineNumber":81,"author":{"gitId":"killingbear999"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"killingbear999"},"content":"            String defaultCurrency \u003d data.spendingList.getItem(0).getSymbol();"},{"lineNumber":83,"author":{"gitId":"killingbear999"},"content":"            if (currency.equals(defaultCurrency)) {"},{"lineNumber":84,"author":{"gitId":"killingbear999"},"content":"                DecimalFormatter decimalFormatter \u003d new DecimalFormatter();"},{"lineNumber":85,"author":{"gitId":"killingbear999"},"content":"                amount \u003d decimalFormatter.convert(amount);"},{"lineNumber":86,"author":{"gitId":"killingbear999"},"content":"                data.spendingList.editItemAmount(index, amount);"},{"lineNumber":87,"author":{"gitId":"killingbear999"},"content":"                ui.printEdit(data.spendingList, index);"},{"lineNumber":88,"author":{"gitId":"killingbear999"},"content":"            } else {"},{"lineNumber":89,"author":{"gitId":"killingbear999"},"content":"                ui.printInvalidConversion(defaultCurrency);"},{"lineNumber":90,"author":{"gitId":"killingbear999"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":93,"author":{"gitId":"killingbear999"},"content":"        if (category !\u003d null) {"},{"lineNumber":94,"author":{"gitId":"killingbear999"},"content":"            data.spendingList.editItemCategory(index, category);"},{"lineNumber":95,"author":{"gitId":"killingbear999"},"content":"            ui.printEdit(data.spendingList, index);"},{"lineNumber":96,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":99,"author":{"gitId":"killingbear999"},"content":"    /** It is to check if the name input is valid. */"},{"lineNumber":100,"author":{"gitId":"killingbear999"},"content":"    private boolean isValidName() {"},{"lineNumber":101,"author":{"gitId":"killingbear999"},"content":"        return description.matches(\".*[a-zA-Z]+.*\");"},{"lineNumber":102,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":6,"killingbear999":96,"xieyaoyue":1}},{"path":"src/main/java/seedu/duke/command/EncouragementCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":" * Represents the command for giving the user encouragements."},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":"//@@author xieyaoyue"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":"public class EncouragementCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":"     * Prints out an encouragement quote."},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":"     * @param data current data stored by the application"},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":"     * @param ui user interface of the application"},{"lineNumber":17,"author":{"gitId":"xieyaoyue"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"xieyaoyue"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":"    public void execute(Data data, Ui ui) {"},{"lineNumber":20,"author":{"gitId":"xieyaoyue"},"content":"        ui.printEncouragementMessage();"},{"lineNumber":21,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"k-walter":1,"xieyaoyue":21}},{"path":"src/main/java/seedu/duke/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"/** It is to exit the program. */"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"public class ExitCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"    public ExitCommand() {"},{"lineNumber":11,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"    public void execute(Data data, Ui ui) {"},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"    public boolean isExit() {"},{"lineNumber":19,"author":{"gitId":"killingbear999"},"content":"        return true;"},{"lineNumber":20,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":1,"killingbear999":16,"xieyaoyue":4}},{"path":"src/main/java/seedu/duke/command/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Wu-Haitao"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":3,"author":{"gitId":"Wu-Haitao"},"content":"import org.apache.poi.ss.usermodel.Cell;"},{"lineNumber":4,"author":{"gitId":"Wu-Haitao"},"content":"import org.apache.poi.ss.usermodel.CellStyle;"},{"lineNumber":5,"author":{"gitId":"Wu-Haitao"},"content":"import org.apache.poi.ss.usermodel.Font;"},{"lineNumber":6,"author":{"gitId":"Wu-Haitao"},"content":"import org.apache.poi.ss.usermodel.Row;"},{"lineNumber":7,"author":{"gitId":"Wu-Haitao"},"content":"import org.apache.poi.ss.usermodel.Sheet;"},{"lineNumber":8,"author":{"gitId":"Wu-Haitao"},"content":"import org.apache.poi.ss.usermodel.Workbook;"},{"lineNumber":9,"author":{"gitId":"Wu-Haitao"},"content":"import org.apache.poi.xssf.usermodel.XSSFWorkbook;"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Item;"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.SpendingList;"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"import seedu.duke.utilities.FileExplorer;"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"import java.io.File;"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"import java.io.FileOutputStream;"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":19,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":20,"author":{"gitId":"Wu-Haitao"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"Wu-Haitao"},"content":" * This class represents the command for exporting data to an Excel file."},{"lineNumber":22,"author":{"gitId":"Wu-Haitao"},"content":" */"},{"lineNumber":23,"author":{"gitId":"Wu-Haitao"},"content":"//@@author Wu-Haitao"},{"lineNumber":24,"author":{"gitId":"Wu-Haitao"},"content":"public class ExportCommand extends Command {"},{"lineNumber":25,"author":{"gitId":"Wu-Haitao"},"content":"    private final String filePath;"},{"lineNumber":26,"author":{"gitId":"Wu-Haitao"},"content":"    private final FileExplorer fileExplorer;"},{"lineNumber":27,"author":{"gitId":"Wu-Haitao"},"content":"    private final boolean isOpening;"},{"lineNumber":28,"author":{"gitId":"Wu-Haitao"},"content":"    private boolean isValidPath \u003d true;"},{"lineNumber":29,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":30,"author":{"gitId":"Wu-Haitao"},"content":"    public ExportCommand(String filePath) {"},{"lineNumber":31,"author":{"gitId":"Wu-Haitao"},"content":"        if (filePath.contains(\"\\\\\")) {"},{"lineNumber":32,"author":{"gitId":"Wu-Haitao"},"content":"            if (!filePath.endsWith(\"\\\\\")) {"},{"lineNumber":33,"author":{"gitId":"Wu-Haitao"},"content":"                filePath +\u003d \"\\\\\";"},{"lineNumber":34,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"Wu-Haitao"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"Wu-Haitao"},"content":"            if (!filePath.endsWith(\"/\")) {"},{"lineNumber":37,"author":{"gitId":"Wu-Haitao"},"content":"                filePath +\u003d \"/\";"},{"lineNumber":38,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Wu-Haitao"},"content":"        File folder \u003d new File(filePath);"},{"lineNumber":41,"author":{"gitId":"Wu-Haitao"},"content":"        if (!folder.isDirectory()) {"},{"lineNumber":42,"author":{"gitId":"Wu-Haitao"},"content":"            isValidPath \u003d false;"},{"lineNumber":43,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Wu-Haitao"},"content":"        this.filePath \u003d filePath + \"Records.xlsx\";"},{"lineNumber":45,"author":{"gitId":"Wu-Haitao"},"content":"        fileExplorer \u003d new FileExplorer(this.filePath);"},{"lineNumber":46,"author":{"gitId":"Wu-Haitao"},"content":"        this.isOpening \u003d true;"},{"lineNumber":47,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":49,"author":{"gitId":"Wu-Haitao"},"content":"    public ExportCommand(String filePath, boolean isOpening) {"},{"lineNumber":50,"author":{"gitId":"Wu-Haitao"},"content":"        File folder \u003d new File(filePath);"},{"lineNumber":51,"author":{"gitId":"Wu-Haitao"},"content":"        if (!folder.isDirectory()) {"},{"lineNumber":52,"author":{"gitId":"Wu-Haitao"},"content":"            isValidPath \u003d false;"},{"lineNumber":53,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"Wu-Haitao"},"content":"        this.filePath \u003d filePath + \"Records.xlsx\";"},{"lineNumber":55,"author":{"gitId":"Wu-Haitao"},"content":"        fileExplorer \u003d new FileExplorer(this.filePath);"},{"lineNumber":56,"author":{"gitId":"Wu-Haitao"},"content":"        this.isOpening \u003d isOpening;"},{"lineNumber":57,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":59,"author":{"gitId":"Wu-Haitao"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"Wu-Haitao"},"content":"     * Exports the data to an Excel file at the given location."},{"lineNumber":61,"author":{"gitId":"Wu-Haitao"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"Wu-Haitao"},"content":"     * @param data current data stored by the application"},{"lineNumber":63,"author":{"gitId":"Wu-Haitao"},"content":"     * @param ui user interface of the application"},{"lineNumber":64,"author":{"gitId":"Wu-Haitao"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"Wu-Haitao"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"Wu-Haitao"},"content":"    public void execute(Data data, Ui ui) {"},{"lineNumber":67,"author":{"gitId":"Wu-Haitao"},"content":"        if (!isValidPath) {"},{"lineNumber":68,"author":{"gitId":"Wu-Haitao"},"content":"            ui.printExportMessage(false);"},{"lineNumber":69,"author":{"gitId":"Wu-Haitao"},"content":"            return;"},{"lineNumber":70,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Wu-Haitao"},"content":"        exportToExcel(data.spendingList);"},{"lineNumber":72,"author":{"gitId":"Wu-Haitao"},"content":"        if (isOpening) {"},{"lineNumber":73,"author":{"gitId":"Wu-Haitao"},"content":"            try {"},{"lineNumber":74,"author":{"gitId":"Wu-Haitao"},"content":"                fileExplorer.openFile();"},{"lineNumber":75,"author":{"gitId":"Wu-Haitao"},"content":"            } catch (IOException e) {"},{"lineNumber":76,"author":{"gitId":"Wu-Haitao"},"content":"                ui.printOpenFileFailedMessage();"},{"lineNumber":77,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"Wu-Haitao"},"content":"        ui.printExportMessage(true);"},{"lineNumber":80,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":82,"author":{"gitId":"Wu-Haitao"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"Wu-Haitao"},"content":"     * Sets the cell values based on the given spending list, then writes them to an Excel file."},{"lineNumber":84,"author":{"gitId":"Wu-Haitao"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"Wu-Haitao"},"content":"     * @param list current spending list stored by the application"},{"lineNumber":86,"author":{"gitId":"Wu-Haitao"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"Wu-Haitao"},"content":"    private void exportToExcel(SpendingList list) {"},{"lineNumber":88,"author":{"gitId":"Wu-Haitao"},"content":"        Workbook workbook \u003d new XSSFWorkbook();"},{"lineNumber":89,"author":{"gitId":"Wu-Haitao"},"content":"        Sheet sheet \u003d workbook.createSheet(\"sheet0\");"},{"lineNumber":90,"author":{"gitId":"Wu-Haitao"},"content":"        sheet.setDefaultColumnWidth(15);"},{"lineNumber":91,"author":{"gitId":"Wu-Haitao"},"content":"        Row row \u003d sheet.createRow(0);"},{"lineNumber":92,"author":{"gitId":"Wu-Haitao"},"content":"        printHeaders(workbook, row);"},{"lineNumber":93,"author":{"gitId":"Wu-Haitao"},"content":"        for (int i \u003d 0; i \u003c list.getListSize(); i++) {"},{"lineNumber":94,"author":{"gitId":"Wu-Haitao"},"content":"            row \u003d sheet.createRow(i + 1);"},{"lineNumber":95,"author":{"gitId":"Wu-Haitao"},"content":"            Item item \u003d list.getItem(i);"},{"lineNumber":96,"author":{"gitId":"Wu-Haitao"},"content":"            row.createCell(0).setCellValue(item.getDescription());"},{"lineNumber":97,"author":{"gitId":"Wu-Haitao"},"content":"            row.createCell(1).setCellValue(item.getSymbol());"},{"lineNumber":98,"author":{"gitId":"Wu-Haitao"},"content":"            row.createCell(2).setCellValue(item.getAmount());"},{"lineNumber":99,"author":{"gitId":"Wu-Haitao"},"content":"            row.createCell(3).setCellValue(item.getDate());"},{"lineNumber":100,"author":{"gitId":"Wu-Haitao"},"content":"            row.createCell(4).setCellValue(item.getCategory());"},{"lineNumber":101,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"Wu-Haitao"},"content":"        try {"},{"lineNumber":103,"author":{"gitId":"Wu-Haitao"},"content":"            FileOutputStream output \u003d new FileOutputStream(filePath);"},{"lineNumber":104,"author":{"gitId":"Wu-Haitao"},"content":"            workbook.write(output);"},{"lineNumber":105,"author":{"gitId":"Wu-Haitao"},"content":"            output.flush();"},{"lineNumber":106,"author":{"gitId":"Wu-Haitao"},"content":"            output.close();"},{"lineNumber":107,"author":{"gitId":"Wu-Haitao"},"content":"        } catch (Exception e) {"},{"lineNumber":108,"author":{"gitId":"Wu-Haitao"},"content":"            assert false : \"Failed to create Excel file\";"},{"lineNumber":109,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":112,"author":{"gitId":"Wu-Haitao"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"Wu-Haitao"},"content":"     * Fills in the headers to the worksheet."},{"lineNumber":114,"author":{"gitId":"Wu-Haitao"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"Wu-Haitao"},"content":"     * @param workbook current workbook"},{"lineNumber":116,"author":{"gitId":"Wu-Haitao"},"content":"     * @param row header row"},{"lineNumber":117,"author":{"gitId":"Wu-Haitao"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"Wu-Haitao"},"content":"    private void printHeaders(Workbook workbook, Row row) {"},{"lineNumber":119,"author":{"gitId":"Wu-Haitao"},"content":"        Cell[] cells \u003d new Cell[5];"},{"lineNumber":120,"author":{"gitId":"Wu-Haitao"},"content":"        CellStyle cellStyle \u003d workbook.createCellStyle();"},{"lineNumber":121,"author":{"gitId":"Wu-Haitao"},"content":"        Font font \u003d workbook.createFont();"},{"lineNumber":122,"author":{"gitId":"Wu-Haitao"},"content":"        font.setBold(true);"},{"lineNumber":123,"author":{"gitId":"Wu-Haitao"},"content":"        cellStyle.setFont(font);"},{"lineNumber":124,"author":{"gitId":"Wu-Haitao"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {"},{"lineNumber":125,"author":{"gitId":"Wu-Haitao"},"content":"            cells[i] \u003d row.createCell(i);"},{"lineNumber":126,"author":{"gitId":"Wu-Haitao"},"content":"            cells[i].setCellStyle(cellStyle);"},{"lineNumber":127,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"Wu-Haitao"},"content":"        cells[0].setCellValue(\"Description\");"},{"lineNumber":129,"author":{"gitId":"Wu-Haitao"},"content":"        cells[1].setCellValue(\"Currency\");"},{"lineNumber":130,"author":{"gitId":"Wu-Haitao"},"content":"        cells[2].setCellValue(\"Amount\");"},{"lineNumber":131,"author":{"gitId":"Wu-Haitao"},"content":"        cells[3].setCellValue(\"Date\");"},{"lineNumber":132,"author":{"gitId":"Wu-Haitao"},"content":"        cells[4].setCellValue(\"Category\");"},{"lineNumber":133,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"Wu-Haitao"},"content":"}"}],"authorContributionMap":{"Wu-Haitao":125,"k-walter":9}},{"path":"src/main/java/seedu/duke/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import java.util.logging.Level;"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":"import java.util.logging.Logger;"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":" * Represents the command for providing help for the user."},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":" */"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"//@@author xieyaoyue"},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":"public class HelpCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":"    private static Logger logger \u003d Logger.getLogger(\"HelpCommand\");"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"xieyaoyue"},"content":"     * Outputs a help window for the user."},{"lineNumber":18,"author":{"gitId":"xieyaoyue"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":"     * @param data current data stored by the application"},{"lineNumber":20,"author":{"gitId":"xieyaoyue"},"content":"     * @param ui user interface of the application"},{"lineNumber":21,"author":{"gitId":"xieyaoyue"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"xieyaoyue"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"xieyaoyue"},"content":"    public void execute(Data data, Ui ui) {"},{"lineNumber":24,"author":{"gitId":"xieyaoyue"},"content":"        logger.log(Level.FINE, \"opening up help window\");"},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":"        ui.printHelp();"},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"k-walter":1,"xieyaoyue":26}},{"path":"src/main/java/seedu/duke/command/MultipleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.EmptyCommandException;"},{"lineNumber":5,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.EmptyListException;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidAmountException;"},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.InvalidBudgetException;"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidClearBudgetException;"},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.InvalidClearRepaymentException;"},{"lineNumber":10,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.InvalidClearSpendingException;"},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.InvalidCurrencyException;"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidDateException;"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidInputCurrencyException;"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidMonthException;"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidNameException;"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidNumberException;"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidOutputCurrencyException;"},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.InvalidYearException;"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"import java.util.ArrayList;"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"public class MultipleCommand extends Command {"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"    public ArrayList\u003cCommand\u003e commands \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"    public void addCommand(Command c) {"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"        commands.add(c);"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"    public boolean noCommandsGiven() {"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"        return commands.isEmpty();"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"    public void execute(Data data, Ui ui) throws IOException,"},{"lineNumber":38,"author":{"gitId":"xieyaoyue"},"content":"            InvalidMonthException, InvalidClearRepaymentException, InvalidClearSpendingException,"},{"lineNumber":39,"author":{"gitId":"killingbear999"},"content":"            InvalidClearBudgetException, InvalidAmountException, InvalidInputCurrencyException,"},{"lineNumber":40,"author":{"gitId":"killingbear999"},"content":"            InvalidOutputCurrencyException, InvalidCurrencyException, EmptyListException, InvalidDateException,"},{"lineNumber":41,"author":{"gitId":"pinfang"},"content":"            InvalidNameException, InvalidBudgetException, InvalidNumberException, EmptyCommandException,"},{"lineNumber":42,"author":{"gitId":"pinfang"},"content":"            InvalidYearException {"},{"lineNumber":43,"author":{"gitId":"k-walter"},"content":"        for (Command c : commands) {"},{"lineNumber":44,"author":{"gitId":"k-walter"},"content":"            c.execute(data, ui);"},{"lineNumber":45,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":35,"killingbear999":2,"xieyaoyue":2,"pinfang":8}},{"path":"src/main/java/seedu/duke/command/PurgeDataCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidClearBudgetException;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidClearRepaymentException;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidClearSpendingException;"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidNumberException;"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":"import java.util.logging.Level;"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"import java.util.logging.Logger;"},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":" * Represents the command for purging all data stored in the application."},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":" */"},{"lineNumber":17,"author":{"gitId":"xieyaoyue"},"content":"//@@author xieyaoyue"},{"lineNumber":18,"author":{"gitId":"xieyaoyue"},"content":"public class PurgeDataCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":"    private static Logger logger \u003d Logger.getLogger(\"PurgeDataCommand\");"},{"lineNumber":20,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":21,"author":{"gitId":"xieyaoyue"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"xieyaoyue"},"content":"     * Purges all data stored in the application."},{"lineNumber":23,"author":{"gitId":"xieyaoyue"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"xieyaoyue"},"content":"     * @param data current data stored by the application"},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":"     * @param ui user interface of the application"},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":"     * @throws IOException if the application fails to purge all data"},{"lineNumber":27,"author":{"gitId":"xieyaoyue"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"xieyaoyue"},"content":"    public void execute(Data data, Ui ui) throws IOException {"},{"lineNumber":29,"author":{"gitId":"xieyaoyue"},"content":"        logger.log(Level.FINE, \"going to purge data\");"},{"lineNumber":30,"author":{"gitId":"xieyaoyue"},"content":"        ClearSpendingListCommand clearSpendingListCommand \u003d new ClearSpendingListCommand(true, 0);"},{"lineNumber":31,"author":{"gitId":"xieyaoyue"},"content":"        ClearRepaymentListCommand clearRepaymentListCommand \u003d new ClearRepaymentListCommand(true, 0);"},{"lineNumber":32,"author":{"gitId":"xieyaoyue"},"content":"        ClearBudgetCommand clearBudgetCommand \u003d new ClearBudgetCommand();"},{"lineNumber":33,"author":{"gitId":"xieyaoyue"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"xieyaoyue"},"content":"            clearSpendingListCommand.execute(data, ui);"},{"lineNumber":35,"author":{"gitId":"xieyaoyue"},"content":"        } catch (InvalidClearSpendingException | InvalidNumberException ignore) {"},{"lineNumber":36,"author":{"gitId":"xieyaoyue"},"content":"            //this is expected"},{"lineNumber":37,"author":{"gitId":"xieyaoyue"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"xieyaoyue"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"xieyaoyue"},"content":"            clearRepaymentListCommand.execute(data, ui);"},{"lineNumber":40,"author":{"gitId":"xieyaoyue"},"content":"        } catch (InvalidClearRepaymentException | InvalidNumberException ignore) {"},{"lineNumber":41,"author":{"gitId":"xieyaoyue"},"content":"            //this is expected"},{"lineNumber":42,"author":{"gitId":"xieyaoyue"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"xieyaoyue"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"xieyaoyue"},"content":"            clearBudgetCommand.execute(data, ui);"},{"lineNumber":45,"author":{"gitId":"xieyaoyue"},"content":"        } catch (InvalidClearBudgetException ignore) {"},{"lineNumber":46,"author":{"gitId":"xieyaoyue"},"content":"            //this is expected"},{"lineNumber":47,"author":{"gitId":"xieyaoyue"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"xieyaoyue"},"content":"        ui.printPurgeData();"},{"lineNumber":49,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"k-walter":1,"xieyaoyue":49}},{"path":"src/main/java/seedu/duke/command/ReminderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":6,"author":{"gitId":"pinfang"},"content":"import java.time.DayOfWeek;"},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":10,"author":{"gitId":"pinfang"},"content":"//@@author pinfang"},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":12,"author":{"gitId":"pinfang"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"pinfang"},"content":" * Reminds the user the amount spent during current week."},{"lineNumber":14,"author":{"gitId":"pinfang"},"content":" */"},{"lineNumber":15,"author":{"gitId":"pinfang"},"content":"public class ReminderCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"pinfang"},"content":"    private LocalDate startWeek;"},{"lineNumber":17,"author":{"gitId":"pinfang"},"content":"    private WarnCommand warn;"},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"    private ArrayList\u003cString\u003e week \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"pinfang"},"content":"    private String currency \u003d \"SGD\";"},{"lineNumber":20,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":21,"author":{"gitId":"pinfang"},"content":"    public ReminderCommand() {"},{"lineNumber":22,"author":{"gitId":"pinfang"},"content":"        saveDatesToList();"},{"lineNumber":23,"author":{"gitId":"pinfang"},"content":"        warn \u003d new WarnCommand();"},{"lineNumber":24,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":26,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"pinfang"},"content":"     * Summarises the total amount spent during the current week."},{"lineNumber":28,"author":{"gitId":"pinfang"},"content":"     * Shows amount of budget left."},{"lineNumber":29,"author":{"gitId":"pinfang"},"content":"     * Provides warning if exceeding the budget."},{"lineNumber":30,"author":{"gitId":"pinfang"},"content":"     * @param data This parameter contains the spending list."},{"lineNumber":31,"author":{"gitId":"pinfang"},"content":"     * @param ui This parameter will prints out necessary messages shown to user."},{"lineNumber":32,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"pinfang"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"pinfang"},"content":"    public void execute(Data data, Ui ui) {"},{"lineNumber":35,"author":{"gitId":"pinfang"},"content":"        updateCurrency(data);"},{"lineNumber":36,"author":{"gitId":"pinfang"},"content":"        double amountRemained \u003d 0;"},{"lineNumber":37,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":38,"author":{"gitId":"pinfang"},"content":"        if (data.budget.hasBudget) {"},{"lineNumber":39,"author":{"gitId":"pinfang"},"content":"            warn.execute(data, ui);"},{"lineNumber":40,"author":{"gitId":"pinfang"},"content":"            amountRemained \u003d findRemainingAmount(data);"},{"lineNumber":41,"author":{"gitId":"pinfang"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":43,"author":{"gitId":"pinfang"},"content":"        double totalAmountSpent \u003d 0;"},{"lineNumber":44,"author":{"gitId":"pinfang"},"content":"        for (String i: week) {"},{"lineNumber":45,"author":{"gitId":"pinfang"},"content":"            totalAmountSpent +\u003d data.spendingList.getSpendingAmountTime(i);"},{"lineNumber":46,"author":{"gitId":"pinfang"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":48,"author":{"gitId":"pinfang"},"content":"        ui.printReminderMessage(currency, totalAmountSpent, amountRemained, startWeek.toString());"},{"lineNumber":49,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":51,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"pinfang"},"content":"     * This method notes down the current date and finds the date that is Monday."},{"lineNumber":53,"author":{"gitId":"pinfang"},"content":"     * @return This returns the date on Monday"},{"lineNumber":54,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"pinfang"},"content":"    private LocalDate startOfWeek() {"},{"lineNumber":56,"author":{"gitId":"pinfang"},"content":"        LocalDate today \u003d LocalDate.now();"},{"lineNumber":57,"author":{"gitId":"pinfang"},"content":"        DayOfWeek day \u003d today.getDayOfWeek();"},{"lineNumber":58,"author":{"gitId":"pinfang"},"content":"        switch (day) {"},{"lineNumber":59,"author":{"gitId":"pinfang"},"content":"        case MONDAY:"},{"lineNumber":60,"author":{"gitId":"pinfang"},"content":"            startWeek \u003d today;"},{"lineNumber":61,"author":{"gitId":"pinfang"},"content":"            break;"},{"lineNumber":62,"author":{"gitId":"pinfang"},"content":"        case TUESDAY:"},{"lineNumber":63,"author":{"gitId":"pinfang"},"content":"            startWeek \u003d today.minusDays(1);"},{"lineNumber":64,"author":{"gitId":"pinfang"},"content":"            break;"},{"lineNumber":65,"author":{"gitId":"pinfang"},"content":"        case WEDNESDAY:"},{"lineNumber":66,"author":{"gitId":"pinfang"},"content":"            startWeek \u003d today.minusDays(2);"},{"lineNumber":67,"author":{"gitId":"pinfang"},"content":"            break;"},{"lineNumber":68,"author":{"gitId":"pinfang"},"content":"        case THURSDAY:"},{"lineNumber":69,"author":{"gitId":"pinfang"},"content":"            startWeek \u003d today.minusDays(3);"},{"lineNumber":70,"author":{"gitId":"pinfang"},"content":"            break;"},{"lineNumber":71,"author":{"gitId":"pinfang"},"content":"        case FRIDAY:"},{"lineNumber":72,"author":{"gitId":"pinfang"},"content":"            startWeek \u003d today.minusDays(4);"},{"lineNumber":73,"author":{"gitId":"pinfang"},"content":"            break;"},{"lineNumber":74,"author":{"gitId":"pinfang"},"content":"        case SATURDAY:"},{"lineNumber":75,"author":{"gitId":"pinfang"},"content":"            startWeek \u003d today.minusDays(5);"},{"lineNumber":76,"author":{"gitId":"pinfang"},"content":"            break;"},{"lineNumber":77,"author":{"gitId":"pinfang"},"content":"        case SUNDAY:"},{"lineNumber":78,"author":{"gitId":"pinfang"},"content":"            startWeek \u003d today.minusDays(6);"},{"lineNumber":79,"author":{"gitId":"pinfang"},"content":"            break;"},{"lineNumber":80,"author":{"gitId":"pinfang"},"content":"        default:"},{"lineNumber":81,"author":{"gitId":"pinfang"},"content":"            break;"},{"lineNumber":82,"author":{"gitId":"pinfang"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":84,"author":{"gitId":"pinfang"},"content":"        return startWeek;"},{"lineNumber":85,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":87,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"pinfang"},"content":"     * This method saves the 7 dates of the current week into a list."},{"lineNumber":89,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"pinfang"},"content":"    private void saveDatesToList() {"},{"lineNumber":91,"author":{"gitId":"pinfang"},"content":"        LocalDate startDay \u003d startOfWeek();"},{"lineNumber":92,"author":{"gitId":"pinfang"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {"},{"lineNumber":93,"author":{"gitId":"pinfang"},"content":"            week.add(startDay.minusDays(-i).toString());"},{"lineNumber":94,"author":{"gitId":"pinfang"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":97,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"pinfang"},"content":"     * This method is to find the amount of budget left."},{"lineNumber":99,"author":{"gitId":"pinfang"},"content":"     * @param data This is the parameter that contains the budget."},{"lineNumber":100,"author":{"gitId":"pinfang"},"content":"     * @return This returns the amount of budget left."},{"lineNumber":101,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"pinfang"},"content":"    private double findRemainingAmount(Data data) {"},{"lineNumber":103,"author":{"gitId":"pinfang"},"content":"        double budgetLimit \u003d data.budget.getBudgetLimit();"},{"lineNumber":104,"author":{"gitId":"pinfang"},"content":"        double currentAmount \u003d data.spendingList.getCurrentAmount(data);"},{"lineNumber":105,"author":{"gitId":"pinfang"},"content":"        return budgetLimit - currentAmount;"},{"lineNumber":106,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":108,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"pinfang"},"content":"     * This method is used to update the current currency symbol."},{"lineNumber":110,"author":{"gitId":"pinfang"},"content":"     * If there is spending item in the spending list, the currency symbol of that item will be used,"},{"lineNumber":111,"author":{"gitId":"pinfang"},"content":"     * else SGD will be used."},{"lineNumber":112,"author":{"gitId":"pinfang"},"content":"     * @param data this is parameter that contains the spending list"},{"lineNumber":113,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"pinfang"},"content":"    private void updateCurrency(Data data) {"},{"lineNumber":115,"author":{"gitId":"pinfang"},"content":"        if (data.spendingList.getListSize() \u003e 0) {"},{"lineNumber":116,"author":{"gitId":"pinfang"},"content":"            currency \u003d data.spendingList.getItem(0).getSymbol();"},{"lineNumber":117,"author":{"gitId":"pinfang"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"pinfang"},"content":"}"}],"authorContributionMap":{"k-walter":1,"killingbear999":1,"xieyaoyue":2,"pinfang":115}},{"path":"src/main/java/seedu/duke/command/RepayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidAmountException;"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidDateException;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidInputCurrencyException;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidNameException;"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.utilities.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.utilities.DecimalFormatter;"},{"lineNumber":11,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":"/** It is to add the repay information into the repayment list. */"},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":"public class RepayCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"    private String name;"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"    private String currency;"},{"lineNumber":19,"author":{"gitId":"killingbear999"},"content":"    private double repayment;"},{"lineNumber":20,"author":{"gitId":"killingbear999"},"content":"    private String deadline;"},{"lineNumber":21,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":22,"author":{"gitId":"killingbear999"},"content":"    public RepayCommand(String name, String currency, Double amount, String deadline) {"},{"lineNumber":23,"author":{"gitId":"killingbear999"},"content":"        this.name \u003d name;"},{"lineNumber":24,"author":{"gitId":"killingbear999"},"content":"        this.currency \u003d currency;"},{"lineNumber":25,"author":{"gitId":"killingbear999"},"content":"        this.repayment \u003d amount;"},{"lineNumber":26,"author":{"gitId":"killingbear999"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":27,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":29,"author":{"gitId":"killingbear999"},"content":"    /** It is to add the repay information into the repayment list."},{"lineNumber":30,"author":{"gitId":"killingbear999"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"killingbear999"},"content":"     * @throws InvalidInputCurrencyException If input currency is invalid"},{"lineNumber":32,"author":{"gitId":"killingbear999"},"content":"     * @throws InvalidAmountException If the amount input is less than 0.01 or negative"},{"lineNumber":33,"author":{"gitId":"killingbear999"},"content":"     * @throws InvalidNameException If the name input is invalid or does not match with the format"},{"lineNumber":34,"author":{"gitId":"killingbear999"},"content":"     * @throws InvalidDateException If the date input is invalid or does not match with the specific format"},{"lineNumber":35,"author":{"gitId":"killingbear999"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"killingbear999"},"content":"    public void execute(Data data, Ui ui) throws IOException,"},{"lineNumber":38,"author":{"gitId":"killingbear999"},"content":"            InvalidDateException, InvalidAmountException, InvalidNameException, InvalidInputCurrencyException {"},{"lineNumber":39,"author":{"gitId":"killingbear999"},"content":"        DateTimeFormatter dateTimeFormatter \u003d new DateTimeFormatter(\"yyyy-MM-dd\");"},{"lineNumber":40,"author":{"gitId":"killingbear999"},"content":"        if (repayment \u003c 0.01) {"},{"lineNumber":41,"author":{"gitId":"killingbear999"},"content":"            throw new InvalidAmountException();"},{"lineNumber":42,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"killingbear999"},"content":"        if (!dateTimeFormatter.isValid(deadline)) {"},{"lineNumber":44,"author":{"gitId":"killingbear999"},"content":"            throw new InvalidDateException();"},{"lineNumber":45,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"killingbear999"},"content":"        if (!isValidName()) {"},{"lineNumber":47,"author":{"gitId":"killingbear999"},"content":"            throw new InvalidNameException();"},{"lineNumber":48,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"killingbear999"},"content":"        if (!(currency.equals(\"SGD\") || currency.equals(\"USD\") || currency.equals(\"CNY\"))) {"},{"lineNumber":50,"author":{"gitId":"killingbear999"},"content":"            throw new InvalidInputCurrencyException();"},{"lineNumber":51,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"killingbear999"},"content":"        DecimalFormatter decimalFormatter \u003d new DecimalFormatter();"},{"lineNumber":53,"author":{"gitId":"killingbear999"},"content":"        repayment \u003d decimalFormatter.convert(repayment);"},{"lineNumber":54,"author":{"gitId":"killingbear999"},"content":"        data.repaymentList.addItem(name, currency, repayment, deadline);"},{"lineNumber":55,"author":{"gitId":"killingbear999"},"content":"        ui.printAddRepay(data.repaymentList);"},{"lineNumber":56,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":58,"author":{"gitId":"killingbear999"},"content":"    /** It is to check if the name input is valid or matches with the specific format. */"},{"lineNumber":59,"author":{"gitId":"killingbear999"},"content":"    private boolean isValidName() {"},{"lineNumber":60,"author":{"gitId":"killingbear999"},"content":"        return name.matches(\".*[a-zA-Z]+.*\");"},{"lineNumber":61,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":5,"killingbear999":56,"xieyaoyue":1}},{"path":"src/main/java/seedu/duke/command/RepaymentListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"/** It is to print out the repayment list. */"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"public class RepaymentListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"    public void execute(Data data, Ui ui) {"},{"lineNumber":11,"author":{"gitId":"killingbear999"},"content":"        ui.printRepaymentList(data.repaymentList.getRepaymentList());"},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":1,"killingbear999":11,"xieyaoyue":1}},{"path":"src/main/java/seedu/duke/command/SetBudgetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidBudgetException;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidInputCurrencyException;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.utilities.AmountConverter;"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.utilities.DecimalFormatter;"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":"/** It is to set the budget limit for the spending. */"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"public class SetBudgetCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":"    private double budgetLimit;"},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"    private String currency;"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"    private String defaultCurrency \u003d \"SGD\";"},{"lineNumber":19,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":20,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":21,"author":{"gitId":"killingbear999"},"content":"    public SetBudgetCommand(String currency, Double budgetLimit) {"},{"lineNumber":22,"author":{"gitId":"killingbear999"},"content":"        this.currency \u003d currency;"},{"lineNumber":23,"author":{"gitId":"killingbear999"},"content":"        this.budgetLimit \u003d budgetLimit;"},{"lineNumber":24,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":26,"author":{"gitId":"killingbear999"},"content":"    /** It is to convert the currency for the whole spending list."},{"lineNumber":27,"author":{"gitId":"killingbear999"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"killingbear999"},"content":"     * @throws InvalidInputCurrencyException If input currency is invalid"},{"lineNumber":29,"author":{"gitId":"killingbear999"},"content":"     * @throws InvalidBudgetException If the budget input is less than 0.01 or negative"},{"lineNumber":30,"author":{"gitId":"killingbear999"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"killingbear999"},"content":"    public void execute(Data data, Ui ui)"},{"lineNumber":33,"author":{"gitId":"killingbear999"},"content":"        throws InvalidInputCurrencyException, InvalidBudgetException, IOException {"},{"lineNumber":34,"author":{"gitId":"killingbear999"},"content":"        int size \u003d data.spendingList.getListSize();"},{"lineNumber":35,"author":{"gitId":"killingbear999"},"content":"        if (size !\u003d 0) {"},{"lineNumber":36,"author":{"gitId":"killingbear999"},"content":"            defaultCurrency \u003d data.spendingList.getItem(0).getSymbol();"},{"lineNumber":37,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"killingbear999"},"content":"        if (!(currency.equals(\"SGD\") || currency.equals(\"USD\") || currency.equals(\"CNY\"))) {"},{"lineNumber":39,"author":{"gitId":"killingbear999"},"content":"            throw new InvalidInputCurrencyException();"},{"lineNumber":40,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"killingbear999"},"content":"        if (!currency.equals(defaultCurrency)) {"},{"lineNumber":42,"author":{"gitId":"killingbear999"},"content":"            AmountConverter amountConverter \u003d new AmountConverter(currency, budgetLimit, defaultCurrency);"},{"lineNumber":43,"author":{"gitId":"killingbear999"},"content":"            budgetLimit \u003d amountConverter.updateAmount();"},{"lineNumber":44,"author":{"gitId":"killingbear999"},"content":"            currency \u003d amountConverter.updateCurrency();"},{"lineNumber":45,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"killingbear999"},"content":"        if (budgetLimit \u003c 0.01) {"},{"lineNumber":47,"author":{"gitId":"killingbear999"},"content":"            throw new InvalidBudgetException();"},{"lineNumber":48,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"killingbear999"},"content":"        DecimalFormatter decimalFormatter \u003d new DecimalFormatter();"},{"lineNumber":50,"author":{"gitId":"killingbear999"},"content":"        budgetLimit \u003d decimalFormatter.convert(budgetLimit);"},{"lineNumber":51,"author":{"gitId":"killingbear999"},"content":"        data.budget.addBudget(currency, budgetLimit);"},{"lineNumber":52,"author":{"gitId":"killingbear999"},"content":"        ui.printBudgetLimit(data, currency, budgetLimit);"},{"lineNumber":53,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":4,"killingbear999":49,"xieyaoyue":1}},{"path":"src/main/java/seedu/duke/command/SpendingListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Item;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidMonthException;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidYearException;"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"public class SpendingListCommand extends DateCommand {"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"    protected String category;"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"    public SpendingListCommand(String category) {"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"        super();"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"        this.category \u003d category;"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"    public SpendingListCommand(String year, String month, String category) throws InvalidYearException,"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"        InvalidMonthException {"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"        super(year, month);"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"        this.category \u003d category;"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"    public void execute(Data data, Ui ui) {"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e filteredList \u003d data.spendingList.filterSpendingList(category, period);"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"        ui.printSpendingList(filteredList);"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":30,"xieyaoyue":1}},{"path":"src/main/java/seedu/duke/command/SummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.Category;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":"import java.util.logging.Level;"},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":"import java.util.logging.Logger;"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":10,"author":{"gitId":"pinfang"},"content":"//@@author pinfang"},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":12,"author":{"gitId":"pinfang"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"pinfang"},"content":" * Summarises the amount spent during a given period of time."},{"lineNumber":14,"author":{"gitId":"pinfang"},"content":" * Also summarises amount spent in each category."},{"lineNumber":15,"author":{"gitId":"pinfang"},"content":" */"},{"lineNumber":16,"author":{"gitId":"pinfang"},"content":"public class SummaryCommand extends DateCommand {"},{"lineNumber":17,"author":{"gitId":"pinfang"},"content":"    private final String period;"},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"    private String currency \u003d \"SGD\";"},{"lineNumber":19,"author":{"gitId":"pinfang"},"content":"    private static final Logger logger \u003d Logger.getLogger(\"SummaryCommand\");"},{"lineNumber":20,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":21,"author":{"gitId":"pinfang"},"content":"    public SummaryCommand(String year, String month) {"},{"lineNumber":22,"author":{"gitId":"pinfang"},"content":"        if (month \u003d\u003d null) {"},{"lineNumber":23,"author":{"gitId":"pinfang"},"content":"            period \u003d year;"},{"lineNumber":24,"author":{"gitId":"pinfang"},"content":"        } else {"},{"lineNumber":25,"author":{"gitId":"pinfang"},"content":"            period \u003d year + \"-\" + month;"},{"lineNumber":26,"author":{"gitId":"pinfang"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":29,"author":{"gitId":"pinfang"},"content":"    public SummaryCommand() {"},{"lineNumber":30,"author":{"gitId":"pinfang"},"content":"        period \u003d \"\";"},{"lineNumber":31,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":33,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"pinfang"},"content":"     * Summarises the total amount spent."},{"lineNumber":35,"author":{"gitId":"pinfang"},"content":"     * @param data This parameter contains the spending list."},{"lineNumber":36,"author":{"gitId":"pinfang"},"content":"     * @param ui This parameter will prints out necessary messages shown to user."},{"lineNumber":37,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"pinfang"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"pinfang"},"content":"    public void execute(Data data, Ui ui) {"},{"lineNumber":40,"author":{"gitId":"pinfang"},"content":"        logger.log(Level.FINE, \"going to start processing\");"},{"lineNumber":41,"author":{"gitId":"pinfang"},"content":"        updateCurrency(data);"},{"lineNumber":42,"author":{"gitId":"pinfang"},"content":"        double amountSpent \u003d data.spendingList.getSpendingAmountTime(period);"},{"lineNumber":43,"author":{"gitId":"pinfang"},"content":"        logger.log(Level.FINE, \"end of processing\");"},{"lineNumber":44,"author":{"gitId":"pinfang"},"content":"        ui.printSummaryMessage(currency, amountSpent);"},{"lineNumber":45,"author":{"gitId":"pinfang"},"content":"        for (Category c : Category.values()) {"},{"lineNumber":46,"author":{"gitId":"pinfang"},"content":"            double categoryAmountSpent \u003d data.spendingList.getSpendingAmountCategory(c.toString(), period);"},{"lineNumber":47,"author":{"gitId":"pinfang"},"content":"            ui.printSummaryCategory(currency, c.name(), categoryAmountSpent);"},{"lineNumber":48,"author":{"gitId":"pinfang"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":51,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"pinfang"},"content":"     * This method is used to update the current currency symbol."},{"lineNumber":53,"author":{"gitId":"pinfang"},"content":"     * If there is spending item in the spending list, the currency symbol of that item will be used,"},{"lineNumber":54,"author":{"gitId":"pinfang"},"content":"     * else SGD will be used."},{"lineNumber":55,"author":{"gitId":"pinfang"},"content":"     * @param data this is parameter that contains the spending list"},{"lineNumber":56,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"pinfang"},"content":"    private void updateCurrency(Data data) {"},{"lineNumber":58,"author":{"gitId":"pinfang"},"content":"        if (data.spendingList.getListSize() \u003e 0) {"},{"lineNumber":59,"author":{"gitId":"pinfang"},"content":"            currency \u003d data.spendingList.getItem(0).getSymbol();"},{"lineNumber":60,"author":{"gitId":"pinfang"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"pinfang"},"content":"}"}],"authorContributionMap":{"k-walter":2,"xieyaoyue":5,"pinfang":55}},{"path":"src/main/java/seedu/duke/command/ViewBudgetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"/** It is to view the budget limit that has been input previously. */"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"public class ViewBudgetCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":11,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":"    public void execute(Data data, Ui ui) {"},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":"        if (data.budget.hasBudget) {"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"            ui.printCurrentBudgetLimit(data);"},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":"        } else {"},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":"            ui.printNoBudget();"},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":1,"killingbear999":17,"xieyaoyue":1}},{"path":"src/main/java/seedu/duke/command/WarnCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.utilities.DecimalFormatter;"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"/** It is to warn the user when the spending approaches budget limit or its threshold value. */"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"public class WarnCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"    private double budgetLimit;"},{"lineNumber":11,"author":{"gitId":"killingbear999"},"content":"    private double budgetThreshold;"},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":"    private String outputCurrency;"},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":"    private final double threshold \u003d 0.9;"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":"    public WarnCommand() {"},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"    public void execute(Data data, Ui ui) {"},{"lineNumber":19,"author":{"gitId":"killingbear999"},"content":"        outputCurrency \u003d data.budget.getCurrency();"},{"lineNumber":20,"author":{"gitId":"killingbear999"},"content":"        budgetLimit \u003d data.budget.getBudgetLimit();"},{"lineNumber":21,"author":{"gitId":"killingbear999"},"content":"        budgetThreshold \u003d budgetLimit * threshold;"},{"lineNumber":22,"author":{"gitId":"killingbear999"},"content":"        double currentAmount \u003d data.spendingList.getCurrentAmount(data);"},{"lineNumber":23,"author":{"gitId":"killingbear999"},"content":"        if (currentAmount \u003e\u003d budgetThreshold \u0026\u0026 currentAmount \u003c budgetLimit) {"},{"lineNumber":24,"author":{"gitId":"killingbear999"},"content":"            DecimalFormatter decimalFormatter \u003d new DecimalFormatter();"},{"lineNumber":25,"author":{"gitId":"killingbear999"},"content":"            double amountRemaining \u003d budgetLimit - currentAmount;"},{"lineNumber":26,"author":{"gitId":"killingbear999"},"content":"            amountRemaining \u003d decimalFormatter.convert(amountRemaining);"},{"lineNumber":27,"author":{"gitId":"killingbear999"},"content":"            ui.printApproachingWarningMessage(outputCurrency, amountRemaining);"},{"lineNumber":28,"author":{"gitId":"killingbear999"},"content":"        } else if (currentAmount \u003e\u003d budgetLimit) {"},{"lineNumber":29,"author":{"gitId":"killingbear999"},"content":"            ui.printExceedingWarningMessage();"},{"lineNumber":30,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":1,"killingbear999":30,"xieyaoyue":1}},{"path":"src/main/java/seedu/duke/data/Budget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.data;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":" * Represents the budget limit set by the user."},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":" */"},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":"//@@author xieyaoyue"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"public class Budget {"},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":"    private double budgetLimit;"},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":"    private String currency \u003d \"SGD\";"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":"    public boolean hasBudget;"},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":"    //@author k-walter"},{"lineNumber":17,"author":{"gitId":"xieyaoyue"},"content":"    public String date \u003d \"1970-01-01\";"},{"lineNumber":18,"author":{"gitId":"xieyaoyue"},"content":"    public Storage storage;"},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":20,"author":{"gitId":"xieyaoyue"},"content":"    //@author k-walter"},{"lineNumber":21,"author":{"gitId":"xieyaoyue"},"content":"    public Budget(Storage storage) {"},{"lineNumber":22,"author":{"gitId":"xieyaoyue"},"content":"        this.storage \u003d storage;"},{"lineNumber":23,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":"    //@author k-walter"},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":"    public Budget() {"},{"lineNumber":27,"author":{"gitId":"xieyaoyue"},"content":"        this(null);"},{"lineNumber":28,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":30,"author":{"gitId":"xieyaoyue"},"content":"    public double getBudgetLimit() {"},{"lineNumber":31,"author":{"gitId":"xieyaoyue"},"content":"        return budgetLimit;"},{"lineNumber":32,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":34,"author":{"gitId":"xieyaoyue"},"content":"    public String getCurrency() {"},{"lineNumber":35,"author":{"gitId":"xieyaoyue"},"content":"        return currency;"},{"lineNumber":36,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":38,"author":{"gitId":"xieyaoyue"},"content":"    public String getDate() {"},{"lineNumber":39,"author":{"gitId":"xieyaoyue"},"content":"        return date;"},{"lineNumber":40,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":42,"author":{"gitId":"xieyaoyue"},"content":"    public void addBudget(String currency, double budgetLimit) throws IOException {"},{"lineNumber":43,"author":{"gitId":"xieyaoyue"},"content":"        this.currency \u003d currency;"},{"lineNumber":44,"author":{"gitId":"xieyaoyue"},"content":"        this.budgetLimit \u003d budgetLimit;"},{"lineNumber":45,"author":{"gitId":"xieyaoyue"},"content":"        hasBudget \u003d true;"},{"lineNumber":46,"author":{"gitId":"xieyaoyue"},"content":"        date \u003d currentDate();"},{"lineNumber":47,"author":{"gitId":"xieyaoyue"},"content":"        save();"},{"lineNumber":48,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":50,"author":{"gitId":"xieyaoyue"},"content":"    public void updateBudget(String outputCurrency, double newBudgetLimit) throws IOException {"},{"lineNumber":51,"author":{"gitId":"xieyaoyue"},"content":"        currency \u003d outputCurrency;"},{"lineNumber":52,"author":{"gitId":"xieyaoyue"},"content":"        budgetLimit \u003d newBudgetLimit;"},{"lineNumber":53,"author":{"gitId":"xieyaoyue"},"content":"        date \u003d currentDate();"},{"lineNumber":54,"author":{"gitId":"xieyaoyue"},"content":"        save();"},{"lineNumber":55,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":57,"author":{"gitId":"xieyaoyue"},"content":"    public void clearBudget() throws IOException {"},{"lineNumber":58,"author":{"gitId":"xieyaoyue"},"content":"        currency \u003d \"SGD\";"},{"lineNumber":59,"author":{"gitId":"xieyaoyue"},"content":"        budgetLimit \u003d 0;"},{"lineNumber":60,"author":{"gitId":"xieyaoyue"},"content":"        hasBudget \u003d false;"},{"lineNumber":61,"author":{"gitId":"xieyaoyue"},"content":"        save();"},{"lineNumber":62,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":64,"author":{"gitId":"xieyaoyue"},"content":"    protected String currentDate() {"},{"lineNumber":65,"author":{"gitId":"xieyaoyue"},"content":"        LocalDate date \u003d LocalDate.now();"},{"lineNumber":66,"author":{"gitId":"xieyaoyue"},"content":"        return date.toString();"},{"lineNumber":67,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":69,"author":{"gitId":"xieyaoyue"},"content":"    //@author k-walter"},{"lineNumber":70,"author":{"gitId":"xieyaoyue"},"content":"    public void save() throws IOException {"},{"lineNumber":71,"author":{"gitId":"xieyaoyue"},"content":"        if (storage \u003d\u003d null) {"},{"lineNumber":72,"author":{"gitId":"xieyaoyue"},"content":"            return;"},{"lineNumber":73,"author":{"gitId":"xieyaoyue"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"xieyaoyue"},"content":"        storage.save(this);"},{"lineNumber":75,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"k-walter":3,"killingbear999":2,"xieyaoyue":71}},{"path":"src/main/java/seedu/duke/data/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.data;"},{"lineNumber":2,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":3,"author":{"gitId":"pinfang"},"content":"//@@author pinfang"},{"lineNumber":4,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":5,"author":{"gitId":"pinfang"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"pinfang"},"content":" * These are the types of the categories that can be tagged to the spending item."},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":" */"},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":"public enum Category {"},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":"    FOOD(\"Food\"),"},{"lineNumber":10,"author":{"gitId":"pinfang"},"content":"    EDUCATION(\"Education\"),"},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":"    ENTERTAINMENT(\"Entertainment\"),"},{"lineNumber":12,"author":{"gitId":"pinfang"},"content":"    HEALTH(\"Health\"),"},{"lineNumber":13,"author":{"gitId":"pinfang"},"content":"    TRANSPORTATION(\"Transportation\"),"},{"lineNumber":14,"author":{"gitId":"pinfang"},"content":"    UTILITIES(\"Utilities\"),"},{"lineNumber":15,"author":{"gitId":"pinfang"},"content":"    OTHERS(\"Others\");"},{"lineNumber":16,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":17,"author":{"gitId":"pinfang"},"content":"    private final String category;"},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"    Category(String category) {"},{"lineNumber":19,"author":{"gitId":"pinfang"},"content":"        this.category \u003d category;"},{"lineNumber":20,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":22,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"pinfang"},"content":"     * This method checks if the category entered by the user is valid."},{"lineNumber":24,"author":{"gitId":"pinfang"},"content":"     * If the category entered is not valid, it will be categorised as others."},{"lineNumber":25,"author":{"gitId":"pinfang"},"content":"     * @param name This is the category entered by the user"},{"lineNumber":26,"author":{"gitId":"pinfang"},"content":"     * @return The correct format of the category name that is to be tagged to the item."},{"lineNumber":27,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"pinfang"},"content":"    public static String categoryName(String name) {"},{"lineNumber":29,"author":{"gitId":"pinfang"},"content":"        if (name \u003d\u003d null) {"},{"lineNumber":30,"author":{"gitId":"pinfang"},"content":"            return OTHERS.toString();"},{"lineNumber":31,"author":{"gitId":"pinfang"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"pinfang"},"content":"        for (Category c: values()) {"},{"lineNumber":33,"author":{"gitId":"pinfang"},"content":"            if (name.equalsIgnoreCase(c.category)) {"},{"lineNumber":34,"author":{"gitId":"pinfang"},"content":"                return c.toString();"},{"lineNumber":35,"author":{"gitId":"pinfang"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"pinfang"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"pinfang"},"content":"        return OTHERS.toString();"},{"lineNumber":38,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":40,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"pinfang"},"content":"     * Prints the category name."},{"lineNumber":42,"author":{"gitId":"pinfang"},"content":"     * @return Name of the category."},{"lineNumber":43,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"pinfang"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"pinfang"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"pinfang"},"content":"        return this.category;"},{"lineNumber":47,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"pinfang"},"content":"}"}],"authorContributionMap":{"xieyaoyue":1,"pinfang":47}},{"path":"src/main/java/seedu/duke/data/Data.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.data;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidStorageFileExtensionException;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidStorageFilePathException;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"public class Data {"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"    public SpendingList spendingList;"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"    public RepaymentList repaymentList;"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"    public Budget budget;"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"     * Initialises data used in Duke with default file paths."},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"     * Instance used as a wrapper for data to be passed between methods"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"     * @throws InvalidStorageFilePathException if unable to find path to file"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"     * @throws InvalidStorageFileExtensionException if given file extension is not json"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"    public Data() throws InvalidStorageFilePathException, InvalidStorageFileExtensionException {"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"        spendingList \u003d new Storage(\"data/duke_spending.json\").loadSpendingList();"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"        repaymentList \u003d new Storage(\"data/duke_repayment.json\").loadRepaymentList();"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"        budget \u003d new Storage(\"data/duke_budget.json\").loadBudget();"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"     * Use given data objects, even if null. Used extensively in tests"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"     * @param spendingList spending list or null"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"     * @param repaymentList repayment list or null"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"     * @param budget budget or null"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"    public Data(SpendingList spendingList, RepaymentList repaymentList, Budget budget) {"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"        this.spendingList \u003d spendingList;"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"        if (this.spendingList \u003d\u003d null) {"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"            this.spendingList \u003d new SpendingList();"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"        this.repaymentList \u003d repaymentList;"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"        if (this.repaymentList \u003d\u003d null) {"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"            this.repaymentList \u003d new RepaymentList();"},{"lineNumber":39,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"k-walter"},"content":"        this.budget \u003d budget;"},{"lineNumber":41,"author":{"gitId":"k-walter"},"content":"        if (this.budget \u003d\u003d null) {"},{"lineNumber":42,"author":{"gitId":"k-walter"},"content":"            this.budget \u003d new Budget();"},{"lineNumber":43,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":45}},{"path":"src/main/java/seedu/duke/data/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.data;"},{"lineNumber":2,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":3,"author":{"gitId":"pinfang"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":5,"author":{"gitId":"pinfang"},"content":"//@@author pinfang"},{"lineNumber":6,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":" * This is to save the details of an item spent."},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":" */"},{"lineNumber":10,"author":{"gitId":"pinfang"},"content":"public class Item {"},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":"    private String description;"},{"lineNumber":12,"author":{"gitId":"pinfang"},"content":"    private double amount;"},{"lineNumber":13,"author":{"gitId":"pinfang"},"content":"    private String symbol;"},{"lineNumber":14,"author":{"gitId":"pinfang"},"content":"    private String date;"},{"lineNumber":15,"author":{"gitId":"pinfang"},"content":"    private String category;"},{"lineNumber":16,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":17,"author":{"gitId":"pinfang"},"content":"    //@author k-walter"},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"    public Item(String description, String symbol, double amount) {"},{"lineNumber":19,"author":{"gitId":"pinfang"},"content":"        this(description, symbol, amount, null);"},{"lineNumber":20,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":22,"author":{"gitId":"pinfang"},"content":"    //@author k-walter"},{"lineNumber":23,"author":{"gitId":"pinfang"},"content":"    public Item(String description, String symbol, double amount, String category) {"},{"lineNumber":24,"author":{"gitId":"pinfang"},"content":"        init(description, symbol, amount, category, currentDate());"},{"lineNumber":25,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"    //@@author k-walter"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"    public Item(String description, String symbol, double amount, String category, String date) {"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"        init(description, symbol, amount, category, date);"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"    protected void init(String description, String symbol, double amount, String category, String date) {"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"        this.description \u003d description;"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"        this.symbol \u003d symbol;"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"        this.amount \u003d amount;"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"        this.category \u003d Category.categoryName(category);"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"        this.date \u003d date;"},{"lineNumber":39,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":41,"author":{"gitId":"pinfang"},"content":"    //@@author pinfang"},{"lineNumber":42,"author":{"gitId":"pinfang"},"content":"    private String currentDate() {"},{"lineNumber":43,"author":{"gitId":"pinfang"},"content":"        LocalDate date \u003d LocalDate.now();"},{"lineNumber":44,"author":{"gitId":"pinfang"},"content":"        return date.toString();"},{"lineNumber":45,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":47,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"pinfang"},"content":"     * Edits the description of item."},{"lineNumber":49,"author":{"gitId":"pinfang"},"content":"     * @param description This is the new description to be saved."},{"lineNumber":50,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"pinfang"},"content":"    public void editDescription(String description) {"},{"lineNumber":52,"author":{"gitId":"pinfang"},"content":"        this.description \u003d description;"},{"lineNumber":53,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":55,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"pinfang"},"content":"     * Edits the amount of spent on an item."},{"lineNumber":57,"author":{"gitId":"pinfang"},"content":"     * @param amount This is the new amount spent."},{"lineNumber":58,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"pinfang"},"content":"    public void editAmount(double amount) {"},{"lineNumber":60,"author":{"gitId":"pinfang"},"content":"        this.amount \u003d amount;"},{"lineNumber":61,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":63,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"pinfang"},"content":"     * Edits the currency symbol of the item."},{"lineNumber":65,"author":{"gitId":"pinfang"},"content":"     * @param symbol This is the new currency symbol."},{"lineNumber":66,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"pinfang"},"content":"    public void editSymbol(String symbol) {"},{"lineNumber":68,"author":{"gitId":"pinfang"},"content":"        this.symbol \u003d symbol;"},{"lineNumber":69,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":71,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"pinfang"},"content":"     * Edits the category of the item."},{"lineNumber":73,"author":{"gitId":"pinfang"},"content":"     * @param category This is the new category of the item."},{"lineNumber":74,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"pinfang"},"content":"    public void editCategory(String category) {"},{"lineNumber":76,"author":{"gitId":"pinfang"},"content":"        this.category \u003d Category.categoryName(category);"},{"lineNumber":77,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":79,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"pinfang"},"content":"     * Gets the currency symbol of the item."},{"lineNumber":81,"author":{"gitId":"pinfang"},"content":"     * @return This returns the currency symbol of the item."},{"lineNumber":82,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"pinfang"},"content":"    public String getSymbol() {"},{"lineNumber":84,"author":{"gitId":"pinfang"},"content":"        return symbol;"},{"lineNumber":85,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":87,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"pinfang"},"content":"     * Gets the description of the item."},{"lineNumber":89,"author":{"gitId":"pinfang"},"content":"     * @return This returns the description of the item."},{"lineNumber":90,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"pinfang"},"content":"    public String getDescription() {"},{"lineNumber":92,"author":{"gitId":"pinfang"},"content":"        return description;"},{"lineNumber":93,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":95,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"pinfang"},"content":"     * Gets the amount spent on the item."},{"lineNumber":97,"author":{"gitId":"pinfang"},"content":"     * @return This returns the amount spent on the item."},{"lineNumber":98,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"pinfang"},"content":"    public double getAmount() {"},{"lineNumber":100,"author":{"gitId":"pinfang"},"content":"        return amount;"},{"lineNumber":101,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":103,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"pinfang"},"content":"     * Gets the date that the item is spent."},{"lineNumber":105,"author":{"gitId":"pinfang"},"content":"     * @return This returns the date that the item is spent"},{"lineNumber":106,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"pinfang"},"content":"    public String getDate() {"},{"lineNumber":108,"author":{"gitId":"pinfang"},"content":"        return date;"},{"lineNumber":109,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":111,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"pinfang"},"content":"     * Gets the category of the item."},{"lineNumber":113,"author":{"gitId":"pinfang"},"content":"     * @return This returns the category name of the item."},{"lineNumber":114,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"pinfang"},"content":"    public String getCategory() {"},{"lineNumber":116,"author":{"gitId":"pinfang"},"content":"        return category;"},{"lineNumber":117,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":119,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"pinfang"},"content":"     * Edits the date of the spending item."},{"lineNumber":121,"author":{"gitId":"pinfang"},"content":"     * @param specificDate This is the new date to be saved."},{"lineNumber":122,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"pinfang"},"content":"    public void editDate(String specificDate) {"},{"lineNumber":124,"author":{"gitId":"pinfang"},"content":"        this.date \u003d specificDate;"},{"lineNumber":125,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":127,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"pinfang"},"content":"     * Prints out the details of the item."},{"lineNumber":129,"author":{"gitId":"pinfang"},"content":"     * @return Details of the item."},{"lineNumber":130,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"k-walter"},"content":"    //@@author k-walter"},{"lineNumber":132,"author":{"gitId":"k-walter"},"content":"    @Override"},{"lineNumber":133,"author":{"gitId":"k-walter"},"content":"    public String toString() {"},{"lineNumber":134,"author":{"gitId":"k-walter"},"content":"        return String.format(\"%s [%s] %s %s %s\", date, category, description, symbol, String.format(\"%.2f\", amount));"},{"lineNumber":135,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":20,"xieyaoyue":1,"pinfang":115}},{"path":"src/main/java/seedu/duke/data/Repay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.data;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import java.util.Locale;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"/** It is to store the repay information. */"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"public class Repay {"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"    private String name;"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"    private double amount;"},{"lineNumber":11,"author":{"gitId":"killingbear999"},"content":"    private String symbol;"},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":"    private String deadline;"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"    private static final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\", Locale.ENGLISH);"},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"    public Repay(String name, String symbol, double amount, String deadline) {"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"        this.name \u003d name;"},{"lineNumber":19,"author":{"gitId":"killingbear999"},"content":"        this.symbol \u003d symbol;"},{"lineNumber":20,"author":{"gitId":"killingbear999"},"content":"        this.amount \u003d amount;"},{"lineNumber":21,"author":{"gitId":"killingbear999"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":22,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":24,"author":{"gitId":"killingbear999"},"content":"    //@author k-walter"},{"lineNumber":25,"author":{"gitId":"killingbear999"},"content":"    /** It is to get the deadline of a specific item. */"},{"lineNumber":26,"author":{"gitId":"killingbear999"},"content":"    public LocalDate getDeadline() {"},{"lineNumber":27,"author":{"gitId":"killingbear999"},"content":"        return LocalDate.parse(deadline, format);"},{"lineNumber":28,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":30,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":31,"author":{"gitId":"killingbear999"},"content":"    /** It is to form the string that combines all the information. */"},{"lineNumber":32,"author":{"gitId":"killingbear999"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"killingbear999"},"content":"        return name + \" \" + symbol + \" \" + String.format(\"%.2f\", amount) + \" \" + deadline;"},{"lineNumber":34,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"killingbear999"},"content":"}"},{"lineNumber":36,"author":{"gitId":"killingbear999"},"content":""}],"authorContributionMap":{"k-walter":6,"killingbear999":29,"xieyaoyue":1}},{"path":"src/main/java/seedu/duke/data/RepaymentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.data;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import java.util.Comparator;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import java.util.stream.Collectors;"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"public class RepaymentList {"},{"lineNumber":11,"author":{"gitId":"killingbear999"},"content":"    public ArrayList\u003cRepay\u003e repaymentList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"    public Storage storage;"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":"    public RepaymentList() {"},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"    public RepaymentList(Storage storage) {"},{"lineNumber":21,"author":{"gitId":"killingbear999"},"content":"        this.storage \u003d storage;"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":25,"author":{"gitId":"killingbear999"},"content":"    public ArrayList\u003cRepay\u003e getRepaymentList() {"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"        return repaymentList.stream()"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"            .sorted(Comparator.comparing(Repay::getDeadline))"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"            .collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":29,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":31,"author":{"gitId":"killingbear999"},"content":"    public void addItem(String name, String symbol, double amount, String deadline) throws IOException {"},{"lineNumber":32,"author":{"gitId":"killingbear999"},"content":"        Repay repay \u003d new Repay(name, symbol, amount, deadline);"},{"lineNumber":33,"author":{"gitId":"killingbear999"},"content":"        repaymentList.add(repay);"},{"lineNumber":34,"author":{"gitId":"killingbear999"},"content":"        save();"},{"lineNumber":35,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"    public void deleteRepaymentEntry(int index) throws IOException {"},{"lineNumber":38,"author":{"gitId":"xieyaoyue"},"content":"        repaymentList.remove(index);"},{"lineNumber":39,"author":{"gitId":"k-walter"},"content":"        save();"},{"lineNumber":40,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":42,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":43,"author":{"gitId":"k-walter"},"content":"    private void save() throws IOException {"},{"lineNumber":44,"author":{"gitId":"k-walter"},"content":"        if (storage \u003d\u003d null) {"},{"lineNumber":45,"author":{"gitId":"k-walter"},"content":"            return;"},{"lineNumber":46,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"k-walter"},"content":"        storage.save(this);"},{"lineNumber":48,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":50,"author":{"gitId":"k-walter"},"content":"    public void clearAllEntries() throws IOException {"},{"lineNumber":51,"author":{"gitId":"xieyaoyue"},"content":"        repaymentList.clear();"},{"lineNumber":52,"author":{"gitId":"killingbear999"},"content":"        assert getListSize() \u003d\u003d 0 : \"list size should be 0\";"},{"lineNumber":53,"author":{"gitId":"k-walter"},"content":"        save();"},{"lineNumber":54,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":56,"author":{"gitId":"xieyaoyue"},"content":"    public int getListSize() {"},{"lineNumber":57,"author":{"gitId":"xieyaoyue"},"content":"        return repaymentList.size();"},{"lineNumber":58,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":60,"author":{"gitId":"killingbear999"},"content":"    public Repay getEntry(int index) {"},{"lineNumber":61,"author":{"gitId":"xieyaoyue"},"content":"        return repaymentList.get(index);"},{"lineNumber":62,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":26,"killingbear999":22,"xieyaoyue":15}},{"path":"src/main/java/seedu/duke/data/SpendingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.data;"},{"lineNumber":2,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.command.ConvertCommand;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import java.util.stream.Collectors;"},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":10,"author":{"gitId":"pinfang"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":" * This is to store a list of items spent by the user."},{"lineNumber":12,"author":{"gitId":"pinfang"},"content":" */"},{"lineNumber":13,"author":{"gitId":"pinfang"},"content":"public class SpendingList {"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"    private String description;"},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":"    public ArrayList\u003cItem\u003e spendingList;"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"    public Storage storage;"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"    public SpendingList(String description, ArrayList\u003cItem\u003e spendingList, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"        this.description \u003d description;"},{"lineNumber":22,"author":{"gitId":"killingbear999"},"content":"        this.spendingList \u003d spendingList;"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"        this.storage \u003d storage;"},{"lineNumber":24,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":27,"author":{"gitId":"killingbear999"},"content":"    public SpendingList() {"},{"lineNumber":28,"author":{"gitId":"pinfang"},"content":"        spendingList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"    public SpendingList(String description, Storage storage) {"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"        this(description, new ArrayList\u003c\u003e(), storage);"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"    public SpendingList(Storage storage) {"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"        this(\"\", storage);"},{"lineNumber":39,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":41,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":42,"author":{"gitId":"k-walter"},"content":"    public SpendingList(ArrayList\u003cItem\u003e spendingList) {"},{"lineNumber":43,"author":{"gitId":"k-walter"},"content":"        this(\"\", spendingList, null);"},{"lineNumber":44,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":46,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":47,"author":{"gitId":"k-walter"},"content":"    private void save() throws IOException {"},{"lineNumber":48,"author":{"gitId":"k-walter"},"content":"        if (storage \u003d\u003d null) {"},{"lineNumber":49,"author":{"gitId":"k-walter"},"content":"            return;"},{"lineNumber":50,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"k-walter"},"content":"        storage.save(this);"},{"lineNumber":52,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":54,"author":{"gitId":"pinfang"},"content":"    //@@author pinfang"},{"lineNumber":55,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"pinfang"},"content":"     * Adds an item."},{"lineNumber":57,"author":{"gitId":"pinfang"},"content":"     * @param description This is the description of the item added."},{"lineNumber":58,"author":{"gitId":"pinfang"},"content":"     * @param symbol This is the currency symbol of the item added."},{"lineNumber":59,"author":{"gitId":"pinfang"},"content":"     * @param amount This is the amount spent on the item added."},{"lineNumber":60,"author":{"gitId":"pinfang"},"content":"     * @param category This is the category of the item."},{"lineNumber":61,"author":{"gitId":"pinfang"},"content":"     * @throws IOException If there is error in storage."},{"lineNumber":62,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"pinfang"},"content":"    public void addItem(String description, String symbol, double amount, String category) throws IOException {"},{"lineNumber":64,"author":{"gitId":"pinfang"},"content":"        Item item \u003d new Item(description, symbol, amount, category);"},{"lineNumber":65,"author":{"gitId":"pinfang"},"content":"        spendingList.add(item);"},{"lineNumber":66,"author":{"gitId":"pinfang"},"content":"        save();"},{"lineNumber":67,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":69,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"pinfang"},"content":"     * Adds an item."},{"lineNumber":71,"author":{"gitId":"pinfang"},"content":"     * @param description This is the description of the item added."},{"lineNumber":72,"author":{"gitId":"pinfang"},"content":"     * @param symbol This is the currency symbol of the item added."},{"lineNumber":73,"author":{"gitId":"pinfang"},"content":"     * @param amount This is the amount spent on the item added."},{"lineNumber":74,"author":{"gitId":"pinfang"},"content":"     * @throws IOException If there is error in storage."},{"lineNumber":75,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"pinfang"},"content":"    public void addItem(String description, String symbol, double amount) throws IOException {"},{"lineNumber":77,"author":{"gitId":"pinfang"},"content":"        Item item \u003d new Item(description, symbol, amount);"},{"lineNumber":78,"author":{"gitId":"pinfang"},"content":"        spendingList.add(item);"},{"lineNumber":79,"author":{"gitId":"pinfang"},"content":"        save();"},{"lineNumber":80,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":82,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"pinfang"},"content":"     * Deletes a specific item in the list."},{"lineNumber":84,"author":{"gitId":"pinfang"},"content":"     * @param index This is the item to be deleted."},{"lineNumber":85,"author":{"gitId":"pinfang"},"content":"     * @throws IOException If there is error in storage."},{"lineNumber":86,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"pinfang"},"content":"    public void deleteItem(int index) throws IOException {"},{"lineNumber":88,"author":{"gitId":"pinfang"},"content":"        spendingList.remove(index);"},{"lineNumber":89,"author":{"gitId":"pinfang"},"content":"        save();"},{"lineNumber":90,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":92,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"pinfang"},"content":"     * Deletes all items in the list."},{"lineNumber":94,"author":{"gitId":"pinfang"},"content":"     * @throws IOException If there is error in storage."},{"lineNumber":95,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"pinfang"},"content":"    public void clearAllItems() throws IOException {"},{"lineNumber":97,"author":{"gitId":"pinfang"},"content":"        spendingList.clear();"},{"lineNumber":98,"author":{"gitId":"pinfang"},"content":"        assert getListSize() \u003d\u003d 0 : \"list size should be 0\";"},{"lineNumber":99,"author":{"gitId":"pinfang"},"content":"        save();"},{"lineNumber":100,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":102,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"pinfang"},"content":"     * Gets a specific spending item."},{"lineNumber":104,"author":{"gitId":"pinfang"},"content":"     * @param index This is the item to get."},{"lineNumber":105,"author":{"gitId":"pinfang"},"content":"     * @return The item to be gotten."},{"lineNumber":106,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"pinfang"},"content":"    public Item getItem(int index) {"},{"lineNumber":108,"author":{"gitId":"pinfang"},"content":"        return spendingList.get(index);"},{"lineNumber":109,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":111,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"pinfang"},"content":"     * Gets the size of the spending list."},{"lineNumber":113,"author":{"gitId":"pinfang"},"content":"     * @return The total number of items saved in the list."},{"lineNumber":114,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"pinfang"},"content":"    public int getListSize() {"},{"lineNumber":116,"author":{"gitId":"pinfang"},"content":"        return spendingList.size();"},{"lineNumber":117,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":119,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"pinfang"},"content":"     * Gets the whole spending list."},{"lineNumber":121,"author":{"gitId":"pinfang"},"content":"     * @return The whole spending list."},{"lineNumber":122,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"pinfang"},"content":"    public ArrayList\u003cItem\u003e getSpendingList() {"},{"lineNumber":124,"author":{"gitId":"pinfang"},"content":"        return spendingList;"},{"lineNumber":125,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":127,"author":{"gitId":"pinfang"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"pinfang"},"content":"     * Gets the total amount spent in a given time."},{"lineNumber":129,"author":{"gitId":"pinfang"},"content":"     * @param period This is the period of time."},{"lineNumber":130,"author":{"gitId":"pinfang"},"content":"     * @return total amount spent in a given time."},{"lineNumber":131,"author":{"gitId":"pinfang"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"pinfang"},"content":"    public double getSpendingAmountTime(String period) {"},{"lineNumber":133,"author":{"gitId":"pinfang"},"content":"        double totalAmount \u003d 0;"},{"lineNumber":134,"author":{"gitId":"pinfang"},"content":"        for (Item i: spendingList) {"},{"lineNumber":135,"author":{"gitId":"pinfang"},"content":"            if (i.getDate().contains(period)) {"},{"lineNumber":136,"author":{"gitId":"pinfang"},"content":"                totalAmount +\u003d i.getAmount();"},{"lineNumber":137,"author":{"gitId":"pinfang"},"content":"            }"},{"lineNumber":138,"author":{"gitId":"pinfang"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"pinfang"},"content":"        return totalAmount;"},{"lineNumber":140,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":142,"author":{"gitId":"k-walter"},"content":"    //@@author k-walter"},{"lineNumber":143,"author":{"gitId":"k-walter"},"content":"    public ArrayList\u003cItem\u003e filterSpendingList(String category, String period) {"},{"lineNumber":144,"author":{"gitId":"k-walter"},"content":"        return spendingList.stream()"},{"lineNumber":145,"author":{"gitId":"k-walter"},"content":"            .filter(i -\u003e category \u003d\u003d null || i.getCategory().matches(\"(?i).*\" + category + \".*\"))"},{"lineNumber":146,"author":{"gitId":"k-walter"},"content":"            .filter(i -\u003e period \u003d\u003d null || i.getDate().matches(\"^\" + period + \".*\"))"},{"lineNumber":147,"author":{"gitId":"k-walter"},"content":"            .collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":148,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":150,"author":{"gitId":"k-walter"},"content":"    //@@author k-walter"},{"lineNumber":151,"author":{"gitId":"k-walter"},"content":"    public double getSpendingAmountCategory(String category, String period) {"},{"lineNumber":152,"author":{"gitId":"k-walter"},"content":"        return filterSpendingList(category, period).stream()"},{"lineNumber":153,"author":{"gitId":"k-walter"},"content":"            .mapToDouble(Item::getAmount)"},{"lineNumber":154,"author":{"gitId":"k-walter"},"content":"            .sum();"},{"lineNumber":155,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"k-walter"},"content":"    "},{"lineNumber":157,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":158,"author":{"gitId":"killingbear999"},"content":"    public void editItemDescription(int number, String description)"},{"lineNumber":159,"author":{"gitId":"killingbear999"},"content":"            throws IOException {"},{"lineNumber":160,"author":{"gitId":"killingbear999"},"content":"        Item item \u003d getItem(number);"},{"lineNumber":161,"author":{"gitId":"killingbear999"},"content":"        item.editDescription(description);"},{"lineNumber":162,"author":{"gitId":"killingbear999"},"content":"        save();"},{"lineNumber":163,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":165,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":166,"author":{"gitId":"killingbear999"},"content":"    public void editItemCategory(int number, String category)"},{"lineNumber":167,"author":{"gitId":"killingbear999"},"content":"            throws IOException {"},{"lineNumber":168,"author":{"gitId":"killingbear999"},"content":"        Item item \u003d getItem(number);"},{"lineNumber":169,"author":{"gitId":"killingbear999"},"content":"        item.editCategory(category);"},{"lineNumber":170,"author":{"gitId":"killingbear999"},"content":"        save();"},{"lineNumber":171,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":173,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":174,"author":{"gitId":"killingbear999"},"content":"    public void editItemAmount(int number, double amount)"},{"lineNumber":175,"author":{"gitId":"killingbear999"},"content":"            throws IOException {"},{"lineNumber":176,"author":{"gitId":"killingbear999"},"content":"        Item item \u003d getItem(number);"},{"lineNumber":177,"author":{"gitId":"killingbear999"},"content":"        item.editAmount(amount);"},{"lineNumber":178,"author":{"gitId":"killingbear999"},"content":"        save();"},{"lineNumber":179,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":181,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":182,"author":{"gitId":"killingbear999"},"content":"    public void updateSpendingList() throws IOException {"},{"lineNumber":183,"author":{"gitId":"killingbear999"},"content":"        ConvertCommand convertCommand \u003d new ConvertCommand();"},{"lineNumber":184,"author":{"gitId":"killingbear999"},"content":"        spendingList \u003d convertCommand.updateSpendingList();"},{"lineNumber":185,"author":{"gitId":"killingbear999"},"content":"        save();"},{"lineNumber":186,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":188,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":189,"author":{"gitId":"killingbear999"},"content":"    public double getCurrentAmount(Data data) {"},{"lineNumber":190,"author":{"gitId":"killingbear999"},"content":"        double currentAmount \u003d 0;"},{"lineNumber":191,"author":{"gitId":"killingbear999"},"content":"        for (Item i: spendingList) {"},{"lineNumber":192,"author":{"gitId":"killingbear999"},"content":"            if (i.getDate().compareTo(data.budget.getDate()) \u003e\u003d 0) {"},{"lineNumber":193,"author":{"gitId":"killingbear999"},"content":"                currentAmount +\u003d i.getAmount();"},{"lineNumber":194,"author":{"gitId":"killingbear999"},"content":"            }"},{"lineNumber":195,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"killingbear999"},"content":"        return currentAmount;"},{"lineNumber":197,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":199,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":200,"author":{"gitId":"killingbear999"},"content":"    private void swapItem(Item item1, Item item2) {"},{"lineNumber":201,"author":{"gitId":"killingbear999"},"content":"        final String tempCategory \u003d item1.getCategory();"},{"lineNumber":202,"author":{"gitId":"killingbear999"},"content":"        final String tempDescription \u003d item1.getDescription();"},{"lineNumber":203,"author":{"gitId":"killingbear999"},"content":"        final String tempSymbol \u003d item1.getSymbol();"},{"lineNumber":204,"author":{"gitId":"killingbear999"},"content":"        final String tempDate \u003d item1.getDate();"},{"lineNumber":205,"author":{"gitId":"killingbear999"},"content":"        final double tempAmount \u003d item1.getAmount();"},{"lineNumber":206,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":207,"author":{"gitId":"killingbear999"},"content":"        item1.editCategory(item2.getCategory());"},{"lineNumber":208,"author":{"gitId":"killingbear999"},"content":"        item1.editDescription(item2.getDescription());"},{"lineNumber":209,"author":{"gitId":"killingbear999"},"content":"        item1.editSymbol(item2.getSymbol());"},{"lineNumber":210,"author":{"gitId":"killingbear999"},"content":"        item1.editAmount(item2.getAmount());"},{"lineNumber":211,"author":{"gitId":"killingbear999"},"content":"        item1.editDate(item2.getDate());"},{"lineNumber":212,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":213,"author":{"gitId":"killingbear999"},"content":"        item2.editCategory(tempCategory);"},{"lineNumber":214,"author":{"gitId":"killingbear999"},"content":"        item2.editDescription(tempDescription);"},{"lineNumber":215,"author":{"gitId":"killingbear999"},"content":"        item2.editSymbol(tempSymbol);"},{"lineNumber":216,"author":{"gitId":"killingbear999"},"content":"        item2.editAmount(tempAmount);"},{"lineNumber":217,"author":{"gitId":"killingbear999"},"content":"        item2.editDate(tempDate);"},{"lineNumber":218,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":220,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":221,"author":{"gitId":"killingbear999"},"content":"    public void categoriseSpendingList() {"},{"lineNumber":222,"author":{"gitId":"killingbear999"},"content":"        int count \u003d spendingList.size() - 1;"},{"lineNumber":223,"author":{"gitId":"killingbear999"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {"},{"lineNumber":224,"author":{"gitId":"killingbear999"},"content":"            for (int j \u003d 0; j \u003c count + 1; j++) {"},{"lineNumber":225,"author":{"gitId":"killingbear999"},"content":"                Item currentItem \u003d getItem(j);"},{"lineNumber":226,"author":{"gitId":"killingbear999"},"content":"                if (i \u003d\u003d 0 \u0026\u0026 currentItem.getCategory().equals(\"Education\")) {"},{"lineNumber":227,"author":{"gitId":"killingbear999"},"content":"                    Item lastItem \u003d getItem(count);"},{"lineNumber":228,"author":{"gitId":"killingbear999"},"content":"                    swapItem(currentItem, lastItem);"},{"lineNumber":229,"author":{"gitId":"killingbear999"},"content":"                    count \u003d count - 1;"},{"lineNumber":230,"author":{"gitId":"killingbear999"},"content":"                } else if (i \u003d\u003d 1 \u0026\u0026 currentItem.getCategory().equals(\"Entertainment\")) {"},{"lineNumber":231,"author":{"gitId":"killingbear999"},"content":"                    Item lastItem \u003d getItem(count);"},{"lineNumber":232,"author":{"gitId":"killingbear999"},"content":"                    swapItem(currentItem, lastItem);"},{"lineNumber":233,"author":{"gitId":"killingbear999"},"content":"                    count \u003d count - 1;"},{"lineNumber":234,"author":{"gitId":"killingbear999"},"content":"                } else if (i \u003d\u003d 2 \u0026\u0026 currentItem.getCategory().equals(\"Food\")) {"},{"lineNumber":235,"author":{"gitId":"killingbear999"},"content":"                    Item lastItem \u003d getItem(count);"},{"lineNumber":236,"author":{"gitId":"killingbear999"},"content":"                    swapItem(currentItem, lastItem);"},{"lineNumber":237,"author":{"gitId":"killingbear999"},"content":"                    count \u003d count - 1;"},{"lineNumber":238,"author":{"gitId":"killingbear999"},"content":"                } else if (i \u003d\u003d 3 \u0026\u0026 currentItem.getCategory().equals(\"Health\")) {"},{"lineNumber":239,"author":{"gitId":"killingbear999"},"content":"                    Item lastItem \u003d getItem(count);"},{"lineNumber":240,"author":{"gitId":"killingbear999"},"content":"                    swapItem(currentItem, lastItem);"},{"lineNumber":241,"author":{"gitId":"killingbear999"},"content":"                    count \u003d count - 1;"},{"lineNumber":242,"author":{"gitId":"killingbear999"},"content":"                } else if (i \u003d\u003d 4 \u0026\u0026 currentItem.getCategory().equals(\"Transportation\")) {"},{"lineNumber":243,"author":{"gitId":"killingbear999"},"content":"                    Item lastItem \u003d getItem(count);"},{"lineNumber":244,"author":{"gitId":"killingbear999"},"content":"                    swapItem(currentItem, lastItem);"},{"lineNumber":245,"author":{"gitId":"killingbear999"},"content":"                    count \u003d count - 1;"},{"lineNumber":246,"author":{"gitId":"killingbear999"},"content":"                } else if (i \u003d\u003d 5 \u0026\u0026 currentItem.getCategory().equals(\"Utilities\")) {"},{"lineNumber":247,"author":{"gitId":"killingbear999"},"content":"                    Item lastItem \u003d getItem(count);"},{"lineNumber":248,"author":{"gitId":"killingbear999"},"content":"                    swapItem(currentItem, lastItem);"},{"lineNumber":249,"author":{"gitId":"killingbear999"},"content":"                    count \u003d count - 1;"},{"lineNumber":250,"author":{"gitId":"killingbear999"},"content":"                } else if (i \u003d\u003d 6 \u0026\u0026 currentItem.getCategory().equals(\"Other\")) {"},{"lineNumber":251,"author":{"gitId":"killingbear999"},"content":"                    Item lastItem \u003d getItem(count);"},{"lineNumber":252,"author":{"gitId":"killingbear999"},"content":"                    swapItem(currentItem, lastItem);"},{"lineNumber":253,"author":{"gitId":"killingbear999"},"content":"                    count \u003d count - 1;"},{"lineNumber":254,"author":{"gitId":"killingbear999"},"content":"                }"},{"lineNumber":255,"author":{"gitId":"killingbear999"},"content":"            }"},{"lineNumber":256,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":257,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":45,"killingbear999":108,"xieyaoyue":5,"pinfang":100}},{"path":"src/main/java/seedu/duke/exceptions/DukeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"public abstract class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"    public abstract String getMessage();"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":6}},{"path":"src/main/java/seedu/duke/exceptions/EmptyCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"public class EmptyCommandException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"        return \"Sorry, please input at least one of the areas you wanna edit.\";"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":9}},{"path":"src/main/java/seedu/duke/exceptions/EmptyListException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"public class EmptyListException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"        return \"Sorry, the spending list is empty.\";"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidAmountException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"public class InvalidAmountException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"        return \"Sorry, the amount input is invalid. Please try again. \\nThe amount input should be larger than 0.01. \""},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"                       + \"Negative number and extremely small amount will be considered as invalid input.\";"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":10}},{"path":"src/main/java/seedu/duke/exceptions/InvalidBudgetException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"public class InvalidBudgetException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"        return \"Sorry, the budget amount you entered is invalid. Please try again.\";"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidClearBudgetException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":" * Signals that there is nothing to clear for the budget data as it is empty."},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"//@@author xieyaoyue"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":"public class InvalidClearBudgetException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":"        return \"Sorry, there\u0027s no budget limit set.\";"},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"xieyaoyue":12}},{"path":"src/main/java/seedu/duke/exceptions/InvalidClearRepaymentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":" * Signals that there is nothing to clear for the repayment list as it is empty."},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"//@@author xieyaoyue"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":"public class InvalidClearRepaymentException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":"        return \"Sorry, there\u0027s nothing to clear in the repayment list.\";"},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"xieyaoyue":12}},{"path":"src/main/java/seedu/duke/exceptions/InvalidClearSpendingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":" * Signals that there is nothing to clear for the spending list as it is empty."},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"//@@author xieyaoyue"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":"public class InvalidClearSpendingException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":"        return \"Sorry, there\u0027s nothing to clear in the spending list.\";"},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"xieyaoyue":12}},{"path":"src/main/java/seedu/duke/exceptions/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"public class InvalidCommandException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"        return \"Sorry, the command input is invalid. Please re-enter a new command.\";"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidCurrencyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"public class InvalidCurrencyException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"        return \"Sorry, the system  only supports currency conversion for SGD to USD, or USD to SGD, \""},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"                       + \"or SGD to CNY, or CNY to SGD.\";"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":10}},{"path":"src/main/java/seedu/duke/exceptions/InvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"public class InvalidDateException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"        return \"Sorry, the date you input is invalid. Please try again.\";"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidInputCurrencyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"public class InvalidInputCurrencyException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"        return \"Sorry, the input currency you entered is invalid. Please try again.\";"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidMonthException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pinfang"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":3,"author":{"gitId":"pinfang"},"content":"//@@author pinfang"},{"lineNumber":4,"author":{"gitId":"pinfang"},"content":"public class InvalidMonthException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"pinfang"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"pinfang"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":"        return \"Sorry, your month input is invalid. Please re-enter the month.\";"},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":"}"}],"authorContributionMap":{"pinfang":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"public class InvalidNameException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"        return \"Sorry, the name or description you input is invalid. \\nName or description containing only \""},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"                       + \"alphabets will be considered valid.\";"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":10}},{"path":"src/main/java/seedu/duke/exceptions/InvalidNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"public class InvalidNumberException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"        return \"Sorry, the index you input is invalid. Please try again.\";"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidOutputCurrencyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"public class InvalidOutputCurrencyException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"        return \"Sorry, the output currency you entered is invalid. Please try again.\";"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidStorageFileExtensionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"public class InvalidStorageFileExtensionException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"        return \"Please indicate a .json file\";"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":8}},{"path":"src/main/java/seedu/duke/exceptions/InvalidStorageFilePathException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"public class InvalidStorageFilePathException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"        return \"Sorry, the file path is invalid.\";"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidYearException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pinfang"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":3,"author":{"gitId":"pinfang"},"content":"//@@author pinfang"},{"lineNumber":4,"author":{"gitId":"pinfang"},"content":"public class InvalidYearException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"pinfang"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"pinfang"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":"        return \"Sorry, your year input is invalid. Please re-enter the year.\";"},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":"}"}],"authorContributionMap":{"pinfang":9}},{"path":"src/main/java/seedu/duke/parser/AddParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.parser;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.CommandLine;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.ParseException;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.AddCommand;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.Command;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidCommandException;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"public class AddParser extends Parser {"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"    public AddParser() {"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"        super();"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"        addDescriptionOption(true);"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"        addCategoryOption(false);"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"        addSpendingOption(true);"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":18,"author":{"gitId":"xieyaoyue"},"content":"    public Command parse(String[] args) throws ParseException, InvalidCommandException {"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"        CommandLine line \u003d getCommandLine(args);"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"        String category \u003d parseCategoryOption(line);"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"        Spending spending \u003d parseSpendingOption(line);"},{"lineNumber":22,"author":{"gitId":"xieyaoyue"},"content":"        String description \u003d parseDescriptionOption(line);"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"        return new AddCommand(description, spending.symbol, spending.amount, category);"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":24,"xieyaoyue":2}},{"path":"src/main/java/seedu/duke/parser/ClearParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.parser;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.CommandLine;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.Option;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.ParseException;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.ClearBudgetCommand;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.ClearRepaymentListCommand;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.ClearSpendingListCommand;"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.Command;"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.MultipleCommand;"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidCommandException;"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidNumberException;"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"public class ClearParser extends Parser {"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"    public ClearParser() {"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"        super();"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"        Option repayment \u003d Option.builder(\"r\")"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"            .longOpt(\"repayment\")"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"            .hasArg()"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"            .optionalArg(true)"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"            .argName(\"repayment\")"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"            .build();"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"        Option spending \u003d Option.builder(\"s\")"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"            .longOpt(\"spending\")"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"            .hasArg()"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"            .optionalArg(true)"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"            .argName(\"spending\")"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"            .build();"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"        Option budget \u003d Option.builder(\"b\")"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"            .longOpt(\"budget\")"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"            .argName(\"budget\")"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"            .build();"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"        options.addOption(repayment);"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"        options.addOption(spending);"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"        options.addOption(budget);"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":40,"author":{"gitId":"xieyaoyue"},"content":"    public Command parse(String[] args) throws InvalidCommandException,"},{"lineNumber":41,"author":{"gitId":"k-walter"},"content":"        InvalidNumberException, ParseException {"},{"lineNumber":42,"author":{"gitId":"k-walter"},"content":"        CommandLine line \u003d getCommandLine(args);"},{"lineNumber":43,"author":{"gitId":"k-walter"},"content":"        MultipleCommand mc \u003d new MultipleCommand();"},{"lineNumber":44,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":45,"author":{"gitId":"k-walter"},"content":"        Integer index \u003d parseOptionalIndex(line, \"r\");"},{"lineNumber":46,"author":{"gitId":"k-walter"},"content":"        if (index !\u003d null) {"},{"lineNumber":47,"author":{"gitId":"k-walter"},"content":"            mc.addCommand(new ClearRepaymentListCommand(index \u003d\u003d -1, index));"},{"lineNumber":48,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"k-walter"},"content":"        index \u003d parseOptionalIndex(line, \"s\");"},{"lineNumber":50,"author":{"gitId":"k-walter"},"content":"        if (index !\u003d null) {"},{"lineNumber":51,"author":{"gitId":"k-walter"},"content":"            mc.addCommand(new ClearSpendingListCommand(index \u003d\u003d -1, index));"},{"lineNumber":52,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"k-walter"},"content":"        if (line.hasOption(\"b\")) {"},{"lineNumber":54,"author":{"gitId":"k-walter"},"content":"            mc.addCommand(new ClearBudgetCommand());"},{"lineNumber":55,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"k-walter"},"content":"        if (mc.noCommandsGiven()) {"},{"lineNumber":57,"author":{"gitId":"k-walter"},"content":"            throw new InvalidCommandException();"},{"lineNumber":58,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":60,"author":{"gitId":"k-walter"},"content":"        return mc;"},{"lineNumber":61,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":63,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":61,"xieyaoyue":2}},{"path":"src/main/java/seedu/duke/parser/ConvertParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.parser;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.CommandLine;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.Option;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.ParseException;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.Command;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.ConvertCommand;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidCommandException;"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"public class ConvertParser extends Parser {"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"    public ConvertParser() {"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"        super();"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"        Option source \u003d Option.builder(\"s\")"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"            .longOpt(\"source\")"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"            .hasArg()"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"            .required()"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"            .argName(\"source\")"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"            .build();"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"        Option target \u003d Option.builder(\"t\")"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"            .longOpt(\"target\")"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"            .hasArg()"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"            .required()"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"            .argName(\"target\")"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"            .build();"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"        options.addOption(source);"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"        options.addOption(target);"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"    public Command parse(String[] args) throws ParseException, InvalidCommandException {"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"        CommandLine line \u003d getCommandLine(args);"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"        String source \u003d line.getOptionValue(\"s\");"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"        String target \u003d line.getOptionValue(\"t\");"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"        return new ConvertCommand(source, target);"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":39,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":39}},{"path":"src/main/java/seedu/duke/parser/DateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.parser;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.CommandLine;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.ParseException;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.DateCommand;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidCommandException;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidMonthException;"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidYearException;"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"import java.lang.reflect.InvocationTargetException;"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"public class DateParser\u003cT extends DateCommand\u003e extends Parser {"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"    private final Class\u003cT\u003e command;"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"    public DateParser(Class\u003cT\u003e command) {"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"        super();"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"        addAllOption();"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"        this.command \u003d command;"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"    public Command parse(String[] args) throws ParseException, InvalidCommandException, NoSuchMethodException,"},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":"        IllegalAccessException, InvocationTargetException, InstantiationException,"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"        InvalidYearException, InvalidMonthException {"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"        CommandLine line \u003d getCommandLine(args, true);"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"        if (parseAllOption(line)) {"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"            parseNoArgs(line);"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"            return command.getDeclaredConstructor().newInstance();"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"        YearMonth ym \u003d parseDateArgs(line);"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"        return command.getDeclaredConstructor(String.class, String.class).newInstance(ym.year, ym.month);"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":36,"xieyaoyue":1}},{"path":"src/main/java/seedu/duke/parser/EditParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.parser;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.CommandLine;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.ParseException;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.EditCommand;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidCommandException;"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidNumberException;"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"public class EditParser extends Parser {"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"    public EditParser() {"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"        super();"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"        addDescriptionOption(false);"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"        addCategoryOption(false);"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"        addSpendingOption(false);"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"    public Command parse(String[] args) throws InvalidNumberException, ParseException, InvalidCommandException {"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"        CommandLine line \u003d getCommandLine(args, true);"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"        int index \u003d getIndex(line);"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"        String description \u003d parseDescriptionOption(line);"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"        String category \u003d parseCategoryOption(line);"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"        Spending s \u003d parseSpendingOption(line);"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"        return new EditCommand(index, description, s.symbol, s.amount, category);"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":30,"xieyaoyue":1}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.parser;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.CommandLine;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.CommandLineParser;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.DefaultParser;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.Option;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.Options;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.ParseException;"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.command.Command;"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.DrawCommand;"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.ExitCommand;"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.ExportCommand;"},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.command.HelpCommand;"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.PurgeDataCommand;"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.RepaymentListCommand;"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.SummaryCommand;"},{"lineNumber":17,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.command.ViewBudgetCommand;"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidCommandException;"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidMonthException;"},{"lineNumber":20,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidNumberException;"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidYearException;"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"import java.lang.reflect.InvocationTargetException;"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"import java.time.LocalDate;"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"import java.time.format.TextStyle;"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"import java.util.Arrays;"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"import java.util.Calendar;"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"import java.util.Date;"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"import java.util.Locale;"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"public abstract class Parser {"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"    protected static CommandLineParser parser;"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"    protected static Options options;"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"    protected static void parseNoArgs(CommandLine line) throws InvalidCommandException {"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"        String[] args \u003d line.getArgs();"},{"lineNumber":39,"author":{"gitId":"k-walter"},"content":"        if (args !\u003d null \u0026\u0026 args.length \u003e 0) {"},{"lineNumber":40,"author":{"gitId":"k-walter"},"content":"            throw new InvalidCommandException();"},{"lineNumber":41,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":44,"author":{"gitId":"k-walter"},"content":"    protected static void addAllOption() {"},{"lineNumber":45,"author":{"gitId":"k-walter"},"content":"        Option all \u003d Option.builder(\"a\")"},{"lineNumber":46,"author":{"gitId":"k-walter"},"content":"            .longOpt(\"all\")"},{"lineNumber":47,"author":{"gitId":"k-walter"},"content":"            .argName(\"all\")"},{"lineNumber":48,"author":{"gitId":"k-walter"},"content":"            .build();"},{"lineNumber":49,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":50,"author":{"gitId":"k-walter"},"content":"        options.addOption(all);"},{"lineNumber":51,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":53,"author":{"gitId":"k-walter"},"content":"    protected static boolean parseAllOption(CommandLine line) {"},{"lineNumber":54,"author":{"gitId":"k-walter"},"content":"        return line.hasOption(\"a\");"},{"lineNumber":55,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":57,"author":{"gitId":"k-walter"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"k-walter"},"content":"     * Parses optional year month argument, with 3 possible combinations."},{"lineNumber":59,"author":{"gitId":"k-walter"},"content":"     * case none given: year \u003d current year, month \u003d current month"},{"lineNumber":60,"author":{"gitId":"k-walter"},"content":"     * cases year given: year \u003d given year, month \u003d null"},{"lineNumber":61,"author":{"gitId":"k-walter"},"content":"     * case year month given: year \u003d given year, month \u003d given month"},{"lineNumber":62,"author":{"gitId":"k-walter"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"k-walter"},"content":"     * @param line command line to be parsed for arguments"},{"lineNumber":64,"author":{"gitId":"k-walter"},"content":"     * @return year (eg 2020), month (\"01\"..\"12\")"},{"lineNumber":65,"author":{"gitId":"k-walter"},"content":"     * @throws InvalidCommandException if unable to get argument"},{"lineNumber":66,"author":{"gitId":"k-walter"},"content":"     * @throws InvalidYearException    for invalid year"},{"lineNumber":67,"author":{"gitId":"k-walter"},"content":"     * @throws InvalidMonthException   for invalid month"},{"lineNumber":68,"author":{"gitId":"k-walter"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"k-walter"},"content":"    protected static YearMonth parseDateArgs(CommandLine line) throws InvalidCommandException, InvalidYearException,"},{"lineNumber":70,"author":{"gitId":"k-walter"},"content":"        InvalidMonthException {"},{"lineNumber":71,"author":{"gitId":"k-walter"},"content":"        String[] period \u003d line.getArgs();"},{"lineNumber":72,"author":{"gitId":"k-walter"},"content":"        if (period \u003d\u003d null) {"},{"lineNumber":73,"author":{"gitId":"k-walter"},"content":"            throw new InvalidCommandException();"},{"lineNumber":74,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":76,"author":{"gitId":"k-walter"},"content":"        LocalDate now \u003d LocalDate.now();"},{"lineNumber":77,"author":{"gitId":"k-walter"},"content":"        YearMonth ym \u003d new YearMonth();"},{"lineNumber":78,"author":{"gitId":"k-walter"},"content":"        switch (period.length) {"},{"lineNumber":79,"author":{"gitId":"k-walter"},"content":"        case 0:"},{"lineNumber":80,"author":{"gitId":"k-walter"},"content":"            ym.month \u003d now.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH);"},{"lineNumber":81,"author":{"gitId":"k-walter"},"content":"            ym.year \u003d Integer.toString(now.getYear());"},{"lineNumber":82,"author":{"gitId":"k-walter"},"content":"            break;"},{"lineNumber":83,"author":{"gitId":"k-walter"},"content":"        case 2:"},{"lineNumber":84,"author":{"gitId":"k-walter"},"content":"            ym.year \u003d period[0];"},{"lineNumber":85,"author":{"gitId":"k-walter"},"content":"            ym.month \u003d period[1];"},{"lineNumber":86,"author":{"gitId":"k-walter"},"content":"            break;"},{"lineNumber":87,"author":{"gitId":"k-walter"},"content":"        case 1:"},{"lineNumber":88,"author":{"gitId":"k-walter"},"content":"            ym.year \u003d period[0];"},{"lineNumber":89,"author":{"gitId":"k-walter"},"content":"            break;"},{"lineNumber":90,"author":{"gitId":"k-walter"},"content":"        default:"},{"lineNumber":91,"author":{"gitId":"k-walter"},"content":"            throw new InvalidCommandException();"},{"lineNumber":92,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":94,"author":{"gitId":"k-walter"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"k-walter"},"content":"            int yr \u003d Integer.parseInt(ym.year);"},{"lineNumber":96,"author":{"gitId":"k-walter"},"content":"            if (yr \u003c 1970 || yr \u003e now.getYear()) {"},{"lineNumber":97,"author":{"gitId":"k-walter"},"content":"                throw new Exception();"},{"lineNumber":98,"author":{"gitId":"k-walter"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"k-walter"},"content":"        } catch (Exception e) {"},{"lineNumber":100,"author":{"gitId":"k-walter"},"content":"            throw new InvalidYearException();"},{"lineNumber":101,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":103,"author":{"gitId":"k-walter"},"content":"        if (ym.month !\u003d null) {"},{"lineNumber":104,"author":{"gitId":"k-walter"},"content":"            try {"},{"lineNumber":105,"author":{"gitId":"k-walter"},"content":"                Date date \u003d new SimpleDateFormat(\"MMM\", Locale.ENGLISH).parse(ym.month);"},{"lineNumber":106,"author":{"gitId":"k-walter"},"content":"                Calendar cal \u003d Calendar.getInstance();"},{"lineNumber":107,"author":{"gitId":"k-walter"},"content":"                cal.setTime(date);"},{"lineNumber":108,"author":{"gitId":"k-walter"},"content":"                ym.month \u003d String.format(\"%02d\", cal.get(Calendar.MONTH) + 1);"},{"lineNumber":109,"author":{"gitId":"k-walter"},"content":"            } catch (java.text.ParseException e) {"},{"lineNumber":110,"author":{"gitId":"k-walter"},"content":"                throw new InvalidMonthException();"},{"lineNumber":111,"author":{"gitId":"k-walter"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":114,"author":{"gitId":"k-walter"},"content":"        return ym;"},{"lineNumber":115,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":117,"author":{"gitId":"k-walter"},"content":"    protected static void addCategoryOption(boolean required) {"},{"lineNumber":118,"author":{"gitId":"k-walter"},"content":"        Option category \u003d Option.builder(\"c\")"},{"lineNumber":119,"author":{"gitId":"k-walter"},"content":"            .longOpt(\"category\")"},{"lineNumber":120,"author":{"gitId":"k-walter"},"content":"            .hasArgs()"},{"lineNumber":121,"author":{"gitId":"k-walter"},"content":"            .required(required)"},{"lineNumber":122,"author":{"gitId":"k-walter"},"content":"            .argName(\"category\")"},{"lineNumber":123,"author":{"gitId":"k-walter"},"content":"            .build();"},{"lineNumber":124,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":125,"author":{"gitId":"k-walter"},"content":"        options.addOption(category);"},{"lineNumber":126,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":128,"author":{"gitId":"k-walter"},"content":"    protected static String parseCategoryOption(CommandLine line) {"},{"lineNumber":129,"author":{"gitId":"k-walter"},"content":"        return line.getOptionValue(\"c\");"},{"lineNumber":130,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":132,"author":{"gitId":"k-walter"},"content":"    protected static void addSpendingOption(boolean required) {"},{"lineNumber":133,"author":{"gitId":"k-walter"},"content":"        Option spending \u003d Option.builder(\"s\")"},{"lineNumber":134,"author":{"gitId":"k-walter"},"content":"            .longOpt(\"spending\")"},{"lineNumber":135,"author":{"gitId":"k-walter"},"content":"            .hasArgs()"},{"lineNumber":136,"author":{"gitId":"k-walter"},"content":"            .argName(\"spending\")"},{"lineNumber":137,"author":{"gitId":"k-walter"},"content":"            .required(required)"},{"lineNumber":138,"author":{"gitId":"k-walter"},"content":"            .build();"},{"lineNumber":139,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":140,"author":{"gitId":"k-walter"},"content":"        options.addOption(spending);"},{"lineNumber":141,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":143,"author":{"gitId":"k-walter"},"content":"    protected static Spending parseSpendingOption(CommandLine line) throws InvalidCommandException {"},{"lineNumber":144,"author":{"gitId":"k-walter"},"content":"        Spending s \u003d new Spending();"},{"lineNumber":145,"author":{"gitId":"k-walter"},"content":"        if (line.hasOption(\"s\")) {"},{"lineNumber":146,"author":{"gitId":"k-walter"},"content":"            String[] spending \u003d line.getOptionValues(\"s\");"},{"lineNumber":147,"author":{"gitId":"k-walter"},"content":"            if (spending.length !\u003d 2) {"},{"lineNumber":148,"author":{"gitId":"k-walter"},"content":"                throw new InvalidCommandException();"},{"lineNumber":149,"author":{"gitId":"k-walter"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"k-walter"},"content":"            s.symbol \u003d spending[0];"},{"lineNumber":151,"author":{"gitId":"k-walter"},"content":"            s.amount \u003d Double.parseDouble(spending[1]);"},{"lineNumber":152,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"k-walter"},"content":"        return s;"},{"lineNumber":154,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":156,"author":{"gitId":"k-walter"},"content":"    protected static void addDescriptionOption(boolean required) {"},{"lineNumber":157,"author":{"gitId":"k-walter"},"content":"        Option description \u003d Option.builder(\"d\")"},{"lineNumber":158,"author":{"gitId":"k-walter"},"content":"            .longOpt(\"description\")"},{"lineNumber":159,"author":{"gitId":"k-walter"},"content":"            .hasArgs()"},{"lineNumber":160,"author":{"gitId":"k-walter"},"content":"            .required(required)"},{"lineNumber":161,"author":{"gitId":"k-walter"},"content":"            .argName(\"description\")"},{"lineNumber":162,"author":{"gitId":"k-walter"},"content":"            .build();"},{"lineNumber":163,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":164,"author":{"gitId":"k-walter"},"content":"        options.addOption(description);"},{"lineNumber":165,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":167,"author":{"gitId":"k-walter"},"content":"    protected static String parseDescriptionOption(CommandLine line) {"},{"lineNumber":168,"author":{"gitId":"k-walter"},"content":"        String[] descriptionArray \u003d line.getOptionValues(\"d\");"},{"lineNumber":169,"author":{"gitId":"k-walter"},"content":"        if (descriptionArray \u003d\u003d null) {"},{"lineNumber":170,"author":{"gitId":"k-walter"},"content":"            return null;"},{"lineNumber":171,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"k-walter"},"content":"        return String.join(\" \", descriptionArray);"},{"lineNumber":173,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":175,"author":{"gitId":"k-walter"},"content":"    static void addDateOption() {"},{"lineNumber":176,"author":{"gitId":"k-walter"},"content":"        Option date \u003d Option.builder(\"t\")"},{"lineNumber":177,"author":{"gitId":"k-walter"},"content":"            .hasArg()"},{"lineNumber":178,"author":{"gitId":"k-walter"},"content":"            .required()"},{"lineNumber":179,"author":{"gitId":"k-walter"},"content":"            .build();"},{"lineNumber":180,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":181,"author":{"gitId":"k-walter"},"content":"        options.addOption(date);"},{"lineNumber":182,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":184,"author":{"gitId":"k-walter"},"content":"    protected static String parseDateOption(CommandLine line) {"},{"lineNumber":185,"author":{"gitId":"k-walter"},"content":"        String[] date \u003d line.getOptionValues(\"t\");"},{"lineNumber":186,"author":{"gitId":"k-walter"},"content":"        return String.join(\" \", date);"},{"lineNumber":187,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":189,"author":{"gitId":"k-walter"},"content":"    /**"},{"lineNumber":190,"author":{"gitId":"k-walter"},"content":"     * getOptionalIndex parses line with flag for 0..1 argument given"},{"lineNumber":191,"author":{"gitId":"k-walter"},"content":"     *"},{"lineNumber":192,"author":{"gitId":"k-walter"},"content":"     * @param line to check flags with"},{"lineNumber":193,"author":{"gitId":"k-walter"},"content":"     * @param flag for command"},{"lineNumber":194,"author":{"gitId":"k-walter"},"content":"     * @return null for option not selected, -1 for clear all, \u003e\u003d0 for clear 1"},{"lineNumber":195,"author":{"gitId":"k-walter"},"content":"     * @throws InvalidCommandException if argument is given is invalid index"},{"lineNumber":196,"author":{"gitId":"k-walter"},"content":"     */"},{"lineNumber":197,"author":{"gitId":"k-walter"},"content":"    static Integer parseOptionalIndex(CommandLine line, String flag) throws InvalidCommandException,"},{"lineNumber":198,"author":{"gitId":"k-walter"},"content":"        InvalidNumberException {"},{"lineNumber":199,"author":{"gitId":"k-walter"},"content":"        if (!line.hasOption(flag)) {"},{"lineNumber":200,"author":{"gitId":"k-walter"},"content":"            return null;"},{"lineNumber":201,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":203,"author":{"gitId":"k-walter"},"content":"        String indexString \u003d line.getOptionValue(flag);"},{"lineNumber":204,"author":{"gitId":"k-walter"},"content":"        boolean isClearAll \u003d indexString \u003d\u003d null;"},{"lineNumber":205,"author":{"gitId":"k-walter"},"content":"        if (isClearAll) {"},{"lineNumber":206,"author":{"gitId":"k-walter"},"content":"            return -1;"},{"lineNumber":207,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":209,"author":{"gitId":"k-walter"},"content":"        Integer index \u003d getIndex(indexString);"},{"lineNumber":210,"author":{"gitId":"k-walter"},"content":"        if (index \u003d\u003d null) {"},{"lineNumber":211,"author":{"gitId":"k-walter"},"content":"            throw new InvalidCommandException();"},{"lineNumber":212,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"k-walter"},"content":"        return index;"},{"lineNumber":214,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":216,"author":{"gitId":"k-walter"},"content":"    /**"},{"lineNumber":217,"author":{"gitId":"k-walter"},"content":"     * Parse arguments into command line with no extra values outside of arguments."},{"lineNumber":218,"author":{"gitId":"k-walter"},"content":"     *"},{"lineNumber":219,"author":{"gitId":"k-walter"},"content":"     * @param args space-separated arguments to parse"},{"lineNumber":220,"author":{"gitId":"k-walter"},"content":"     * @return command line with options"},{"lineNumber":221,"author":{"gitId":"k-walter"},"content":"     * @throws ParseException          for errors parsing"},{"lineNumber":222,"author":{"gitId":"k-walter"},"content":"     * @throws InvalidCommandException if values found outside of arguments"},{"lineNumber":223,"author":{"gitId":"k-walter"},"content":"     */"},{"lineNumber":224,"author":{"gitId":"k-walter"},"content":"    protected static CommandLine getCommandLine(String[] args) throws ParseException, InvalidCommandException {"},{"lineNumber":225,"author":{"gitId":"k-walter"},"content":"        return getCommandLine(args, false);"},{"lineNumber":226,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":228,"author":{"gitId":"k-walter"},"content":"    protected static CommandLine getCommandLine(String[] args, boolean hasArgs) throws ParseException,"},{"lineNumber":229,"author":{"gitId":"k-walter"},"content":"        InvalidCommandException {"},{"lineNumber":230,"author":{"gitId":"k-walter"},"content":"        CommandLine line \u003d parser.parse(options, args);"},{"lineNumber":231,"author":{"gitId":"k-walter"},"content":"        if (!hasArgs) {"},{"lineNumber":232,"author":{"gitId":"k-walter"},"content":"            parseNoArgs(line);"},{"lineNumber":233,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"k-walter"},"content":"        return line;"},{"lineNumber":235,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":237,"author":{"gitId":"k-walter"},"content":"    public abstract Command parse(String[] args) throws ParseException, InvalidCommandException,"},{"lineNumber":238,"author":{"gitId":"k-walter"},"content":"        java.text.ParseException, IllegalAccessException, InstantiationException, NoSuchMethodException,"},{"lineNumber":239,"author":{"gitId":"xieyaoyue"},"content":"        InvocationTargetException, InvalidNumberException, InvalidYearException,"},{"lineNumber":240,"author":{"gitId":"k-walter"},"content":"        InvalidMonthException;"},{"lineNumber":241,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":242,"author":{"gitId":"k-walter"},"content":"    public Parser() {"},{"lineNumber":243,"author":{"gitId":"k-walter"},"content":"        parser \u003d new DefaultParser();"},{"lineNumber":244,"author":{"gitId":"k-walter"},"content":"        options \u003d new Options();"},{"lineNumber":245,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":246,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":247,"author":{"gitId":"k-walter"},"content":"    protected static int getIndex(CommandLine line) throws InvalidNumberException, InvalidCommandException {"},{"lineNumber":248,"author":{"gitId":"k-walter"},"content":"        String[] indexString \u003d line.getArgs();"},{"lineNumber":249,"author":{"gitId":"k-walter"},"content":"        if (indexString.length !\u003d 1) {"},{"lineNumber":250,"author":{"gitId":"k-walter"},"content":"            throw new InvalidCommandException();"},{"lineNumber":251,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":252,"author":{"gitId":"k-walter"},"content":"        return getIndex(indexString[0]);"},{"lineNumber":253,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":254,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":255,"author":{"gitId":"xieyaoyue"},"content":"    protected static Integer getIndex(String s) throws InvalidNumberException {"},{"lineNumber":256,"author":{"gitId":"k-walter"},"content":"        if (s \u003d\u003d null) {"},{"lineNumber":257,"author":{"gitId":"k-walter"},"content":"            return null;"},{"lineNumber":258,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":259,"author":{"gitId":"k-walter"},"content":"        int index \u003d Integer.parseInt(s);"},{"lineNumber":260,"author":{"gitId":"xieyaoyue"},"content":"        if (index \u003c\u003d 0) {"},{"lineNumber":261,"author":{"gitId":"xieyaoyue"},"content":"            throw new InvalidNumberException();"},{"lineNumber":262,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":263,"author":{"gitId":"k-walter"},"content":"        return index;"},{"lineNumber":264,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":266,"author":{"gitId":"k-walter"},"content":"    public static Command parseCommand(String userInput) throws InvalidCommandException, ParseException,"},{"lineNumber":267,"author":{"gitId":"k-walter"},"content":"        InvocationTargetException, NoSuchMethodException, InstantiationException, IllegalAccessException,"},{"lineNumber":268,"author":{"gitId":"xieyaoyue"},"content":"        java.text.ParseException, InvalidNumberException, InvalidYearException,"},{"lineNumber":269,"author":{"gitId":"k-walter"},"content":"        InvalidMonthException {"},{"lineNumber":270,"author":{"gitId":"k-walter"},"content":"        String[] args \u003d userInput.strip().split(\" \");"},{"lineNumber":271,"author":{"gitId":"k-walter"},"content":"        if (args.length \u003d\u003d 0) {"},{"lineNumber":272,"author":{"gitId":"k-walter"},"content":"            throw new InvalidCommandException();"},{"lineNumber":273,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":274,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":275,"author":{"gitId":"k-walter"},"content":"        String cmd \u003d args[0];"},{"lineNumber":276,"author":{"gitId":"k-walter"},"content":"        String[] opts \u003d Arrays.copyOfRange(args, 1, args.length);"},{"lineNumber":277,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":278,"author":{"gitId":"k-walter"},"content":"        switch (cmd) {"},{"lineNumber":279,"author":{"gitId":"k-walter"},"content":"        case \"add\":"},{"lineNumber":280,"author":{"gitId":"k-walter"},"content":"            return new AddParser().parse(opts);"},{"lineNumber":281,"author":{"gitId":"k-walter"},"content":"        case \"clear\":"},{"lineNumber":282,"author":{"gitId":"k-walter"},"content":"            return new ClearParser().parse(opts);"},{"lineNumber":283,"author":{"gitId":"k-walter"},"content":"        case \"convert\":"},{"lineNumber":284,"author":{"gitId":"k-walter"},"content":"            return new ConvertParser().parse(opts);"},{"lineNumber":285,"author":{"gitId":"k-walter"},"content":"        case \"draw\":"},{"lineNumber":286,"author":{"gitId":"k-walter"},"content":"            return new DateParser\u003c\u003e(DrawCommand.class).parse(opts);"},{"lineNumber":287,"author":{"gitId":"k-walter"},"content":"        case \"edit\":"},{"lineNumber":288,"author":{"gitId":"k-walter"},"content":"            return new EditParser().parse(opts);"},{"lineNumber":289,"author":{"gitId":"k-walter"},"content":"        case \"export\":"},{"lineNumber":290,"author":{"gitId":"k-walter"},"content":"            return new ExportCommand(String.join(\" \", opts));"},{"lineNumber":291,"author":{"gitId":"k-walter"},"content":"        case \"help\":"},{"lineNumber":292,"author":{"gitId":"k-walter"},"content":"            checkRemainingCommand(opts, \"\");"},{"lineNumber":293,"author":{"gitId":"k-walter"},"content":"            return new HelpCommand();"},{"lineNumber":294,"author":{"gitId":"k-walter"},"content":"        case \"logout\":"},{"lineNumber":295,"author":{"gitId":"k-walter"},"content":"            checkRemainingCommand(opts, \"\");"},{"lineNumber":296,"author":{"gitId":"k-walter"},"content":"            return new ExitCommand();"},{"lineNumber":297,"author":{"gitId":"k-walter"},"content":"        case \"repay\":"},{"lineNumber":298,"author":{"gitId":"k-walter"},"content":"            return new RepayParser().parse(opts);"},{"lineNumber":299,"author":{"gitId":"k-walter"},"content":"        case \"purge\":"},{"lineNumber":300,"author":{"gitId":"k-walter"},"content":"            checkRemainingCommand(opts, \"data\");"},{"lineNumber":301,"author":{"gitId":"k-walter"},"content":"            return new PurgeDataCommand();"},{"lineNumber":302,"author":{"gitId":"killingbear999"},"content":"        case \"repayment\":"},{"lineNumber":303,"author":{"gitId":"k-walter"},"content":"            checkRemainingCommand(opts, \"list\");"},{"lineNumber":304,"author":{"gitId":"killingbear999"},"content":"            return new RepaymentListCommand();"},{"lineNumber":305,"author":{"gitId":"k-walter"},"content":"        case \"set\":"},{"lineNumber":306,"author":{"gitId":"k-walter"},"content":"            return new SetParser().parse(opts);"},{"lineNumber":307,"author":{"gitId":"k-walter"},"content":"        case \"spending\":"},{"lineNumber":308,"author":{"gitId":"k-walter"},"content":"            return new SpendingListParser().parse(opts);"},{"lineNumber":309,"author":{"gitId":"k-walter"},"content":"        case \"summary\":"},{"lineNumber":310,"author":{"gitId":"k-walter"},"content":"            return new DateParser\u003c\u003e(SummaryCommand.class).parse(opts);"},{"lineNumber":311,"author":{"gitId":"k-walter"},"content":"        case \"view\":"},{"lineNumber":312,"author":{"gitId":"xieyaoyue"},"content":"            return new ViewBudgetCommand();"},{"lineNumber":313,"author":{"gitId":"k-walter"},"content":"        default:"},{"lineNumber":314,"author":{"gitId":"k-walter"},"content":"            throw new InvalidCommandException();"},{"lineNumber":315,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":316,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":317,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":318,"author":{"gitId":"k-walter"},"content":"    private static void checkRemainingCommand(String[] args, String remainingCommand) throws InvalidCommandException {"},{"lineNumber":319,"author":{"gitId":"k-walter"},"content":"        boolean noCommands \u003d (remainingCommand \u003d\u003d null || remainingCommand.equals(\"\"));"},{"lineNumber":320,"author":{"gitId":"k-walter"},"content":"        if (noCommands) {"},{"lineNumber":321,"author":{"gitId":"k-walter"},"content":"            if (args.length !\u003d 0) {"},{"lineNumber":322,"author":{"gitId":"k-walter"},"content":"                throw new InvalidCommandException();"},{"lineNumber":323,"author":{"gitId":"k-walter"},"content":"            }"},{"lineNumber":324,"author":{"gitId":"k-walter"},"content":"            return;"},{"lineNumber":325,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":326,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":327,"author":{"gitId":"k-walter"},"content":"        String[] c \u003d remainingCommand.strip().split(\" \");"},{"lineNumber":328,"author":{"gitId":"k-walter"},"content":"        boolean unequalArgs \u003d args.length !\u003d c.length || !Arrays.equals(c, args);"},{"lineNumber":329,"author":{"gitId":"k-walter"},"content":"        if (unequalArgs) {"},{"lineNumber":330,"author":{"gitId":"k-walter"},"content":"            throw new InvalidCommandException();"},{"lineNumber":331,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":332,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":321,"killingbear999":4,"xieyaoyue":8}},{"path":"src/main/java/seedu/duke/parser/RepayParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.parser;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.CommandLine;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.ParseException;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.RepayCommand;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidCommandException;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"public class RepayParser extends Parser {"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"    public RepayParser() {"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"        addSpendingOption(true);"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"        addDescriptionOption(true);"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"        addDateOption();"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"xieyaoyue"},"content":"    public Command parse(String[] args) throws ParseException, InvalidCommandException {"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"        CommandLine line \u003d getCommandLine(args);"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"        Spending s \u003d parseSpendingOption(line);"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"        String description \u003d parseDescriptionOption(line);"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"        String date \u003d parseDateOption(line);"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"        return new RepayCommand(description, s.symbol, s.amount, date);"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":24,"xieyaoyue":1}},{"path":"src/main/java/seedu/duke/parser/SetParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.parser;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.CommandLine;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.ParseException;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.SetBudgetCommand;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidCommandException;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"public class SetParser extends Parser {"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"    public SetParser() {"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"        addSpendingOption(true);"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"    public Command parse(String[] args) throws ParseException, InvalidCommandException {"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"        CommandLine line \u003d getCommandLine(args);"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"        Spending s \u003d parseSpendingOption(line);"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"        return new SetBudgetCommand(s.symbol, s.amount);"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":21}},{"path":"src/main/java/seedu/duke/parser/Spending.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.parser;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"public class Spending {"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"    String symbol \u003d null;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"    Double amount \u003d null;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"    public Spending() {"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":11}},{"path":"src/main/java/seedu/duke/parser/SpendingListParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.parser;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.CommandLine;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.ParseException;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.SpendingListCommand;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidCommandException;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidMonthException;"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidYearException;"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"import java.util.Arrays;"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"public class SpendingListParser extends Parser {"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"    public SpendingListParser() {"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"        super();"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"        addAllOption();"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"        addCategoryOption(false);"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"    public Command parse(String[] args) throws ParseException, InvalidCommandException, InvalidYearException,"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"        InvalidMonthException {"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"        if (args.length \u003c 1 || !args[0].equals(\"list\")) {"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"            throw new InvalidCommandException();"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"        String[] opts \u003d Arrays.copyOfRange(args, 1, args.length);"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"        CommandLine line \u003d getCommandLine(opts, true);"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"        String category \u003d parseCategoryOption(line);"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"        if (parseAllOption(line)) {"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"            parseNoArgs(line);"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"            return new SpendingListCommand(category);"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"        YearMonth ym \u003d parseDateArgs(line);"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"        return new SpendingListCommand(ym.year, ym.month, category);"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":38}},{"path":"src/main/java/seedu/duke/parser/YearMonth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke.parser;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"public class YearMonth {"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"    public String year \u003d null;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"    public String month \u003d null;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"    public YearMonth() {"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"    public YearMonth(String year, String month) {"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"        this.year \u003d year;"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"        this.month \u003d month;"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":16}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.storage;"},{"lineNumber":2,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import com.google.gson.Gson;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import com.google.gson.GsonBuilder;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Budget;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.RepaymentList;"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.SpendingList;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidStorageFileExtensionException;"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidStorageFilePathException;"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"import java.io.File;"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"import java.lang.reflect.Modifier;"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"    private final File file;"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"    private final Gson gson;"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"     * Creates the Storage object based on the user-specified file path."},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"     * @param path relative path to json file"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"     * @throws InvalidStorageFilePathException      for empty or blank file path"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"     * @throws InvalidStorageFileExtensionException for non-json file path"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"    public Storage(String path) throws InvalidStorageFilePathException, InvalidStorageFileExtensionException {"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"        // Validate path"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"        String[] parts \u003d path.split(\"\\\\.\");"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"        if (path.isBlank() || parts.length \u003d\u003d 0) {"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"            throw new InvalidStorageFilePathException();"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"        String extension \u003d parts[parts.length - 1];"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"        if (parts.length \u003d\u003d 1 || !extension.equals(\"json\")) {"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"            throw new InvalidStorageFileExtensionException();"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"k-walter"},"content":"        // Create or Initialise object"},{"lineNumber":40,"author":{"gitId":"k-walter"},"content":"        file \u003d new File(path);"},{"lineNumber":41,"author":{"gitId":"k-walter"},"content":"        gson \u003d new GsonBuilder()"},{"lineNumber":42,"author":{"gitId":"k-walter"},"content":"            .excludeFieldsWithModifiers(Modifier.FINAL, Modifier.TRANSIENT, Modifier.STATIC)"},{"lineNumber":43,"author":{"gitId":"k-walter"},"content":"            .serializeNulls()"},{"lineNumber":44,"author":{"gitId":"k-walter"},"content":"            .create();"},{"lineNumber":45,"author":{"gitId":"k-walter"},"content":"        if (!file.exists()) {"},{"lineNumber":46,"author":{"gitId":"k-walter"},"content":"            try {"},{"lineNumber":47,"author":{"gitId":"k-walter"},"content":"                file.getParentFile().mkdirs();"},{"lineNumber":48,"author":{"gitId":"k-walter"},"content":"                file.createNewFile();"},{"lineNumber":49,"author":{"gitId":"k-walter"},"content":"            } catch (IOException e) {"},{"lineNumber":50,"author":{"gitId":"k-walter"},"content":"                throw new InvalidStorageFilePathException();"},{"lineNumber":51,"author":{"gitId":"k-walter"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":55,"author":{"gitId":"k-walter"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"k-walter"},"content":"     * Exposes location of storage for Duke applications."},{"lineNumber":57,"author":{"gitId":"k-walter"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"k-walter"},"content":"     * @return file path"},{"lineNumber":59,"author":{"gitId":"k-walter"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"k-walter"},"content":"    public String getFilePath() {"},{"lineNumber":61,"author":{"gitId":"k-walter"},"content":"        return file.getAbsolutePath();"},{"lineNumber":62,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":64,"author":{"gitId":"k-walter"},"content":"    public SpendingList loadSpendingList() {"},{"lineNumber":65,"author":{"gitId":"k-walter"},"content":"        SpendingList sl;"},{"lineNumber":66,"author":{"gitId":"k-walter"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"k-walter"},"content":"            String json \u003d new Scanner(file)"},{"lineNumber":68,"author":{"gitId":"k-walter"},"content":"                .useDelimiter(\"\\\\Z\")"},{"lineNumber":69,"author":{"gitId":"k-walter"},"content":"                .next();"},{"lineNumber":70,"author":{"gitId":"k-walter"},"content":"            sl \u003d gson.fromJson(json, SpendingList.class);"},{"lineNumber":71,"author":{"gitId":"k-walter"},"content":"            if (sl \u003d\u003d null) {"},{"lineNumber":72,"author":{"gitId":"k-walter"},"content":"                throw new InvalidStorageFilePathException();"},{"lineNumber":73,"author":{"gitId":"k-walter"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"k-walter"},"content":"        } catch (Exception e) {"},{"lineNumber":75,"author":{"gitId":"k-walter"},"content":"            sl \u003d new SpendingList(this);"},{"lineNumber":76,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"k-walter"},"content":"        sl.storage \u003d this;"},{"lineNumber":78,"author":{"gitId":"k-walter"},"content":"        return sl;"},{"lineNumber":79,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":81,"author":{"gitId":"k-walter"},"content":"    public RepaymentList loadRepaymentList() {"},{"lineNumber":82,"author":{"gitId":"k-walter"},"content":"        RepaymentList rl;"},{"lineNumber":83,"author":{"gitId":"k-walter"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"k-walter"},"content":"            String json \u003d new Scanner(file)"},{"lineNumber":85,"author":{"gitId":"k-walter"},"content":"                .useDelimiter(\"\\\\Z\")"},{"lineNumber":86,"author":{"gitId":"k-walter"},"content":"                .next();"},{"lineNumber":87,"author":{"gitId":"k-walter"},"content":"            rl \u003d gson.fromJson(json, RepaymentList.class);"},{"lineNumber":88,"author":{"gitId":"k-walter"},"content":"            if (rl \u003d\u003d null) {"},{"lineNumber":89,"author":{"gitId":"k-walter"},"content":"                throw new InvalidStorageFilePathException();"},{"lineNumber":90,"author":{"gitId":"k-walter"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"k-walter"},"content":"        } catch (Exception e) {"},{"lineNumber":92,"author":{"gitId":"k-walter"},"content":"            rl \u003d new RepaymentList(this);"},{"lineNumber":93,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"k-walter"},"content":"        rl.storage \u003d this;"},{"lineNumber":95,"author":{"gitId":"k-walter"},"content":"        return rl;"},{"lineNumber":96,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":98,"author":{"gitId":"k-walter"},"content":"    public Budget loadBudget() {"},{"lineNumber":99,"author":{"gitId":"k-walter"},"content":"        Budget b;"},{"lineNumber":100,"author":{"gitId":"k-walter"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"k-walter"},"content":"            String json \u003d new Scanner(file)"},{"lineNumber":102,"author":{"gitId":"k-walter"},"content":"                .useDelimiter(\"\\\\Z\")"},{"lineNumber":103,"author":{"gitId":"k-walter"},"content":"                .next();"},{"lineNumber":104,"author":{"gitId":"k-walter"},"content":"            b \u003d gson.fromJson(json, Budget.class);"},{"lineNumber":105,"author":{"gitId":"k-walter"},"content":"            if (b \u003d\u003d null) {"},{"lineNumber":106,"author":{"gitId":"k-walter"},"content":"                throw new InvalidStorageFilePathException();"},{"lineNumber":107,"author":{"gitId":"k-walter"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"k-walter"},"content":"        } catch (Exception e) {"},{"lineNumber":109,"author":{"gitId":"k-walter"},"content":"            b \u003d new Budget(this);"},{"lineNumber":110,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"k-walter"},"content":"        b.storage \u003d this;"},{"lineNumber":112,"author":{"gitId":"k-walter"},"content":"        return b;"},{"lineNumber":113,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":115,"author":{"gitId":"k-walter"},"content":"    public void save(SpendingList spendingList) throws IOException {"},{"lineNumber":116,"author":{"gitId":"k-walter"},"content":"        String jsonContent \u003d gson.toJson(spendingList);"},{"lineNumber":117,"author":{"gitId":"k-walter"},"content":"        FileWriter fw \u003d new FileWriter(file, false);"},{"lineNumber":118,"author":{"gitId":"k-walter"},"content":"        fw.write(jsonContent);"},{"lineNumber":119,"author":{"gitId":"k-walter"},"content":"        fw.close();"},{"lineNumber":120,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":122,"author":{"gitId":"k-walter"},"content":"    public void save(RepaymentList repaymentList) throws IOException {"},{"lineNumber":123,"author":{"gitId":"k-walter"},"content":"        String jsonContent \u003d gson.toJson(repaymentList);"},{"lineNumber":124,"author":{"gitId":"k-walter"},"content":"        FileWriter fw \u003d new FileWriter(file, false);"},{"lineNumber":125,"author":{"gitId":"k-walter"},"content":"        fw.write(jsonContent);"},{"lineNumber":126,"author":{"gitId":"k-walter"},"content":"        fw.close();"},{"lineNumber":127,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":129,"author":{"gitId":"k-walter"},"content":"    public void save(Object object) throws IOException {"},{"lineNumber":130,"author":{"gitId":"k-walter"},"content":"        String jsonContent \u003d gson.toJson(object);"},{"lineNumber":131,"author":{"gitId":"k-walter"},"content":"        FileWriter fw \u003d new FileWriter(file, false);"},{"lineNumber":132,"author":{"gitId":"k-walter"},"content":"        fw.write(jsonContent);"},{"lineNumber":133,"author":{"gitId":"k-walter"},"content":"        fw.close();"},{"lineNumber":134,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"pinfang"},"content":"}"}],"authorContributionMap":{"k-walter":128,"xieyaoyue":3,"pinfang":4}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.ui;"},{"lineNumber":2,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.Item;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.Repay;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.RepaymentList;"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.SpendingList;"},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":9,"author":{"gitId":"Wu-Haitao"},"content":"import java.io.PrintStream;"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"import java.util.Random;"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":14,"author":{"gitId":"Wu-Haitao"},"content":"public class Ui {"},{"lineNumber":15,"author":{"gitId":"Wu-Haitao"},"content":"    private Scanner in;"},{"lineNumber":16,"author":{"gitId":"Wu-Haitao"},"content":"    private PrintStream out;"},{"lineNumber":17,"author":{"gitId":"Wu-Haitao"},"content":"    private static final String SEPARATE_LINE_CHAR \u003d \"-\";"},{"lineNumber":18,"author":{"gitId":"Wu-Haitao"},"content":"    private static final int SEPARATE_LINE_LENGTH \u003d 115;"},{"lineNumber":19,"author":{"gitId":"pinfang"},"content":"    private static final String LOGO \u003d \"  _____         __ _      ___              \\n\""},{"lineNumber":20,"author":{"gitId":"pinfang"},"content":"        + \" / ___/__ ___  / /| | /| / (_)__ ___       \\n\""},{"lineNumber":21,"author":{"gitId":"pinfang"},"content":"        + \"/ /__/ -_) _ \\\\/ __/ |/ |/ / (_-\u003c/ -_)      \\n\""},{"lineNumber":22,"author":{"gitId":"pinfang"},"content":"        + \"\\\\___/\\\\__/_//_/\\\\__/|__/|__/_/___/\\\\__/       \\n\""},{"lineNumber":23,"author":{"gitId":"pinfang"},"content":"        + \"  / _ \\\\___  / / /__ ____| | /| / (_)__ ___ \\n\""},{"lineNumber":24,"author":{"gitId":"pinfang"},"content":"        + \" / // / _ \\\\/ / / _ `/ __/ |/ |/ / (_-\u003c/ -_)\\n\""},{"lineNumber":25,"author":{"gitId":"Wu-Haitao"},"content":"        + \"/____/\\\\___/_/_/\\\\_,_/_/  |__/|__/_/___/\\\\__/ \\n\";"},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":"    private static final String[][] BUDGET_QUOTES \u003d {"},{"lineNumber":27,"author":{"gitId":"xieyaoyue"},"content":"        {\"It takes as much energy to wish as it does to plan.\", \"Eleanor Roosevelt\"},"},{"lineNumber":28,"author":{"gitId":"xieyaoyue"},"content":"        {\"Just because you can afford it doesn\u0027t mean you should buy it.\", \"Suze Orman\"},"},{"lineNumber":29,"author":{"gitId":"xieyaoyue"},"content":"        {\"Do not save what is left after spending; instead spend what is left after saving.\", \"Warren Buffett\"},"},{"lineNumber":30,"author":{"gitId":"xieyaoyue"},"content":"        {\"Setting goals is the first step in turning the invisible into the visible.\", \"Tony Robbins\"},"},{"lineNumber":31,"author":{"gitId":"xieyaoyue"},"content":"        {\"If there is no struggle, there is no progress.\", \"Frederick Douglass\"}"},{"lineNumber":32,"author":{"gitId":"xieyaoyue"},"content":"    };"},{"lineNumber":33,"author":{"gitId":"xieyaoyue"},"content":"    private static final String BORDER_CORNER \u003d \"+\";"},{"lineNumber":34,"author":{"gitId":"xieyaoyue"},"content":"    private static final String BORDER_HORIZONTAL \u003d \"-\";"},{"lineNumber":35,"author":{"gitId":"xieyaoyue"},"content":"    private static final String BORDER_VERTICAL \u003d \"|\";"},{"lineNumber":36,"author":{"gitId":"xieyaoyue"},"content":"    private static final int TABLE_SIZE \u003d 115;"},{"lineNumber":37,"author":{"gitId":"xieyaoyue"},"content":"    private static final String[][] TABLE_OF_COMMANDS \u003d {"},{"lineNumber":38,"author":{"gitId":"xieyaoyue"},"content":"        {\"ACTION\", \"FORMAT\", \"EXAMPLES (IF ANY)\"},"},{"lineNumber":39,"author":{"gitId":"pinfang"},"content":"        {\"add\", \"add -c CATEGORY -d DESCRIPTION -s CURRENCY AMOUNT\", \"add -c Food -d chicken rice -s SGD 3.00\"},"},{"lineNumber":40,"author":{"gitId":"xieyaoyue"},"content":"        {\"clear\", \"clear [-b] [-s SPENDING_INDEX] [-r REPAYMENT_INDEX]\", \"clear -s 1\"},"},{"lineNumber":41,"author":{"gitId":"killingbear999"},"content":"        {\"convert\", \"convert -s INPUT_CURRENCY -t OUTPUT_CURRENCY\", \"convert -s SGD -t USD\"},"},{"lineNumber":42,"author":{"gitId":"pinfang"},"content":"        {\"draw\", \"draw [YEAR] [MONTH] [-a]\", \"draw 2020 Jun\"},"},{"lineNumber":43,"author":{"gitId":"xieyaoyue"},"content":"        {\"edit\", \"edit INDEX [-c NEW_CATEGORY] [-d NEW_DESCRIPTION]\", \"edit 1 -s SGD 4.00\"},"},{"lineNumber":44,"author":{"gitId":"xieyaoyue"},"content":"        {\"\", \"[-s NEW_CURRENCY NEW_SPENDING]\", \"\"},"},{"lineNumber":45,"author":{"gitId":"xieyaoyue"},"content":"        {\"export\", \"export PATH\", \"export F:\\\\MyFolder\"},"},{"lineNumber":46,"author":{"gitId":"xieyaoyue"},"content":"        {\"help\", \"help\", \"\"},"},{"lineNumber":47,"author":{"gitId":"xieyaoyue"},"content":"        {\"logout\", \"logout\", \"\"},"},{"lineNumber":48,"author":{"gitId":"xieyaoyue"},"content":"        {\"purge data\", \"purge data\", \"\"},"},{"lineNumber":49,"author":{"gitId":"killingbear999"},"content":"        {\"repay\", \"repay -d NAME -s CURRENCY AMOUNT -t DEADLINE\", \"repay -d Johnny -s SGD 5.00 -t 2020-12-02\"},"},{"lineNumber":50,"author":{"gitId":"xieyaoyue"},"content":"        {\"repayment list\", \"repayment list\", \"\"},"},{"lineNumber":51,"author":{"gitId":"killingbear999"},"content":"        {\"set\", \"set -s CURRENCY AMOUNT\", \"set -s SGD 100.00\"},"},{"lineNumber":52,"author":{"gitId":"pinfang"},"content":"        {\"spending\", \"spending list\", \"spending list\"},"},{"lineNumber":53,"author":{"gitId":"pinfang"},"content":"        {\"list\", \" [YEAR] [MONTH] [-c CATEGORY] [-a]\", \"OR spending list 2020 -c food\"},"},{"lineNumber":54,"author":{"gitId":"pinfang"},"content":"        {\"summary\", \"summary\", \"summary\"},"},{"lineNumber":55,"author":{"gitId":"pinfang"},"content":"        {\"\", \"[YEAR] [MONTH] [-a]\", \"OR summary 2020 Oct\"},"},{"lineNumber":56,"author":{"gitId":"xieyaoyue"},"content":"        {\"view\", \"view\", \"\"}"},{"lineNumber":57,"author":{"gitId":"xieyaoyue"},"content":"    };"},{"lineNumber":58,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":59,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":60,"author":{"gitId":"Wu-Haitao"},"content":"    public Ui() {"},{"lineNumber":61,"author":{"gitId":"Wu-Haitao"},"content":"        this(new Scanner(System.in), System.out);"},{"lineNumber":62,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":64,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":65,"author":{"gitId":"Wu-Haitao"},"content":"    public Ui(Scanner in, PrintStream out) {"},{"lineNumber":66,"author":{"gitId":"Wu-Haitao"},"content":"        this.in \u003d in;"},{"lineNumber":67,"author":{"gitId":"Wu-Haitao"},"content":"        this.out \u003d out;"},{"lineNumber":68,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":70,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":71,"author":{"gitId":"Wu-Haitao"},"content":"    public String getUserInput() {"},{"lineNumber":72,"author":{"gitId":"Wu-Haitao"},"content":"        return in.nextLine();"},{"lineNumber":73,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":75,"author":{"gitId":"xieyaoyue"},"content":"    //@@author xieyaoyue"},{"lineNumber":76,"author":{"gitId":"xieyaoyue"},"content":"    public void printEncouragementMessage() {"},{"lineNumber":77,"author":{"gitId":"xieyaoyue"},"content":"        Random rand \u003d new Random();"},{"lineNumber":78,"author":{"gitId":"xieyaoyue"},"content":"        int randInt \u003d rand.nextInt(4);"},{"lineNumber":79,"author":{"gitId":"xieyaoyue"},"content":"        out.println(BUDGET_QUOTES[randInt][0]);"},{"lineNumber":80,"author":{"gitId":"xieyaoyue"},"content":"        out.println(\" \".repeat(60) + \"--\" + BUDGET_QUOTES[randInt][1]);"},{"lineNumber":81,"author":{"gitId":"xieyaoyue"},"content":"        out.println(\"Keep up budgeting! You can do it!\");"},{"lineNumber":82,"author":{"gitId":"xieyaoyue"},"content":"        drawSeparateLine();"},{"lineNumber":83,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":85,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":86,"author":{"gitId":"Wu-Haitao"},"content":"    public void printWelcomeMessage() {"},{"lineNumber":87,"author":{"gitId":"Wu-Haitao"},"content":"        drawSeparateLine();"},{"lineNumber":88,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(LOGO);"},{"lineNumber":89,"author":{"gitId":"Wu-Haitao"},"content":"        drawSeparateLine();"},{"lineNumber":90,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":92,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":93,"author":{"gitId":"Wu-Haitao"},"content":"    public void printWelcomeMessage(String filePath) {"},{"lineNumber":94,"author":{"gitId":"Wu-Haitao"},"content":"        printWelcomeMessage();"},{"lineNumber":95,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(\"Local file path: \" + filePath);"},{"lineNumber":96,"author":{"gitId":"Wu-Haitao"},"content":"        drawSeparateLine();"},{"lineNumber":97,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":99,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":100,"author":{"gitId":"Wu-Haitao"},"content":"    public void printGoodbyeMessage() {"},{"lineNumber":101,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(\"See you next time!\");"},{"lineNumber":102,"author":{"gitId":"Wu-Haitao"},"content":"        drawSeparateLine();"},{"lineNumber":103,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":105,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":106,"author":{"gitId":"Wu-Haitao"},"content":"    private void drawSeparateLine() {"},{"lineNumber":107,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(SEPARATE_LINE_CHAR.repeat(SEPARATE_LINE_LENGTH));"},{"lineNumber":108,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":110,"author":{"gitId":"Wu-Haitao"},"content":"    //@author k-walter"},{"lineNumber":111,"author":{"gitId":"Wu-Haitao"},"content":"    public void printSpendingList(ArrayList\u003cItem\u003e items) {"},{"lineNumber":112,"author":{"gitId":"Wu-Haitao"},"content":"        if (items.isEmpty()) {"},{"lineNumber":113,"author":{"gitId":"Wu-Haitao"},"content":"            out.println(\"Nothing in the list.\");"},{"lineNumber":114,"author":{"gitId":"Wu-Haitao"},"content":"        } else {"},{"lineNumber":115,"author":{"gitId":"Wu-Haitao"},"content":"            int i \u003d 1;"},{"lineNumber":116,"author":{"gitId":"Wu-Haitao"},"content":"            for (Item item : items) {"},{"lineNumber":117,"author":{"gitId":"Wu-Haitao"},"content":"                out.printf(\"%d. %s%n\", i, item);"},{"lineNumber":118,"author":{"gitId":"Wu-Haitao"},"content":"                i +\u003d 1;"},{"lineNumber":119,"author":{"gitId":"Wu-Haitao"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"Wu-Haitao"},"content":"        drawSeparateLine();"},{"lineNumber":122,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":124,"author":{"gitId":"xieyaoyue"},"content":"    //@@author xieyaoyue"},{"lineNumber":125,"author":{"gitId":"xieyaoyue"},"content":"    private void printTopBottomBorder() {"},{"lineNumber":126,"author":{"gitId":"xieyaoyue"},"content":"        out.println(BORDER_CORNER + BORDER_HORIZONTAL.repeat(TABLE_SIZE - 2) + BORDER_CORNER);"},{"lineNumber":127,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":129,"author":{"gitId":"xieyaoyue"},"content":"    //@@author xieyaoyue"},{"lineNumber":130,"author":{"gitId":"xieyaoyue"},"content":"    private void printWithinTableBorder() {"},{"lineNumber":131,"author":{"gitId":"xieyaoyue"},"content":"        System.out.println(BORDER_HORIZONTAL.repeat(TABLE_SIZE));"},{"lineNumber":132,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":134,"author":{"gitId":"xieyaoyue"},"content":"    //@@author xieyaoyue"},{"lineNumber":135,"author":{"gitId":"xieyaoyue"},"content":"    public void printHelp() {"},{"lineNumber":136,"author":{"gitId":"xieyaoyue"},"content":"        out.println(\"Here is a summary of the commands you can use:\");"},{"lineNumber":137,"author":{"gitId":"xieyaoyue"},"content":"        printTopBottomBorder();"},{"lineNumber":138,"author":{"gitId":"xieyaoyue"},"content":"        for (int i \u003d 0; i \u003c 19; i++) {"},{"lineNumber":139,"author":{"gitId":"xieyaoyue"},"content":"            out.format(\"%1s%-15s%1s%-55s%1s%-41s%1s\\n\", BORDER_VERTICAL, TABLE_OF_COMMANDS[i][0],"},{"lineNumber":140,"author":{"gitId":"xieyaoyue"},"content":"                       BORDER_VERTICAL, TABLE_OF_COMMANDS[i][1], BORDER_VERTICAL, TABLE_OF_COMMANDS[i][2],"},{"lineNumber":141,"author":{"gitId":"xieyaoyue"},"content":"                       BORDER_VERTICAL);"},{"lineNumber":142,"author":{"gitId":"xieyaoyue"},"content":"            if (i \u003c\u003d 4 || (i \u003e\u003d 6 \u0026\u0026 i \u003c\u003d 12) || i \u003d\u003d 13 || i \u003d\u003d 15 || i \u003d\u003d 17) {"},{"lineNumber":143,"author":{"gitId":"xieyaoyue"},"content":"                printWithinTableBorder();"},{"lineNumber":144,"author":{"gitId":"xieyaoyue"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"xieyaoyue"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"xieyaoyue"},"content":"        printTopBottomBorder();"},{"lineNumber":147,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":149,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":150,"author":{"gitId":"Wu-Haitao"},"content":"    public void printClearIndex(Item item) {"},{"lineNumber":151,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(\"You\u0027ve deleted the record:\");"},{"lineNumber":152,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(item);"},{"lineNumber":153,"author":{"gitId":"Wu-Haitao"},"content":"        drawSeparateLine();"},{"lineNumber":154,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":156,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":157,"author":{"gitId":"Wu-Haitao"},"content":"    public void printClearIndex(Repay repaymentEntry) {"},{"lineNumber":158,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(\"You\u0027ve deleted this entry in the repayment list:\");"},{"lineNumber":159,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(repaymentEntry);"},{"lineNumber":160,"author":{"gitId":"Wu-Haitao"},"content":"        drawSeparateLine();"},{"lineNumber":161,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":163,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":164,"author":{"gitId":"Wu-Haitao"},"content":"    public void printClearAllSpendingList() {"},{"lineNumber":165,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(\"You\u0027ve deleted all the records in the spending list.\");"},{"lineNumber":166,"author":{"gitId":"Wu-Haitao"},"content":"        drawSeparateLine();"},{"lineNumber":167,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":169,"author":{"gitId":"xieyaoyue"},"content":"    //@@author xieyaoyue"},{"lineNumber":170,"author":{"gitId":"xieyaoyue"},"content":"    public void printClearAllRepaymentList() {"},{"lineNumber":171,"author":{"gitId":"xieyaoyue"},"content":"        out.println(\"You\u0027ve deleted all the entries in the repayment list.\");"},{"lineNumber":172,"author":{"gitId":"xieyaoyue"},"content":"        drawSeparateLine();"},{"lineNumber":173,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":175,"author":{"gitId":"xieyaoyue"},"content":"    public void printClearBudget() {"},{"lineNumber":176,"author":{"gitId":"xieyaoyue"},"content":"        out.println(\"You\u0027ve cleared your budget limit.\");"},{"lineNumber":177,"author":{"gitId":"xieyaoyue"},"content":"        drawSeparateLine();"},{"lineNumber":178,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":180,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":181,"author":{"gitId":"Wu-Haitao"},"content":"    public void printAdd(SpendingList spendingList) {"},{"lineNumber":182,"author":{"gitId":"Wu-Haitao"},"content":"        int size \u003d spendingList.getListSize();"},{"lineNumber":183,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(\"You\u0027ve added the record:\");"},{"lineNumber":184,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(spendingList.getItem(size - 1).getDate() + \" [\""},{"lineNumber":185,"author":{"gitId":"Wu-Haitao"},"content":"                        + spendingList.getItem(size - 1).getCategory() + \"] \""},{"lineNumber":186,"author":{"gitId":"Wu-Haitao"},"content":"                        + spendingList.getItem(size - 1).getDescription() + \" \""},{"lineNumber":187,"author":{"gitId":"Wu-Haitao"},"content":"                        + spendingList.getItem(size - 1).getSymbol() + \" \""},{"lineNumber":188,"author":{"gitId":"Wu-Haitao"},"content":"                        + String.format(\"%.2f\", spendingList.getItem(size - 1).getAmount()));"},{"lineNumber":189,"author":{"gitId":"Wu-Haitao"},"content":"        drawSeparateLine();"},{"lineNumber":190,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":192,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":193,"author":{"gitId":"killingbear999"},"content":"    public void printAddRepay(RepaymentList repaymentList) {"},{"lineNumber":194,"author":{"gitId":"killingbear999"},"content":"        out.println(\"You\u0027ve added this repayment record:\");"},{"lineNumber":195,"author":{"gitId":"killingbear999"},"content":"        out.println(repaymentList.getEntry(repaymentList.getListSize() - 1));"},{"lineNumber":196,"author":{"gitId":"killingbear999"},"content":"        drawSeparateLine();"},{"lineNumber":197,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":199,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":200,"author":{"gitId":"killingbear999"},"content":"    public void printConvertCurrency(String outputCurrency) {"},{"lineNumber":201,"author":{"gitId":"killingbear999"},"content":"        out.println(\"The currency has been changed to \" + outputCurrency + \".\");"},{"lineNumber":202,"author":{"gitId":"killingbear999"},"content":"        drawSeparateLine();"},{"lineNumber":203,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":205,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":206,"author":{"gitId":"killingbear999"},"content":"    public void printEdit(SpendingList spendingList, int index) {"},{"lineNumber":207,"author":{"gitId":"killingbear999"},"content":"        out.println(\"You\u0027ve updated the record:\");"},{"lineNumber":208,"author":{"gitId":"killingbear999"},"content":"        out.println(spendingList.getItem(index).getDate() + \" [\""},{"lineNumber":209,"author":{"gitId":"killingbear999"},"content":"                        + spendingList.getItem(index).getCategory() + \"] \""},{"lineNumber":210,"author":{"gitId":"killingbear999"},"content":"                        + spendingList.getItem(index).getDescription() + \" \""},{"lineNumber":211,"author":{"gitId":"killingbear999"},"content":"                        + spendingList.getItem(index).getSymbol() + \" \""},{"lineNumber":212,"author":{"gitId":"killingbear999"},"content":"                        + String.format(\"%.2f\", spendingList.getItem(index).getAmount()));"},{"lineNumber":213,"author":{"gitId":"killingbear999"},"content":"        drawSeparateLine();"},{"lineNumber":214,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":216,"author":{"gitId":"pinfang"},"content":"    //@@author pinfang"},{"lineNumber":217,"author":{"gitId":"pinfang"},"content":"    public void printSummaryMessage(String currency, double amount) {"},{"lineNumber":218,"author":{"gitId":"pinfang"},"content":"        out.printf(\"You\u0027ve spent %s %.2f.%n\", currency, amount);"},{"lineNumber":219,"author":{"gitId":"pinfang"},"content":"        drawSeparateLine();"},{"lineNumber":220,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":222,"author":{"gitId":"pinfang"},"content":"    public void printSummaryCategory(String currency, String category, double amount) {"},{"lineNumber":223,"author":{"gitId":"pinfang"},"content":"        if (category.equals(\"OTHERS\")) {"},{"lineNumber":224,"author":{"gitId":"pinfang"},"content":"            out.printf(\"%-20s %s %.2f\\n\", category, currency, amount);"},{"lineNumber":225,"author":{"gitId":"pinfang"},"content":"            drawSeparateLine();"},{"lineNumber":226,"author":{"gitId":"pinfang"},"content":"        } else {"},{"lineNumber":227,"author":{"gitId":"pinfang"},"content":"            out.printf(\"%-20s %s %.2f\\n\", category, currency, amount);"},{"lineNumber":228,"author":{"gitId":"pinfang"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":231,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":232,"author":{"gitId":"Wu-Haitao"},"content":"    public void printErrorMessage(String message) {"},{"lineNumber":233,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(message);"},{"lineNumber":234,"author":{"gitId":"Wu-Haitao"},"content":"        drawSeparateLine();"},{"lineNumber":235,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":237,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":238,"author":{"gitId":"killingbear999"},"content":"    public void printBudgetLimit(Data data, String currency, double budgetLimit) {"},{"lineNumber":239,"author":{"gitId":"killingbear999"},"content":"        out.println(\"The budget limit has been set to \" + currency + \" \" + String.format(\"%.2f\", budgetLimit)"},{"lineNumber":240,"author":{"gitId":"killingbear999"},"content":"                + \" on \" + data.budget.getDate());"},{"lineNumber":241,"author":{"gitId":"killingbear999"},"content":"        drawSeparateLine();"},{"lineNumber":242,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":243,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":244,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":245,"author":{"gitId":"killingbear999"},"content":"    public void printApproachingWarningMessage(String outputCurrency, double amountRemaining) {"},{"lineNumber":246,"author":{"gitId":"killingbear999"},"content":"        out.println(\"Warning! Your spending is approaching your budget limit.\");"},{"lineNumber":247,"author":{"gitId":"killingbear999"},"content":"        out.println(\"You still have \" + outputCurrency + \" \" + String.format(\"%.2f\", amountRemaining)"},{"lineNumber":248,"author":{"gitId":"killingbear999"},"content":"                        + \" remained for spending.\");"},{"lineNumber":249,"author":{"gitId":"killingbear999"},"content":"        drawSeparateLine();"},{"lineNumber":250,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":251,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":252,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":253,"author":{"gitId":"killingbear999"},"content":"    public void printExceedingWarningMessage() {"},{"lineNumber":254,"author":{"gitId":"killingbear999"},"content":"        out.println(\"Warning! Your spending has exceeded your budget limit.\");"},{"lineNumber":255,"author":{"gitId":"killingbear999"},"content":"        drawSeparateLine();"},{"lineNumber":256,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":258,"author":{"gitId":"xieyaoyue"},"content":"    //@@author xieyaoyue"},{"lineNumber":259,"author":{"gitId":"xieyaoyue"},"content":"    public void printPurgeData() {"},{"lineNumber":260,"author":{"gitId":"xieyaoyue"},"content":"        out.println(\"All data are deleted.\");"},{"lineNumber":261,"author":{"gitId":"xieyaoyue"},"content":"        drawSeparateLine();"},{"lineNumber":262,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":263,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":264,"author":{"gitId":"pinfang"},"content":"    //@@author pinfang"},{"lineNumber":265,"author":{"gitId":"pinfang"},"content":"    public void printReminderMessage(String currency, double amountSpent, double amountRemained, String startWeek) {"},{"lineNumber":266,"author":{"gitId":"pinfang"},"content":"        out.printf(\"You have spent %s %.2f since this Mon (%s).\\n\", currency, amountSpent, startWeek);"},{"lineNumber":267,"author":{"gitId":"pinfang"},"content":"        out.printf(\"You have %s %.2f left in your budget.\\n\", currency, amountRemained);"},{"lineNumber":268,"author":{"gitId":"pinfang"},"content":"        drawSeparateLine();"},{"lineNumber":269,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":271,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":272,"author":{"gitId":"Wu-Haitao"},"content":"    public void printExportMessage(boolean isSuccessful) {"},{"lineNumber":273,"author":{"gitId":"Wu-Haitao"},"content":"        if (isSuccessful) {"},{"lineNumber":274,"author":{"gitId":"Wu-Haitao"},"content":"            out.println(\"The records have been exported to an Excel file successfully.\");"},{"lineNumber":275,"author":{"gitId":"Wu-Haitao"},"content":"        } else {"},{"lineNumber":276,"author":{"gitId":"Wu-Haitao"},"content":"            out.println(\"Exporting failed. Please check if you entered an invalid path.\");"},{"lineNumber":277,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":278,"author":{"gitId":"Wu-Haitao"},"content":"        drawSeparateLine();"},{"lineNumber":279,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":280,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":281,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":282,"author":{"gitId":"killingbear999"},"content":"    public void printCurrentBudgetLimit(Data data) {"},{"lineNumber":283,"author":{"gitId":"killingbear999"},"content":"        System.out.println(\"The budget limit has been set to: \" + data.budget.getCurrency() + \" \""},{"lineNumber":284,"author":{"gitId":"killingbear999"},"content":"                               + String.format(\"%.2f\", data.budget.getBudgetLimit()) + \" on \" + data.budget.getDate());"},{"lineNumber":285,"author":{"gitId":"killingbear999"},"content":"        System.out.println(SEPARATE_LINE_CHAR.repeat(SEPARATE_LINE_LENGTH));"},{"lineNumber":286,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":287,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":288,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":289,"author":{"gitId":"killingbear999"},"content":"    public void printNoBudget() {"},{"lineNumber":290,"author":{"gitId":"killingbear999"},"content":"        System.out.println(\"No budget has been set yet.\");"},{"lineNumber":291,"author":{"gitId":"killingbear999"},"content":"        System.out.println(SEPARATE_LINE_CHAR.repeat(SEPARATE_LINE_LENGTH));"},{"lineNumber":292,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":293,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":294,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":295,"author":{"gitId":"killingbear999"},"content":"    public void printRepaymentList(ArrayList\u003cRepay\u003e repaymentList) {"},{"lineNumber":296,"author":{"gitId":"killingbear999"},"content":"        if (!repaymentList.isEmpty()) {"},{"lineNumber":297,"author":{"gitId":"killingbear999"},"content":"            for (int i \u003d 1; i \u003c repaymentList.size() + 1; i++) {"},{"lineNumber":298,"author":{"gitId":"killingbear999"},"content":"                out.println(i + \". \" + repaymentList.get(i - 1));"},{"lineNumber":299,"author":{"gitId":"killingbear999"},"content":"            }"},{"lineNumber":300,"author":{"gitId":"killingbear999"},"content":"        } else {"},{"lineNumber":301,"author":{"gitId":"killingbear999"},"content":"            out.println(\"Nothing in the list.\");"},{"lineNumber":302,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":303,"author":{"gitId":"killingbear999"},"content":"        drawSeparateLine();"},{"lineNumber":304,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":305,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":306,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":307,"author":{"gitId":"Wu-Haitao"},"content":"    public void printDrawMessage(boolean isSuccessful) {"},{"lineNumber":308,"author":{"gitId":"Wu-Haitao"},"content":"        if (isSuccessful) {"},{"lineNumber":309,"author":{"gitId":"Wu-Haitao"},"content":"            out.println(\"The charts have been generated successfully!\");"},{"lineNumber":310,"author":{"gitId":"Wu-Haitao"},"content":"            out.println(\"You can find the charts at this location:\");"},{"lineNumber":311,"author":{"gitId":"Wu-Haitao"},"content":"            out.println(System.getProperty(\"user.dir\") + \"\\\\Charts.xlsx\");"},{"lineNumber":312,"author":{"gitId":"Wu-Haitao"},"content":"        } else {"},{"lineNumber":313,"author":{"gitId":"Wu-Haitao"},"content":"            out.println(\"Sorry, generation failed.\");"},{"lineNumber":314,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":315,"author":{"gitId":"Wu-Haitao"},"content":"        drawSeparateLine();"},{"lineNumber":316,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":317,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":318,"author":{"gitId":"Wu-Haitao"},"content":"    //@@author Wu-Haitao"},{"lineNumber":319,"author":{"gitId":"Wu-Haitao"},"content":"    public void printOpenFileFailedMessage() {"},{"lineNumber":320,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(\"Sorry, the file couldn\u0027t be opened.\");"},{"lineNumber":321,"author":{"gitId":"Wu-Haitao"},"content":"        out.println(\"Please try find the file in the application folder and open it manually.\");"},{"lineNumber":322,"author":{"gitId":"Wu-Haitao"},"content":"        drawSeparateLine();"},{"lineNumber":323,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":324,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":325,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":326,"author":{"gitId":"killingbear999"},"content":"    public void printInvalidConversion(String defaultCurrency) {"},{"lineNumber":327,"author":{"gitId":"killingbear999"},"content":"        out.println(\"Sorry, the input currency does not match with the current currency in the spending list.\");"},{"lineNumber":328,"author":{"gitId":"killingbear999"},"content":"        out.println(\"The current currency in the spending list is \" + defaultCurrency + \".\");"},{"lineNumber":329,"author":{"gitId":"killingbear999"},"content":"        drawSeparateLine();"},{"lineNumber":330,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":331,"author":{"gitId":"killingbear999"},"content":"}"},{"lineNumber":332,"author":{"gitId":"killingbear999"},"content":""}],"authorContributionMap":{"Wu-Haitao":132,"k-walter":3,"killingbear999":82,"xieyaoyue":80,"pinfang":35}},{"path":"src/main/java/seedu/duke/utilities/AmountConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.utilities;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"/** It is to convert the amount if the input currency does not match with the default currency in the system. */"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"public class AmountConverter {"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"    private String currency;"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"    private double amount;"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"    private String defaultCurrency;"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"    private final String[][] exchangeRates \u003d {"},{"lineNumber":11,"author":{"gitId":"killingbear999"},"content":"            {\"SGDUSD\", \"USDSGD\", \"SGDCNY\", \"CNYSGD\"},"},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":"            {\"0.74\", \"1.36\", \"4.99\", \"0.20\"},"},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":"    };"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":"    public AmountConverter(String currency, double amount, String defaultCurrency) {"},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":"        this.currency \u003d currency;"},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"        this.amount \u003d amount;"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"        this.defaultCurrency \u003d defaultCurrency;"},{"lineNumber":19,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":21,"author":{"gitId":"killingbear999"},"content":"    /** It is to update the amount after converting to the default currency. */"},{"lineNumber":22,"author":{"gitId":"killingbear999"},"content":"    public double updateAmount() {"},{"lineNumber":23,"author":{"gitId":"killingbear999"},"content":"        if (currency.equals(\"USD\") \u0026\u0026 defaultCurrency.equals(\"SGD\")) {"},{"lineNumber":24,"author":{"gitId":"killingbear999"},"content":"            amount \u003d amount * Double.parseDouble(exchangeRates[1][1]);"},{"lineNumber":25,"author":{"gitId":"killingbear999"},"content":"            DecimalFormatter decimalFormatter \u003d new DecimalFormatter();"},{"lineNumber":26,"author":{"gitId":"killingbear999"},"content":"            amount \u003d decimalFormatter.convert(amount);"},{"lineNumber":27,"author":{"gitId":"killingbear999"},"content":"        } else if (currency.equals(\"CNY\") \u0026\u0026 defaultCurrency.equals(\"SGD\")) {"},{"lineNumber":28,"author":{"gitId":"killingbear999"},"content":"            amount \u003d amount * Double.parseDouble(exchangeRates[1][3]);"},{"lineNumber":29,"author":{"gitId":"killingbear999"},"content":"            DecimalFormatter decimalFormatter \u003d new DecimalFormatter();"},{"lineNumber":30,"author":{"gitId":"killingbear999"},"content":"            amount \u003d decimalFormatter.convert(amount);"},{"lineNumber":31,"author":{"gitId":"killingbear999"},"content":"        } else if (currency.equals(\"SGD\") \u0026\u0026 defaultCurrency.equals(\"USD\")) {"},{"lineNumber":32,"author":{"gitId":"killingbear999"},"content":"            amount \u003d amount * Double.parseDouble(exchangeRates[1][0]);"},{"lineNumber":33,"author":{"gitId":"killingbear999"},"content":"            DecimalFormatter decimalFormatter \u003d new DecimalFormatter();"},{"lineNumber":34,"author":{"gitId":"killingbear999"},"content":"            amount \u003d decimalFormatter.convert(amount);"},{"lineNumber":35,"author":{"gitId":"killingbear999"},"content":"        } else if (currency.equals(\"SGD\") \u0026\u0026 defaultCurrency.equals(\"CNY\")) {"},{"lineNumber":36,"author":{"gitId":"killingbear999"},"content":"            amount \u003d amount * Double.parseDouble(exchangeRates[1][2]);"},{"lineNumber":37,"author":{"gitId":"killingbear999"},"content":"            DecimalFormatter decimalFormatter \u003d new DecimalFormatter();"},{"lineNumber":38,"author":{"gitId":"killingbear999"},"content":"            amount \u003d decimalFormatter.convert(amount);"},{"lineNumber":39,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"killingbear999"},"content":"        return amount;"},{"lineNumber":41,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":43,"author":{"gitId":"killingbear999"},"content":"    /** It is to update the symbol of currency to the default currency. */"},{"lineNumber":44,"author":{"gitId":"killingbear999"},"content":"    public String updateCurrency() {"},{"lineNumber":45,"author":{"gitId":"killingbear999"},"content":"        currency \u003d defaultCurrency;"},{"lineNumber":46,"author":{"gitId":"killingbear999"},"content":"        return currency;"},{"lineNumber":47,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":48}},{"path":"src/main/java/seedu/duke/utilities/DateFormatter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.utilities;"},{"lineNumber":2,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":3,"author":{"gitId":"Wu-Haitao"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Wu-Haitao"},"content":"import java.util.HashMap;"},{"lineNumber":5,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":6,"author":{"gitId":"pinfang"},"content":"//@@author pinfang"},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":"public class DateFormatter {"},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":"    public String currentDate() {"},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":"        LocalDate date \u003d LocalDate.now();"},{"lineNumber":10,"author":{"gitId":"pinfang"},"content":"        return date.toString();"},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":13,"author":{"gitId":"pinfang"},"content":"    public String getCurrentMonth() {"},{"lineNumber":14,"author":{"gitId":"pinfang"},"content":"        return currentDate().substring(5, 7);"},{"lineNumber":15,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":17,"author":{"gitId":"pinfang"},"content":"    public String getCurrentYear() {"},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"        return currentDate().substring(0, 4);"},{"lineNumber":19,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":21,"author":{"gitId":"pinfang"},"content":"    public String changeMonthFormat(String month) {"},{"lineNumber":22,"author":{"gitId":"pinfang"},"content":"        HashMap\u003cString, String\u003e months \u003d new HashMap\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"pinfang"},"content":"        months.put(\"Jan\", \"01\");"},{"lineNumber":24,"author":{"gitId":"pinfang"},"content":"        months.put(\"Feb\", \"02\");"},{"lineNumber":25,"author":{"gitId":"pinfang"},"content":"        months.put(\"Mar\", \"03\");"},{"lineNumber":26,"author":{"gitId":"pinfang"},"content":"        months.put(\"Apr\", \"04\");"},{"lineNumber":27,"author":{"gitId":"pinfang"},"content":"        months.put(\"May\", \"05\");"},{"lineNumber":28,"author":{"gitId":"pinfang"},"content":"        months.put(\"Jun\", \"06\");"},{"lineNumber":29,"author":{"gitId":"pinfang"},"content":"        months.put(\"Jul\", \"07\");"},{"lineNumber":30,"author":{"gitId":"pinfang"},"content":"        months.put(\"Aug\", \"08\");"},{"lineNumber":31,"author":{"gitId":"pinfang"},"content":"        months.put(\"Sep\", \"09\");"},{"lineNumber":32,"author":{"gitId":"pinfang"},"content":"        months.put(\"Oct\", \"10\");"},{"lineNumber":33,"author":{"gitId":"pinfang"},"content":"        months.put(\"Nov\", \"11\");"},{"lineNumber":34,"author":{"gitId":"pinfang"},"content":"        months.put(\"Dec\", \"12\");"},{"lineNumber":35,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":36,"author":{"gitId":"pinfang"},"content":"        if (months.containsKey(month)) {"},{"lineNumber":37,"author":{"gitId":"pinfang"},"content":"            return months.get(month);"},{"lineNumber":38,"author":{"gitId":"pinfang"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"pinfang"},"content":"            return null;"},{"lineNumber":40,"author":{"gitId":"pinfang"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"pinfang"},"content":"}"}],"authorContributionMap":{"Wu-Haitao":4,"xieyaoyue":1,"pinfang":37}},{"path":"src/main/java/seedu/duke/utilities/DateTimeFormatter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.utilities;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"import java.text.DateFormat;"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":"import java.text.ParseException;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"import java.util.Date;"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"/** It is to check whether the date input is in the correct format. */"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"public class DateTimeFormatter {"},{"lineNumber":11,"author":{"gitId":"killingbear999"},"content":"    private String dateFormat;"},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":"    public DateTimeFormatter(String dateFormat) {"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"        this.dateFormat \u003d dateFormat;"},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"    /** It is to check whether the date input is in the correct format and compare with the current date. */"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"    public boolean isValid(String dateStr) {"},{"lineNumber":19,"author":{"gitId":"killingbear999"},"content":"        if (dateStr.length() \u003c 10) {"},{"lineNumber":20,"author":{"gitId":"killingbear999"},"content":"            return false;"},{"lineNumber":21,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"killingbear999"},"content":"        Date date \u003d new Date();"},{"lineNumber":23,"author":{"gitId":"killingbear999"},"content":"        DateFormat sdf \u003d new SimpleDateFormat(this.dateFormat);"},{"lineNumber":24,"author":{"gitId":"killingbear999"},"content":"        sdf.setLenient(false);"},{"lineNumber":25,"author":{"gitId":"killingbear999"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"},{"lineNumber":26,"author":{"gitId":"killingbear999"},"content":"        String currentDate \u003d formatter.format(date);"},{"lineNumber":27,"author":{"gitId":"killingbear999"},"content":"        if (dateStr.compareTo(currentDate) \u003c 0) {"},{"lineNumber":28,"author":{"gitId":"killingbear999"},"content":"            return false;"},{"lineNumber":29,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"killingbear999"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"killingbear999"},"content":"            sdf.parse(dateStr);"},{"lineNumber":32,"author":{"gitId":"killingbear999"},"content":"        } catch (ParseException e) {"},{"lineNumber":33,"author":{"gitId":"killingbear999"},"content":"            return false;"},{"lineNumber":34,"author":{"gitId":"killingbear999"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"killingbear999"},"content":"        "},{"lineNumber":36,"author":{"gitId":"killingbear999"},"content":"        return true;"},{"lineNumber":37,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":1,"killingbear999":37}},{"path":"src/main/java/seedu/duke/utilities/DecimalFormatter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"killingbear999"},"content":"package seedu.duke.utilities;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"import java.text.DecimalFormat;"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"/** It is to convert the amount to 4 dp for storage. */"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"public class DecimalFormatter {"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"    public DecimalFormatter() {"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":"    /** It is to convert the amount to 4 dp for storage. */"},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":"    public double convert(double amount) {"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"0.0000\");"},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":"        amount \u003d Double.parseDouble(df.format(amount));"},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":"        return amount;"},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":18}},{"path":"src/main/java/seedu/duke/utilities/FileExplorer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Wu-Haitao"},"content":"package seedu.duke.utilities;"},{"lineNumber":2,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":3,"author":{"gitId":"Wu-Haitao"},"content":"import java.awt.Desktop;"},{"lineNumber":4,"author":{"gitId":"Wu-Haitao"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"Wu-Haitao"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":7,"author":{"gitId":"Wu-Haitao"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Wu-Haitao"},"content":" * This class helps to open a local file."},{"lineNumber":9,"author":{"gitId":"Wu-Haitao"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Wu-Haitao"},"content":"//@@author Wu-Haitao"},{"lineNumber":11,"author":{"gitId":"Wu-Haitao"},"content":"public class FileExplorer {"},{"lineNumber":12,"author":{"gitId":"Wu-Haitao"},"content":"    String filePath;"},{"lineNumber":13,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":14,"author":{"gitId":"Wu-Haitao"},"content":"    public FileExplorer(String filePath) {"},{"lineNumber":15,"author":{"gitId":"Wu-Haitao"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":16,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":18,"author":{"gitId":"Wu-Haitao"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Wu-Haitao"},"content":"     * Opens the file according to the given file path."},{"lineNumber":20,"author":{"gitId":"Wu-Haitao"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Wu-Haitao"},"content":"    public void openFile() throws IOException {"},{"lineNumber":22,"author":{"gitId":"Wu-Haitao"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":23,"author":{"gitId":"Wu-Haitao"},"content":"        Desktop.getDesktop().open(file);"},{"lineNumber":24,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Wu-Haitao"},"content":"}"}],"authorContributionMap":{"Wu-Haitao":25}},{"path":"src/main/java/seedu/duke/utilities/SpendingListCategoriser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.utilities;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.SpendingList;"},{"lineNumber":4,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"/** It is to categorise the spending list. */"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"public class SpendingListCategoriser {"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"    public SpendingListCategoriser() {"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":"    public void execute(SpendingList spendingList) {"},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":"        spendingList.categoriseSpendingList();"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"killingbear999":13,"xieyaoyue":3}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"class DukeTest {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"k-walter":2,"-":10}},{"path":"src/test/java/seedu/duke/ItemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pinfang"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":3,"author":{"gitId":"pinfang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.Item;"},{"lineNumber":5,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":6,"author":{"gitId":"pinfang"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":10,"author":{"gitId":"pinfang"},"content":"//@@author pinfang"},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":"public class ItemTest {"},{"lineNumber":12,"author":{"gitId":"pinfang"},"content":"    private LocalDate date \u003d LocalDate.now();"},{"lineNumber":13,"author":{"gitId":"pinfang"},"content":"    private Item rice \u003d new Item(\"rice\", \"SGD\", 2);"},{"lineNumber":14,"author":{"gitId":"pinfang"},"content":"    private Item food \u003d new Item(\"food\", \"SGD\", 2, \"Food\");"},{"lineNumber":15,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":16,"author":{"gitId":"pinfang"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"pinfang"},"content":"    public void testStringConversion() {"},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"        String expectedString \u003d date.toString() + \" [Others] rice SGD 2.00\";"},{"lineNumber":19,"author":{"gitId":"pinfang"},"content":"        assertEquals(expectedString, rice.toString());"},{"lineNumber":20,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":22,"author":{"gitId":"pinfang"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"pinfang"},"content":"    public void editAmount() {"},{"lineNumber":24,"author":{"gitId":"pinfang"},"content":"        String expectedString \u003d date.toString() + \" [Others] rice SGD 5.00\";"},{"lineNumber":25,"author":{"gitId":"pinfang"},"content":"        rice.editAmount(5);"},{"lineNumber":26,"author":{"gitId":"pinfang"},"content":"        assertEquals(expectedString, rice.toString());"},{"lineNumber":27,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":29,"author":{"gitId":"pinfang"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"pinfang"},"content":"    public void editDescription() {"},{"lineNumber":31,"author":{"gitId":"pinfang"},"content":"        String expectedString \u003d date.toString() + \" [Others] chicken rice SGD 2.00\";"},{"lineNumber":32,"author":{"gitId":"pinfang"},"content":"        rice.editDescription(\"chicken rice\");"},{"lineNumber":33,"author":{"gitId":"pinfang"},"content":"        assertEquals(expectedString, rice.toString());"},{"lineNumber":34,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":36,"author":{"gitId":"pinfang"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"pinfang"},"content":"    public void editCategory() {"},{"lineNumber":38,"author":{"gitId":"pinfang"},"content":"        String expectedString \u003d date.toString() + \" [Food] rice SGD 2.00\";"},{"lineNumber":39,"author":{"gitId":"pinfang"},"content":"        rice.editCategory(\"Food\");"},{"lineNumber":40,"author":{"gitId":"pinfang"},"content":"        assertEquals(expectedString, rice.toString());"},{"lineNumber":41,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":43,"author":{"gitId":"pinfang"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"pinfang"},"content":"    public void editSymbol() {"},{"lineNumber":45,"author":{"gitId":"pinfang"},"content":"        String expectedString \u003d date.toString() + \" [Others] rice USD 2.00\";"},{"lineNumber":46,"author":{"gitId":"pinfang"},"content":"        rice.editSymbol(\"USD\");"},{"lineNumber":47,"author":{"gitId":"pinfang"},"content":"        assertEquals(expectedString, rice.toString());"},{"lineNumber":48,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":50,"author":{"gitId":"pinfang"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"pinfang"},"content":"    public void getAmount() {"},{"lineNumber":52,"author":{"gitId":"pinfang"},"content":"        Double expectedAmount \u003d 2.0000;"},{"lineNumber":53,"author":{"gitId":"pinfang"},"content":"        assertEquals(expectedAmount, rice.getAmount());"},{"lineNumber":54,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":56,"author":{"gitId":"pinfang"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"pinfang"},"content":"    public void getDescription() {"},{"lineNumber":58,"author":{"gitId":"pinfang"},"content":"        String expectedDescription \u003d \"rice\";"},{"lineNumber":59,"author":{"gitId":"pinfang"},"content":"        assertEquals(expectedDescription, rice.getDescription());"},{"lineNumber":60,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":62,"author":{"gitId":"pinfang"},"content":"    @Test"},{"lineNumber":63,"author":{"gitId":"pinfang"},"content":"    public void getSymbol() {"},{"lineNumber":64,"author":{"gitId":"pinfang"},"content":"        String expectedSymbol \u003d \"SGD\";"},{"lineNumber":65,"author":{"gitId":"pinfang"},"content":"        assertEquals(expectedSymbol, rice.getSymbol());"},{"lineNumber":66,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":68,"author":{"gitId":"pinfang"},"content":"    @Test"},{"lineNumber":69,"author":{"gitId":"pinfang"},"content":"    public void getDate() {"},{"lineNumber":70,"author":{"gitId":"pinfang"},"content":"        String expectedString \u003d date.toString();"},{"lineNumber":71,"author":{"gitId":"pinfang"},"content":"        assertEquals(expectedString, rice.getDate());"},{"lineNumber":72,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":74,"author":{"gitId":"pinfang"},"content":"    @Test"},{"lineNumber":75,"author":{"gitId":"pinfang"},"content":"    public void getCategory() {"},{"lineNumber":76,"author":{"gitId":"pinfang"},"content":"        String expectedString \u003d \"Food\";"},{"lineNumber":77,"author":{"gitId":"pinfang"},"content":"        assertEquals(expectedString, food.getCategory());"},{"lineNumber":78,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"pinfang"},"content":"}"}],"authorContributionMap":{"xieyaoyue":1,"pinfang":78}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Wu-Haitao"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.MissingOptionException;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import org.apache.commons.cli.ParseException;"},{"lineNumber":5,"author":{"gitId":"Wu-Haitao"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Wu-Haitao"},"content":"import seedu.duke.command.AddCommand;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.ClearRepaymentListCommand;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.Command;"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.ConvertCommand;"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.DrawCommand;"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.EditCommand;"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.ExitCommand;"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.ExportCommand;"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.HelpCommand;"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.MultipleCommand;"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.PurgeDataCommand;"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.RepayCommand;"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.RepaymentListCommand;"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.SetBudgetCommand;"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.SpendingListCommand;"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"import seedu.duke.command.SummaryCommand;"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidCommandException;"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidMonthException;"},{"lineNumber":24,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidNumberException;"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidYearException;"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"import seedu.duke.parser.Parser;"},{"lineNumber":27,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"import java.lang.reflect.InvocationTargetException;"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":35,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":36,"author":{"gitId":"Wu-Haitao"},"content":"class ParserTest {"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"    static class Rule\u003cT extends Throwable\u003e {"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"        final String commandString;"},{"lineNumber":39,"author":{"gitId":"k-walter"},"content":"        final Class\u003cT\u003e subclass;"},{"lineNumber":40,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":41,"author":{"gitId":"k-walter"},"content":"        Rule(String command, Class\u003cT\u003e subclass) {"},{"lineNumber":42,"author":{"gitId":"k-walter"},"content":"            this.commandString \u003d command;"},{"lineNumber":43,"author":{"gitId":"k-walter"},"content":"            this.subclass \u003d subclass;"},{"lineNumber":44,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":47,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":48,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"k-walter"},"content":"    void allParserReturnClass() throws Exception {"},{"lineNumber":50,"author":{"gitId":"k-walter"},"content":"        Rule[] rules \u003d new Rule[]{"},{"lineNumber":51,"author":{"gitId":"k-walter"},"content":"            new Rule(\"add -c Food -d Item 0 -s SGD 114.514\", AddCommand.class),"},{"lineNumber":52,"author":{"gitId":"k-walter"},"content":"            new Rule(\"add -d Chicken Rice 0 -s SGD 114.514 \", AddCommand.class),"},{"lineNumber":53,"author":{"gitId":"k-walter"},"content":"            new Rule(\"edit 100 -s SGD 1.23 --description Chicken Rice -c Food\", EditCommand.class),"},{"lineNumber":54,"author":{"gitId":"k-walter"},"content":"            new Rule(\"edit 100 -s SGD 1.23 -c Food Stuff\", EditCommand.class),"},{"lineNumber":55,"author":{"gitId":"k-walter"},"content":"            new Rule(\"clear --spending 234\", MultipleCommand.class),"},{"lineNumber":56,"author":{"gitId":"k-walter"},"content":"            new Rule(\"clear -r 1 -b --spending 234\", MultipleCommand.class),"},{"lineNumber":57,"author":{"gitId":"k-walter"},"content":"            new Rule(\"clear -r 420\", MultipleCommand.class),"},{"lineNumber":58,"author":{"gitId":"k-walter"},"content":"            new Rule(\"convert -s SGD --target CNY\", ConvertCommand.class),"},{"lineNumber":59,"author":{"gitId":"k-walter"},"content":"            new Rule(\"draw \", DrawCommand.class),"},{"lineNumber":60,"author":{"gitId":"k-walter"},"content":"            new Rule(\"draw 2020\", DrawCommand.class),"},{"lineNumber":61,"author":{"gitId":"k-walter"},"content":"            new Rule(\"export ./data\", ExportCommand.class),"},{"lineNumber":62,"author":{"gitId":"k-walter"},"content":"            new Rule(\"logout\", ExitCommand.class),"},{"lineNumber":63,"author":{"gitId":"k-walter"},"content":"            new Rule(\"purge data\", PurgeDataCommand.class),"},{"lineNumber":64,"author":{"gitId":"k-walter"},"content":"            new Rule(\"repay -s CAD 3.14 -t 2020-12-02 --description John\", RepayCommand.class),"},{"lineNumber":65,"author":{"gitId":"k-walter"},"content":"            new Rule(\"repayment list\", RepaymentListCommand.class),"},{"lineNumber":66,"author":{"gitId":"k-walter"},"content":"            new Rule(\"summary 2020 Jul\", SummaryCommand.class),"},{"lineNumber":67,"author":{"gitId":"k-walter"},"content":"            new Rule(\"summary --all\", SummaryCommand.class),"},{"lineNumber":68,"author":{"gitId":"k-walter"},"content":"            new Rule(\"spending list\", SpendingListCommand.class),"},{"lineNumber":69,"author":{"gitId":"k-walter"},"content":"            new Rule(\"spending list 2020\", SpendingListCommand.class),"},{"lineNumber":70,"author":{"gitId":"k-walter"},"content":"            new Rule(\"set --spending SGD 123.45\", SetBudgetCommand.class),"},{"lineNumber":71,"author":{"gitId":"k-walter"},"content":"            new Rule(\"help\", HelpCommand.class)"},{"lineNumber":72,"author":{"gitId":"k-walter"},"content":"        };"},{"lineNumber":73,"author":{"gitId":"k-walter"},"content":"        for (Rule r : rules) {"},{"lineNumber":74,"author":{"gitId":"k-walter"},"content":"            Command c;"},{"lineNumber":75,"author":{"gitId":"k-walter"},"content":"            try {"},{"lineNumber":76,"author":{"gitId":"k-walter"},"content":"                c \u003d Parser.parseCommand(r.commandString);"},{"lineNumber":77,"author":{"gitId":"k-walter"},"content":"            } catch (Exception e) {"},{"lineNumber":78,"author":{"gitId":"k-walter"},"content":"                throw new Exception(\"Command: \" + r.commandString, e);"},{"lineNumber":79,"author":{"gitId":"k-walter"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"k-walter"},"content":"            assertTrue(r.subclass.isInstance(c), String.format(\"Expected %s, got %s\", r.subclass, c.getClass()));"},{"lineNumber":81,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":84,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":85,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":86,"author":{"gitId":"k-walter"},"content":"    void exactNumberOfArgs() {"},{"lineNumber":87,"author":{"gitId":"k-walter"},"content":"        Rule[] invalidCommands \u003d new Rule[]{"},{"lineNumber":88,"author":{"gitId":"k-walter"},"content":"            new Rule(\"add extra -c Food -d Item 0 -s SGD 114.514\", InvalidCommandException.class),"},{"lineNumber":89,"author":{"gitId":"k-walter"},"content":"            new Rule(\"clear -b extra -s 1 -r 2\", InvalidCommandException.class),"},{"lineNumber":90,"author":{"gitId":"k-walter"},"content":"            new Rule(\"clear -s 1 2 -r 2\", InvalidCommandException.class),"},{"lineNumber":91,"author":{"gitId":"k-walter"},"content":"            new Rule(\"convert -s SGD extra -t USD\", InvalidCommandException.class),"},{"lineNumber":92,"author":{"gitId":"k-walter"},"content":"            new Rule(\"edit 100 200 -s SGD 1.23 --description Chicken Rice -c Food\", InvalidCommandException.class),"},{"lineNumber":93,"author":{"gitId":"k-walter"},"content":"            new Rule(\"draw 2020 Jun 21\", InvalidCommandException.class),"},{"lineNumber":94,"author":{"gitId":"k-walter"},"content":"            new Rule(\"draw incorrectText\", InvalidYearException.class),"},{"lineNumber":95,"author":{"gitId":"k-walter"},"content":"            new Rule(\"draw --all extra\", InvalidCommandException.class),"},{"lineNumber":96,"author":{"gitId":"k-walter"},"content":"            new Rule(\"logout extra\", InvalidCommandException.class),"},{"lineNumber":97,"author":{"gitId":"k-walter"},"content":"            new Rule(\"purge data text\", InvalidCommandException.class),"},{"lineNumber":98,"author":{"gitId":"k-walter"},"content":"            new Rule(\"purge\", InvalidCommandException.class),"},{"lineNumber":99,"author":{"gitId":"k-walter"},"content":"            new Rule(\"purge incorrectText\", InvalidCommandException.class),"},{"lineNumber":100,"author":{"gitId":"k-walter"},"content":"            new Rule(\"purge data extra\", InvalidCommandException.class),"},{"lineNumber":101,"author":{"gitId":"k-walter"},"content":"            new Rule(\"repay -s CAD 3.14 -t 2020-12-02 0100 --description John\", InvalidCommandException.class),"},{"lineNumber":102,"author":{"gitId":"k-walter"},"content":"            new Rule(\"repayment\", InvalidCommandException.class),"},{"lineNumber":103,"author":{"gitId":"k-walter"},"content":"            new Rule(\"repayment incorrectText\", InvalidCommandException.class),"},{"lineNumber":104,"author":{"gitId":"k-walter"},"content":"            new Rule(\"repayment list extra\", InvalidCommandException.class),"},{"lineNumber":105,"author":{"gitId":"k-walter"},"content":"            new Rule(\"summary incorrectText\", InvalidYearException.class),"},{"lineNumber":106,"author":{"gitId":"k-walter"},"content":"            new Rule(\"summary 2020 Jul 21\", InvalidCommandException.class),"},{"lineNumber":107,"author":{"gitId":"k-walter"},"content":"            new Rule(\"summary --all extra\", InvalidCommandException.class),"},{"lineNumber":108,"author":{"gitId":"k-walter"},"content":"            new Rule(\"spending\", InvalidCommandException.class),"},{"lineNumber":109,"author":{"gitId":"k-walter"},"content":"            new Rule(\"spending incorrectText\", InvalidCommandException.class),"},{"lineNumber":110,"author":{"gitId":"k-walter"},"content":"            new Rule(\"spending list extra\", InvalidYearException.class),"},{"lineNumber":111,"author":{"gitId":"k-walter"},"content":"            new Rule(\"spending list 2020 Jun 21\", InvalidCommandException.class),"},{"lineNumber":112,"author":{"gitId":"k-walter"},"content":"            new Rule(\"spending list --all extra\", InvalidCommandException.class),"},{"lineNumber":113,"author":{"gitId":"k-walter"},"content":"            new Rule(\"set --spending SGD 123.45 0\", InvalidCommandException.class),"},{"lineNumber":114,"author":{"gitId":"k-walter"},"content":"            new Rule(\"set 0 -s SGD 1.23\", InvalidCommandException.class),"},{"lineNumber":115,"author":{"gitId":"k-walter"},"content":"            new Rule(\"help me\", InvalidCommandException.class),"},{"lineNumber":116,"author":{"gitId":"k-walter"},"content":"        };"},{"lineNumber":117,"author":{"gitId":"k-walter"},"content":"        for (Rule r : invalidCommands) {"},{"lineNumber":118,"author":{"gitId":"k-walter"},"content":"            assertThrows(r.subclass, () -\u003e Parser.parseCommand(r.commandString), r.commandString);"},{"lineNumber":119,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":122,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":123,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":124,"author":{"gitId":"k-walter"},"content":"    void addWithoutCategory() throws ParseException, InvalidCommandException, NoSuchMethodException,"},{"lineNumber":125,"author":{"gitId":"xieyaoyue"},"content":"        InstantiationException, IllegalAccessException, InvocationTargetException,"},{"lineNumber":126,"author":{"gitId":"xieyaoyue"},"content":"        java.text.ParseException, InvalidNumberException, InvalidYearException,"},{"lineNumber":127,"author":{"gitId":"k-walter"},"content":"        InvalidMonthException {"},{"lineNumber":128,"author":{"gitId":"k-walter"},"content":"        AddCommand c \u003d (AddCommand) Parser.parseCommand(\"add -d Item 0 -s SGD 114.514 \");"},{"lineNumber":129,"author":{"gitId":"k-walter"},"content":"        assertEquals(c.amount, 114.514);"},{"lineNumber":130,"author":{"gitId":"k-walter"},"content":"        assertEquals(c.description, \"Item 0\");"},{"lineNumber":131,"author":{"gitId":"k-walter"},"content":"        assertNull(c.category);"},{"lineNumber":132,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":134,"author":{"gitId":"Wu-Haitao"},"content":"    @Test"},{"lineNumber":135,"author":{"gitId":"k-walter"},"content":"    void addShuffledArg() throws ParseException, InvalidCommandException, NoSuchMethodException,"},{"lineNumber":136,"author":{"gitId":"xieyaoyue"},"content":"        InstantiationException, IllegalAccessException, InvocationTargetException,"},{"lineNumber":137,"author":{"gitId":"xieyaoyue"},"content":"        java.text.ParseException, InvalidNumberException, InvalidYearException,"},{"lineNumber":138,"author":{"gitId":"k-walter"},"content":"        InvalidMonthException {"},{"lineNumber":139,"author":{"gitId":"k-walter"},"content":"        AddCommand c \u003d (AddCommand) Parser.parseCommand(\"add -d Item 0 -s SGD 114.514 -c Food \");"},{"lineNumber":140,"author":{"gitId":"k-walter"},"content":"        assertEquals(c.amount, 114.514);"},{"lineNumber":141,"author":{"gitId":"k-walter"},"content":"        assertEquals(c.description, \"Item 0\");"},{"lineNumber":142,"author":{"gitId":"k-walter"},"content":"        assertEquals(c.category, \"Food\");"},{"lineNumber":143,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":145,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":146,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":147,"author":{"gitId":"k-walter"},"content":"    void editOneParam() throws ParseException, InvalidCommandException, NoSuchMethodException, InstantiationException,"},{"lineNumber":148,"author":{"gitId":"xieyaoyue"},"content":"        IllegalAccessException, InvocationTargetException, java.text.ParseException,"},{"lineNumber":149,"author":{"gitId":"k-walter"},"content":"        InvalidNumberException, InvalidYearException, InvalidMonthException {"},{"lineNumber":150,"author":{"gitId":"k-walter"},"content":"        EditCommand c \u003d (EditCommand) Parser.parseCommand(\"edit 987 --description fried rice\");"},{"lineNumber":151,"author":{"gitId":"killingbear999"},"content":"        assertEquals(c.index, 986);"},{"lineNumber":152,"author":{"gitId":"k-walter"},"content":"        assertEquals(c.description, \"fried rice\");"},{"lineNumber":153,"author":{"gitId":"k-walter"},"content":"        assertNull(c.amount);"},{"lineNumber":154,"author":{"gitId":"xieyaoyue"},"content":"        assertNull(c.currency);"},{"lineNumber":155,"author":{"gitId":"k-walter"},"content":"        assertNull(c.category);"},{"lineNumber":156,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":158,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":159,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":160,"author":{"gitId":"xieyaoyue"},"content":"    void clearIndex() throws ParseException, InvalidCommandException, NoSuchMethodException,"},{"lineNumber":161,"author":{"gitId":"xieyaoyue"},"content":"        InstantiationException, IllegalAccessException, java.text.ParseException,"},{"lineNumber":162,"author":{"gitId":"xieyaoyue"},"content":"        InvocationTargetException, InvalidNumberException, InvalidYearException,"},{"lineNumber":163,"author":{"gitId":"k-walter"},"content":"        InvalidMonthException {"},{"lineNumber":164,"author":{"gitId":"k-walter"},"content":"        MultipleCommand c \u003d (MultipleCommand) Parser.parseCommand(\"clear --repayment 23\");"},{"lineNumber":165,"author":{"gitId":"k-walter"},"content":"        ClearRepaymentListCommand cl \u003d (ClearRepaymentListCommand) c.commands.get(0);"},{"lineNumber":166,"author":{"gitId":"k-walter"},"content":"        assertFalse(cl.isClearAll);"},{"lineNumber":167,"author":{"gitId":"k-walter"},"content":"        assertEquals(cl.clearIndex, 23);"},{"lineNumber":168,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":170,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":171,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":172,"author":{"gitId":"k-walter"},"content":"    void clearMultipleLists() throws NoSuchMethodException, ParseException, InvalidCommandException,"},{"lineNumber":173,"author":{"gitId":"xieyaoyue"},"content":"        InstantiationException, java.text.ParseException, IllegalAccessException,"},{"lineNumber":174,"author":{"gitId":"xieyaoyue"},"content":"        InvocationTargetException, InvalidNumberException, InvalidYearException,"},{"lineNumber":175,"author":{"gitId":"k-walter"},"content":"        InvalidMonthException {"},{"lineNumber":176,"author":{"gitId":"k-walter"},"content":"        MultipleCommand c \u003d (MultipleCommand) Parser.parseCommand(\"clear --spending 234\");"},{"lineNumber":177,"author":{"gitId":"k-walter"},"content":"        assertEquals(1, c.commands.size());"},{"lineNumber":178,"author":{"gitId":"k-walter"},"content":"        c \u003d (MultipleCommand) Parser.parseCommand(\"clear -r 1 --spending 234\");"},{"lineNumber":179,"author":{"gitId":"k-walter"},"content":"        assertEquals(2, c.commands.size());"},{"lineNumber":180,"author":{"gitId":"k-walter"},"content":"        c \u003d (MultipleCommand) Parser.parseCommand(\"clear -r 1 -b --spending 234\");"},{"lineNumber":181,"author":{"gitId":"k-walter"},"content":"        assertEquals(3, c.commands.size());"},{"lineNumber":182,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":184,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":185,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":186,"author":{"gitId":"k-walter"},"content":"    void convertMissingSource() {"},{"lineNumber":187,"author":{"gitId":"k-walter"},"content":"        assertThrows(MissingOptionException.class, () -\u003e Parser.parseCommand(\"convert --target USD\"));"},{"lineNumber":188,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"Wu-Haitao"},"content":"}"}],"authorContributionMap":{"Wu-Haitao":12,"k-walter":164,"killingbear999":1,"xieyaoyue":12}},{"path":"src/test/java/seedu/duke/SpendingListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.Item;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.SpendingList;"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"pinfang"},"content":"import java.util.Arrays;"},{"lineNumber":13,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"public class SpendingListTest {"},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"    public void addItem() throws IOException {"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"        SpendingList expectedList \u003d initSpendingList("},{"lineNumber":21,"author":{"gitId":"pinfang"},"content":"            new Item(\"buy book\", \"S$\", 10, \"\")"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"        SpendingList realList \u003d new SpendingList((Storage) null);"},{"lineNumber":25,"author":{"gitId":"pinfang"},"content":"        realList.addItem(\"buy book\", \"S$\", 10, \"\");"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"        assert realList.getListSize() \u003d\u003d 1 : \"item not added\";"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"        assertEqualList(expectedList, realList);"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"    public static void assertEqualList(ArrayList\u003cItem\u003e expectedList, ArrayList\u003cItem\u003e actualList, String message) {"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"        String expectedString \u003d Arrays.toString(expectedList.toArray());"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"        String realString \u003d Arrays.toString(actualList.toArray());"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"        assertEquals(expectedString, realString, message);"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"     * Converts list to string format, because double comparison fails."},{"lineNumber":39,"author":{"gitId":"k-walter"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"k-walter"},"content":"     * @param expectedList expected list of items"},{"lineNumber":41,"author":{"gitId":"k-walter"},"content":"     * @param actualList   actual list of items"},{"lineNumber":42,"author":{"gitId":"k-walter"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"k-walter"},"content":"    public static void assertEqualList(ArrayList\u003cItem\u003e expectedList, ArrayList\u003cItem\u003e actualList) {"},{"lineNumber":44,"author":{"gitId":"k-walter"},"content":"        assertEqualList(expectedList, actualList, null);"},{"lineNumber":45,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":47,"author":{"gitId":"k-walter"},"content":"    public static void assertEqualList(SpendingList expectedList, SpendingList actualList) {"},{"lineNumber":48,"author":{"gitId":"k-walter"},"content":"        assertEqualList(expectedList.getSpendingList(), actualList.getSpendingList());"},{"lineNumber":49,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":51,"author":{"gitId":"k-walter"},"content":"    public static ArrayList\u003cItem\u003e initList(Item... items) {"},{"lineNumber":52,"author":{"gitId":"k-walter"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(items));"},{"lineNumber":53,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":55,"author":{"gitId":"k-walter"},"content":"    public static SpendingList initSpendingList(Item... items) {"},{"lineNumber":56,"author":{"gitId":"k-walter"},"content":"        return new SpendingList(initList(items));"},{"lineNumber":57,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":59,"author":{"gitId":"pinfang"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"k-walter"},"content":"    public void deleteItem() throws IOException {"},{"lineNumber":61,"author":{"gitId":"k-walter"},"content":"        SpendingList expectedList \u003d initSpendingList("},{"lineNumber":62,"author":{"gitId":"pinfang"},"content":"            new Item(\"noodle\", \"S$\", 1.5, \"\"),"},{"lineNumber":63,"author":{"gitId":"pinfang"},"content":"            new Item(\"fish\", \"S$\", 10, \"\"),"},{"lineNumber":64,"author":{"gitId":"pinfang"},"content":"            new Item(\"books\", \"S$\", 8.9, \"\")"},{"lineNumber":65,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":66,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":67,"author":{"gitId":"k-walter"},"content":"        SpendingList realList \u003d initSpendingList("},{"lineNumber":68,"author":{"gitId":"pinfang"},"content":"            new Item(\"rice\", \"S$\", 2, \"\"),"},{"lineNumber":69,"author":{"gitId":"pinfang"},"content":"            new Item(\"noodle\", \"S$\", 1.5, \"\"),"},{"lineNumber":70,"author":{"gitId":"pinfang"},"content":"            new Item(\"fish\", \"S$\", 10, \"\"),"},{"lineNumber":71,"author":{"gitId":"pinfang"},"content":"            new Item(\"books\", \"S$\", 8.9, \"\")"},{"lineNumber":72,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":73,"author":{"gitId":"k-walter"},"content":"        realList.deleteItem(0);"},{"lineNumber":74,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":75,"author":{"gitId":"k-walter"},"content":"        assert realList.getListSize() \u003d\u003d 3 : \"item is not deleted\";"},{"lineNumber":76,"author":{"gitId":"k-walter"},"content":"        assertEqualList(expectedList, realList);"},{"lineNumber":77,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":79,"author":{"gitId":"xieyaoyue"},"content":"    @Test"},{"lineNumber":80,"author":{"gitId":"pinfang"},"content":"    public void getItem() {"},{"lineNumber":81,"author":{"gitId":"k-walter"},"content":"        SpendingList realList \u003d initSpendingList("},{"lineNumber":82,"author":{"gitId":"k-walter"},"content":"            new Item(\"buy book\", \"S$\", 10)"},{"lineNumber":83,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":84,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":85,"author":{"gitId":"k-walter"},"content":"        Item firstItem \u003d realList.getItem(0);"},{"lineNumber":86,"author":{"gitId":"pinfang"},"content":"        assertEquals(firstItem.getDescription(), \"buy book\");"},{"lineNumber":87,"author":{"gitId":"pinfang"},"content":"        assertEquals(firstItem.getSymbol(), \"S$\");"},{"lineNumber":88,"author":{"gitId":"pinfang"},"content":"        assertEquals(firstItem.getAmount(), 10);"},{"lineNumber":89,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":91,"author":{"gitId":"xieyaoyue"},"content":"    @Test"},{"lineNumber":92,"author":{"gitId":"k-walter"},"content":"    void getListSize() throws IOException {"},{"lineNumber":93,"author":{"gitId":"k-walter"},"content":"        SpendingList realList \u003d new SpendingList((Storage) null);"},{"lineNumber":94,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":95,"author":{"gitId":"pinfang"},"content":"        realList.addItem(\"buy book\", \"S$\", 10, \"\");"},{"lineNumber":96,"author":{"gitId":"k-walter"},"content":"        assertEquals(realList.getListSize(), 1);"},{"lineNumber":97,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":98,"author":{"gitId":"pinfang"},"content":"        realList.addItem(\"buy stationary\", \"S$\", 5, \"\");"},{"lineNumber":99,"author":{"gitId":"k-walter"},"content":"        assertEquals(realList.getListSize(), 2);"},{"lineNumber":100,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":101,"author":{"gitId":"k-walter"},"content":"        realList.deleteItem(0);"},{"lineNumber":102,"author":{"gitId":"k-walter"},"content":"        assertEquals(realList.getListSize(), 1);"},{"lineNumber":103,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":104,"author":{"gitId":"pinfang"},"content":"        realList.addItem(\"buy grocery\", \"S$\", 10, \"\");"},{"lineNumber":105,"author":{"gitId":"k-walter"},"content":"        assertEquals(realList.getListSize(), 2);"},{"lineNumber":106,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":108,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":109,"author":{"gitId":"k-walter"},"content":"    void getList() {"},{"lineNumber":110,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e expectedList \u003d initList("},{"lineNumber":111,"author":{"gitId":"pinfang"},"content":"            new Item(\"rice\", \"S$\", 2, \"\"),"},{"lineNumber":112,"author":{"gitId":"pinfang"},"content":"            new Item(\"noodle\", \"S$\", 1.5, \"\"),"},{"lineNumber":113,"author":{"gitId":"pinfang"},"content":"            new Item(\"fish\", \"S$\", 10, \"\"),"},{"lineNumber":114,"author":{"gitId":"pinfang"},"content":"            new Item(\"books\", \"S$\", 8.9, \"\")"},{"lineNumber":115,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":116,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":117,"author":{"gitId":"k-walter"},"content":"        SpendingList realSL \u003d new SpendingList(expectedList);"},{"lineNumber":118,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e realList \u003d realSL.getSpendingList();"},{"lineNumber":119,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":120,"author":{"gitId":"k-walter"},"content":"        assertEquals(expectedList, realList, \"List not same\");"},{"lineNumber":121,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":123,"author":{"gitId":"xieyaoyue"},"content":"    @Test"},{"lineNumber":124,"author":{"gitId":"k-walter"},"content":"    void clearAllItems() throws IOException {"},{"lineNumber":125,"author":{"gitId":"k-walter"},"content":"        final SpendingList expectedList \u003d new SpendingList((Storage) null);"},{"lineNumber":126,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":127,"author":{"gitId":"k-walter"},"content":"        SpendingList realList \u003d initSpendingList("},{"lineNumber":128,"author":{"gitId":"pinfang"},"content":"            new Item(\"buy book\", \"S$\", 10, \"\"),"},{"lineNumber":129,"author":{"gitId":"pinfang"},"content":"            new Item(\"buy stationary\", \"S$\", 5, \"\")"},{"lineNumber":130,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":131,"author":{"gitId":"k-walter"},"content":"        assertEquals(realList.getListSize(), 2, \"List not instantiated with 2 items\");"},{"lineNumber":132,"author":{"gitId":"k-walter"},"content":"        realList.clearAllItems();"},{"lineNumber":133,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":134,"author":{"gitId":"k-walter"},"content":"        assert realList.getListSize() \u003d\u003d 0 : \"List is not cleared\";"},{"lineNumber":135,"author":{"gitId":"k-walter"},"content":"        assertEqualList(expectedList, realList);"},{"lineNumber":136,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":138,"author":{"gitId":"killingbear999"},"content":"    /*@Test"},{"lineNumber":139,"author":{"gitId":"k-walter"},"content":"    void editItem() throws IOException {"},{"lineNumber":140,"author":{"gitId":"k-walter"},"content":"        SpendingList realList \u003d initSpendingList("},{"lineNumber":141,"author":{"gitId":"killingbear999"},"content":"                new Item(\"buy book\", \"S$\", 10, \"Education\")"},{"lineNumber":142,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":143,"author":{"gitId":"killingbear999"},"content":"        realList.editItem(0, 12);"},{"lineNumber":144,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":145,"author":{"gitId":"pinfang"},"content":"        assertEquals(realList.getItem(0).getAmount(), 12);"},{"lineNumber":146,"author":{"gitId":"killingbear999"},"content":"    }*/"},{"lineNumber":147,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":148,"author":{"gitId":"pinfang"},"content":"    @Test"},{"lineNumber":149,"author":{"gitId":"pinfang"},"content":"    public void getSpendingAmountTime() {"},{"lineNumber":150,"author":{"gitId":"pinfang"},"content":"        double expectedAmount \u003d 22.4;"},{"lineNumber":151,"author":{"gitId":"k-walter"},"content":"        String expectedYear \u003d Integer.toString(LocalDate.now().getYear());"},{"lineNumber":152,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":153,"author":{"gitId":"k-walter"},"content":"        SpendingList realList \u003d initSpendingList("},{"lineNumber":154,"author":{"gitId":"pinfang"},"content":"            new Item(\"rice\", \"S$\", 2, \"\"),"},{"lineNumber":155,"author":{"gitId":"pinfang"},"content":"            new Item(\"noodle\", \"S$\", 1.5, \"\"),"},{"lineNumber":156,"author":{"gitId":"pinfang"},"content":"            new Item(\"fish\", \"S$\", 10, \"\"),"},{"lineNumber":157,"author":{"gitId":"pinfang"},"content":"            new Item(\"books\", \"S$\", 8.9, \"\")"},{"lineNumber":158,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":159,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":160,"author":{"gitId":"pinfang"},"content":"        assertEquals(realList.getSpendingAmountTime(expectedYear), expectedAmount);"},{"lineNumber":161,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":163,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":164,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":165,"author":{"gitId":"k-walter"},"content":"    public void filterByCategory() {"},{"lineNumber":166,"author":{"gitId":"k-walter"},"content":"        SpendingList sl \u003d initSpendingList("},{"lineNumber":167,"author":{"gitId":"k-walter"},"content":"            new Item(\"rice\", \"SGD\", 2, \"Food\"),"},{"lineNumber":168,"author":{"gitId":"k-walter"},"content":"            new Item(\"pencil\", \"S$\", 1.5)"},{"lineNumber":169,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":170,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e expectedSl \u003d initList("},{"lineNumber":171,"author":{"gitId":"k-walter"},"content":"            new Item(\"rice\", \"SGD\", 2, \"Food\"),"},{"lineNumber":172,"author":{"gitId":"k-walter"},"content":"            new Item(\"pencil\", \"S$\", 1.5, \"Others\")"},{"lineNumber":173,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":174,"author":{"gitId":"k-walter"},"content":"        assertEqualList(expectedSl, sl.getSpendingList());"},{"lineNumber":175,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e expectedFood \u003d initList(new Item(\"rice\", \"SGD\", 2, \"Food\"));"},{"lineNumber":176,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e food \u003d sl.filterSpendingList(\"Food\", null);"},{"lineNumber":177,"author":{"gitId":"k-walter"},"content":"        assertEqualList(expectedFood, food);"},{"lineNumber":178,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e expectedOther \u003d initList(new Item(\"pencil\", \"S$\", 1.5, \"Others\"));"},{"lineNumber":179,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e other \u003d sl.filterSpendingList(\"Others\", null);"},{"lineNumber":180,"author":{"gitId":"k-walter"},"content":"        assertEqualList(expectedOther, other);"},{"lineNumber":181,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e expectedEmpty \u003d initList();"},{"lineNumber":182,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e empty \u003d sl.filterSpendingList(\"School\", null);"},{"lineNumber":183,"author":{"gitId":"k-walter"},"content":"        assertEqualList(expectedEmpty, empty);"},{"lineNumber":184,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":186,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":187,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":188,"author":{"gitId":"k-walter"},"content":"    public void filterByDate() {"},{"lineNumber":189,"author":{"gitId":"k-walter"},"content":"        SpendingList sl \u003d initSpendingList("},{"lineNumber":190,"author":{"gitId":"k-walter"},"content":"            new Item(\"rice\", \"SGD\", 2, \"Food\", \"2020-10-01\"),"},{"lineNumber":191,"author":{"gitId":"k-walter"},"content":"            new Item(\"chicken\", \"SGD\", 2, \"Food\", \"2020-11-01\"),"},{"lineNumber":192,"author":{"gitId":"k-walter"},"content":"            new Item(\"pencil\", \"S$\", 1.5, null, \"2020-10-29\"),"},{"lineNumber":193,"author":{"gitId":"k-walter"},"content":"            new Item(\"fish\", \"S$\", 10, null, \"2019-10-29\")"},{"lineNumber":194,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":195,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e filterAll \u003d initList("},{"lineNumber":196,"author":{"gitId":"k-walter"},"content":"            new Item(\"rice\", \"SGD\", 2, \"Food\", \"2020-10-01\"),"},{"lineNumber":197,"author":{"gitId":"k-walter"},"content":"            new Item(\"chicken\", \"SGD\", 2, \"Food\", \"2020-11-01\"),"},{"lineNumber":198,"author":{"gitId":"k-walter"},"content":"            new Item(\"pencil\", \"S$\", 1.5, null, \"2020-10-29\"),"},{"lineNumber":199,"author":{"gitId":"k-walter"},"content":"            new Item(\"fish\", \"S$\", 10, null, \"2019-10-29\")"},{"lineNumber":200,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":201,"author":{"gitId":"k-walter"},"content":"        assertEqualList(filterAll, sl.filterSpendingList(null, null), \"No filter\");"},{"lineNumber":202,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e filterYear \u003d initList("},{"lineNumber":203,"author":{"gitId":"k-walter"},"content":"            new Item(\"rice\", \"SGD\", 2, \"Food\", \"2020-10-01\"),"},{"lineNumber":204,"author":{"gitId":"k-walter"},"content":"            new Item(\"chicken\", \"SGD\", 2, \"Food\", \"2020-11-01\"),"},{"lineNumber":205,"author":{"gitId":"k-walter"},"content":"            new Item(\"pencil\", \"S$\", 1.5, null, \"2020-10-29\")"},{"lineNumber":206,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":207,"author":{"gitId":"k-walter"},"content":"        assertEqualList(filterYear, sl.filterSpendingList(null, \"2020\"), \"Filter 2020\");"},{"lineNumber":208,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e filterMonth \u003d initList("},{"lineNumber":209,"author":{"gitId":"k-walter"},"content":"            new Item(\"rice\", \"SGD\", 2, \"Food\", \"2020-10-01\"),"},{"lineNumber":210,"author":{"gitId":"k-walter"},"content":"            new Item(\"pencil\", \"S$\", 1.5, null, \"2020-10-29\")"},{"lineNumber":211,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":212,"author":{"gitId":"k-walter"},"content":"        assertEqualList(filterMonth, sl.filterSpendingList(null, \"2020-10\"), \"Filter 2020 Oct\");"},{"lineNumber":213,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":215,"author":{"gitId":"k-walter"},"content":"    //@author k-walter"},{"lineNumber":216,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":217,"author":{"gitId":"k-walter"},"content":"    public void filterByDateAndCategory() {"},{"lineNumber":218,"author":{"gitId":"k-walter"},"content":"        SpendingList sl \u003d initSpendingList("},{"lineNumber":219,"author":{"gitId":"k-walter"},"content":"            new Item(\"rice\", \"SGD\", 2, \"Food\", \"2020-10-01\"),"},{"lineNumber":220,"author":{"gitId":"k-walter"},"content":"            new Item(\"chicken\", \"SGD\", 2, \"Food\", \"2020-11-01\"),"},{"lineNumber":221,"author":{"gitId":"k-walter"},"content":"            new Item(\"pencil\", \"S$\", 1.5, null, \"2020-10-29\"),"},{"lineNumber":222,"author":{"gitId":"k-walter"},"content":"            new Item(\"fish\", \"S$\", 10, null, \"2019-10-29\")"},{"lineNumber":223,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":224,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e filterFood2020 \u003d initList("},{"lineNumber":225,"author":{"gitId":"k-walter"},"content":"            new Item(\"rice\", \"SGD\", 2, \"Food\", \"2020-10-01\"),"},{"lineNumber":226,"author":{"gitId":"k-walter"},"content":"            new Item(\"chicken\", \"SGD\", 2, \"Food\", \"2020-11-01\")"},{"lineNumber":227,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":228,"author":{"gitId":"k-walter"},"content":"        assertEqualList(filterFood2020, sl.filterSpendingList(\"Food\", \"2020\"), \"Filter food 2020\");"},{"lineNumber":229,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e filterFood2019 \u003d initList();"},{"lineNumber":230,"author":{"gitId":"k-walter"},"content":"        assertEqualList(filterFood2019, sl.filterSpendingList(\"Food\", \"2019\"), \"Filter food 2019\");"},{"lineNumber":231,"author":{"gitId":"k-walter"},"content":"        ArrayList\u003cItem\u003e filterOthers2019 \u003d initList("},{"lineNumber":232,"author":{"gitId":"k-walter"},"content":"            new Item(\"fish\", \"S$\", 10, null, \"2019-10-29\")"},{"lineNumber":233,"author":{"gitId":"k-walter"},"content":"        );"},{"lineNumber":234,"author":{"gitId":"k-walter"},"content":"        assertEqualList(filterOthers2019, sl.filterSpendingList(\"Others\", \"2019\"), \"Filter others 2019\");"},{"lineNumber":235,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":237,"author":{"gitId":"killingbear999"},"content":"    //@@author killingbear999"},{"lineNumber":238,"author":{"gitId":"killingbear999"},"content":"    @Test"},{"lineNumber":239,"author":{"gitId":"killingbear999"},"content":"    public void getCurrentAmountTest() {"},{"lineNumber":240,"author":{"gitId":"killingbear999"},"content":"        double expectedAmount \u003d 20.0;"},{"lineNumber":241,"author":{"gitId":"killingbear999"},"content":"        Data data \u003d new Data(null, null, null);"},{"lineNumber":242,"author":{"gitId":"killingbear999"},"content":"        SpendingList realList \u003d initSpendingList("},{"lineNumber":243,"author":{"gitId":"killingbear999"},"content":"            new Item(\"sushi\", \"S$\", 11.0, \"\"),"},{"lineNumber":244,"author":{"gitId":"killingbear999"},"content":"            new Item(\"bubble tea\", \"S$\", 4.0, \"\"),"},{"lineNumber":245,"author":{"gitId":"killingbear999"},"content":"            new Item(\"medicine\", \"S$\", 5.0, \"\")"},{"lineNumber":246,"author":{"gitId":"killingbear999"},"content":"        );"},{"lineNumber":247,"author":{"gitId":"killingbear999"},"content":"        assertEquals(realList.getCurrentAmount(data), expectedAmount);"},{"lineNumber":248,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":168,"killingbear999":18,"xieyaoyue":18,"pinfang":45}},{"path":"src/test/java/seedu/duke/StoragePathTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidStorageFileExtensionException;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidStorageFilePathException;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"class StoragePathTest {"},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"    static class Rule\u003cT extends Throwable\u003e {"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"        final String path;"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"        final Class\u003cT\u003e exception;"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"        final String description;"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"        Rule(String path, Class\u003cT\u003e exception, String description) {"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"            this.path \u003d path;"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":"            this.exception \u003d exception;"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"            this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"    static Rule[] rules \u003d new Rule[]{"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"        new Rule(\"       \", InvalidStorageFilePathException.class, \"Allowed blank file path/names\"),"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"        new Rule(\"json\", InvalidStorageFileExtensionException.class, \"Must specify file extension\"),"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"        new Rule(\"data/test.txt\", InvalidStorageFileExtensionException.class, \"Allowed non JSON files\"),"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"    };"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"    public void fullFileName() {"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"        for (Rule r : rules) {"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"            assertThrows(r.exception, () -\u003e {"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"                Storage s \u003d new Storage(r.path);"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"            }, r.description);"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":37,"xieyaoyue":1}},{"path":"src/test/java/seedu/duke/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"k-walter"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":3,"author":{"gitId":"k-walter"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Budget;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.SpendingList;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidStorageFileExtensionException;"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidStorageFilePathException;"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":12,"author":{"gitId":"k-walter"},"content":"import java.io.File;"},{"lineNumber":13,"author":{"gitId":"k-walter"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":14,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"k-walter"},"content":"import java.util.UUID;"},{"lineNumber":16,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":19,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"//@author k-walter"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"class StorageTest {"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"    private Storage storage;"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"    public void createFileAndPath() {"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"        String path \u003d storage.getFilePath();"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"        File f \u003d new File(path);"},{"lineNumber":28,"author":{"gitId":"k-walter"},"content":"        assertTrue(f.exists(), \"Did not create path or file\");"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"    public void saveAndLoad() throws IOException {"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"        SpendingList expectedList \u003d new SpendingList(storage);"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"        expectedList.addItem(\"noodle\", \"SGD\", 1.5, null);"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"        expectedList.addItem(\"fish\", \"USD\", 10, \"\");"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"        expectedList.addItem(\"books\", \"CNY\", 8.9, \"\");"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"        SpendingList actualList \u003d storage.loadSpendingList();"},{"lineNumber":39,"author":{"gitId":"k-walter"},"content":"        SpendingListTest.assertEqualList(expectedList, actualList);"},{"lineNumber":40,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":42,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"k-walter"},"content":"    public void editExistingData() throws IOException {"},{"lineNumber":44,"author":{"gitId":"k-walter"},"content":"        SpendingList existingList \u003d new SpendingList(storage);"},{"lineNumber":45,"author":{"gitId":"k-walter"},"content":"        existingList.addItem(\"noodle\", \"SGD\", 1.5, null);"},{"lineNumber":46,"author":{"gitId":"k-walter"},"content":"        existingList.addItem(\"fish\", \"USD\", 10, \"\");"},{"lineNumber":47,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":48,"author":{"gitId":"k-walter"},"content":"        SpendingList expectedList \u003d storage.loadSpendingList();"},{"lineNumber":49,"author":{"gitId":"k-walter"},"content":"        expectedList.addItem(\"books\", \"CNY\", 8.9, \"\");"},{"lineNumber":50,"author":{"gitId":"k-walter"},"content":"        assertEquals(3, expectedList.getListSize());"},{"lineNumber":51,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":52,"author":{"gitId":"k-walter"},"content":"        SpendingList actualList \u003d storage.loadSpendingList();"},{"lineNumber":53,"author":{"gitId":"k-walter"},"content":"        assertEquals(3, actualList.getListSize());"},{"lineNumber":54,"author":{"gitId":"k-walter"},"content":"        SpendingListTest.assertEqualList(expectedList, actualList);"},{"lineNumber":55,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":57,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":58,"author":{"gitId":"k-walter"},"content":"    public void saveAndLoadBudget() throws IOException {"},{"lineNumber":59,"author":{"gitId":"k-walter"},"content":"        Budget expectedBudget \u003d new Budget(storage);"},{"lineNumber":60,"author":{"gitId":"k-walter"},"content":"        expectedBudget.addBudget(\"SGD\", 1.23);"},{"lineNumber":61,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":62,"author":{"gitId":"k-walter"},"content":"        Budget actualBudget \u003d storage.loadBudget();"},{"lineNumber":63,"author":{"gitId":"k-walter"},"content":"        assertEquals(\"SGD\", actualBudget.getCurrency());"},{"lineNumber":64,"author":{"gitId":"k-walter"},"content":"        assertEquals(1.23, actualBudget.getBudgetLimit());"},{"lineNumber":65,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":67,"author":{"gitId":"k-walter"},"content":"    @BeforeEach"},{"lineNumber":68,"author":{"gitId":"k-walter"},"content":"    public void initStorage() throws InvalidStorageFilePathException, InvalidStorageFileExtensionException,"},{"lineNumber":69,"author":{"gitId":"k-walter"},"content":"        FileNotFoundException {"},{"lineNumber":70,"author":{"gitId":"k-walter"},"content":"        String randomPath \u003d String.format(\"data/%s.json\", UUID.randomUUID().toString());"},{"lineNumber":71,"author":{"gitId":"k-walter"},"content":"        storage \u003d new Storage(randomPath);"},{"lineNumber":72,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":74,"author":{"gitId":"k-walter"},"content":"    @AfterEach"},{"lineNumber":75,"author":{"gitId":"k-walter"},"content":"    public void deleteStorage() {"},{"lineNumber":76,"author":{"gitId":"k-walter"},"content":"        String path \u003d storage.getFilePath();"},{"lineNumber":77,"author":{"gitId":"k-walter"},"content":"        storage \u003d null;"},{"lineNumber":78,"author":{"gitId":"k-walter"},"content":"        File f \u003d new File(path);"},{"lineNumber":79,"author":{"gitId":"k-walter"},"content":"        f.deleteOnExit();"},{"lineNumber":80,"author":{"gitId":"k-walter"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"k-walter"},"content":"}"}],"authorContributionMap":{"k-walter":80,"xieyaoyue":1}},{"path":"src/test/java/seedu/duke/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":5,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidAmountException;"},{"lineNumber":6,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidInputCurrencyException;"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidNameException;"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":"class AddCommandTest {"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"    void execute() throws IOException, InvalidInputCurrencyException, InvalidAmountException, InvalidNameException {"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"        AddCommand addCommand \u003d new AddCommand(\"sushi\", \"SGD\", 3.0, null);"},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"        Data data \u003d new Data(null, null, null);"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"        addCommand.execute(data, ui);"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"        assertEquals(\"sushi\", data.spendingList.getItem(0).getDescription());"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"        assertEquals(\"SGD\", data.spendingList.getItem(0).getSymbol());"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"        assertEquals(3.0, data.spendingList.getItem(0).getAmount());"},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"k-walter":6,"killingbear999":5,"xieyaoyue":15}},{"path":"src/test/java/seedu/duke/command/ClearBudgetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidClearBudgetException;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":11,"author":{"gitId":"k-walter"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":"//@@author xieyaoyue"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":"class ClearBudgetCommandTest {"},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":17,"author":{"gitId":"xieyaoyue"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"xieyaoyue"},"content":"    void execute() throws IOException {"},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":"        Data data \u003d new Data(null, null, null);"},{"lineNumber":20,"author":{"gitId":"xieyaoyue"},"content":"        data.budget.addBudget(\"SGD\", 100);"},{"lineNumber":21,"author":{"gitId":"xieyaoyue"},"content":"        assertTrue(data.budget.hasBudget);"},{"lineNumber":22,"author":{"gitId":"xieyaoyue"},"content":"        data.budget.clearBudget();"},{"lineNumber":23,"author":{"gitId":"xieyaoyue"},"content":"        assertFalse(data.budget.hasBudget);"},{"lineNumber":24,"author":{"gitId":"xieyaoyue"},"content":"        ClearBudgetCommand c \u003d new ClearBudgetCommand();"},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":"        assertThrows(InvalidClearBudgetException.class, () -\u003e c.execute(data, null));"},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":27,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"k-walter":6,"xieyaoyue":22}},{"path":"src/test/java/seedu/duke/command/ClearRepaymentListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidClearRepaymentException;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidNumberException;"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":"class ClearRepaymentListCommandTest {"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":"    void execute_clearIndex() throws IOException, InvalidClearRepaymentException, InvalidNumberException {"},{"lineNumber":17,"author":{"gitId":"k-walter"},"content":"        Data data \u003d new Data(null, null, null);"},{"lineNumber":18,"author":{"gitId":"k-walter"},"content":"        data.repaymentList.addItem(\"Ben\", \"USD\", 20.00, \"10 Nov 2020\");"},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"        assertThrows(InvalidNumberException.class, () -\u003e new ClearRepaymentListCommand(false, 3).execute(data, ui));"},{"lineNumber":21,"author":{"gitId":"xieyaoyue"},"content":"        ClearRepaymentListCommand c \u003d new ClearRepaymentListCommand(false, 1);"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"        c.execute(data, ui);"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"        assertEquals(0, data.repaymentList.getListSize());"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"        assertThrows(InvalidClearRepaymentException.class, () -\u003e c.execute(data, ui));"},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":27,"author":{"gitId":"xieyaoyue"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"xieyaoyue"},"content":"    void execute_clearAll() throws IOException, InvalidClearRepaymentException, InvalidNumberException {"},{"lineNumber":29,"author":{"gitId":"k-walter"},"content":"        Data data \u003d new Data(null, null, null);"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"        data.repaymentList.addItem(\"Ben\", \"USD\", 20.00, \"10 Nov 2020\");"},{"lineNumber":31,"author":{"gitId":"xieyaoyue"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":32,"author":{"gitId":"xieyaoyue"},"content":"        ClearRepaymentListCommand c \u003d new ClearRepaymentListCommand(true, 0);"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"        c.execute(data, ui);"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"        assertEquals(0, data.repaymentList.getListSize());"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"        assertThrows(InvalidClearRepaymentException.class, () -\u003e c.execute(data, ui));"},{"lineNumber":36,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"k-walter":14,"xieyaoyue":23}},{"path":"src/test/java/seedu/duke/command/ClearSpendingListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidClearSpendingException;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidNumberException;"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidStorageFileExtensionException;"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidStorageFilePathException;"},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":"//@@author xieyaoyue"},{"lineNumber":17,"author":{"gitId":"xieyaoyue"},"content":"class ClearSpendingListCommandTest {"},{"lineNumber":18,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"xieyaoyue"},"content":"    void execute_clearIndex() throws InvalidStorageFileExtensionException,"},{"lineNumber":21,"author":{"gitId":"xieyaoyue"},"content":"            InvalidStorageFilePathException, IOException, InvalidClearSpendingException, InvalidNumberException {"},{"lineNumber":22,"author":{"gitId":"xieyaoyue"},"content":"        Data data \u003d new Data(null, null, null);"},{"lineNumber":23,"author":{"gitId":"xieyaoyue"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":24,"author":{"gitId":"xieyaoyue"},"content":"        data.spendingList.addItem(\"buy chicken rice\", \"$\", 3.0);"},{"lineNumber":25,"author":{"gitId":"xieyaoyue"},"content":"        data.spendingList.addItem(\"buy sushi\", \"$\", 5.1);"},{"lineNumber":26,"author":{"gitId":"xieyaoyue"},"content":"        assertThrows(InvalidNumberException.class, () -\u003e new ClearSpendingListCommand(false, 3).execute(data, ui));"},{"lineNumber":27,"author":{"gitId":"xieyaoyue"},"content":"        ClearSpendingListCommand c \u003d new ClearSpendingListCommand(false, 1);"},{"lineNumber":28,"author":{"gitId":"xieyaoyue"},"content":"        c.execute(data, ui);"},{"lineNumber":29,"author":{"gitId":"xieyaoyue"},"content":"        assertEquals(1, data.spendingList.getListSize());"},{"lineNumber":30,"author":{"gitId":"xieyaoyue"},"content":"        c.execute(data, ui);"},{"lineNumber":31,"author":{"gitId":"xieyaoyue"},"content":"        assertEquals(0, data.spendingList.getListSize());"},{"lineNumber":32,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":34,"author":{"gitId":"xieyaoyue"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"xieyaoyue"},"content":"    void execute_clearAll() throws IOException, InvalidClearSpendingException, InvalidNumberException {"},{"lineNumber":36,"author":{"gitId":"xieyaoyue"},"content":"        ClearSpendingListCommand c \u003d new ClearSpendingListCommand(true, 0);"},{"lineNumber":37,"author":{"gitId":"xieyaoyue"},"content":"        Data data \u003d new Data(null, null, null);"},{"lineNumber":38,"author":{"gitId":"xieyaoyue"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":39,"author":{"gitId":"xieyaoyue"},"content":"        data.spendingList.addItem(\"buy chicken rice\", \"$\", 3.0);"},{"lineNumber":40,"author":{"gitId":"xieyaoyue"},"content":"        data.spendingList.addItem(\"buy sushi\", \"$\", 5.1);"},{"lineNumber":41,"author":{"gitId":"xieyaoyue"},"content":"        c.execute(data, ui);"},{"lineNumber":42,"author":{"gitId":"xieyaoyue"},"content":"        assertEquals(0, data.spendingList.getListSize());"},{"lineNumber":43,"author":{"gitId":"xieyaoyue"},"content":"        assertThrows(InvalidClearSpendingException.class, () -\u003e c.execute(data, ui));"},{"lineNumber":44,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":46,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"k-walter":2,"xieyaoyue":44}},{"path":"src/test/java/seedu/duke/command/ConvertCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":3,"author":{"gitId":"killingbear999"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Item;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.SpendingList;"},{"lineNumber":7,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.EmptyListException;"},{"lineNumber":8,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidCurrencyException;"},{"lineNumber":9,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidInputCurrencyException;"},{"lineNumber":10,"author":{"gitId":"killingbear999"},"content":"import seedu.duke.exceptions.InvalidOutputCurrencyException;"},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":12,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":"import java.util.Arrays;"},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":""},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"public class ConvertCommandTest {"},{"lineNumber":19,"author":{"gitId":"killingbear999"},"content":"    public static ArrayList\u003cItem\u003e initList(Item... items) {"},{"lineNumber":20,"author":{"gitId":"killingbear999"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(items));"},{"lineNumber":21,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":23,"author":{"gitId":"killingbear999"},"content":"    public static SpendingList initSpendingList(Item... items) {"},{"lineNumber":24,"author":{"gitId":"killingbear999"},"content":"        return new SpendingList(initList(items));"},{"lineNumber":25,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":27,"author":{"gitId":"killingbear999"},"content":"    SpendingList realList \u003d initSpendingList("},{"lineNumber":28,"author":{"gitId":"killingbear999"},"content":"            new Item(\"sushi\", \"SGD\", 10.5),"},{"lineNumber":29,"author":{"gitId":"killingbear999"},"content":"            new Item(\"bubble tea\", \"SGD\", 4.0),"},{"lineNumber":30,"author":{"gitId":"killingbear999"},"content":"            new Item(\"medicine\", \"SGD\", 5.0)"},{"lineNumber":31,"author":{"gitId":"killingbear999"},"content":"    );"},{"lineNumber":32,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":33,"author":{"gitId":"killingbear999"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"killingbear999"},"content":"    public void execute() throws IOException, InvalidInputCurrencyException, InvalidOutputCurrencyException,"},{"lineNumber":35,"author":{"gitId":"killingbear999"},"content":"                                             InvalidCurrencyException, EmptyListException {"},{"lineNumber":36,"author":{"gitId":"killingbear999"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":37,"author":{"gitId":"killingbear999"},"content":"        ConvertCommand convertCommand \u003d new ConvertCommand(\"SGD\", \"USD\");"},{"lineNumber":38,"author":{"gitId":"killingbear999"},"content":"        Data data \u003d new Data(realList, null, null);"},{"lineNumber":39,"author":{"gitId":"killingbear999"},"content":"        convertCommand.execute(data, ui);"},{"lineNumber":40,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":2,"killingbear999":36,"xieyaoyue":3}},{"path":"src/test/java/seedu/duke/command/DrawCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Wu-Haitao"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":3,"author":{"gitId":"Wu-Haitao"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.Item;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.SpendingList;"},{"lineNumber":7,"author":{"gitId":"Wu-Haitao"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":9,"author":{"gitId":"Wu-Haitao"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"Wu-Haitao"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":12,"author":{"gitId":"Wu-Haitao"},"content":"//@@author Wu-Haitao"},{"lineNumber":13,"author":{"gitId":"Wu-Haitao"},"content":"class DrawCommandTest {"},{"lineNumber":14,"author":{"gitId":"Wu-Haitao"},"content":"    SpendingList spendingList;"},{"lineNumber":15,"author":{"gitId":"Wu-Haitao"},"content":"    Ui ui \u003d new Ui();"},{"lineNumber":16,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":17,"author":{"gitId":"Wu-Haitao"},"content":"    private ArrayList\u003cItem\u003e initList(Item... items) {"},{"lineNumber":18,"author":{"gitId":"Wu-Haitao"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(items));"},{"lineNumber":19,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":21,"author":{"gitId":"Wu-Haitao"},"content":"    private void initSpendingList() {"},{"lineNumber":22,"author":{"gitId":"Wu-Haitao"},"content":"        Item[] items \u003d new Item[]{new Item(\"Item0\", \"USD\", 1.5),"},{"lineNumber":23,"author":{"gitId":"Wu-Haitao"},"content":"            new Item(\"Item1\", \"USD\", 21, \"Food\"),"},{"lineNumber":24,"author":{"gitId":"Wu-Haitao"},"content":"            new Item(\"Item2\", \"USD\", 13.14, \"Education\"),"},{"lineNumber":25,"author":{"gitId":"Wu-Haitao"},"content":"            new Item(\"Item3\", \"USD\", 12, \"Transportation\"),"},{"lineNumber":26,"author":{"gitId":"Wu-Haitao"},"content":"            new Item(\"Item4\", \"USD\", 28.0, \"Food\"),"},{"lineNumber":27,"author":{"gitId":"Wu-Haitao"},"content":"            new Item(\"Item5\", \"USD\", 156.7, \"Entertainment\"),"},{"lineNumber":28,"author":{"gitId":"Wu-Haitao"},"content":"            new Item(\"Item6\", \"USD\", 96, \"Health\"),"},{"lineNumber":29,"author":{"gitId":"Wu-Haitao"},"content":"            new Item(\"Item7\", \"USD\", 1.2, \"Education\")};"},{"lineNumber":30,"author":{"gitId":"Wu-Haitao"},"content":"        this.spendingList \u003d  new SpendingList(initList(items));"},{"lineNumber":31,"author":{"gitId":"Wu-Haitao"},"content":"        this.spendingList.getItem(0).editDate(\"2020-09-11\");"},{"lineNumber":32,"author":{"gitId":"Wu-Haitao"},"content":"        this.spendingList.getItem(1).editDate(\"2020-09-11\");"},{"lineNumber":33,"author":{"gitId":"Wu-Haitao"},"content":"        this.spendingList.getItem(2).editDate(\"2020-08-11\");"},{"lineNumber":34,"author":{"gitId":"Wu-Haitao"},"content":"        this.spendingList.getItem(3).editDate(\"2020-08-12\");"},{"lineNumber":35,"author":{"gitId":"Wu-Haitao"},"content":"        this.spendingList.getItem(4).editDate(\"2020-12-14\");"},{"lineNumber":36,"author":{"gitId":"Wu-Haitao"},"content":"        this.spendingList.getItem(5).editDate(\"2020-01-14\");"},{"lineNumber":37,"author":{"gitId":"Wu-Haitao"},"content":"        this.spendingList.getItem(6).editDate(\"2020-03-23\");"},{"lineNumber":38,"author":{"gitId":"Wu-Haitao"},"content":"        this.spendingList.getItem(7).editDate(\"2020-05-01\");"},{"lineNumber":39,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":41,"author":{"gitId":"Wu-Haitao"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"Wu-Haitao"},"content":"    void execute() {"},{"lineNumber":43,"author":{"gitId":"Wu-Haitao"},"content":"        initSpendingList();"},{"lineNumber":44,"author":{"gitId":"Wu-Haitao"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"Wu-Haitao"},"content":"            Data data \u003d new Data(null, null, null);"},{"lineNumber":46,"author":{"gitId":"Wu-Haitao"},"content":"            new DrawCommand(\"2020\", null, false).execute(data, ui);"},{"lineNumber":47,"author":{"gitId":"Wu-Haitao"},"content":"        } catch (Exception e) {"},{"lineNumber":48,"author":{"gitId":"Wu-Haitao"},"content":"            assert false;"},{"lineNumber":49,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Wu-Haitao"},"content":"        assert true;"},{"lineNumber":51,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Wu-Haitao"},"content":"}"}],"authorContributionMap":{"Wu-Haitao":48,"k-walter":3,"xieyaoyue":1}},{"path":"src/test/java/seedu/duke/command/ExportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Wu-Haitao"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":3,"author":{"gitId":"Wu-Haitao"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.Item;"},{"lineNumber":6,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.SpendingList;"},{"lineNumber":7,"author":{"gitId":"Wu-Haitao"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"k-walter"},"content":""},{"lineNumber":9,"author":{"gitId":"Wu-Haitao"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"Wu-Haitao"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":12,"author":{"gitId":"Wu-Haitao"},"content":"//@@author Wu-Haitao"},{"lineNumber":13,"author":{"gitId":"Wu-Haitao"},"content":"class ExportCommandTest {"},{"lineNumber":14,"author":{"gitId":"Wu-Haitao"},"content":"    SpendingList spendingList;"},{"lineNumber":15,"author":{"gitId":"Wu-Haitao"},"content":"    Ui ui \u003d new Ui();"},{"lineNumber":16,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":17,"author":{"gitId":"Wu-Haitao"},"content":"    private ArrayList\u003cItem\u003e initList(Item... items) {"},{"lineNumber":18,"author":{"gitId":"Wu-Haitao"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(items));"},{"lineNumber":19,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":21,"author":{"gitId":"Wu-Haitao"},"content":"    private void initSpendingList() {"},{"lineNumber":22,"author":{"gitId":"Wu-Haitao"},"content":"        Item[] items \u003d new Item[]{new Item(\"Item0\", \"USD\", 1.5),"},{"lineNumber":23,"author":{"gitId":"Wu-Haitao"},"content":"            new Item(\"Item1\", \"USD\", 21, \"Food\"),"},{"lineNumber":24,"author":{"gitId":"Wu-Haitao"},"content":"            new Item(\"Item2\", \"USD\", 13.14, \"Education\"),"},{"lineNumber":25,"author":{"gitId":"Wu-Haitao"},"content":"            new Item(\"Item3\", \"USD\", 12, \"Transportation\"),"},{"lineNumber":26,"author":{"gitId":"Wu-Haitao"},"content":"            new Item(\"Item4\", \"USD\", 28.0, \"Food\"),"},{"lineNumber":27,"author":{"gitId":"Wu-Haitao"},"content":"            new Item(\"Item5\", \"USD\", 156.7, \"Entertainment\")};"},{"lineNumber":28,"author":{"gitId":"Wu-Haitao"},"content":"        this.spendingList \u003d  new SpendingList(initList(items));"},{"lineNumber":29,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Wu-Haitao"},"content":""},{"lineNumber":31,"author":{"gitId":"Wu-Haitao"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"Wu-Haitao"},"content":"    void execute() {"},{"lineNumber":33,"author":{"gitId":"Wu-Haitao"},"content":"        initSpendingList();"},{"lineNumber":34,"author":{"gitId":"Wu-Haitao"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"Wu-Haitao"},"content":"            Data data \u003d new Data(null, null, null);"},{"lineNumber":36,"author":{"gitId":"Wu-Haitao"},"content":"            new ExportCommand(System.getProperty(\"user.dir\") + \"\\\\\", false).execute(data, ui);"},{"lineNumber":37,"author":{"gitId":"Wu-Haitao"},"content":"        } catch (Exception e) {"},{"lineNumber":38,"author":{"gitId":"Wu-Haitao"},"content":"            assert false;"},{"lineNumber":39,"author":{"gitId":"Wu-Haitao"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Wu-Haitao"},"content":"        assert true;"},{"lineNumber":41,"author":{"gitId":"Wu-Haitao"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Wu-Haitao"},"content":"}"}],"authorContributionMap":{"Wu-Haitao":38,"k-walter":3,"xieyaoyue":1}},{"path":"src/test/java/seedu/duke/command/PurgeDataCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":5,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.RepaymentList;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidClearBudgetException;"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidClearRepaymentException;"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.exceptions.InvalidClearSpendingException;"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":13,"author":{"gitId":"xieyaoyue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":14,"author":{"gitId":"xieyaoyue"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":15,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":16,"author":{"gitId":"xieyaoyue"},"content":"class PurgeDataCommandTest {"},{"lineNumber":17,"author":{"gitId":"xieyaoyue"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"xieyaoyue"},"content":"    void execute() throws IOException, InvalidClearRepaymentException, InvalidClearSpendingException,"},{"lineNumber":19,"author":{"gitId":"xieyaoyue"},"content":"            InvalidClearBudgetException {"},{"lineNumber":20,"author":{"gitId":"k-walter"},"content":"        Data data \u003d new Data(null, null, null);"},{"lineNumber":21,"author":{"gitId":"k-walter"},"content":"        data.spendingList.addItem(\"buy chicken rice\", \"$\", 3.0);"},{"lineNumber":22,"author":{"gitId":"k-walter"},"content":"        data.spendingList.addItem(\"buy sushi\", \"$\", 5.1);"},{"lineNumber":23,"author":{"gitId":"k-walter"},"content":"        data.budget.addBudget(\"SGD\", 100);"},{"lineNumber":24,"author":{"gitId":"k-walter"},"content":"        data.repaymentList.addItem(\"John\",\"USD\",123,\"2020-02-20\");"},{"lineNumber":25,"author":{"gitId":"k-walter"},"content":"        data.repaymentList \u003d new RepaymentList();"},{"lineNumber":26,"author":{"gitId":"k-walter"},"content":"        data.repaymentList.addItem(\"John\",\"USD\",123,\"2020-02-20\");"},{"lineNumber":27,"author":{"gitId":"k-walter"},"content":"        assertEquals(1,data.repaymentList.getListSize());"},{"lineNumber":28,"author":{"gitId":"xieyaoyue"},"content":"        PurgeDataCommand purgeDataCommand \u003d new PurgeDataCommand();"},{"lineNumber":29,"author":{"gitId":"xieyaoyue"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"        purgeDataCommand.execute(data, ui);"},{"lineNumber":31,"author":{"gitId":"k-walter"},"content":"        assertFalse(data.budget.hasBudget);"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"        assertEquals(0, data.spendingList.getListSize());"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"        assertEquals(0, data.repaymentList.getListSize());"},{"lineNumber":34,"author":{"gitId":"xieyaoyue"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"xieyaoyue"},"content":"}"}],"authorContributionMap":{"k-walter":13,"xieyaoyue":22}},{"path":"src/test/java/seedu/duke/command/SummaryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pinfang"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":3,"author":{"gitId":"pinfang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Item;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.SpendingList;"},{"lineNumber":7,"author":{"gitId":"k-walter"},"content":"import seedu.duke.exceptions.InvalidMonthException;"},{"lineNumber":8,"author":{"gitId":"pinfang"},"content":"import seedu.duke.exceptions.InvalidYearException;"},{"lineNumber":9,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":11,"author":{"gitId":"pinfang"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"pinfang"},"content":"import java.util.Arrays;"},{"lineNumber":13,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":14,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":15,"author":{"gitId":"pinfang"},"content":"public class SummaryCommandTest {"},{"lineNumber":16,"author":{"gitId":"pinfang"},"content":"    public static ArrayList\u003cItem\u003e initList(Item... items) {"},{"lineNumber":17,"author":{"gitId":"pinfang"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(items));"},{"lineNumber":18,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":20,"author":{"gitId":"pinfang"},"content":"    public static SpendingList initSpendingList(Item... items) {"},{"lineNumber":21,"author":{"gitId":"pinfang"},"content":"        return new SpendingList(initList(items));"},{"lineNumber":22,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":24,"author":{"gitId":"pinfang"},"content":"    SpendingList spendingList \u003d initSpendingList("},{"lineNumber":25,"author":{"gitId":"pinfang"},"content":"        new Item(\"noodle\", \"S$\", 1.5),"},{"lineNumber":26,"author":{"gitId":"pinfang"},"content":"        new Item(\"fish\", \"S$\", 10),"},{"lineNumber":27,"author":{"gitId":"pinfang"},"content":"        new Item(\"books\", \"S$\", 8.9)"},{"lineNumber":28,"author":{"gitId":"pinfang"},"content":"    );"},{"lineNumber":29,"author":{"gitId":"pinfang"},"content":""},{"lineNumber":30,"author":{"gitId":"k-walter"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"pinfang"},"content":"    public void goodSummary() throws InvalidMonthException, InvalidYearException {"},{"lineNumber":32,"author":{"gitId":"k-walter"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":33,"author":{"gitId":"k-walter"},"content":"        SummaryCommand validSummaryMonth \u003d new SummaryCommand(\"2020\", \"Jan\");"},{"lineNumber":34,"author":{"gitId":"k-walter"},"content":"        SummaryCommand summaryYear \u003d new SummaryCommand(\"2020\", null);"},{"lineNumber":35,"author":{"gitId":"k-walter"},"content":"        SummaryCommand summary \u003d new SummaryCommand();"},{"lineNumber":36,"author":{"gitId":"k-walter"},"content":"        Data data \u003d new Data(null, null, null);"},{"lineNumber":37,"author":{"gitId":"k-walter"},"content":"        validSummaryMonth.execute(data, ui);"},{"lineNumber":38,"author":{"gitId":"k-walter"},"content":"        summaryYear.execute(data, ui);"},{"lineNumber":39,"author":{"gitId":"k-walter"},"content":"        summary.execute(data, ui);"},{"lineNumber":40,"author":{"gitId":"pinfang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"pinfang"},"content":"}"}],"authorContributionMap":{"k-walter":12,"xieyaoyue":2,"pinfang":27}},{"path":"src/test/java/seedu/duke/command/WarnCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xieyaoyue"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":3,"author":{"gitId":"xieyaoyue"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Data;"},{"lineNumber":5,"author":{"gitId":"k-walter"},"content":"import seedu.duke.data.Item;"},{"lineNumber":6,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.data.SpendingList;"},{"lineNumber":7,"author":{"gitId":"xieyaoyue"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":9,"author":{"gitId":"k-walter"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"xieyaoyue"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"xieyaoyue"},"content":"import java.util.Arrays;"},{"lineNumber":12,"author":{"gitId":"xieyaoyue"},"content":""},{"lineNumber":13,"author":{"gitId":"killingbear999"},"content":"//@@author killingbear999"},{"lineNumber":14,"author":{"gitId":"killingbear999"},"content":"public class WarnCommandTest {"},{"lineNumber":15,"author":{"gitId":"killingbear999"},"content":"    public static ArrayList\u003cItem\u003e initList(Item... items) {"},{"lineNumber":16,"author":{"gitId":"killingbear999"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(items));"},{"lineNumber":17,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":19,"author":{"gitId":"killingbear999"},"content":"    public static SpendingList initSpendingList(Item... items) {"},{"lineNumber":20,"author":{"gitId":"killingbear999"},"content":"        return new SpendingList(initList(items));"},{"lineNumber":21,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":23,"author":{"gitId":"killingbear999"},"content":"    SpendingList realList \u003d initSpendingList("},{"lineNumber":24,"author":{"gitId":"killingbear999"},"content":"            new Item(\"sushi\", \"S$\", 10.5),"},{"lineNumber":25,"author":{"gitId":"killingbear999"},"content":"            new Item(\"bubble tea\", \"S$\", 4.0),"},{"lineNumber":26,"author":{"gitId":"killingbear999"},"content":"            new Item(\"medicine\", \"S$\", 5.0)"},{"lineNumber":27,"author":{"gitId":"killingbear999"},"content":"    );"},{"lineNumber":28,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":29,"author":{"gitId":"killingbear999"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"killingbear999"},"content":"    public void approachLimit() throws IOException {"},{"lineNumber":31,"author":{"gitId":"killingbear999"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":32,"author":{"gitId":"killingbear999"},"content":"        Data data \u003d new Data(null, null, null);"},{"lineNumber":33,"author":{"gitId":"killingbear999"},"content":"        data.budget.addBudget(\"SGD\", 20.0);"},{"lineNumber":34,"author":{"gitId":"killingbear999"},"content":"        WarnCommand approachingLimit \u003d new WarnCommand();"},{"lineNumber":35,"author":{"gitId":"killingbear999"},"content":"        approachingLimit.execute(data, ui);"},{"lineNumber":36,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"killingbear999"},"content":"    "},{"lineNumber":38,"author":{"gitId":"killingbear999"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"killingbear999"},"content":"    public void exceedLimit() throws IOException {"},{"lineNumber":40,"author":{"gitId":"killingbear999"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":41,"author":{"gitId":"killingbear999"},"content":"        Data data \u003d new Data(null, null, null);"},{"lineNumber":42,"author":{"gitId":"killingbear999"},"content":"        data.budget.addBudget(\"SGD\", 10.0);"},{"lineNumber":43,"author":{"gitId":"killingbear999"},"content":"        WarnCommand exceedingLimit \u003d new WarnCommand();"},{"lineNumber":44,"author":{"gitId":"killingbear999"},"content":"        exceedingLimit.execute(data, ui);"},{"lineNumber":45,"author":{"gitId":"killingbear999"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"killingbear999"},"content":"}"}],"authorContributionMap":{"k-walter":3,"killingbear999":34,"xieyaoyue":9}}]
