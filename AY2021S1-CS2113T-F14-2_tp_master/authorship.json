[
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Xie Yaoyue | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Walter Kong | [Github](https://github.com/k-walter) | [Portfolio](docs/team/walterkong.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | WuHaitao | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yen Pin Fang | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "killingbear999"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Zihao | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 1,
      "k-walter": 1,
      "killingbear999": 1,
      "xieyaoyue": 1,
      "-": 4,
      "pinfang": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/Main.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static TaskList tasklist;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Runs the program until termination."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static void run(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        start(args);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Sets up the required objects and loads data from the storage file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @param args arguments supplied by the user at program launch."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static void start(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            storage \u003d initializeStorage(args);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            tasklist \u003d storage.load();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } catch(Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Reads the user command and executes it, until the user issues the \u0027bye\u0027 command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ui.showWelcomeMessage(storage.filepath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                Command c \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                c.execute(tasklist, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } while(!isExit);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Creates the Storage object based on the user-specified file path (if any) or the default storage path."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @param Args arguments supplied by the user at program launch."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @throws InvalidStorageFilePathException if the target file path is incorrect."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @throws StorageOperationException if there some error in creating storage file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static Storage initializeStorage(String[] Args) throws InvalidStorageFilePathException, StorageOperationException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        boolean isStorageFileSpecifiedByUser \u003d Args.length \u003e 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return isStorageFileSpecifiedByUser? new Storage(Args[0]) : new Storage();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public static void main(String[] Args) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        run(Args);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 68
    }
  }
]
