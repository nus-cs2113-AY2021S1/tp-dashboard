[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "-": 46
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chin Heng | [Github](https://github.com/dozenmatter) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Si Hao | [Github](https://github.com/yuen-sihao) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nathaniel | [Github](https://github.com/nat-ho) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chloe | [Github](https://github.com/chloesyy) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yilun | [Github](https://github.com/lunzard) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 5,
      "-": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.duke.book.BookList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.lists.ListManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.lists.QuotesifyList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.quote.QuoteList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.duke.rating.RatingList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.todo.ToDoList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private BookList books;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private QuoteList quotes;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private CategoryList categories;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private RatingList ratings;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private ToDoList toDos;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private final ListManager listManager \u003d new ListManager();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui \u003d new TextUi();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        books \u003d new BookList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories \u003d new CategoryList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes \u003d new QuoteList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings \u003d new RatingList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        toDos \u003d new ToDoList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.addToList(ListManager.BOOK_LIST, books);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        listManager.addToList(ListManager.QUOTE_LIST, quotes);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.addToList(ListManager.CATEGORY_LIST, categories);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        listManager.addToList(ListManager.RATING_LIST, ratings);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        listManager.addToList(ListManager.TODO_LIST, toDos);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        listManager.addToList(ListManager.BOOKMARK_LIST, bookmarks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        //Print random quote - After storage implementation"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printRandomQuote(listManager);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void runLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String userCommandText \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Command command \u003d new Parser().parseUserCommand(userCommandText);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ui.printInvalidQuotesifyCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            command.execute(ui, listManager);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        runLoopUntilExitCommand();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 8,
      "nat-ho": 41,
      "chloesyy": 3,
      "dozenmatter": 11,
      "yuen-sihao": 6,
      "-": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/author/Author.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.author;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Author {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Author(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/book/Book.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.author.Author;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.category.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Book {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Author author;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Category category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Book(Author author, String title) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Book(Author author, String title, Category category) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Author getAuthor() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setAuthor(Author author) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Category getCategory() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setCategory(Category category) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (category !\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return title + \" by \" + author.getName() + \" -\" + category;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return title + \" by \" + author.getName();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 45,
      "chloesyy": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/book/BookList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.duke.author.Author;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.lists.QuotesifyList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class BookList extends QuotesifyList\u003cBook\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cBook\u003e books \u003d super.getList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList(ArrayList\u003cBook\u003e books) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(books);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void add(Book newBook) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        books.add(newBook);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        books.remove(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void deleteByBook(Book book) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        books.remove(book);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return books.isEmpty();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String booksToReturn \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            booksToReturn +\u003d book.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return booksToReturn;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public ArrayList\u003cBook\u003e find(String title, String author) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .filter(book -\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    Author bookAuthor \u003d book.getAuthor();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    return bookAuthor.getName().equals(author) \u0026\u0026 book.getTitle().equals(title);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return filteredBooks;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Book findByTitle(String title) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (book.getTitle().equals(title)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                return book;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList filterByAuthor(String authorName) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .filter(book -\u003e {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    Author bookAuthor \u003d book.getAuthor();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    return bookAuthor.getName().equals(authorName);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return new BookList(filteredBooks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 11,
      "dozenmatter": 21,
      "chloesyy": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/bookmark/Bookmark.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Bookmark {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Book book;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private int pageNum;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Bookmark(Book book, int pageNum) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.book \u003d book;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.pageNum \u003d pageNum;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Book getBook() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return book;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setBook(Book book) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.book \u003d book;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public int getPageNum() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return pageNum;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setPageNum(int pageNum) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.pageNum \u003d pageNum;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return book.getTitle() + \" / \" + Integer.toString(pageNum);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 5,
      "dozenmatter": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/bookmark/BookmarkList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.lists.QuotesifyList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class BookmarkList extends QuotesifyList\u003cBookmark\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cBookmark\u003e bookmarks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public BookmarkList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public BookmarkList(ArrayList\u003cBookmark\u003e bookmarks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(bookmarks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void add(Bookmark newBookmark) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.add(newBookmark);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark find(Book book) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (Bookmark bookmark : bookmarks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (bookmark.getBook().equals(book)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                return bookmark;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.remove(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void delete(Bookmark bookmark) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.remove(bookmark);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String bookmarksToReturn \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (Bookmark bookmark: bookmarks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarksToReturn +\u003d bookmark.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookmarksToReturn;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 45,
      "dozenmatter": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/category/Category.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.book.BookList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.quote.QuoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Category {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private BookList books;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private QuoteList quotes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private int size;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Category(String category) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        books \u003d new BookList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quotes \u003d new QuoteList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        size \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getCategoryName() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setCategoryName(String category) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return books.getList().size() + quotes.getList().size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public BookList getBooks() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return books;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setBooks(BookList books) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.books \u003d books;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuoteList getQuotes() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return quotes;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setQuotes(QuoteList quotes) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quotes \u003d quotes;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return String.format(\"%s - (%d items)\", getCategoryName(), getSize());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 51
    }
  },
  {
    "path": "src/main/java/seedu/duke/category/CategoryList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.exception.QuotesifyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.lists.QuotesifyList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryList extends QuotesifyList\u003cCategory\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cCategory\u003e categories \u003d super.getList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public CategoryList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public CategoryList(ArrayList\u003cCategory\u003e categories) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(categories);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean doesCategoryExist(String name) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (category.getCategoryName().equals(name)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Category getCategoryByName(String name) throws NullPointerException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (category.getCategoryName().equals(name)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                return category;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        throw new NullPointerException(\"\\\"\" + name + \"\\\" does not exist!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void add(Category category) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories.add(category);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories.remove(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list +\u003d String.format(\"%d. %s\\n\", ++index, category.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 56
    }
  },
  {
    "path": "src/main/java/seedu/duke/category/CategoryParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String TAG_BOOK \u003d \"-b\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String TAG_QUOTE \u003d \"-q\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static Stack\u003cString\u003e convertStringArrayToStack(String[] tokens) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Stack\u003cString\u003e parameters \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (String token : tokens) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            parameters.push(token);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return parameters;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static String[] getRequiredParameters(String[] tokens) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String categoryName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String bookTitle \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String quoteNum \u003d \"-1\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Stack\u003cString\u003e parameters \u003d convertStringArrayToStack(tokens);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String line \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        while (!parameters.empty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String item \u003d parameters.pop();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (item.equals(TAG_BOOK)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                bookTitle \u003d line.trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                line \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            } else if (item.equals(TAG_QUOTE)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                quoteNum \u003d line.trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                line \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            line \u003d item + \" \" + line;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categoryName \u003d line.trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new String[]{categoryName, bookTitle, quoteNum};"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 41
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.duke.author.Author;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.duke.book.Book;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.duke.book.BookList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.category.Category;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.category.CategoryList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.category.CategoryParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.exception.QuotesifyException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.lists.ListManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.quote.Quote;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.quote.QuoteList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.quote.QuoteParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.duke.rating.Rating;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.duke.rating.RatingList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.duke.rating.RatingParser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.todo.ToDo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.todo.ToDoList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public AddCommand(String arguments) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, ListManager listManager) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            BookList books \u003d (BookList) listManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Book newBook \u003d addBook(books);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printAddBook(newBook);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            QuoteList quotes \u003d (QuoteList) listManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            addQuote(quotes, ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            CategoryList categories \u003d (CategoryList) listManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addCategoryToBookOrQuote(categories, ui, listManager);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            RatingList ratings \u003d (RatingList) listManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            addRating(ratings, ui, listManager);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ToDoList toDos \u003d (ToDoList) listManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ToDo newToDo \u003d addToDo(toDos);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printAddToDo(newToDo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private Book addBook(BookList books) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] titleAndAuthor \u003d information.split(Command.FLAG_AUTHOR, 2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Author author \u003d new Author(titleAndAuthor[1].trim());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Book newBook \u003d new Book(author, titleAndAuthor[0].trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        books.add(newBook);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return newBook;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void addQuote(QuoteList quotes, TextUi ui) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Quote quote \u003d QuoteParser.parseAddParameters(information);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quotes.add(quote);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printAllQuotes(quotes);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToBookOrQuote(CategoryList categories, TextUi ui, ListManager listManager) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] tokens \u003d information.split(\" \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] parameters \u003d CategoryParser.getRequiredParameters(tokens);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        executeParameters(categories, parameters, ui, listManager);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void executeParameters(CategoryList categories, String[] parameters, TextUi ui, ListManager listManager) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String categoryName \u003d parameters[0];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String bookTitle \u003d parameters[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int quoteNum \u003d Integer.parseInt(parameters[2]) - 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addCategoryToList(categories, categoryName);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Category category \u003d categories.getCategoryByName(categoryName);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (addCategoryToBook(category, bookTitle, listManager)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ui.printAddCategoryToBook(bookTitle, category.getCategoryName());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (addCategoryToQuote(category, quoteNum, listManager)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                QuoteList quoteList \u003d (QuoteList) listManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ArrayList\u003cQuote\u003e quotes \u003d quoteList.getList();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ui.printAddCategoryToQuote(quotes.get(quoteNum).getQuote(), category.getCategoryName());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printCategorySize(category);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToList(CategoryList categories, String categoryName) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (!categories.doesCategoryExist(categoryName)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            categories.add(new Category(categoryName));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private boolean addCategoryToBook(Category category, String bookTitle, ListManager listManager) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (bookTitle \u003d\u003d null || category \u003d\u003d null) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) listManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cBook\u003e books \u003d bookList.getList();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (book.getTitle().equals(bookTitle)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                book.setCategory(category);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                category.getBooks().add(book);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private boolean addCategoryToQuote(Category category, int quoteNum, ListManager listManager) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (quoteNum \u003c 0 || category \u003d\u003d null) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) listManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cQuote\u003e quotes \u003d quoteList.getList();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Quote quote \u003d quotes.get(quoteNum);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quote.setCategory(category);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            category.getQuotes().add(quote);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void addRating(RatingList ratings, TextUi ui, ListManager listManager) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] ratingDetails \u003d information.split(\" \", 2);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String titleOfBookToRate \u003d ratingDetails[1].trim();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d RatingParser.checkFormatOfRatingValue(ratingDetails[0]);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratingScore \u003d\u003d 0) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isValid \u003d RatingParser.checkRangeOfRatingValue(ratingScore);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (isValid \u0026\u0026 !isRated(ratings, titleOfBookToRate) \u0026\u0026 isExistingBook(listManager, titleOfBookToRate)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratings.add(new Rating(ratingScore, titleOfBookToRate));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printAddRatingToBook(ratingScore, titleOfBookToRate);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private boolean isExistingBook(ListManager listManager, String titleOfBookToRate) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        BookList bookList \u003d (BookList) listManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ArrayList\u003cBook\u003e existingBooks \u003d bookList.getList();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean doesExist \u003d false;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Book existingBook : existingBooks) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (existingBook.getTitle().equals(titleOfBookToRate)) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                doesExist \u003d true;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (!doesExist) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_BOOK_TO_RATE_NOT_FOUND);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return doesExist;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private boolean isRated(RatingList ratings, String titleOfBookToRate) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isRated \u003d false;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String titleOfRatedBook;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            titleOfRatedBook \u003d rating.getTitleOfRatedBook();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (titleOfRatedBook.equals(titleOfBookToRate)) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                isRated \u003d true;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (isRated) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_EXIST);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private ToDo addToDo(ToDoList toDos) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] taskNameAndDeadline \u003d information.split(\"/by\", 2);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String taskName \u003d taskNameAndDeadline[0].trim();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String deadline \u003d taskNameAndDeadline[1].trim();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo newToDo \u003d new ToDo(taskName,deadline);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        toDos.add(newToDo);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return newToDo;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 17,
      "nat-ho": 20,
      "chloesyy": 37,
      "dozenmatter": 88,
      "yuen-sihao": 56
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/BookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.lists.ListManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class BookmarkCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public BookmarkCommand(String arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, ListManager listManager) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            BookList books \u003d (BookList) listManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            BookmarkList bookmarks \u003d (BookmarkList) listManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            handleBookmark(books, bookmarks, ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void handleBookmark(BookList books, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] titleAndPage \u003d information.split(\"/pg\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String title \u003d titleAndPage[0].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String page \u003d titleAndPage[1].trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Book bookToMark \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookToMark \u003d books.findByTitle(title);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookToMark !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addBookmarkToBook(bookToMark, bookmarks, page, ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void addBookmarkToBook(Book book, BookmarkList bookmarks, String page, TextUi ui) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark bookmarkToAdd \u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int pageNum \u003d computePageNum(page);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarkToAdd \u003d bookmarks.find(book);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkToAdd \u003d\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarkToAdd \u003d createNewBookmark(bookmarks, book, pageNum);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printAddBookmark(bookmarkToAdd);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarkToAdd \u003d updateExistingBookmark(bookmarkToAdd, pageNum);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printUpdateBookmark(bookmarkToAdd);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark createNewBookmark(BookmarkList bookmarks, Book book, int pageNum) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark newBookmark \u003d new Bookmark(book, pageNum);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.add(newBookmark);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return newBookmark;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark updateExistingBookmark(Bookmark bookmark, int pageNum) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmark.setPageNum(pageNum);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookmark;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int computePageNum(String information) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int pageNum \u003d -1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            pageNum \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_TODO_NUM);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return pageNum;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 95
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_BOOK \u003d \"-b\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_QUOTE \u003d \"-q\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_RATING \u003d \"-r\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_CATEGORY \u003d \"-c\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String TAG_TODO \u003d \"-t\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String TAG_BOOKMARK \u003d \"-bm\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_INVALID_QUOTE_NUM \u003d \"Invalid quote number specified!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_INVALID_TODO_NUM \u003d \"Invalid task number specified!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_BOOK_FOUND \u003d \"There is no such book!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_BOOKS_IN_LIST \u003d \"There are no books in the list!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_BOOKS_BY_AUTHOR \u003d \"There are no books by this author!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_AUTHOR_NAME \u003d \"Please type in the author name.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_RATING_EXIST \u003d \"This book has already been rated!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_BOOK_TO_RATE_NOT_FOUND \u003d \"I can\u0027t find this book to rate!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_RATING_NOT_FOUND \u003d \"This book has not been rated!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_TODO_NOT_FOUND \u003d \"There is no such task!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_BOOKMARK_NOT_FOUND \u003d \"There is no such bookmark!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract void execute(TextUi ui, ListManager listManager);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_AUTHOR \u003d \"/by\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_REFERENCE \u003d \"/from\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_DELIMITER \u003d \"/\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String REFERENCE_KEYWORD \u003d \"reference\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String AUTHORNAME_KEYWORD \u003d \"authorName\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_LIST_UNKNOWN_COMMAND \u003d \"I do not understand that command. Try again\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 5,
      "nat-ho": 8,
      "dozenmatter": 15,
      "chloesyy": 7,
      "yuen-sihao": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import com.sun.jdi.event.StepEvent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.book.Book;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.book.BookList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.category.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.category.CategoryList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.category.CategoryParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.lists.ListManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.quote.Quote;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.quote.QuoteList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.duke.rating.Rating;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.duke.rating.RatingList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.todo.ToDo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.todo.ToDoList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public DeleteCommand(String arguments) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, ListManager listManager) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            CategoryList categories \u003d (CategoryList) listManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            deleteCategoryFromBookOrQuote(categories, ui, listManager);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            BookList books \u003d (BookList) listManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            deleteBook(books, ui, listManager);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            RatingList ratings \u003d (RatingList) listManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            String bookTitle \u003d information.trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            deleteRating(ratings, ui, bookTitle);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ToDoList toDos \u003d (ToDoList) listManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            int index \u003d computeToDoIndex(information.trim());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            deleteToDo(toDos, index, ui);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_BOOKMARK:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            BookList bookList \u003d (BookList) listManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            BookmarkList bookmarks \u003d (BookmarkList) listManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String title \u003d information.trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            deleteBookmark(bookList, bookmarks, title, ui);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            QuoteList quotes \u003d (QuoteList) listManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            deleteQuote(quotes, ui, information);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void deleteQuote(QuoteList quotes, TextUi ui, String information) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int quoteNumber \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Quote quoteToBeDeleted \u003d quotes.getQuote(quoteNumber);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quotes.delete(quoteNumber);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printDeleteQuote(quoteToBeDeleted.getQuote());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void deleteRating(RatingList ratings, TextUi ui, String bookTitle) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating ratingToBeDeleted \u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitleOfRatedBook().equals(bookTitle)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ratingToBeDeleted \u003d rating;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratingToBeDeleted \u003d\u003d null) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_NOT_FOUND);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.delete(ratings.getList().indexOf(ratingToBeDeleted));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ui.printDeleteRating(bookTitle);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void deleteBook(BookList books, TextUi ui, ListManager listManager) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String[] titleAndAuthor \u003d information.split(FLAG_AUTHOR);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String bookTitle \u003d titleAndAuthor[0].trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        RatingList ratings \u003d (RatingList) listManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating ratingToBeDeleted;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitleOfRatedBook().equals(bookTitle)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ratingToBeDeleted \u003d rating;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ratings.delete(ratings.getList().indexOf(ratingToBeDeleted));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ArrayList\u003cBook\u003e filteredBooks \u003d books.find(bookTitle, titleAndAuthor[1].trim());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            books.deleteByBook(filteredBooks.get(0));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printDeleteBook(filteredBooks.get(0));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteCategoryFromBookOrQuote(CategoryList categories, TextUi ui, ListManager listManager) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] tokens \u003d information.split(\" \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] parameters \u003d CategoryParser.getRequiredParameters(tokens);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        executeParameters(categories, parameters, ui, listManager);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void executeParameters(CategoryList categories, String[] parameters, TextUi ui, ListManager listManager) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String categoryName \u003d parameters[0];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String bookTitle \u003d parameters[1];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int quoteNum \u003d Integer.parseInt(parameters[2]) - 1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Category category \u003d categories.getCategoryByName(categoryName);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (deleteCategoryFromBook(category, bookTitle, listManager)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ui.printRemoveCategoryFromBook(bookTitle, categoryName);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (deleteCategoryFromQuote(category, quoteNum, listManager)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                QuoteList quoteList \u003d (QuoteList) listManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ArrayList\u003cQuote\u003e quotes \u003d quoteList.getList();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ui.printRemoveCategoryFromQuote(quotes.get(quoteNum).getQuote(), categoryName);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printCategorySize(category);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private boolean deleteCategoryFromBook(Category category, String bookTitle, ListManager listManager) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (bookTitle \u003d\u003d null || category \u003d\u003d null) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) listManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cBook\u003e books \u003d bookList.getList();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (book.getTitle().equals(bookTitle)) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                book.setCategory(null);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                category.getBooks().getList().remove(book);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private boolean deleteCategoryFromQuote(Category category, int quoteNum, ListManager listManager) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (quoteNum \u003c 0 || category \u003d\u003d null) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) listManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cQuote\u003e quotes \u003d quoteList.getList();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Quote quote \u003d quotes.get(quoteNum);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quote.setCategory(null);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            category.getQuotes().getList().remove(quote);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void deleteToDo(ToDoList toDos, int index, TextUi ui) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo toDoToBeDeleted \u003d toDos.find(index);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (toDoToBeDeleted !\u003d null) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            toDos.delete(index);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDeleteToDo(toDoToBeDeleted);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_TODO_NOT_FOUND);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int computeToDoIndex(String information) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            index \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_TODO_NUM);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void deleteBookmark(BookList books, BookmarkList bookmarks, String titleName, TextUi ui) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Book targetBook \u003d books.findByTitle(titleName);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (targetBook !\u003d null) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            removeBookmarkFromBook(targetBook, bookmarks, ui);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void removeBookmarkFromBook(Book targetBook, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark bookmarkToBeDeleted \u003d bookmarks.find(targetBook);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkToBeDeleted !\u003d null) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarks.delete(bookmarkToBeDeleted);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDeleteBookmark(bookmarkToBeDeleted);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_BOOKMARK_NOT_FOUND);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 55,
      "nat-ho": 14,
      "dozenmatter": 109,
      "chloesyy": 14,
      "yuen-sihao": 37
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DoneCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.todo.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.todo.ToDoList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public DoneCommand(String arguments) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, ListManager listManager) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ToDoList toDos \u003d (ToDoList) listManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            int index \u003d computeToDoIndex(information.trim());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            doneToDo(toDos,index,ui);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void doneToDo(ToDoList toDos, int index, TextUi ui) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo targetTask \u003d toDos.find(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (targetTask !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            targetTask.setDone(true);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDoneToDo(targetTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_TODO_NOT_FOUND);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int computeToDoIndex(String information) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            index \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_TODO_NUM);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 60
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, ListManager listManager) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 14,
      "chloesyy": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.category.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.duke.book.BookList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.exception.QuotesifyException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.lists.ListManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.quote.QuoteList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.quote.QuoteParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.duke.rating.Rating;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.duke.rating.RatingList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.duke.rating.RatingParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.todo.ToDoList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ListCommand(String arguments) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, ListManager listManager) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            CategoryList categoryList \u003d (CategoryList) listManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            listCategories(categoryList, ui);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            RatingList ratingList \u003d (RatingList) listManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            listRatings(ratingList, ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ToDoList toDoList \u003d (ToDoList) listManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            listToDos(toDoList,ui);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_BOOKMARK:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            BookmarkList bookmarkList \u003d (BookmarkList) listManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            listBookmarks(bookmarkList, ui);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            QuoteList quoteListList \u003d (QuoteList) listManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            listQuotes(quoteListList, ui);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            BookList bookList \u003d (BookList) listManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            listBooks(bookList, ui);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooks(BookList bookList, TextUi ui) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (information.isEmpty()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                listAllBooks(bookList, ui);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } else if (information.contains(FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                listBooksByAuthor(bookList, ui);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                throw new QuotesifyException(ERROR_LIST_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_AUTHOR_NAME);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listAllBooks(BookList bookList, TextUi ui) throws QuotesifyException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (bookList.isEmpty()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(ERROR_NO_BOOKS_IN_LIST);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printAllBooks(bookList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooksByAuthor(BookList bookList, TextUi ui) throws QuotesifyException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String authorName \u003d information.substring(4);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList filteredBooks \u003d bookList.filterByAuthor(authorName);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (filteredBooks.isEmpty()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(ERROR_NO_BOOKS_BY_AUTHOR);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printBooksByAuthor(filteredBooks, authorName);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotes(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if ((information.isEmpty())) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listAllQuotes(quoteList, ui);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (information.contains(Command.FLAG_AUTHOR) \u0026\u0026 information.contains(Command.FLAG_REFERENCE)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                information \u003d information.substring(1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                HashMap\u003cString, String\u003e referenceAndAuthorName \u003d QuoteParser.parseReferenceAndAuthor(information);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String reference \u003d referenceAndAuthorName.get(Command.REFERENCE_KEYWORD);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String authorName \u003d referenceAndAuthorName.get(Command.AUTHORNAME_KEYWORD);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listQuotesByReferenceAndAuthor(quoteList, reference, authorName, ui);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (information.contains(Command.FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String authorName \u003d QuoteParser.parseListWithAuthor(information);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listQuotesByAuthor(quoteList, authorName, ui);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (information.contains(Command.FLAG_REFERENCE)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String reference \u003d QuoteParser.parseListWithReference(information);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listQuotesByReference(quoteList, reference, ui);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                throw new QuotesifyException(ERROR_LIST_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotesByReferenceAndAuthor(QuoteList quoteList, String reference, String authorName, TextUi ui) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotesByReferenceAndAuthor(quoteList, reference, authorName);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listAllQuotes(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotes(quoteList);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotesByAuthor(QuoteList quoteList, String authorName, TextUi ui) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotesByAuthor(quoteList, authorName);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotesByReference(QuoteList quoteList, String reference, TextUi ui) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotesByReference(quoteList, reference);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void listRatings(RatingList ratingList, TextUi ui) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ArrayList\u003cRating\u003e ratings \u003d ratingList.getList();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.sort(Comparator.comparing(Rating::getRating));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Collections.reverse(ratings);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (information.isEmpty()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            listAllRatings(ratingList, ui);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            listSpecifiedRating(ratingList, ui);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void listAllRatings(RatingList ratingList, TextUi ui) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ui.printAllRatings(ratingList);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void listSpecifiedRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingToList \u003d RatingParser.checkFormatOfRatingValue(information);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratingToList \u003d\u003d 0) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (RatingParser.checkRangeOfRatingValue(ratingToList)) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printSpecifiedRating(ratings, ratingToList);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void listCategories(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if ((information.isEmpty())) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            listAllCategories(categoryList, ui);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            listCategory(categoryList, ui);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void listAllCategories(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ui.printAllCategories(categoryList);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void listCategory(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printCategory(categoryList.getCategoryByName(information));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void listToDos(ToDoList toDoList, TextUi ui) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ui.printAllToDos(toDoList);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void listBookmarks(BookmarkList bookmarkList, TextUi ui) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ui.printAllBookmarks(bookmarkList);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 18,
      "nat-ho": 47,
      "dozenmatter": 58,
      "chloesyy": 38,
      "yuen-sihao": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/QuotesifyException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class QuotesifyException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuotesifyException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/lists/ListManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.lists;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ListManager {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int BOOK_LIST \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int BOOKMARK_LIST \u003d 1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int CATEGORY_LIST \u003d 2;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int QUOTE_LIST \u003d 3;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int RATING_LIST \u003d 4;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final int TODO_LIST \u003d 5;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private HashMap\u003cInteger, QuotesifyList\u003c?\u003e\u003e listManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ListManager() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void addToList(int type, QuotesifyList\u003c?\u003e list) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(type, list);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuotesifyList\u003c?\u003e getList(int type) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return listManager.get(type);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 1,
      "dozenmatter": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/lists/QuotesifyList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.lists;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public abstract class QuotesifyList\u003cT\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cT\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuotesifyList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuotesifyList(ArrayList\u003cT\u003e list) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ArrayList\u003cT\u003e getList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract void add(T t);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract void delete(int index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.commands.BookmarkCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.duke.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.commands.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_ADD \u003d \"add\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_EDIT \u003d \"edit\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_BOOKMARK \u003d \"bookmark\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Command parseUserCommand(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] tokens \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let tokens[1] be empty string"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            tokens \u003d new String[]{tokens[0], \"\"};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String command \u003d tokens[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String arguments \u003d tokens[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_ADD:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return new AddCommand(arguments);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_BOOKMARK:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return new BookmarkCommand(arguments);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_EDIT:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new ListCommand(arguments);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return new DoneCommand(arguments);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_BYE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            // can consider throwing an exception here for invalid command"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 6,
      "dozenmatter": 42,
      "chloesyy": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/quote/Quote.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.author.Author;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.category.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Quote {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Author author;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String quote;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Category category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String reference;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote, Author author) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote,String reference) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote, String reference, Author author) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Author getAuthor() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setAuthor(Author author) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAuthorName() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return author.getName();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getQuote() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return quote;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setQuote(String quote) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getReference() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return reference;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void setReference(String reference) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Category getCategory() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setCategory(Category category) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quoteWithoutInformation \u003d \u0027\\\"\u0027 + quote + \u0027\\\"\u0027;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quoteInformation \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (author !\u003d null \u0026\u0026 reference !\u003d null) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation \u003d \" - \" + author.getName() + \", (\" + reference + \u0027)\u0027;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (author !\u003d null) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation \u003d \" - \" + author.getName();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (reference !\u003d null) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation \u003d \" - \" + reference;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quoteWithoutInformation + quoteInformation + System.lineSeparator();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 36,
      "dozenmatter": 45
    }
  },
  {
    "path": "src/main/java/seedu/duke/quote/QuoteList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.lists.QuotesifyList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class QuoteList extends QuotesifyList\u003cQuote\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private ArrayList\u003cQuote\u003e quotes \u003d super.getList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public QuoteList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public QuoteList(ArrayList\u003cQuote\u003e quotes) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(quotes);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote getQuote(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quotes.get(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quotes.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void add(Quote newQuote) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.add(newQuote);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quotesToReturn \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (int i \u003d 0; i \u003c getSize(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quotesToReturn +\u003d (i + 1 + \". \" + quotes.get(i).toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quotesToReturn;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 40,
      "dozenmatter": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/quote/QuoteParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.duke.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.author.Author;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.exception.QuotesifyException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class QuoteParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_QUOTE \u003d \"I don\u0027t see the quote anywhere\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_AUTHOR \u003d \"Author name cannot be empty if \\\"/by\\\" flag is present\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_REFERENCE \u003d \"Reference field cannot be empty if \\\"/from\\\" flag is present\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_REFERENCE_OR_AUTHOR \u003d \"Author name and Reference cannot be empty if \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"\\\"/by\\\" flag and \\\"/from\\\" flag are present\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseAddParameters(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (userInput.contains(Command.FLAG_REFERENCE) \u0026\u0026 userInput.contains(Command.FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithReferenceAndAuthor(userInput);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (userInput.contains(Command.FLAG_REFERENCE)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithReference(userInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (userInput.contains(Command.FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithAuthor(userInput);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithoutAdditionalInfo(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithoutAdditionalInfo(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if quote is empty"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(userInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(quote);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithReferenceAndAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if any fields are empty"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[]  quoteAndInformation \u003d userInput.split(Command.FLAG_DELIMITER, 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(quoteAndInformation[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        HashMap\u003cString, String\u003e referenceAndAuthorName \u003d parseReferenceAndAuthor(quoteAndInformation[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reference \u003d referenceAndAuthorName.get(Command.REFERENCE_KEYWORD);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String authorName \u003d referenceAndAuthorName.get(Command.AUTHORNAME_KEYWORD);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!reference.isEmpty() \u0026\u0026 !authorName.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Author author \u003d new Author(authorName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new Quote(quote, reference, author);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (!reference.isEmpty()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_REFERENCE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static HashMap parseReferenceAndAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(userInput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        HashMap\u003cString, String\u003e referenceAndAuthorName \u003d new HashMap\u003cString, String\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] referenceAndAuthor \u003d userInput.split(Command.FLAG_DELIMITER,2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reference \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String authorName \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (referenceAndAuthor[0].startsWith(\"from\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                reference \u003d referenceAndAuthor[0].substring(5).trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                authorName \u003d referenceAndAuthor[1].substring(3).trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                reference \u003d referenceAndAuthor[1].substring(5).trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                authorName \u003d referenceAndAuthor[0].substring(3).trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_REFERENCE_OR_AUTHOR);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        referenceAndAuthorName.put(\"reference\", reference);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        referenceAndAuthorName.put(\"authorName\", authorName);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return referenceAndAuthorName;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithReference(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if quote of reference is empty"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] quoteAndReference \u003d userInput.split(Command.FLAG_REFERENCE, 2);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(quoteAndReference[0]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reference \u003d trimAndCheckEmptyReference(quoteAndReference[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(quote, reference);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if quote of author name is empty"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] quoteAndAuthor \u003d userInput.split(Command.FLAG_AUTHOR, 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(quoteAndAuthor[0]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Author author \u003d trimAndCheckEmptyAuthor(quoteAndAuthor[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(quote, author);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String trimAndCheckEmptyQuote(String quote) throws QuotesifyException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quote \u003d quote.trim();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!quote.isEmpty()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return quote;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_QUOTE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Author trimAndCheckEmptyAuthor(String authorName) throws QuotesifyException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        authorName \u003d authorName.trim();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!authorName.isEmpty()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new Author(authorName);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String trimAndCheckEmptyReference(String reference) throws QuotesifyException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        reference \u003d reference.trim();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!reference.isEmpty()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return reference;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_REFERENCE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String parseListWithAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(userInput);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] authorFlagAndName \u003d userInput.split(Command.FLAG_AUTHOR);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String authorName \u003d authorFlagAndName[1].trim();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return authorName;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String parseListWithReference(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] referenceFlagAndName \u003d userInput.split(Command.FLAG_REFERENCE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String reference \u003d referenceFlagAndName[1].trim();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return reference;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 140
    }
  },
  {
    "path": "src/main/java/seedu/duke/rating/Rating.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Rating {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String titleOfRatedBook;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private int rating;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public Rating(int rating, String titleOfRatedBook) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.rating \u003d rating;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.titleOfRatedBook \u003d titleOfRatedBook;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String getTitleOfRatedBook() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return titleOfRatedBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void setTitleOfRatedBook(String titleOfRatedBook) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.titleOfRatedBook \u003d titleOfRatedBook;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public int getRating() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return rating;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setRating(int rating) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.rating \u003d rating;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return titleOfRatedBook + \": \" + rating + \" star\" + System.lineSeparator();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 20,
      "yuen-sihao": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/rating/RatingList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.duke.lists.QuotesifyList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class RatingList extends QuotesifyList\u003cRating\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private ArrayList\u003cRating\u003e ratings \u003d super.getList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public RatingList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public RatingList(ArrayList\u003cRating\u003e ratings) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(ratings);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public Rating getRating(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return ratings.get(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void add(Rating newRating) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.add(newRating);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.remove(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String ratingsToReturn \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingsToReturn +\u003d rating.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return ratingsToReturn;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 5,
      "yuen-sihao": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/rating/RatingParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.duke.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class RatingParser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final int RATING_ONE \u003d 1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final int RATING_FIVE \u003d 5;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_INVALID_RATING_SCORE \u003d \"That score is out of our range my friend\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_INVALID_FORMAT_RATING \u003d \"Sorry I don\u0027t understand you\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static int checkFormatOfRatingValue(String rating) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingToList \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingToList \u003d Integer.parseInt(rating);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_INVALID_FORMAT_RATING);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return ratingToList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static boolean checkRangeOfRatingValue(int rating) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (!(rating \u003e\u003d RATING_ONE \u0026\u0026 rating \u003c\u003d RATING_FIVE)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_INVALID_RATING_SCORE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/todo/ToDo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ToDo {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ToDo(String name, String deadline) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setDeadline(String deadline) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return \"T | \" + ((this.isDone) ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + \" | \" + this.name + \" | \" + this.deadline;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 18,
      "dozenmatter": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/todo/ToDoList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.lists.QuotesifyList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class ToDoList extends QuotesifyList\u003cToDo\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private ArrayList\u003cToDo\u003e todos \u003d super.getList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ToDoList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ToDoList(ArrayList\u003cToDo\u003e toDos) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(toDos);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void add(ToDo newToDo) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        todos.add(newToDo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ToDo find(int taskNum) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (taskNum \u003c\u003d todos.size()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return todos.get(taskNum);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        todos.remove(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String toDosToReturn \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (ToDo toDo : todos) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            toDosToReturn +\u003d toDo.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return toDosToReturn;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 40,
      "dozenmatter": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/TextUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.duke.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.duke.book.BookList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.category.Category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.category.CategoryList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.lists.ListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.quote.Quote;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.quote.QuoteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.duke.rating.Rating;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.duke.rating.RatingList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.todo.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.duke.todo.ToDoList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String LOGO \u003d \"________                __                .__  _____       \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"\\\\_____  \\\\  __ __  _____/  |_  ____   _____|__|/ ____\\\\__.__.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \" /  / \\\\  \\\\|  |  \\\\/  _ \\\\   __\\\\/ __ \\\\ /  ___/  \\\\   __\u003c   |  |\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"/   \\\\_/.  \\\\  |  (  \u003c_\u003e )  | \\\\  ___/ \\\\___ \\\\|  ||  |  \\\\___  |\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"\\\\_____\\\\ \\\\_/____/ \\\\____/|__|  \\\\___  \u003e____  \u003e__||__|  / ____|\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"       \\\\__\u003e                      \\\\/     \\\\/          \\\\/    \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"Welcome to Quotesify!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String GOODBYE_MESSAGE \u003d \"Alright, have a nice day!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String PROMPT_MESSAGE \u003d \"\\nWhat would you like to do with Quotesify?\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String INVALID_QUOTESIFY_COMMAND \u003d \"I don\u0027t understand you.\" + System.lineSeparator()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"Maybe type \\\"help\\\" for usage instructions?\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private static final String ADD_BOOK_MESSAGE \u003d \"The book [%s] has been added!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private static final String DELETE_BOOK_MESSAGE \u003d \"The book [%s] has been deleted!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private static final String LIST_BOOKS_MESSAGE \u003d \"Here is a list of all books:\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private static final String LIST_BOOKS_BY_AUTHOR_MESSAGE \u003d \"Here is a list of books by %s:\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String ADD_CATEGORY_MESSAGE \u003d \"I have tagged \\\"%s\\\" category to \\\"%s\\\"!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String DELETE_CATEGORY_MESSAGE \u003d \"I have removed \\\"%s\\\" category from \\\"%s\\\"!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String CATEGORY_SIZE_MESSAGE \u003d \"You have a total of %d item(s) tagged as \\\"%s\\\".\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String LIST_CATEGORIES_MESSAGE \u003d \"Here is the list of all categories:\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String ADD_RATING_MESSAGE \u003d \"You have just rated %s %d star!\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String DELETE_RATING_MESSAGE \u003d \"Rating for %s has been deleted!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String LIST_ALL_RATINGS_MESSAGE \u003d \"Planning to recommend some books?\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \" Here are your rated books!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String LIST_NO_RATINGS_FOUND_MESSAGE \u003d \"None of the books are rated yet!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String LIST_SPECIFIED_RATING_MESSAGE \u003d \"Here are the books you rated as %d star!\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String LIST_SPECIFIED_RATING_NOT_FOUND_MESSAGE \u003d \"I can\u0027t find any books rated %d star!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String ADD_TODO_MESSAGE \u003d \"The task [%s] has been added!\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String TODO_SIZE_MESSAGE \u003d \"You have a total of %d task(s) recorded.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String LIST_TODOS_MESSAGE \u003d \"Here is the list of all task(s) recorded:\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String DELETE_TODO_MESSAGE \u003d \"The Task [%s] has been deleted!\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String DONE_TODO_MESSAGE \u003d \"The Task [%s] has been marked as done!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String ADD_BOOKMARK_MESSAGE \u003d \"The bookmark [%s] has been added!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String UPDATE_BOOKMARK_MESSAGE \u003d \"The bookmark [%s] has been updated\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String BOOKMARK_SIZE_MESSAGE \u003d \"You have a total of %d bookmark(s) recorded.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String LIST_BOOKMARKS_MESSAGE \u003d \"Here is the list of all bookmark(s) recorded:\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String DELETE_BOOKMARKS_MESSAGE \u003d \"The bookmark [%s] has been removed!\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String LIST_ALL_QUOTES \u003d \"Here are all your quotes:\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String DELETE_QUOTE_MESSAGE \u003d \"The quote \\\"%s\\\" has been deleted!\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String LIST_NO_QUOTES_SAVED_MESSAGE \u003d \"You have no saved quotes!\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String LIST_NO_QUOTES_FOUND_MESSAGE \u003d \"I could not find any that matched your specifications.\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String LIST_QUOTES_BY_AUTHOR_MESSAGE \u003d \"Here is a list of quotes by %s:\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String LIST_QUOTES_BY_REFERENCE_MESSAGE \u003d \"Here is a list of quotes from %s:\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String LIST_QUOTES_BY_AUTHOR_AND_REFERENCE_MESSAGE \u003d \"Here is a list of quotes from %s by %s:\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String PRINT_RANDOM_QUOTE \u003d \"Before you continue, here\u0027s something:\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(GOODBYE_MESSAGE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(PROMPT_MESSAGE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (in.hasNextLine()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return in.nextLine().trim();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return \"bye\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printAddBook(Book book) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.printf(ADD_BOOK_MESSAGE + \"\\n\", book.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printDeleteBook(Book book) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.printf(DELETE_BOOK_MESSAGE + \"\\n\", book.toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printAllBooks(BookList bookList) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(LIST_BOOKS_MESSAGE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(bookList.toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printBooksByAuthor(BookList bookList, String authorName) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.printf(LIST_BOOKS_BY_AUTHOR_MESSAGE + \"\\n\", authorName);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(bookList.toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotes(QuoteList quotes) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(LIST_ALL_QUOTES);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(quotes);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAddCategoryToBook(String bookTitle, String categoryName) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((ADD_CATEGORY_MESSAGE) + \"\\n\", categoryName, bookTitle);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAddCategoryToQuote(String quote, String categoryName) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((ADD_CATEGORY_MESSAGE) + \"\\n\", categoryName, quote);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printRemoveCategoryFromBook(String bookTitle, String categoryName) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((DELETE_CATEGORY_MESSAGE) + \"\\n\", categoryName, bookTitle);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printRemoveCategoryFromQuote(String quote, String categoryName) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((DELETE_CATEGORY_MESSAGE) + \"\\n\", categoryName, quote);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printCategorySize(Category category) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((CATEGORY_SIZE_MESSAGE) + \"\\n\", category.getSize(), category.getCategoryName());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAllCategories(CategoryList categoryList) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(LIST_CATEGORIES_MESSAGE);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(categoryList.toString());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printCategory(Category category) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(category.toString());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printErrorMessage(String message) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printAddRatingToBook(int ratingScore, String titleOfBookToRate) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.printf((ADD_RATING_MESSAGE) + \"\\n\", titleOfBookToRate, ratingScore);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printAllRatings(RatingList ratingList) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratingList.getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(LIST_NO_RATINGS_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(LIST_ALL_RATINGS_MESSAGE);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(ratingList.toString());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printSpecifiedRating(RatingList ratings, int ratingToList) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratings.getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.printf((LIST_SPECIFIED_RATING_NOT_FOUND_MESSAGE) + \"\\n\", ratingToList);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.printf((LIST_SPECIFIED_RATING_MESSAGE) + \"\\n\", ratingToList);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getRating() \u003d\u003d ratingToList) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                System.out.println(rating.getTitleOfRatedBook());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotesByAuthor(QuoteList quoteList, String authorName) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        boolean hasResult \u003d false;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quoteList.getSize() \u003e\u003d 1) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.printf((LIST_QUOTES_BY_AUTHOR_MESSAGE) + \"\\n\", authorName);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                if (quote.getAuthorName().equals(authorName)) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    System.out.print(quote.toString());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    hasResult \u003d true;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!hasResult) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(LIST_NO_QUOTES_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotesByReference(QuoteList quoteList, String reference) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        boolean hasResult \u003d false;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quoteList.getSize() \u003e\u003d 1) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.printf((LIST_QUOTES_BY_REFERENCE_MESSAGE) + \"\\n\", reference);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                if (quote.getReference().equals(reference)) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    System.out.print(quote.toString());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    hasResult \u003d true;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!hasResult) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(LIST_NO_QUOTES_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotesByReferenceAndAuthor(QuoteList quoteList, String reference, String authorName) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        boolean hasResult \u003d false;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quoteList.getSize() \u003e\u003d 1) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.printf((LIST_QUOTES_BY_AUTHOR_AND_REFERENCE_MESSAGE) + \"\\n\", reference, authorName);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                if (quote.getReference().equals(reference) \u0026\u0026 quote.getAuthorName().equals(authorName)) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    System.out.print(quote.toString());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    hasResult \u003d true;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!hasResult) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(LIST_NO_QUOTES_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  void printDeleteQuote(String quote) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf((DELETE_QUOTE_MESSAGE) + \"\\n\", quote);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printDeleteRating(String bookTitle) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.printf((DELETE_RATING_MESSAGE) + \"\\n\", bookTitle);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAddToDo(ToDo toDo) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.printf(ADD_TODO_MESSAGE + \"\\n\", toDo.toString());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printToDo(ToDo toDo) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(toDo.toString());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAllToDos(ToDoList toDoList) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(LIST_TODOS_MESSAGE);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(toDoList.toString());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printDeleteToDo(ToDo  toDo) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.printf(DELETE_TODO_MESSAGE + \"\\n\", toDo.toString());"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printDoneToDo(ToDo  toDo) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.printf(DONE_TODO_MESSAGE + \"\\n\", toDo.toString());"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAddBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.printf(ADD_BOOKMARK_MESSAGE + \"\\n\", bookmark.toString());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printUpdateBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.printf(UPDATE_BOOKMARK_MESSAGE + \"\\n\", bookmark.toString());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printDeleteBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.printf(DELETE_BOOKMARKS_MESSAGE + \"\\n\", bookmark.toString());"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAllBookmarks(BookmarkList bookmarkList) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(LIST_BOOKMARKS_MESSAGE);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(bookmarkList.toString());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printRandomQuote(ListManager listManager) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quotes \u003d (QuoteList) listManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Random rand \u003d new Random();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int randomQuoteNumber \u003d rand.nextInt(quotes.getSize() - 1);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Quote quoteToPrint \u003d quotes.getQuote(randomQuoteNumber);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(PRINT_RANDOM_QUOTE + System.lineSeparator() + quoteToPrint.toString());"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printInvalidQuotesifyCommand() {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(INVALID_QUOTESIFY_COMMAND);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 52,
      "nat-ho": 95,
      "dozenmatter": 61,
      "chloesyy": 26,
      "yuen-sihao": 53
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.author.Author;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.quote.Quote;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.quote.QuoteList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 4,
      "-": 12
    }
  },
  {
    "path": "src/test/java/seedu/duke/book/BookTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.duke.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.duke.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "class BookTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void toString_titleAuthor_titleByAuthor() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Author author \u003d new Author(\"author\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Book book \u003d new Book(author, \"title\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        assertEquals(\"title by author\", book.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 15
    }
  },
  {
    "path": "src/test/java/seedu/duke/category/CategoryTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.duke.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.duke.book.Book;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void getBookCategoryTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Author author \u003d new Author(\"me\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Book book \u003d new Book(author, \"book1\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Category category \u003d new Category(\"romance\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        book.setCategory(category);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertEquals(category.getCategoryName(), book.getCategory().getCategoryName());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 18
    }
  },
  {
    "path": "src/test/java/seedu/duke/quote/QuoteTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.duke.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.duke.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class QuoteTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void quoteAddTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quotes \u003d new QuoteList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Author author \u003d new Author(\"Gill Bates\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Quote quote \u003d new Quote(\"It was the butler\", \"Herlock Shomles\", author);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.add(quote);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assertEquals(quote, quotes.getQuote(0));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 17
    }
  },
  {
    "path": "src/test/java/seedu/duke/rating/RatingTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.duke.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class RatingTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    RatingList ratings \u003d new RatingList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void addRating_validBookTitleAndRating_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String titleOfRatedBook \u003d \"Harry Potter\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d 4;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating rating \u003d new Rating(ratingScore, titleOfRatedBook);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.add(rating);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(rating, ratings.getList().get(0));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void listRatings_emptyList_success() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(ratings.toString(), \"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void listRatings_validRatings_sucess() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String titleOfRatedBook \u003d \"Book 1\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d 2;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating rating \u003d new Rating(ratingScore, titleOfRatedBook);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.add(rating);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(ratings.toString(), titleOfRatedBook + \": \" + ratingScore + \" star\" + System.lineSeparator());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 33
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "helloooo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -b book1 /by me"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -q quote1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -c action -b book1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -c motivational -q 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -c nice -b book1 -q 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "delete -c action -b book1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c action"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "delete -c motivational -q 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c motivational"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c nice"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "delete -b book1 /by me"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "dozenmatter": 11,
      "chloesyy": 1
    }
  }
]
