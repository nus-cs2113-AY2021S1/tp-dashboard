[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    mainClassName \u003d \"seedu.quotesify.Quotesify\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    archiveBaseName \u003d \"quotesify\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        attributes \"Main-Class\": \"seedu.quotesify.Quotesify\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    from {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "dozenmatter": 13,
      "-": 45
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chin Heng | [Github](https://github.com/dozenmatter) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Si Hao | [Github](https://github.com/yuen-sihao) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nathaniel | [Github](https://github.com/nat-ho) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chloe | [Github](https://github.com/chloesyy) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yilun | [Github](https://github.com/lunzard) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 5,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 1.0 Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "**Welcome to Quotesify!**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is a free desktop application to help you in your reading activities. With Quotesify, you can add"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "books and the related quotes that you wish to remember. You can categorize your books and quotes by author,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "customized categories, and even rate your books. Quotesify also comes with a progress tracker just to improve"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "your reading experience."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "This guide will provide information on the design and implementation of Quotesify. It will help you get started"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "on your journey of being a contributor to Quotesify. This guide will also explain the steps to test out the program,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "so that you will have a better understanding of the current status of Quotesify."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 2.0 Setting up"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Fork the Quotesify repo from [here](https://github.com/AY2021S1-CS2113T-T09-3/tp/releases),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "and clone the fork to your computer."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Open up your IDE (IntelliJ is highly recommended). If you are not at the welcome screen,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "click `File` \u003e `Close Project` to close any existing project."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3. Set up the correct JDK version for Gradle:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    1. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    2. Click `New…` and find the directory where you saved your JDK."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "4. Click `Import Project`."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "5. Locate the *build.gradle* file and select it."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "6. Click `OK`."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "7. Click `Open as Project`."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "8. Click `OK` to accept all default settings."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "9. To verify the set up, locate the `Quotesify.java` file, right-click it and select `Run Quotesify.main()`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "If the setup is correct, you should see something like this as shown below:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "________                __                .__  _____       "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "\\_____  \\  __ __  _____/  |_  ____   _____|__|/ ____\\__.__."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " /  / \\  \\|  |  \\/  _ \\   __\\/ __ \\ /  ___/  \\   __\u003c   |  |"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/   \\_/.  \\  |  (  \u003c_\u003e )  | \\  ___/ \\___ \\|  ||  |  \\___  |"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "\\_____\\ \\_/____/ \\____/|__|  \\___  \u003e____  \u003e__||__|  / ____|"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "       \\__\u003e                      \\/     \\/          \\/    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Welcome to Quotesify v2.0!"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "What would you like to do with Quotesify?"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 3.0 Design \u0026 implementation"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 3.1 Feature: Rating system for books"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Given below is the class diagram for classes related to the Rating System in Quotesify:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![Class Diagram for Rating system](images/ClassDiagram_Rating.png)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* A `Book` must exists before a `Rating` can be created."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The `XRatingCommand` class represents `AddRatingCommand`, `DeleteRatingCommand`, `ListRatingCommand`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ", `EditRatingCommand`, `FindRatingCommand` classes which all extends their respective parent `XCommand` classes."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* All the `XCommand` classes extends the abstract `Command` class."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 3.1.1 Add rating"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "The *add rating* feature will rely on an existing book object, and a rating object will then be created"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "in the process."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The book object will store an attribute named *rating*, which will be set by this feature."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The rating object will be made up of the book object and a rating score, which is stored in a list of ratings."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Given below is the sequence diagram for adding rating to a book:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![Sequence Diagram for Add Ratings](images/SeqDiagram_AddRating.png)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The sequence diagram shows the process of *Add Rating* from the `execute()` method in `AddRatingCommand` class,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "which extends the `AddCommand` class. The switch statement in the `execute()` method to decide the item that the user"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "is adding is not shown in the diagram."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The list of ratings will be retrieved from the `ListManager` class which stores all the different lists in Quotesify."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* In the `addRating()` method, if the user input such as book title, author or rating score is missing"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ", a message will be printed to inform the user and the method is returned."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* There will also be checks implemented to check if the rating score is within range, if the book to be rated exists"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "in Quotesify and if the book has been rated before. This is done by checking the list of books in Quotesify."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "If all these conditions are met, the book will be rated."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* When rating a book, the attribute *rating* of the book is set to the rating score. A rating object containing the"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "book details and rating score will also be created and stored in the rating list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "This list of ratings will be used when listing or finding ratings."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "##### Design Consideration"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Saving the ratings in a Rating List"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * Pros: Helps in listing and finding ratings as not all books are rated."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * Cons: Increases memory usage."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Using both book title and author to identify a rating instead of just book title"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * Pros: Allows books with the same title but different author to be rated."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 3.1.2 Find ratings"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "The *find ratings* feature will search if the rating for a particular book exists in Quotesify"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "and print details about the rating."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Given below is the sequence diagram for finding ratings:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![Sequence Diagram for Find Ratings](images/SeqDiagram_FindRating.png)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The sequence diagram shows the process of *Find Rating* from the `execute()` method in `FindRatingCommand` class"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "which extends the `FindCommand` class. The switch statement in the `execute()` method to decide the item that the"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "user is finding is not shown in the diagram."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The list of ratings will be retrieved from the `ListManager` class which stores all the different lists in Quotesify."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* In the `findRating()` method, if the user input such as the book to search for is missing, a message will be printed"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "to inform the user and the method is returned."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The list of ratings will be looped to see if the rating exists for the particular book."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Since the ratings of book is unique, the loop will be broken when a rating is found and details of the rating"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "will be printed to the user."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lunzard"
        },
        "content": "### Feature Add bookmark"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The proposed add bookmark feature will rely on an existing `Book` object, and then a `Bookmark` object will "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lunzard"
        },
        "content": "be created in the process."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* The `Bookmark` object will be made up of the `Book` object and a page number, which is stored in a list of "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lunzard"
        },
        "content": "bookmarks named `BookmarkList`."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 4.0 Product scope"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 4.1 Target user profile"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "The intended user of Quotesify is someone that meets the following criterias:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* reads a lot"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* has difficulty remembering content after reading them"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* prefers typing over other means of input"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* prefers using desktop applications"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* comfortable with using Command Line Interface (CLI) applications"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 4.2 Value proposition"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify will help you to improve your reading experience with quick and easy features such as book management,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "quote management, progress tracker, category management and a rating system for your books."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 5.0 User Stories"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|Version| As a ... | I want to ... | So that I ...|"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|reader|enter good quotes and phrases from a book I read|can quickly refer back to it at any time|"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|user|categorize my listings|can view quotes from a specific category that I want|"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|long time user|have a page to see a list of books and categories of my notes|can navigate into the relevant book/category without having to remember the titles|"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|user|give rating for the books I read|can recommend book titles to others when asked|"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|beginner reader|add deadlines to books I am reading|can keep track of my readling deadlines|"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|avid reader|be able to keep track of books|can filter out books I have read and those that are on my list of books to read|"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|forgetful user|add bookmarks to my book|can find the page where I last stopped|"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "|v1.0|user|categorise my books or quotes|can view items from a specific category whenever I need|"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "|v1.0|user|save quotes I find meaningful|can view my favourite quotes whenever I want|"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v2.0|forgetful reader|be reminded of quotes I saved|can remember them better in the long run|"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "|v2.0|student and reader|pen my thoughts to a highlighted quote or text|can expand on certain ideas or express how I feel|"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v2.0|long time user|be able to search for keywords|can find specific quotes I want from the list|"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v2.0|user after some time|find a book rating by its book title|do not have to go through the whole list|"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 6.0 Non-Functional Requirements"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Should work on major Operating Systems (OS) such as Windows and Mac with at least `Java 11` installed."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. A user should have no problems using the various commands without referring to the help page after some time."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 7.0 Glossary"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "* *glossary item* - Definition"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 8.0 Instructions for manual testing"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 8.1 Launch and shutdown"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Initial launch"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   1. Ensure `Java 11` and above is installed."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   2. Download the latest **Quotesify JAR file** from [here](https://github.com/AY2021S1-CS2113T-T09-3/tp/releases)."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   3. Save the jar file in a desired file directory."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   4. Open your command line or terminal and navigate into the file directory where Quotesify is saved."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   5. Run `java -jar Quotesify.jar` to launch Quotesify."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Shutdown"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   1. To terminate Quotesify, enter the `bye` command."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   2. Data will be automatically saved into a data file."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Subsequent launch"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   1. Open your command line or terminal and navigate into the file directory where Quotesify is saved."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   2. Run `java -jar Quotesify.jar` to launch Quotesify."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   3. Data will be automatically loaded from the data file upon launch."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### Adding a book"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `add -b Harry Potter /by JK Rowling`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book is added to Quotesify. A message will be prompted to indicate that"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   the book has been successfully added."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * `add -b`: Book title left empty"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * `add -b /by JK Rowling`: Book title left empty with author name specified"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * `add -b title`: Author name left empty"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * `add -b title /by`: Author name left empty with author tag specified"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    Expected: Book will not be added. An error message will by printed."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### List all existing books"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `list -b`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: All existing books in booklist will be listed."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### List book details"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `list -b 2`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book details of book with the book index 2 from list of all books will be printed."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `list -b Harry Potter /by JK Rowling`: Wrong format. "
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `list -b 10000`: Index out of range of booklist."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book details will not be printed. An error message will be printed instead."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### List books by author"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `list -b /by JK Rowling`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Books with the author JK Rowling will be listed. "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `list -b JK Rowling`: Flag `/by` not specified"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Books will not be listed. An error message will be printed."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### Find books by keyword"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `find -b Harry`"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Books with the title or author name containing Harry will be listed. "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `find -b`: Keyword not specified"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Books will not be listed. An error message will be printed."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### Delete books"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `delete -b 3`"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book with the book index of 3 in booklist will be deleted from list."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Successful message will be printed."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `delete -b Harry Potter`: Wrong format"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `delete -b 10000`: Index out of range of booklist."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book will not be deleted. An error message will be printed."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### Edit book"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `edit -b 3 /to Harry Potterrrrr`"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book title of book with the book index of 3 will be changed to Harry Potterrrrr."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. Other incorrect commands to try: "
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `edit -b Harry Potter /to Harry Potterrrrr`: Wrong format"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `edit -b 3 Harry Potterrrrr`: Flag `/to` not specified. "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `edit -b 3 /to`: New title not specified. "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book title will not be edited. An error message will be printed. "
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### Adding a quote"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Add a quote without author and reference to Quotesify"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Test case: `add -q life\u0027s short, smile while you still have teeth`"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Expected: Quote is added to Quotesify. message will be prompted to indicate that the quote has been successfully edited."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Add a quote with an author name to Quotesify"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Test case: `add -q luke, I am your father /by darth vader`"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Expected: Quote is added to Quotesify. message will be prompted to indicate that the quote has been successfully edited."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "3. Add a quote with reference to Quotesify"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Test case:`add -q get schwifty /from rick and morty`"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Expected: Quote is added to Quotesify. message will be prompted to indicate that the quote has been successfully edited."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "4. Add a quote with an author and reference to "
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Test case: `add -q so everyone’s supposed to sleep every single night now? /by rick /from rick and morty`"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Expected: Quote is added to Quotesify. message will be prompted to indicate that the quote has been successfully edited. "
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "5. Incorrect commands to try:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -q` : quote field left empty"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -q ` : empty space entered for quote field  "
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -q you can\u0027t see me /by` : author tag with missing author name"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -q my name is inigo montoya /from` : reference tag with missing reference title"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -q i am your father /by /from` : missing reference title and author name"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Quote will not be added. A message with error details will be shown."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### Listing all quotes"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `list -q`"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: The entire list of quotes with reference and author name (if present) in Quotesify will be displayed."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### Listing quotes by a specific author"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `list -q /by rick`"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: The list of quotes with the specified author name will be displayed."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -q /by` : author tag with missing author name"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: No quotes are listed. A message with error details will be shown."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### Listing quotes from a specific reference"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `list -q /from rick and morty`"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: The list of quotes with the specified reference title will be displayed."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -q /from` : reference tag with missing reference title"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: No quotes are listed. A message with error details will be shown."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### Listing quotes from a specific reference and by a specific author"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `list -q /from rick and morty /by rick`"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: The list of quotes with the specified reference title and author name will be displayed."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -q /from rick and morty /by` : reference and author tag with missing author name"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -q /from /by rick` : reference and author tag with missing reference title"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -q /from /by` : missing reference title and author name"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: No quotes are listed. A message with error details will be shown."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### Editing a quote"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `edit -q 2 /to no, i am your mummy /by darth vader`"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Quote will be updated, a prompt displaying old and updated quote will be shown."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -q` : missing quote number and updated quote"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -q 1 /to`: missing updated quote"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -q 1 You can\u0027t see me` : missing \"/to\" flag"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -q 9999999 /to You can\u0027t see me` : non-existent quote number"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Quote will not be updated. A message with error details will be shown."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### Deleting a quote"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `delete -q 1`"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Quote will be deleted from Quotesify. A message will be prompted to indicate that "
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   the quote has been successfully deleted."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `delete -q`: missing quote number field"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `delete -q X`: non integer input"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `delete -q 9999999`: non existent quote number"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: No quote is deleted. A message with error details will be shown."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### Finding a quote"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `find -q sleep`"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Quotes related to the keyword will be shown."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `find -q`: missing keyword"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `find -q `: empty space as keyword"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: No quotes will be found and listed. A message with error details will be shown."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### Adding reflection to a quote"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `add -qr 1 /reflect No, that\u0027s not true. It\u0027s impossible!`"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Reflection is added to quote. A message will be prompted to indicate that the reflection has been successfully added."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * Quotes with reflection will have a \"[R]\" tag attached to differentiate."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "5. Incorrect commands to try:"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -qr` : missing quote number, reflection tag and reflection"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -qr 1 /reflect` : reflection field missing"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -qr 9999 /reflect Reflection is here` : non-existent quote"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Reflection will not be added. A message with error details will be shown."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### Listing reflection of a quote"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `list -qr 1`"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: The reflection attached to the specified quote will be displayed."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -qr` : missing quote number"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -qr 9999` : non-existent quote"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Reflection is not listed. A message with error details will be shown."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### Editing reflection of a quote"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `edit -qr 1 /to Who is Yoda’s daddy?`"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Reflection will be updated, a prompt displaying updated reflection will be shown."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -qr` : missing quote number, to tag and updated reflection"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -qr 1 /to`: missing updated reflection"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -qr 1 nothing to reflect` : missing to flag"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -qr 9999999 /to updated reflection here!` : non-existent quote number"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Reflection will not be updated. A message with error details will be shown."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### Deleting reflection of a quote"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `delete -qr 1`"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Reflection will be deleted from the quote. A message will be prompted to indicate that "
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   the reflection has been successfully deleted."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `delete -qr`: missing quote number field"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `delete -qr X`: non integer input"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `delete -qr 9999999`: non existent quote number"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Quote reflection is not deleted. A message with error details will be shown."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### Adding categories"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. Add one or more category to a book"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Prerequisites: A book should exist in Quotesify."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Assume that the book \"Harry Potter\" is added into Quotesify assigned to index 1."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `add -c fantasy -b 1`"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that category has been tagged to the book successfully."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `add -c fantasy romance -b 1`"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that categories have been tagged to the book successfully."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. Add one or more category to a quote"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Prerequisites: A quote should exist in Quotesify."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Assume that the quote \"Life is great!\" is added into Quotesify assigned to index 1."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `add -c inspirational -q 1`"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that category has been tagged to the quote successfully."
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `add -c inspirational happy -q 1`"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that categories have been tagged to the quote successfully."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "3. Add one or more category to a book and quote"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Prerequisites: A book and quote should exist in Quotesify."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Assume that an existing book and quote are both assigned to index 1."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `add -c inspirational -b 1 -q 1`"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that category has been tagged to both book and quote successfully."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `add -c inspirational action -q 1`"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that categories have been tagged to both book and quote successfully."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "4. Incorrect commands to try"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `add -c` missing category name, book or quote"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `add -c action` missing a book or quote"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `add -c action -b 0 -q 0` invalid book and quote index"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `add -c -b 1 -q 1` missing category name"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   Expected: An error message will be prompted. No changes will be made."
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### Listing all categories"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. List all existing categories"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `list -c`"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A list of categories with the total number of items tagged under each category will be displayed."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### Listing a specific category"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. List all books and quotes tagged by a specific category"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `list -c action`"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A list of books and quotes tagged under that category will be displayed."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. Incorrect commands to try"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `list -c 123` invalid category name"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   Expected: An error message will be displayed indicating that no such category exists."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### Deleting existing categories"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. Remove one or more category from a book"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Prerequisites: Specified book index, quote index and category should exist in Quotesify."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Assume the book \"Harry Potter\" is tagged with [action, fantasy] category and assigned with index 1."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `delete -c action -b 1`"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that category has been removed from book successfully."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `delete -c action fantasy -b 1`"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that categories have been removed from book successfully."
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. Remove one or more category from a quote"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    - Prerequisites: Specified book index, quote index and category should exist in Quotesify."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    - Assume the quote \"Life is great!\" is tagged with [inspirational, happy] category and assigned with index 1."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    - Test case: `delete -c inspirational -q 1`"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "      Expected: A message will be prompted to indicate that category has been removed from quote successfully."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    - Test case: `delete -c inspirational happy -q 1`"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "      Expected: A message will be prompted to indicate that categories have been removed from quote successfully."
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "3. Remove one or more category from a book and quote"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Prerequisites: Specified book index, quote index and category should exist in Quotesify."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Assume that a book and quote are both tagged with [action, happy] categories."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `delete -c action -b 1 -q 1`"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that category has been removed from both book and quote successfully."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `delete -c action happy -b 1 -q 1`"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that categories have been removed from both book and quote successfully."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "4. Remove one or more category from list"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `delete -c action`"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   Expected: A message will be prompted to indicate that category has been removed from all book and quotes."
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `delete -c action fantasy`"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   Expected: A message will be prompted to indicate that categories has been removed from all book and quotes."
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "5. Incorrect commands to try"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `delete -c` missing category name, book or quote"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `delete -c action -b 0 -q 0` invalid book and quote index"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `delete -c -b 1 -q 1` missing category name"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   Expected: An error message will be prompted. No changes will be made."
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "         "
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### Editing an existing category"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. Edit an existing category name"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `edit -c love /to romance`"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted indicating that category has been changed successfully. All books and quotes tagged under the old category will be changed as well."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. Incorrect commands to try"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `edit -c` missing existing and new category name"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `edit -c love` missing new category name"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   Expected: An error message indicating invalid parameters and a command usage will be prompted. No changes will be made."
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Adding a book rating"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Prerequisite: Book to be rated should exist in Quotesify."
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Test case: `add -r 5 Harry Potter /by JK Rowling`"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Rating is added to the book. A message will be prompted to indicate rating has been added successfully."
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3. Other incorrect commands to try:"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `add -r`: rating score, book title and/or author fields left empty"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `add -r 1000 Harry Potter`: rating score is out of the range"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `add -r 3 x`: where x is a book that does not exist"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is added. A message with error details will be prompted."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    "
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Listing all existing book ratings"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `list -r`"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: The entire list of books and their ratings will be shown. Rating of books are sorted"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   in descending order, with the highest rating at the top."
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Listing books of a specific book rating"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `list -r 5`"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: The list of books with the specified rating will be shown."
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `list -r 1000`: rating score is out of the range"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `list -r AAA`: invalid rating score"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is listed. A message with error details will be prompted."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Deleting a book rating"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `delete -r Harry Potter /by JK Rowling`"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Rating is deleted from book. A message will be prompted to indicate rating has "
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   been deleted successfully."
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `delete -r`: book title and/or author fields left empty"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `delete -r x`: where x is a book that has not been rated"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is deleted. A message with error details will be prompted."
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Editing a book rating"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `edit -r 4 Harry Potter /by JK Rowling`"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Rating is edited to the new rating. A message will be prompted to indicate rating has"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   been edited successfully."
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `edit -r`: rating score, book title and/or author fields left empty"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `edit -r 1000 Harry Potter /by JK Rowling`: rating score is out of the range"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `edit -r 3 x`: where x is a book that has not been rated"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is edited. A message with error details will be prompted."
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Finding a book rating"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `find -r Harry Potter /by JK Rowling`"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: The rating for book titled \"Harry Potter\" by JK Rowling will be shown."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `find -r`: book title and/or author fields left empty"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `find -r x`: where x is a book that has not been rated"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is found and listed. A message with error details will be prompted."
      }
    ],
    "authorContributionMap": {
      "lunzard": 6,
      "nat-ho": 173,
      "dozenmatter": 115,
      "chloesyy": 72,
      "yuen-sihao": 210,
      "-": 24
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "# Quotesify"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is a free desktop application to help you in your reading activities. With Quotesify, you can add "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "books and the related quotes that you wish to remember. You can categorize your books and quotes by author,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "customized categories, and even rate your books. Quotesify also comes with a progress tracker just to improve"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "your reading experience."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is available for download on all major operating systems such as Windows and Mac."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 7,
      "-": 6
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "- [Introduction](#introduction)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "- [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "- [Features](#features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [1. Book Management](#1-book-management)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [2. Quote Management](#2-quote-management)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [3. Progress Tracker](#3-progress-tracker)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [4. Category Management](#4-category-management)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [5. Rating System for books](#5-rating-system-for-books)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "- [Usage](#usage)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "  * [Book Management](#book-management)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Adding a book](#adding-a-book-add--b)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * [Completing a book](#completing-a-book-done--b)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Listing all existing book](#listing-all-existing-books-list--b)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * [Listing book details](#listing-book-details-list--b)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Listing books by an Author](#listing-books-by-an-author-list--b)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * [Listing books by completion](#listing-books-by-completion-list--b)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Finding books by keyword](#finding-books-by-keyword-find--b)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Deleting a book](#deleting-a-book-delete--b)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "  * [Quote Management](#quote-management)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * [Add quotes](#adding-a-quote-add--q)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * [List all quotes](#listing-all-quotes-list--q)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * [List quotes from a specific reference](#listing-quotes-from-a-specific-reference-list--q)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * [List quotes from a specific author](#listing-quotes-from-a-specific-author-list--q)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * [List quotes from a specific reference and author](#listing-quotes-from-a-specific-reference-and-author-list--q)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * [Edit an existing quote](#editing-an-existing-quote-edit--q)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * [Delete a quote](#deleting-a-quote-delete--q)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Finding quotes](#finding-quotes-find--q)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * [Add quote reflection](#adding-reflection-to-a-quote-add--qr)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * [List quote reflection](#listing-reflection-of-a-quote-list--qr)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * [Edit an existing quote reflection](#editing-reflection-of-a-quote-edit--qr)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * [Delete a quote reflection](#deleting-reflection-of-a-quote-delete--qr)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "  * [Progress Tracker](#progress-tracker)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "  * [Category Management](#category-management)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Add categories](#add-categories-add--c)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [List categories](#list-categories-list--c)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [List items in a category](#list-items-in-a-category-list--c)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Delete categories](#delete-categories-delete--c)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Edit an existing category](#edit-an-existing-category-edit--c)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "  * [Rating System for Books](#rating-system)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Adding a book rating](#adding-a-book-rating-add--r)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Listing book ratings](#listing-book-ratings-list--r)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Deleting a book rating](#deleting-a-book-rating-delete--r)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Editing an existing book rating](#editing-an-existing-book-rating-edit--r)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * [Finding an existing book rating](#finding-an-existing-book-rating-find--r)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "- [Getting Help in Quotesify](#getting-help-in-quotesify)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "- [FAQ](#faq)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "- [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is a free desktop application to help you in your reading activities. With Quotesify, you can add "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "books and the related quotes that you wish to remember. You can categorize your books and quotes by author,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "customized categories, and even rate your books. Quotesify also comes with a progress tracker just to improve"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "your reading experience."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is available for download on all major operating systems such as Windows and Mac."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Before you begin, here\u0027s what you need to do:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Ensure you have at least `Java 11` installed on your system."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Download the latest **Quotesify JAR file** from [here](https://github.com/AY2021S1-CS2113T-T09-3/tp/releases)."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3. Open your command line or terminal and navigate into the file directory where you saved the application."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "4. Run `java -jar Quotesify.jar` to launch Quotesify."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "5. Type a command in the command line and press `ENTER` to execute it."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "6. Refer to Features below for details of each command."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 1. Book Management"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 2. Quote Management"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 3. Progress Tracker"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 4. Category Management"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 5. Rating System for books"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "The rating system in Quotesify allows you to rate your books from 1 to 5 star. With this system, you will not forget"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "how you feel about the books you read, and will always be ready to recommend a book to a fellow book reader."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Ratings can be edited whenever you change your mind about the book, or be deleted when you are not interested"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "in that rating anymore. Ratings can also be listed according to their ratings - with your favourites at the top - as"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "well as be searched based on the book title and author."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "With this rating system, you will never forget how you feel about the books that you have read!"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### Book Management"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Do you have books you are currently reading and want to keep track of them? "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Or do you have a list of books you wish to read in the future but could never remember them? "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "You can add books to your booklist so that you can refer to it at any time. "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "#### Adding a book: `add -b`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "You can add a book to your current booklist. "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `add -b BOOK_TITLE /by AUTHOR`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* You must specify both the title and the author of the book. "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`add -b Harry Potter /by JK Rowling`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "The book [Harry Potter by JK Rowling] has been added!"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "#### Completing a book: `done -b`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Finished reading a book? You can now mark your book as done."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `done -b BOOK_NUMBER`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* `BOOK_NUMBER` refers to the index you see when you list ALL books."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* The book number must be an existing number in the list when you list ALL books."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " `done -b 2`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "The book [Harry Potter by JK Rowling] has been marked as done!"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "#### Listing all existing books: `list -b`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Want to see what books you have in your reading list? You can list all books currently in your booklist. "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `list -b`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list -b`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here is a list of all books:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Harry Potter by JK Rowling"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. The Lion, the Witch and the Wardrobe by CS Lewis"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "3. Becoming by Michelle Obama"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "4. The Chronicles of Narnia by CS Lewis"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "#### Listing book details: `list -b`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Want to check a book\u0027s details? You can list the details of a book by specifying the book number."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `list -b BOOK_NUMBER`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* `BOOK_NUMBER` refers to the index you see when you list ALL books."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* The book number must be an existing number in the list when you list ALL books."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list -b 2`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Case 1: When the book has not been rated and not completed."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here are the details of your book:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Title: Harry Potter"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Author: JK Rowling"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Categories:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "There are no categories created!"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Case 2: When the book has been rated but not completed."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here are the details of your book:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Title: Harry Potter"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Author: JK Rowling"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Categories:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "There are no categories created!"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Rating: 5"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Case 3: When the book has not been rated but completed."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here are the details of your book:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "[Completed]"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Title: Harry Potter "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Author: JK Rowling"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Categories:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "There are no categories created!"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Case 4: When the book has been rated and completed."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here are the details of your book:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "[Completed]"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Title: Harry Potter"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Author: JK Rowling"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Categories:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "There are no categories created!"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Rating: 5"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "#### Listing books by an Author: `list -b`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "You can list all books currently in your booklist with the same author. "
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `list -b /by AUTHOR`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* You must specify an existing author name"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* You must put `/by` before the author name"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list -b /by CS Lewis`"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here is a list of books by CS Lewis:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. The Lion, the Witch and the Wardrobe by CS Lewis"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. The Chronicles of Narnia by CS Lewis"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "#### Listing books by completion: `list -b`"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Only want to see the books you have finished or not finished? You can do that using the command below."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "##### List done books"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `list -b done`"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list -b done`"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here are the books you have completed:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. [v] Harry Potter by JK Rowling"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. [v] Harry Potter 2 by JK Rowling"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "##### List done books"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `list -b undone`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list -b undone`"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here are the books you have yet to complete:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. [x] Harry Potter by JK Rowling"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. [x] Harry Potter 2 by JK Rowling"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "#### Finding books by keyword: `find -b`"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Can\u0027t recall the book title you want in your long list of books? You can find the book using a keyword."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `find -b KEYWORD`"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`find -b the`"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here is a list of books with the keyword \"the\":"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. The Lion, the Witch and the Wardrobe by CS Lewis"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. The Chronicles of Narnia by CS Lewis"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "#### Deleting a book: `delete -b`"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Don\u0027t need a book anymore? You can delete the book permanently. "
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `delete -b BOOK_NUMBER`"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* `BOOK_NUMBER` refers to the index you see when you list ALL books."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* The book number must be an existing number in the list when you list ALL books."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`delete -b 1`"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "The book [Harry Potter by JK Rowling] has been deleted!"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~ "
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "#### Editing an existing book: `edit -b`"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Accidentally typed in the wrong book title? You can edit your book titles. "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `edit -b BOOK_NUMBER /to NEW_TITLE`"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* `BOOK_NUMBER` refers to the index you see when you list ALL books."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* The book number must be an existing number in the list when you list ALL books."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* `/to` flag must be typed before the new title"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`edit -b 2 /to Harry Potter 2`"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "The book has been edited from [Harry Potter] to [Harry Potter 2]!"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### Quote Management"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Came across an inspiring quote while reading, or a useful productivity tip from an article only to forget it after"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "some time? Quotesify is here to help you store and track those all inspiring quotes while reminding you about them"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "so you\u0027ll never forget them!  "
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Adding a quote: `add -q`"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Adds a quote to your current list of quotes."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `add -q QUOTE {[/by AUTHOR] | [/from REFERENCE]}`"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The quote field should not be empty."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Reference and Author fields are optional, both or either one can be used."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Tags should not be used without their relevant data."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. `add -q life is short, smile while you still have teeth`"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. `add -q luke, i am your father /by darth vader`"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "3. `add -q get schwifty! /from rick and morty`"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "4. `add -q so everyone’s supposed to sleep every single night now? /from rick and morty /by rick`"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome 1:"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The quote [\"life is short, smile while you still have teeth\"] has been added!"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome 2:"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The quote [\"luke, i am your father\" - by darth vader] has been added!"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome 3:"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The quote [\"get schwifty!\" - from rick and morty] has been added!"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome 4:"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The quote [\"so everyone’s supposed to sleep every single night now?\" - by rick, (from rick and morty)] has been added!"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Listing all quotes: `list -q`"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Lists all existing quotes."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `list -q`"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `list -q`"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Here are all your quotes:"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. \"life is short, smile while you still have teeth\""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. \"luke, i am your father\" - by darth vadar"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "3. \"get schwifty!\" - from rick and morty"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "4. \"so everyone’s supposed to sleep every single night now?\" - by rick, (from rick and morty)"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Listing quotes from a specific reference: `list -q`"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Lists all quotes tagged under the specified reference title."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `list -q /from REFERENCE`"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `list -q /from Rick and Morty`"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Here is a list of quotes from Rick and Morty:"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "\"get schwifty!\" - from rick and morty"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "\"so everyone’s supposed to sleep every single night now?\" - by rick, (from rick and morty)"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Listing quotes from a specific author: `list -q`"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Lists all quotes tagged under the specified author."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `list -q /by AUTHOR`"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `list -q /by darth vader`"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Here is a list of quotes by darth vader:"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "\"luke, i am your father\" - by darth vadar"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Listing quotes from a specific reference and author: `list -q`"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Lists all quotes tagged under the specified reference and author."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `list -q /by AUTHOR /from REFERENCE`"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `list -q /by rick /from rick and morty`"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Here is a list of quotes from rick and morty by rick:"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "\"so everyone’s supposed to sleep every single night now?\" - by rick, (from rick and morty)"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Editing an existing quote: `edit -q`"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Edits an existing quote from your list of quotes."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `edit -q QUOTE_NUMBER /to UPDATED_QUOTE`"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote number field should not be empty."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The specified quote should exist in Quotesify."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Format of quote follows adding of quote above."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `edit -q 2 /to no, i am your mummy /by darth vader`"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The quote has been edited from: [\"luke, i am your father\" - by darth vadar] to [\"no, i am your mummy\" - by darth vadar]!"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Deleting a quote: `delete -q`"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Removes a quote from your current list of quotes."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `delete -q QUOTE_NUMBER`"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote number field should not be empty."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The specified quote should exist in Quotesify."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `delete -q 1`"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The quote \"life is short, smile while you still have teeth\" has been deleted!"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Finding quotes: `find -q`"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Finds existing quotes related to a keyword."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `find -q KEYWORD`"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Keyword field should not be empty."
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `find -q sleep`"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Here are the results of my search:"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "\"i pretty much spend all day, every day just looking forward to go back to sleep\""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "\"don\u0027t give up on your dreams, keep sleeping!\" - by stranger"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Adding reflection to a quote: `add -qr`"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Adds your reflection to an existing quote."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `add -qr QUOTE_NUMBER /reflect REFLECTION`"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote number field should not be empty."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The specified quote should exist in Quotesify."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Reflect tag and reflection field should not be empty."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `add -qr 1 /reflect No, that’s not true. It’s impossible!`"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Reflection has been added to quote: \"no, i am your father\" - by darth vader [R]"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Reflection: No, that’s not true. It’s impossible!"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Listing reflection of a quote: `list -qr`"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Lists reflection of an existing quote."
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `list -qr QUOTE_NUMBER`"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote number field should not be empty."
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The specified quote should exist in Quotesify."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote should have a reflection added to it"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `list -qr 1`"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Here is the reflection you are looking for!"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Quote: \"no, i am your father\" - by darth vader [R]"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Reflection: No, that’s not true. It’s impossible!"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Editing reflection of a quote: `edit -qr`"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Edits the reflection of an existing quote."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `edit -qr QUOTE_NUMBER /to UPDATED_REFLECTION`"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote number field should not be empty."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The specified quote should exist in Quotesify."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote should have a reflection added to it"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `edit -qr 1 /to Who is Yoda’s daddy?`"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Reflection has been updated!"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Quote: \"no, i am your father\" - by darth vader [R]"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Reflection: Who is Yoda’s daddy?"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Deleting reflection of a quote: `delete -qr`"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Deletes reflection of an existing quote."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `delete -qr QUOTE_NUMBER`"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote number field should not be empty."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The specified quote should exist in Quotesify."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote should have a reflection added to it"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `delete -qr 1`"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Reflection for the quote \"no, i am your father\" has been deleted!"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### Category Management"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "If you like customising your own list, you can do so by categorising your books and quotes."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "#### Add categories: `add -c`"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Add one or more categories to a specified book or quote."
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Format: `add -c CATEGORIES {[-b BOOK_NUMBER] | [-q QUOTE_NUMBER]}`"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* `[-b BOOK_NUMBER]` tag is optional. Use it to specify an existing book."
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* `[-b QUOTE_NUMBER]` tag is optional. Use it to specify an existing quote."
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* You must specify either a book, quote, or both."
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* The specified book or quote should exist in Quotesify."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* Multiple categories should be \u003cu\u003espace separated\u003c/u\u003e."
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Example of usage: `add -c fantasy -b 1`"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "I have tagged category [fantasy] to \"Harry Potter\"!"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "#### List categories: `list -c`"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "List all existing categories."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Format: `list -c`"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Example of usage: `list -c`"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Here is the list of all categories:"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. action - (2 items)"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. inspirational - (1 items)"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "3. fantasy - (1 items)"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "#### List items in a category: `list -c`"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "List all books and quotes tagged under the specified category name."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Format: `list -c CATEGORY`"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Example of usage: `list -c fantasy`"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Here are the list of items tagged as [fantasy]:"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "BOOKS:"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. Harry Potter by JK Rowling"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "#### Delete categories: `delete -c`"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Remove one or more categories from a specified book or quote."
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Format: `delete -c CATEGORIES [-b BOOK_NUMBER] [-q QUOTE_NUMBER]`"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* `[-b BOOK_NUMBER]` tag is optional. Use it to specify an existing book."
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* `[-b QUOTE_NUMBER]` tag is optional. Use it to specify an existing quote."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* The specified book or quote should exist in Quotesify."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* Multiple categories should be \u003cu\u003espace separated\u003c/u\u003e."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "`delete -c fantasy -b 1`"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "`delete -c fantasy`"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "I have removed category [fantasy] from \"Harry Potter\"!"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "I have removed category [fantasy] from all books and quotes!"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "#### Edit an existing category: `edit -c`"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Edit an existing category name."
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Format: `edit -c OLD_CATEGORY /to NEW_CATEGORY`"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Example of usage: `edit -c fantasy /to romance`"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "The category has been changed from [fantasy] to [romance]!"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Rating System"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Are you having your own opinions about the books you read? You might want to record down your favorites,"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "so that you can recommend the best books to your friends and fellow book readers."
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Adding a book rating: `add -r`"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Adds a rating to a book."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `add -r RATING_SCORE BOOK_TITLE /by AUTHOR`"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The book you would like to rate should exist in Quotesify."
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` should be within the range of ONE (1) to FIVE (5)."
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE`, `BOOK_TITLE` and `AUTHOR` fields cannot be left empty."
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage: `add -r 5 Harry Potter /by JK Rowling`"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "You have just rated [Harry Potter by JK Rowling] 5 star!"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Listing book ratings: `list -r`"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Lists ratings of books."
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `list -r [RATING_SCORE]`"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` is **optional**"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` should be within the range of ONE (1) to FIVE (5)."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. `list -r`"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. `list -r 5`"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome 1:"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Planning to recommend some books? Here are your rated books!"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "[Harry Potter] by JK Rowling: 5 star"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome 2:"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Here are the books you rated as 5 star!"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "[Harry Potter] by JK Rowling: 5 star"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Deleting a book rating: `delete -r`"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Deletes a rating from a book."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `delete -r BOOK_TITLE /by AUTHOR`"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `BOOK_TITLE` and `AUTHOR` fields cannot be left empty."
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage: `delete -r Harry Potter /by JK Rowling`"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Rating for [Harry Potter by JK Rowling] has been deleted!"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Editing an existing book rating: `edit -r`"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Edits a rating of a book."
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `edit -r RATING_SCORE BOOK_TITLE /by AUTHOR`"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` should be within the range of ONE (1) to FIVE (5)."
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE`, `BOOK_TITLE` and `AUTHOR` fields cannot be left empty."
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage: `edit -r 4 Harry Potter /by JK Rowling`"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Ratings for [Harry Potter by JK Rowling] has been updated to 4 star!"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Finding an existing book rating: `find -r`"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Finds a rating of a book."
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `find -r BOOK_TITLE /by AUTHOR`"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `BOOK_TITLE` and `AUTHOR` fields cannot be left empty."
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage: `find -r Harry Potter /by JK Rowling`"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Here is your rating for [Harry Potter by JK Rowling]!"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "[Harry Potter] by JK Rowling: 4 star"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Getting help in Quotesify"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Forgotten the commands to get things done? You will not be left feeling lost."
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify got you covered with the Help page."
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage: `help`"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Feeling stuck? Well here are the things you can do with Quotesify v2.0:"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Book Management"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Add book: add -b BOOK_TITLE /by AUTHOR"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Delete book: delete -b BOOK_TITLE /by AUTHOR"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List books: list -b [/by AUTHOR]"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Quote Management"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Add quote: add -q QUOTE [/from BOOK_TITLE] [/by AUTHOR]"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Delete quote:delete -q QUOTE_NUMBER"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List quotes: list -q [/by AUTHOR] [/from BOOK_TITLE]"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Edit quote: edit -q QUOTE_NUMBER /to QUOTE [/by AUTHOR] [/from BOOK_TITLE]"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Find quotes: find -q KEYWORD"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Add quote reflection: add -qr QUOTE_NUMBER /reflect REFLECTION"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Delete quote reflection:delete -qr QUOTE_NUMBER"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "List quotes reflection: list -qr QUOTE_NUMBER"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Edit quote reflection: edit -qr QUOTE_NUMBER /to UPDATED_REFLECTION"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3a. Bookmark Tracker"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Add bookmark: bookmark -b BOOK_TITLE /pg PAGE_NUMBER"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Delete bookmark: delete -bm BOOK_TITLE"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List bookmarks: list -bm"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Update bookmark: bookmark -b BOOK_TITLE /pg PAGE_NUMBER"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3b. Task Tracker"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Add task: add -t TASK /by DEADLINE"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Delete task: delete -t TASK_NUMBER"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List tasks: list -t"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Mark task as done: done -t TASK_NUMBER"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "4. Category Management"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Add category: add -c CATEGORY {[-b BOOK_TITLE] | [-q QUOTE_NUMBER]}"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Delete category: delete -c CATEGORY {[-b BOOK_TITLE] | [-q QUOTE_NUMBER]}"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "List categories: list -c"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "List items in a category: list -c CATEGORY"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Edit category: edit -c OLD_CATEGORY /to NEW_CATEGORY"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "5. Rating System"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Add rating: add -r RATING_SCORE BOOK_TITLE /by AUTHOR"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Delete rating: delete -r BOOK_TITLE /by AUTHOR"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List ratings: list -r [RATING_SCORE]"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Edit rating: edit -r RATING_SCORE BOOK_TITLE /by AUTHOR"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Find rating: find -r BOOK_TITLE /by AUTHOR"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Other useful commands"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Show this help page: help"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quit Quotesify: bye"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Remember: words in [] are optional, and words in CAPS are your own input"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Hope this helps!"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "~ Your friends from Quotesify"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Enter the following command | To do this"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "--------------------------- | -----------"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`add -b BOOK_TITLE /by AUTHOR` | Add book"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`add -q QUOTE [/from BOOK_TITLE] [/by AUTHOR]` | Add quote"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`add -qr QUOTE_NUMBER /reflect REFLECTION` | Add quote reflection"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`add -t TASK /by DEADLINE` | Add task"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`add -c CATEGORIES {[-b BOOK_TITLE] [-q QUOTE_NUMBER]}` | Add categories"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`add -r RATING_SCORE BOOK_TITLE /by AUTHOR` | Add rating"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`list -b [/by AUTHOR]` | List books"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list -b BOOK_NUMBER` | List book detail"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list -b done/undone` | List books by completion"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`list -q [/by AUTHOR] [/from BOOK_TITLE]` | List quotes"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`list -qr QUOTE_NUMBER` | List quote reflection"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`list -bm` | List bookmarks"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`list -t` | List tasks"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`list -c [CATEGORY]` | List all categories / List items in a category"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`list -r [/RATING_SCORE]` | List ratings"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`edit -b BOOK_NUMBER /to NEW_TITLE` | Edit book title"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`edit -q QUOTE_NUMBER /to QUOTE [/by AUTHOR] [/from BOOK_TITLE]` | Edit quote"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`edit -qr QUOTE_NUMBER /to UPDATED_REFLECTION` | Edit quote reflection"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`edit -c OLD_CATEGORY /to NEW_CATEGORY` | Edit a category name"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`edit -r RATING_SCORE BOOK_TITLE /by AUTHOR` | Edit rating"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`delete -b BOOK_NUMBER` | Delete book"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`delete -q QUOTE_NUMBER` | Delete quote"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`delete -qr QUOTE_NUMBER` | Delete quote reflection"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`delete -bm BOOK_TITLE` | Delete bookmark"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`delete -t TASK_NUMBER` | Delete task"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`delete -c CATEGORIES {[-b BOOK_TITLE] [-q QUOTE_NUMBER]}` | Delete categories"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`delete -r BOOK_TITLE /by AUTHOR` | Delete rating"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`find -b KEYWORD` | Find books"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`find -q KEYWORD` | Find quotes"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`find -r BOOK_TITLE /by AUTHOR` | Find rating"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`bookmark -b BOOK_TITLE /pg PAGE_NUMBER` | Add bookmark"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`bookmark -b BOOK_TITLE /pg PAGE_NUMBER` | Update bookmark"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`done -b BOOK_NUMBER` | Mark book as complete"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`done -t TASK_NUMBER` | Mark task as done"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`help` | Show help page"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`bye` | Terminate the program"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Words in [] are **OPTIONAL**, and words in **CAPS** are your own input"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 247,
      "dozenmatter": 117,
      "chloesyy": 211,
      "yuen-sihao": 181,
      "-": 33
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/Quotesify.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Quotesify {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private final Logger logger \u003d Logger.getLogger(\"QuotesifyLogger\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private final String saveFileLocation \u003d \"/data/quotesify.json\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Quotesify() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui \u003d new TextUi();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        setupLogger();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ListManager.initialiseAllLists();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage \u003d new Storage(saveFileLocation);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printRandomQuote();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ui.printRandomQuote();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void runLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String userCommandText \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Command command \u003d parser.parseUserCommand(userCommandText);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ui.printInvalidQuotesifyCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            command.execute(ui, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        runLoopUntilExitCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        new Quotesify().run();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void setupLogger() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        logger.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            FileHandler fileHandler \u003d new FileHandler(\"quotesify.log\", true);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            // remove this if you want to view logs in XML format"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            logger.addHandler(fileHandler);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 30,
      "dozenmatter": 45,
      "yuen-sihao": 1,
      "-": 7
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/author/Author.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.author;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Author implements JsonSerializer {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Author(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"name\", this.getName());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return json;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 27
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/book/Book.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.UiMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Book implements JsonSerializer {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Author author;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private int rating;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Book(Author author, String title) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.rating \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Book(Author author, String title, ArrayList\u003cString\u003e category) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.categories \u003d category;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.rating \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Book(Author author, String title, ArrayList\u003cString\u003e category, int rating) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.categories \u003d category;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.rating \u003d rating;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Book(Author author, String title, boolean isDone, ArrayList\u003cString\u003e category, int rating) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.categories \u003d category;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.rating \u003d rating;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Author getAuthor() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setAuthor(Author author) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return isDone ? \"[v] \" : \"[x] \";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ArrayList\u003cString\u003e getCategories() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return categories;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setCategories(ArrayList\u003cString\u003e categories) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public int getRating() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return rating;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void setRating(int ratingScore) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.rating \u003d ratingScore;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String getBookDetailString() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String stringToReturn \u003d \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            stringToReturn +\u003d \"[Completed]\" + System.lineSeparator();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        stringToReturn +\u003d \"Title: \" + title + System.lineSeparator();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        stringToReturn +\u003d \"Author: \" + author.getName() + System.lineSeparator();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        stringToReturn +\u003d \"Categories: \" + System.lineSeparator();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (categories.size() \u003e 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            for (String category : categories) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                stringToReturn +\u003d index + \". \" + category + System.lineSeparator();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            stringToReturn +\u003d UiMessage.EMPTY_CATEGORY_LIST_MESSAGE + System.lineSeparator();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (rating !\u003d 0) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            stringToReturn +\u003d \"Rating: \" + rating + System.lineSeparator();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (categories !\u003d null) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return title + \" by \" + author.getName(); // removed display of category"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return title + \" by \" + author.getName();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject details \u003d new JSONObject();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"author\", this.getAuthor().toJson());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"title\", this.getTitle());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        details.put(\"isDone\", this.isDone());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"categories\", this.getCategories());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        details.put(\"rating\", this.getRating());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 59,
      "chloesyy": 69,
      "yuen-sihao": 10
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/book/BookList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class BookList extends QuotesifyList\u003cBook\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cBook\u003e books \u003d super.getList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private BookTitleComparator comparator \u003d new BookTitleComparator();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList(ArrayList\u003cBook\u003e books) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(books);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void add(Book newBook) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        books.add(newBook);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        books.remove(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void deleteByBook(Book book) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        books.remove(book);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return books.isEmpty();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public int getIndex(Book book) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return books.indexOf(book);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Book getBook(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return books.get(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void sort() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        books.sort(comparator);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String booksToReturn \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            booksToReturn +\u003d book.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return booksToReturn;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String toStringWithIndex() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String booksToReturn \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            booksToReturn +\u003d getIndex(book) + 1 + \". \" + book.getStatusIcon()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    + book.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return booksToReturn;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void ensureNoSimilarBooks(String title, String authorName) throws QuotesifyException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e similarBooks \u003d find(title, authorName);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (!similarBooks.isEmpty()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(Command.ERROR_BOOK_ALREADY_EXISTS);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public ArrayList\u003cBook\u003e find(String title, String authorName) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        assert !title.isEmpty() || !authorName.isEmpty();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseTitle \u003d title.toLowerCase();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseAuthor \u003d authorName.toLowerCase();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .filter(book -\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    Author bookAuthor \u003d book.getAuthor();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    String bookAuthorName \u003d bookAuthor.getName();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    String bookTitle \u003d book.getTitle();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    return bookAuthorName.toLowerCase().equals(lowerCaseAuthor)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                            \u0026\u0026 bookTitle.toLowerCase().equals(lowerCaseTitle);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return filteredBooks;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList findByKeyword(String keyword) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        assert !keyword.isEmpty();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseKeyword \u003d keyword.toLowerCase();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .filter(book -\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    String authorName \u003d book.getAuthor().getName();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    String bookTitle \u003d book.getTitle();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    return authorName.toLowerCase().contains(lowerCaseKeyword)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                            || bookTitle.toLowerCase().contains(lowerCaseKeyword);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return new BookList(filteredBooks);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Book findByTitle(String title) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        assert !title.isEmpty();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseTitle \u003d title.toLowerCase();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (book.getTitle().toLowerCase().equals(lowerCaseTitle)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                return book;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Book findByNum(int num) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d num - 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (num \u003c\u003d books.size()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return books.get(index);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Author findExistingAuthor(String authorName) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList filteredBooks \u003d filterByAuthor(authorName);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (filteredBooks.isEmpty()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Author author \u003d filteredBooks.getBook(0).getAuthor();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList filterDone(boolean isDone) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    .filter(book -\u003e book.isDone())"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    .filter(book -\u003e !book.isDone())"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return new BookList(filteredBooks);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList filterByAuthor(String authorName) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseAuthor \u003d authorName.toLowerCase();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .filter(book -\u003e {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    Author bookAuthor \u003d book.getAuthor();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    String bookAuthorName \u003d bookAuthor.getName();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    return bookAuthorName.toLowerCase().equals(lowerCaseAuthor);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return new BookList(filteredBooks);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public BookList filterByCategory(String categoryName) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .filter(book -\u003e {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    ArrayList\u003cString\u003e categories \u003d book.getCategories();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    return categories.contains(categoryName);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new BookList(filteredBooks);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(book.toJson());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 19,
      "dozenmatter": 41,
      "chloesyy": 134
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/book/BookTitleComparator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class BookTitleComparator implements Comparator\u003cBook\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public int compare(Book b1, Book b2) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return b1.getTitle().toLowerCase().compareTo(b2.getTitle().toLowerCase());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 10
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/bookmark/Bookmark.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Bookmark implements JsonSerializer {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Book book;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private int pageNum;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Bookmark(Book book, int pageNum) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.book \u003d book;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.pageNum \u003d pageNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Book getBook() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return book;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setBook(Book book) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.book \u003d book;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public int getPageNum() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return pageNum;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setPageNum(int pageNum) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.pageNum \u003d pageNum;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return \"\\\"\" + book.getTitle() + \"\\\"\" + \" at page: \" + Integer.toString(pageNum);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject details \u003d new JSONObject();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"book\", this.getBook().toJson());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"pageNum\", this.pageNum);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 5,
      "dozenmatter": 39
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/bookmark/BookmarkList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class BookmarkList extends QuotesifyList\u003cBookmark\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private ArrayList\u003cBookmark\u003e bookmarks \u003d super.getList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public BookmarkList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public BookmarkList(ArrayList\u003cBookmark\u003e bookmarks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(bookmarks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void add(Bookmark newBookmark) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.add(newBookmark);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark find(Book book) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (Bookmark bookmark : bookmarks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (bookmark.getBook().equals(book)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                return bookmark;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark findByIndex(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (index \u003c\u003d bookmarks.size() - 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return bookmarks.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookmarks.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.remove(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void delete(Bookmark bookmark) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.remove(bookmark);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String bookmarksToReturn \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (Bookmark bookmark: bookmarks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarksToReturn +\u003d index + \". \" + bookmark.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookmarksToReturn;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Bookmark bookmark : bookmarks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(bookmark.toJson());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 58,
      "dozenmatter": 18
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/category/Category.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Category implements JsonSerializer {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private BookList bookList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private QuoteList quoteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private int size;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Category(String category) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        bookList \u003d new BookList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quoteList \u003d new QuoteList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        size \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getCategoryName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setCategoryName(String category) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return bookList.getList().size() + quoteList.getList().size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setSize(int size) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.size \u003d size;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public BookList getBookList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return bookList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setBookList(BookList books) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.bookList \u003d books;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuoteList getQuoteList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return quoteList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setQuoteList(QuoteList quoteList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quoteList \u003d quoteList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return String.format(\"%s - (%d items)\", getCategoryName(), getSize());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject details \u003d new JSONObject();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"category\", this.getCategoryName());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 64
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/category/CategoryList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryList extends QuotesifyList\u003cCategory\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cCategory\u003e categories \u003d super.getList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public CategoryList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public CategoryList(ArrayList\u003cCategory\u003e categories) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(categories);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExistingCategory(String name) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (category.getCategoryName().equals(name)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Category getCategoryByName(String name) throws QuotesifyException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (category.getCategoryName().equals(name)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                return category;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        throw new QuotesifyException(\"Category [\" + name + \"] does not exist!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void updateListsInAllCategories() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            category.setBookList(bookList.filterByCategory(category.getCategoryName()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            category.setQuoteList(quoteList.filterByCategory(category.getCategoryName()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void updateListInCategory(Category category) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setBookList(bookList.filterByCategory(category.getCategoryName()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setQuoteList(quoteList.filterByCategory(category.getCategoryName()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void remove(Category category) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories.remove(category);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void add(Category category) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories.add(category);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories.remove(index);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list +\u003d String.format(\"%d. %s\\n\", ++index, category.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(category.toJson());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 90
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/category/CategoryParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.UiMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String TAG_BOOK \u003d \"-b\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String TAG_QUOTE \u003d \"-q\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String ERROR_MISSING_CATEGORY \u003d \"Missing category name\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String ERROR_MISSING_BOOK_OR_QUOTE \u003d \"Please specify a book title or quote number!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String ERROR_MISSING_EDIT_PARAMS \u003d \"Invalid parameters!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static Stack\u003cString\u003e convertStringArrayToStack(String[] tokens) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Stack\u003cString\u003e parameters \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (String token : tokens) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            parameters.push(token);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return parameters;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static String[] getRequiredParameters(String[] tokens) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String categories;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String bookTitle \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String quoteNum \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Stack\u003cString\u003e parameters \u003d convertStringArrayToStack(tokens);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String line \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        while (!parameters.empty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String item \u003d parameters.pop();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (item.equals(TAG_BOOK)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                bookTitle \u003d line.trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                line \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            } else if (item.equals(TAG_QUOTE)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                quoteNum \u003d line.trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                line \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            line \u003d item + \" \" + line;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories \u003d line.trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new String[]{categories, bookTitle, quoteNum};"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static int validateParametersResult(String[] parameters) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String categoryName \u003d parameters[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String bookNum \u003d parameters[1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String quoteNum \u003d parameters[2];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (categoryName.isEmpty()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (quoteNum.isEmpty() \u0026\u0026 bookNum.isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static String[] getEditParameters(String information) throws QuotesifyException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String[] oldAndNewCategory \u003d information.split(\" /to \", 2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new String[]{oldAndNewCategory[0].trim(), oldAndNewCategory[1].trim()};"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_EDIT_PARAMS"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    + System.lineSeparator() + UiMessage.EDIT_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static List\u003cString\u003e parseCategoriesToList(String categories) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return Arrays.asList(categories.split(\" \"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 79
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/BookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class BookmarkCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static Logger addLogger \u003d Logger.getLogger(\"QuotesifyLogger\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public BookmarkCommand(String arguments) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            BookmarkList bookmarks \u003d (BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            handleBookmarkByNumber(books, bookmarks, ui);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_TAG);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void handleBookmark(BookList books, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] titleAndPage \u003d information.split(\"/pg\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (titleAndPage.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_PAGE_NUM);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String title \u003d titleAndPage[0].trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String page \u003d titleAndPage[1].trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            Book bookToMark \u003d books.findByTitle(title);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (bookToMark !\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                addBookmarkToBook(bookToMark, bookmarks, page, ui);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                System.out.println(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_PAGE_NUM);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addLogger.log(Level.INFO, \"add bookmark to bookmarkList failed\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void handleBookmarkByNumber(BookList books, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] numberAndPage \u003d information.split(\"/pg\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (numberAndPage.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_PAGE_NUM);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String bookNumber \u003d numberAndPage[0].trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String page \u003d numberAndPage[1].trim();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            int number \u003d convertBookNumToInt(bookNumber);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            Book bookToMark \u003d books.findByNum(number);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (bookToMark !\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                addBookmarkToBook(bookToMark, bookmarks, page, ui);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                System.out.println(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_PAGE_NUM);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addLogger.log(Level.INFO, \"add bookmark to bookmarkList failed\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void addBookmarkToBook(Book book, BookmarkList bookmarks, String page, TextUi ui) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark bookmarkToAdd \u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int pageNum \u003d computePageNum(page);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarkToAdd \u003d bookmarks.find(book);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkToAdd \u003d\u003d null \u0026\u0026 pageNum \u003e -1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarkToAdd \u003d createNewBookmark(bookmarks, book, pageNum);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printAddBookmark(bookmarkToAdd);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else if (bookmarkToAdd !\u003d null \u0026\u0026 pageNum \u003e -1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarkToAdd \u003d updateExistingBookmark(bookmarkToAdd, pageNum);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printUpdateBookmark(bookmarkToAdd);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addLogger.log(Level.INFO, \"add bookmark to bookmarkList failed\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark createNewBookmark(BookmarkList bookmarks, Book book, int pageNum) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark newBookmark \u003d new Bookmark(book, pageNum);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.add(newBookmark);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return newBookmark;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark updateExistingBookmark(Bookmark bookmark, int pageNum) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmark.setPageNum(pageNum);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookmark;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int computePageNum(String information) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int pageNum \u003d -1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            pageNum \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_PAGE_NUM);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return pageNum;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int convertBookNumToInt(String information) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int bookNum \u003d -1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookNum \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookNum;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 136,
      "dozenmatter": 13
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_BOOK \u003d \"-b\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_QUOTE \u003d \"-q\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String TAG_QUOTE_REFLECTION \u003d \"-qr\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_RATING \u003d \"-r\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_CATEGORY \u003d \"-c\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String TAG_TODO \u003d \"-t\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String TAG_BOOKMARK \u003d \"-bm\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_INVALID_BOOK_NUM \u003d \"Invalid book number specified!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_INVALID_QUOTE_NUM \u003d \"Invalid quote number specified!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_INVALID_TODO_NUM \u003d \"Invalid task number specified!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_INVALID_PAGE_NUM \u003d \"Invalid page number specified!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_INVALID_BOOKMARK_NUM \u003d \"Invalid bookmark number specified!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_INVALID_TAG \u003d \"Invalid / No tag provided\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_BOOK_FOUND \u003d \"There is no such book!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_BOOK_TITLE_MISSING \u003d \"There is no book title specified!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_BOOK_ALREADY_EXISTS \u003d \"The book already exists!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_CATEGORY_ALREADY_EXISTS \u003d \"Category [%s] already exists in \\\"%s\\\"!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_NO_QUOTE_FOUND \u003d \"There is no such quote!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_NO_QUOTE_NUMBER \u003d \"Quote number is missing\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_FIND_KEYWORD_MISSING \u003d \"Keyword to search is missing\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_BOOKS_IN_LIST \u003d \"There are no books in the list!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_BOOKS_BY_AUTHOR \u003d \"There are no books by this author!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String LIST_SPECIFIED_RATING_NOT_FOUND_MESSAGE \u003d \"I can\u0027t find any books rated %d star!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_AUTHOR_NAME \u003d \"Please type in the author name.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_NO_PAGE_NUM \u003d \"There is no page number provided!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_NO_TASK_NAME \u003d \"There is no task name provided!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_RATING_EXIST \u003d \"This book has already been rated!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_BOOK_TO_RATE_NOT_FOUND \u003d \"I can\u0027t find this book to rate!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_RATING_NOT_FOUND \u003d \"I can\u0027t find ratings for this book!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_RATING_MISSING_INPUTS \u003d \"I need more details from you!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_TODO_NOT_FOUND \u003d \"There is no such task!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_BOOKMARK_NOT_FOUND \u003d \"There is no such bookmark!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_LIST_UNKNOWN_COMMAND \u003d \"I do not understand that command. Try again\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_EDIT_FLAG \u003d \"Editing requires a \\\"/to\\\" flag\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_MISSING_KEYWORD \u003d \"Please type in the keyword.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_MISSING_CATEGORY \u003d \"Missing category name\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_MISSING_BOOK_OR_QUOTE \u003d \"Please specify a book title or quote number!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_REFLECTION \u003d \"Please specify your reflection!\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_AUTHOR \u003d \"/by\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_REFERENCE \u003d \"/from\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_DELIMITER \u003d \"/\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String FLAG_EDIT \u003d \"/to\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_REFLECT \u003d \"/reflect\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String REFERENCE_KEYWORD \u003d \"reference\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String AUTHORNAME_KEYWORD \u003d \"authorName\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String DONE_KEYWORD \u003d \"done\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract void execute(TextUi ui, Storage storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 10,
      "nat-ho": 13,
      "dozenmatter": 20,
      "chloesyy": 11,
      "yuen-sihao": 6
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 15,
      "chloesyy": 1
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ui.printHelpPage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 6,
      "yuen-sihao": 11
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddBookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.commands.add.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class AddBookCommand extends AddCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public AddBookCommand(String arguments) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        addBook(books, ui);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void addBook(BookList books, TextUi ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String[] titleAndAuthor \u003d information.split(Command.FLAG_AUTHOR, 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // if user did not provide author, let titleAndAuthor[1] be empty string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (titleAndAuthor.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                titleAndAuthor \u003d new String[]{titleAndAuthor[0], \"\"};"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String title \u003d titleAndAuthor[0].trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String authorName \u003d titleAndAuthor[1].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            checkMissingInformation(title, authorName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Book newBook \u003d createNewBook(books, title, authorName);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            books.add(newBook);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            books.sort();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printAddBook(newBook);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            addLogger.log(Level.INFO, \"add book to booklist failed\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private Book createNewBook(BookList books, String title, String authorName) throws QuotesifyException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Book newBook;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Author existingAuthor \u003d books.findExistingAuthor(authorName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (existingAuthor \u003d\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // Book is definitely unique"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            newBook \u003d new Book(new Author(authorName), title);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            books.ensureNoSimilarBooks(title, existingAuthor.getName());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            newBook \u003d new Book(existingAuthor, title);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return newBook;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void checkMissingInformation(String title, String authorName) throws QuotesifyException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (title.isEmpty()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(ERROR_BOOK_TITLE_MISSING);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (authorName.isEmpty()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(ERROR_NO_AUTHOR_NAME);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 72
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class AddCategoryCommand extends AddCommand {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public AddCategoryCommand(String arguments) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        CategoryList categories \u003d (CategoryList) ListManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        addCategoryToBookOrQuote(categories, ui);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToBookOrQuote(CategoryList categories, TextUi ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] tokens \u003d information.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] parameters \u003d CategoryParser.getRequiredParameters(tokens);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        int result \u003d CategoryParser.validateParametersResult(parameters);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (result \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            executeParameters(categories, parameters, ui);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } else if (result \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_MISSING_BOOK_OR_QUOTE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_MISSING_CATEGORY);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void executeParameters(CategoryList categoryList, String[] parameters, TextUi ui) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String categoryNames \u003d parameters[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            assert !categoryNames.isEmpty() : \"category name should not be empty\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            List\u003cString\u003e categories \u003d CategoryParser.parseCategoriesToList(categoryNames);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (String categoryName : categories) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                addCategoryToList(categoryList, categoryName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                Category category \u003d categoryList.getCategoryByName(categoryName);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String bookNum \u003d parameters[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String quoteNum \u003d parameters[2];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                addCategoryToBook(category, bookNum, ui);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                addCategoryToQuote(category, quoteNum, ui);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                categoryList.updateListInCategory(category);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToList(CategoryList categories, String categoryName) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (!categories.isExistingCategory(categoryName)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            categories.add(new Category(categoryName));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToBook(Category category, String bookNum, TextUi ui) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // ignore this action if user did not provide book title"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (bookNum.isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int bookIndex \u003d Integer.parseInt(bookNum) - 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Book book \u003d bookList.getBook(bookIndex);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (book.getCategories().contains(category.getCategoryName())) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String errorMessage \u003d String.format(ERROR_CATEGORY_ALREADY_EXISTS,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                        category.getCategoryName(), book.getTitle());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                throw new QuotesifyException(errorMessage);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            book.getCategories().add(category.getCategoryName());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printAddCategoryToBook(book.getTitle(), category.getCategoryName());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.INFO, \"add category to book success\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.WARNING, ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.WARNING, ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToQuote(Category category, String quoteNum, TextUi ui) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // ignore this action if user did not provide quote number"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (quoteNum.isEmpty()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int quoteIndex \u003d Integer.parseInt(quoteNum) - 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Quote quote \u003d quoteList.getList().get(quoteIndex);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (quote.getCategories().contains(category.getCategoryName())) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String errorMessage \u003d String.format(ERROR_CATEGORY_ALREADY_EXISTS,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                        category.getCategoryName(), quote.getQuote());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                throw new QuotesifyException(errorMessage);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quote.getCategories().add(category.getCategoryName());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printAddCategoryToQuote(quote.getQuote(), category.getCategoryName());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.INFO, \"add category to quote success\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.WARNING, ERROR_NO_QUOTE_FOUND);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_QUOTE_FOUND);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.WARNING, ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 134
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static Logger addLogger \u003d Logger.getLogger(\"QuotesifyLogger\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String information;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String arguments;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public AddCommand(String arguments) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            addLogger.log(Level.INFO, \"going to add book to booklist\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            new AddBookCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            addLogger.log(Level.INFO, \"added book to booklist\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            addLogger.log(Level.INFO, \"going to add quote to quote list\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new AddQuoteCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE_REFLECTION:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            addLogger.log(Level.INFO, \"going to add reflection to quote list\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new AddQuoteReflectionCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.INFO, \"going to add category to book/quote\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            new AddCategoryCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.INFO, \"going to add rating to book\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new AddRatingCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            addLogger.log(Level.INFO, \"rating of book has completed\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addLogger.log(Level.INFO, \"going yo add task to ToDoList\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            new AddToDoCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printListOfAddCommands();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 4,
      "nat-ho": 11,
      "chloesyy": 21,
      "dozenmatter": 20,
      "yuen-sihao": 12
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddQuoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class AddQuoteCommand extends AddCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public AddQuoteCommand(String arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        addQuote(quoteList, ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void addQuote(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Quote quote \u003d QuoteParser.parseAddParameters(information);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteList.add(quote);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printAddQuote(quote);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            addLogger.log(Level.INFO, \"add quote to quote list success\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            addLogger.log(Level.INFO, \"add quote to quote list failed\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            addLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 36
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddQuoteReflectionCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class AddQuoteReflectionCommand extends AddCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public AddQuoteReflectionCommand(String arguments) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        addQuoteReflection(quoteList, ui);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void addQuoteReflection(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int quoteNum \u003d QuoteParser.parseQuoteNumber(information, quoteList, Command.FLAG_REFLECT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String reflection \u003d QuoteParser.getReflectionToAdd(information);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!reflection.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Quote quoteWithReflection \u003d quoteList.addReflection(reflection, quoteNum);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                ui.printAddReflection(quoteWithReflection, quoteWithReflection.getReflection());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_MISSING_REFLECTION);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            addLogger.log(Level.INFO, \"add reflection to quote failed\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 40
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddRatingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class AddRatingCommand extends AddCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public AddRatingCommand(String arguments) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        addRating(ratings, ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void addRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (information.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_MISSING_INPUTS);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] ratingDetails;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String title;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String author;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingDetails \u003d information.split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            String[] titleAndAuthor \u003d ratingDetails[1].split(Command.FLAG_AUTHOR, 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            title \u003d titleAndAuthor[0].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            author \u003d titleAndAuthor[1].trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(RatingParser.ERROR_INVALID_FORMAT_RATING);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d RatingParser.checkValidityOfRatingScore(ratingDetails[0]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Book bookToRate \u003d checkBookExists(title, author);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isRated \u003d isRated(bookToRate);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isValid \u003d (ratingScore !\u003d 0) \u0026\u0026 (bookToRate !\u003d null) \u0026\u0026 (!isRated);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (isValid) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            bookToRate.setRating(ratingScore);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratings.add(new Rating(bookToRate, ratingScore));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printAddRatingToBook(ratingScore, title, author);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private boolean isRated(Book bookToRate) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (bookToRate !\u003d null \u0026\u0026 bookToRate.getRating() !\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            addLogger.log(Level.INFO, \"book has been rated\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_EXIST);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private Book checkBookExists(String titleOfBookToRate, String authorOfBookToRate) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ArrayList\u003cBook\u003e existingBooks \u003d bookList.getList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Book bookToRate \u003d null;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String author;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Book book : existingBooks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            author \u003d book.getAuthor().getName();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (book.getTitle().equals(titleOfBookToRate) \u0026\u0026 author.equals(authorOfBookToRate)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                bookToRate \u003d book;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (bookToRate \u003d\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            addLogger.log(Level.INFO, \"book does not exist\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_BOOK_TO_RATE_NOT_FOUND);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return bookToRate;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 83
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddToDoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.commands.add.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class AddToDoCommand extends AddCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public AddToDoCommand(String arguments) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDoList toDos \u003d (ToDoList) ListManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo newToDo \u003d addToDo(toDos, ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ui.printAddToDo(newToDo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private ToDo addToDo(ToDoList toDos, TextUi ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] taskNameAndDeadline \u003d information.split(\"/by\", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo newToDo \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            // if user did not provide deadline, let titleAndAuthor[1] be \"not specified\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (taskNameAndDeadline.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                taskNameAndDeadline \u003d new String[]{taskNameAndDeadline[0], \"not specified\"};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (taskNameAndDeadline[0].isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_TASK_NAME);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String taskName \u003d taskNameAndDeadline[0].trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            assert !taskName.isEmpty() : \"task name should not be empty\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String deadline \u003d taskNameAndDeadline[1].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            assert !deadline.isEmpty() : \"deadline should not be empty\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            newToDo \u003d new ToDo(taskName, deadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            newToDo.updateDateFormat();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            toDos.add(newToDo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addLogger.log(Level.INFO, \"add toDo to toDoList failed\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return newToDo;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 51
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteBookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class DeleteBookCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public DeleteBookCommand(String arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        deleteBook(books, ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void deleteBook(BookList books, TextUi ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            int bookIndex \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Book book \u003d books.getBook(bookIndex);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String bookTitle \u003d book.getTitle();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String author \u003d book.getAuthor().getName();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // clear bookmarks before deleting the entire book."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            BookmarkList bookmarks \u003d (BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            clearBookmark(books, bookmarks, bookTitle, ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // delete ratings before deleting the entire book."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                if (rating.getTitleOfRatedBook().equals(bookTitle)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                        \u0026\u0026 rating.getAuthorOfRatedBook().equals(author)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    ratings.delete(ratings.getList().indexOf(rating));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            books.delete(bookIndex);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printDeleteBook(book);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void clearBookmark(BookList books, BookmarkList bookmarks, String titleName, TextUi ui) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Book targetBook \u003d books.findByTitle(titleName);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (targetBook !\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            clearBookmarkFromDeletedBook(targetBook, bookmarks, ui);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void clearBookmarkFromDeletedBook(Book targetBook, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Bookmark bookmarkToBeDeleted \u003d bookmarks.find(targetBook);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (bookmarkToBeDeleted !\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            bookmarks.delete(bookmarkToBeDeleted);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 69
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class DeleteBookmarkCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public DeleteBookmarkCommand(String arguments) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        BookmarkList bookmarks \u003d (BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        deleteBookmarkByIndex(bookmarks,information.trim(),ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void deleteBookmark(BookList books, BookmarkList bookmarks, String titleName, TextUi ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Book targetBook \u003d books.findByTitle(titleName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (targetBook !\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            removeBookmarkFromBook(targetBook, bookmarks, ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void deleteBookmarkByIndex(BookmarkList bookmarks, String index, TextUi ui) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int indexNum \u003d convertBookmarkIndexToInt(index, ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (indexNum \u003c\u003d bookmarks.getSize()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            Bookmark targetBookmark \u003d bookmarks.findByIndex(indexNum - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarks.delete(indexNum);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDeleteBookmark(targetBookmark);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void removeBookmarkFromBook(Book targetBook, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark bookmarkToBeDeleted \u003d bookmarks.find(targetBook);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkToBeDeleted !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarks.delete(bookmarkToBeDeleted);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDeleteBookmark(bookmarkToBeDeleted);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_BOOKMARK_NOT_FOUND);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void clearBookmark(BookList books, BookmarkList bookmarks, String titleName, TextUi ui) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Book targetBook \u003d books.findByTitle(titleName);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (targetBook !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            clearBookmarkFromDeletedBook(targetBook, bookmarks, ui);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void clearBookmarkFromDeletedBook(Book targetBook, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark bookmarkToBeDeleted \u003d bookmarks.find(targetBook);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkToBeDeleted !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarks.delete(bookmarkToBeDeleted);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int convertBookmarkIndexToInt(String indexString, TextUi ui) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            index \u003d Integer.parseInt(information) - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOKMARK_NUM);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 78
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class DeleteCategoryCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public DeleteCategoryCommand(String arguments) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        CategoryList categories \u003d (CategoryList) ListManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        deleteCategoryFromBookOrQuote(categories, ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteCategoryFromBookOrQuote(CategoryList categories, TextUi ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] tokens \u003d information.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] parameters \u003d CategoryParser.getRequiredParameters(tokens);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        int result \u003d CategoryParser.validateParametersResult(parameters);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (result \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            executeParameters(categories, parameters, ui);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } else if (result \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            deleteCategory(categories, parameters[0], ui);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_MISSING_CATEGORY);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void executeParameters(CategoryList categoryList, String[] parameters, TextUi ui) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String categoryNames \u003d parameters[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            assert !categoryNames.isEmpty() : \"category name should not be empty\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            List\u003cString\u003e categories \u003d CategoryParser.parseCategoriesToList(categoryNames);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (String categoryName : categories) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                Category category \u003d categoryList.getCategoryByName(categoryName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String bookTitle \u003d parameters[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String quoteNum \u003d parameters[2];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                deleteCategoryFromBook(category, bookTitle, ui);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                deleteCategoryFromQuote(category, quoteNum, ui);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                categoryList.updateListInCategory(category);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                if (category.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    categoryList.remove(category);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteCategoryFromBook(Category category, String bookTitle, TextUi ui) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // ignore this action if user did not provide book title"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (bookTitle.isEmpty()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d category.getBookList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int bookNum \u003d Integer.parseInt(bookTitle) - 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Book book \u003d bookList.getBook(bookNum);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cString\u003e categories \u003d book.getCategories();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            categories.remove(category.getCategoryName());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printRemoveCategoryFromBook(book.getTitle(), category.getCategoryName());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND + \"\\b tagged as [\" + category.getCategoryName() + \"]!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteCategoryFromQuote(Category category, String index, TextUi ui) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // ignore this action if user did not provide quote number"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (index.isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d category.getQuoteList();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cQuote\u003e quotes \u003d quoteList.getList();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int quoteNum \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Quote quote \u003d quotes.get(quoteNum);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cString\u003e categories \u003d quote.getCategories();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            categories.remove(category.getCategoryName());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printRemoveCategoryFromQuote(quote.getQuote(), category.getCategoryName());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_QUOTE_FOUND + \"\\b tagged as [\" + category.getCategoryName() + \"]!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteCategory(CategoryList categoryList, String categories, TextUi ui) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (String name : categories.split(\" \")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                Category category \u003d categoryList.getCategoryByName(name);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                deleteCategoryInBooksAndQuotes(name);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                categoryList.remove(category);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ui.printRemoveCategory(name);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void deleteCategoryInBooksAndQuotes(String oldCategory) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        bookList.filterByCategory(oldCategory).getList().forEach(book -\u003e {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            book.getCategories().remove(oldCategory);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        });"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quoteList.filterByCategory(oldCategory).getList().forEach(quote -\u003e {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quote.getCategories().remove(oldCategory);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 132
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String information;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String arguments;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public DeleteCommand(String arguments) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            new DeleteCategoryCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            new DeleteBookCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new DeleteRatingCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new DeleteToDoCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_BOOKMARK:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new DeleteBookmarkCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new DeleteQuoteCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE_REFLECTION:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new DeleteQuoteReflectionCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printListOfDeleteCommands();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 4,
      "nat-ho": 8,
      "dozenmatter": 35,
      "chloesyy": 3,
      "yuen-sihao": 9
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteQuoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class DeleteQuoteCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public DeleteQuoteCommand(String arguments) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        deleteQuote(quoteList, ui, information);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void deleteQuote(QuoteList quoteList, TextUi ui, String information) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (information.trim().isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_QUOTE_NUMBER);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int quoteNumber \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Quote quoteToBeDeleted \u003d quoteList.getQuote(quoteNumber);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteList.delete(quoteNumber);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printDeleteQuote(quoteToBeDeleted.getQuote());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 38
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteQuoteReflectionCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class DeleteQuoteReflectionCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public DeleteQuoteReflectionCommand(String arguments) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        deleteQuoteReflection(quoteList, ui, information);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void deleteQuoteReflection(QuoteList quoteList, TextUi ui, String information) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int quoteNumber \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteList.deleteReflection(quoteNumber);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printDeleteQuoteReflection(quoteList.getQuote(quoteNumber).getQuote());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 28
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteRatingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class DeleteRatingCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public DeleteRatingCommand(String arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        deleteRating(ratings, ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void deleteRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (information.isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_MISSING_INPUTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] titleAndAuthor;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String title;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String author;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            titleAndAuthor \u003d information.split(Command.FLAG_AUTHOR, 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            title \u003d titleAndAuthor[0].trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            author \u003d titleAndAuthor[1].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(RatingParser.ERROR_INVALID_FORMAT_RATING);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating ratingToBeDeleted \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitleOfRatedBook().equals(title)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                    \u0026\u0026 rating.getAuthorOfRatedBook().equals(author)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ratingToBeDeleted \u003d rating;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratingToBeDeleted \u003d\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_NOT_FOUND);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratingToBeDeleted.getRatedBook().setRating(0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.delete(ratings.getList().indexOf(ratingToBeDeleted));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ui.printDeleteRating(title, author);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 57
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteToDoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class DeleteToDoCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public DeleteToDoCommand(String arguments) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDoList toDos \u003d (ToDoList) ListManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d computeToDoIndex(information.trim());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        deleteToDo(toDos, index, ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void deleteToDo(ToDoList toDos, int index, TextUi ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo toDoToBeDeleted \u003d toDos.find(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (toDoToBeDeleted !\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            toDos.delete(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDeleteToDo(toDoToBeDeleted);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_TODO_NOT_FOUND);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int computeToDoIndex(String information) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            index \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_TODO_NUM);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 40
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/done/DoneBookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.done;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class DoneBookCommand extends DoneCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public DoneBookCommand(String arguments) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        doneBooks(books, ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void doneBooks(BookList books, TextUi ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            int bookIndex \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Book book \u003d books.getBook(bookIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            book.setDone(true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printDoneBook(book);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 30
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/done/DoneCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.done;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String information;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private String arguments;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public DoneCommand(String arguments) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            new DoneToDoCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            new DoneBookCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printDoneCommandUsage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 29,
      "chloesyy": 9,
      "dozenmatter": 6
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/done/DoneToDoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.quotesify.commands.done;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class DoneToDoCommand extends DoneCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public DoneToDoCommand(String arguments) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDoList toDos \u003d (ToDoList) ListManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d computeToDoIndex(information.trim());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        doneToDo(toDos,index,ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void doneToDo(ToDoList toDos, int index, TextUi ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo targetTask \u003d toDos.find(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (targetTask !\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            targetTask.setDone(true);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDoneToDo(targetTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_TODO_NOT_FOUND);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int computeToDoIndex(String information) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            index \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_TODO_NUM);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 40
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/edit/EditBookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.commands.edit.EditCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class EditBookCommand extends EditCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public EditBookCommand(String arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        editBook(books, ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void editBook(BookList books, TextUi ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String[] bookDetails \u003d information.split(FLAG_EDIT, 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (bookDetails.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                bookDetails \u003d new String[]{bookDetails[0], \"\"};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            int bookIndex \u003d Integer.parseInt(bookDetails[0].trim()) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String newTitle \u003d bookDetails[1].trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (newTitle.isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                throw new QuotesifyException(ERROR_BOOK_TITLE_MISSING);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Book book \u003d books.getBook(bookIndex);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String oldTitle \u003d book.getTitle();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String authorName \u003d book.getAuthor().getName();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            books.ensureNoSimilarBooks(newTitle, authorName);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            book.setTitle(newTitle);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printEditBook(oldTitle, newTitle);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            checkRatingForOldTitle(book, oldTitle, authorName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void checkRatingForOldTitle(Book book, String oldTitle, String author) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        // check ratings in rating list before editing the title."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        int currentRatingOfBook \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (rating.getTitleOfRatedBook().equals(oldTitle)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    \u0026\u0026 rating.getAuthorOfRatedBook().equals(author)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                currentRatingOfBook \u003d rating.getRating();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                ratings.delete(ratings.getList().indexOf(rating));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (currentRatingOfBook !\u003d 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ratings.add(new Rating(book, currentRatingOfBook));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 71
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/edit/EditCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class EditCategoryCommand extends EditCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public EditCategoryCommand(String arguments) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        CategoryList categories \u003d (CategoryList) ListManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        editCategory(categories, ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void editCategory(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String[] oldAndNewCategories \u003d CategoryParser.getEditParameters(information);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String oldCategory \u003d oldAndNewCategories[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String newCategory \u003d oldAndNewCategories[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (categoryList.isExistingCategory(newCategory)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                throw new QuotesifyException(\"Category [\" + newCategory + \"] already exists!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Category category \u003d categoryList.getCategoryByName(oldCategory);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            category.setCategoryName(newCategory);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            editCategoryInBooksAndQuotes(oldCategory, newCategory);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printEditCategory(oldCategory, newCategory);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void editCategoryInBooksAndQuotes(String oldCategory, String newCategory) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        bookList.filterByCategory(oldCategory).getList().forEach(book -\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            book.getCategories().remove(oldCategory);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            book.getCategories().add(newCategory);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        });"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quoteList.filterByCategory(oldCategory).getList().forEach(quote -\u003e {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quote.getCategories().remove(oldCategory);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quote.getCategories().add(newCategory);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        });"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 56
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/edit/EditCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String information;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String arguments;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public EditCommand(String arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new EditRatingCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            new EditBookCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            new EditCategoryCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new EditQuoteCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE_REFLECTION:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new EditQuoteReflectionCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printListOfEditCommands();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 8,
      "dozenmatter": 10,
      "chloesyy": 3,
      "yuen-sihao": 33
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/edit/EditQuoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class EditQuoteCommand extends EditCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public EditQuoteCommand(String arguments) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        editQuote(quoteList, ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void editQuote(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (information.contains(FLAG_EDIT)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                int quoteNumToEdit \u003d QuoteParser.parseQuoteNumber(information, quoteList, Command.FLAG_EDIT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Quote oldQuote \u003d quoteList.getQuote(quoteNumToEdit);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Quote editedQuote \u003d QuoteParser.getEditedQuote(information);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                quoteList.updateQuote(editedQuote, quoteNumToEdit);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                ui.printEditQuote(oldQuote, editedQuote);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_MISSING_EDIT_FLAG);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 39
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/edit/EditQuoteReflectionCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class EditQuoteReflectionCommand extends  EditCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public EditQuoteReflectionCommand(String arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        editQuoteReflection(quoteList, ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void editQuoteReflection(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (information.contains(FLAG_EDIT)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                int quoteNumToEdit \u003d QuoteParser.parseQuoteNumber(information, quoteList, Command.FLAG_EDIT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String editedReflection \u003d QuoteParser.getEditedReflection(information);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                if (!editedReflection.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    quoteList.updateReflection(editedReflection, quoteNumToEdit);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    ui.printEditQuoteReflection(quoteList.getQuote(quoteNumToEdit), editedReflection);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    throw new QuotesifyException(ERROR_MISSING_REFLECTION);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_MISSING_EDIT_FLAG);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 41
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/edit/EditRatingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.quotesify.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class EditRatingCommand extends EditCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public EditRatingCommand(String arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        editRating(ratings, ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void editRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (information.isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_MISSING_INPUTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] ratingDetails;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String title;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String author;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingDetails \u003d information.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            String[] titleAndAuthor \u003d ratingDetails[1].split(Command.FLAG_AUTHOR, 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            title \u003d titleAndAuthor[0].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            author \u003d titleAndAuthor[1].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(RatingParser.ERROR_INVALID_FORMAT_RATING);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d RatingParser.checkValidityOfRatingScore(ratingDetails[0]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating existingRating \u003d checkIfRatingExists(ratings, title, author);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isValid \u003d ((ratingScore !\u003d 0) \u0026\u0026 (existingRating !\u003d null));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (isValid) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            existingRating.setRating(ratingScore);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            existingRating.getRatedBook().setRating(ratingScore);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printEditRatingToBook(ratingScore, title, author);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private Rating checkIfRatingExists(RatingList ratings, String title, String author) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating existingRating \u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitleOfRatedBook().equals(title)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                    \u0026\u0026 rating.getAuthorOfRatedBook().equals(author)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                existingRating \u003d rating;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (existingRating \u003d\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_NOT_FOUND);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return existingRating;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 67
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/find/FindBookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.find;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class FindBookCommand extends FindCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public FindBookCommand(String arguments) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        findBooks(books, ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void findBooks(BookList books, TextUi ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String keyword \u003d information.trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (keyword.isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                throw new QuotesifyException(ERROR_MISSING_KEYWORD);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            BookList filteredBooks \u003d books.findByKeyword(keyword);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (filteredBooks.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_BOOKS_IN_LIST);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printBooksByKeyword(filteredBooks, keyword);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 38
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/find/FindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.find;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String information;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String arguments;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public FindCommand(String arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new FindRatingCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            new FindBookCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new FindQuoteCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printListOfFindCommands();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 9,
      "dozenmatter": 6,
      "chloesyy": 3,
      "yuen-sihao": 29
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/find/FindQuoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.find;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class FindQuoteCommand extends FindCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public FindQuoteCommand(String arguments) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        findQuote(quoteList, ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void findQuote(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String keyword \u003d information.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!keyword.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String resultList \u003d quoteList.findQuoteByKeyword(quoteList, keyword);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                if (!resultList.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    ui.printFindQuoteSuccess(resultList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    ui.printFindQuoteFail();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_FIND_KEYWORD_MISSING);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(ERROR_FIND_KEYWORD_MISSING);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 38
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/find/FindRatingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.quotesify.commands.find;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class FindRatingCommand extends FindCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public FindRatingCommand(String arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        findRating(ratings, ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void findRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (information.isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_MISSING_INPUTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] titleAndAuthor;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String title;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String author;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            titleAndAuthor \u003d information.split(Command.FLAG_AUTHOR, 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            title \u003d titleAndAuthor[0].trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            author \u003d titleAndAuthor[1].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(RatingParser.ERROR_INVALID_FORMAT_RATING);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitleOfRatedBook().equals(title)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                    \u0026\u0026 rating.getAuthorOfRatedBook().equals(author)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ui.printFoundRating(rating, title, author);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(ERROR_RATING_NOT_FOUND);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 49
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListBookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class ListBookCommand extends ListCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public ListBookCommand(String arguments) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        listBooks(bookList, ui);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooks(BookList bookList, TextUi ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (information.isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                listAllBooks(bookList, ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } else if (information.contains(FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                listBooksByAuthor(bookList, ui);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } else if (information.contains(DONE_KEYWORD)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                listBooksDoneOrUndone(bookList, ui);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                listBookDetails(bookList, ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (information.contains(FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                ui.printErrorMessage(ERROR_NO_AUTHOR_NAME);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_LIST_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooksDoneOrUndone(BookList bookList, TextUi ui) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (information.trim().equals(DONE_KEYWORD)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            listBooksDone(bookList, ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else if (information.trim().equals(\"undone\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            listBooksUndone(bookList, ui);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooksDone(BookList bookList, TextUi ui) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList completedBooks \u003d bookList.filterDone(true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printListDoneBook(completedBooks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooksUndone(BookList bookList, TextUi ui) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList undoneBooks \u003d bookList.filterDone(false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printListUndoneBook(undoneBooks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBookDetails(BookList bookList, TextUi ui) throws NumberFormatException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        int bookIndex \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Book book \u003d bookList.getBook(bookIndex);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printBookDetails(book);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listAllBooks(BookList bookList, TextUi ui) throws QuotesifyException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (bookList.isEmpty()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(ERROR_NO_BOOKS_IN_LIST);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printAllBooks(bookList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooksByAuthor(BookList bookList, TextUi ui) throws QuotesifyException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String authorName \u003d information.substring(4);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList filteredBooks \u003d bookList.filterByAuthor(authorName);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (filteredBooks.isEmpty()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(ERROR_NO_BOOKS_BY_AUTHOR);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printBooksByAuthor(filteredBooks, authorName);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 84
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class ListBookmarkCommand extends ListCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ListBookmarkCommand(String arguments) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        BookmarkList bookmarkList \u003d (BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        listBookmarks(bookmarkList, ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void listBookmarks(BookmarkList bookmarkList, TextUi ui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ui.printAllBookmarks(bookmarkList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 22
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ListCategoryCommand extends ListCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ListCategoryCommand(String arguments) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        CategoryList categoryList \u003d (CategoryList) ListManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listCategories(categoryList, ui);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void listCategories(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categoryList.updateListsInAllCategories();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if ((information.isEmpty())) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            listAllCategories(categoryList, ui);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            listAllInCategory(categoryList, ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void listAllCategories(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ui.printAllCategories(categoryList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void listAllInCategory(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printAllInCategory(categoryList.getCategoryByName(information));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 39
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String information;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String arguments;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ListCommand(String arguments) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            new ListCategoryCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new ListRatingCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new ListToDoCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_BOOKMARK:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new ListBookmarkCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new ListQuoteCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE_REFLECTION:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new ListQuoteReflection(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            new ListBookCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printListOfListCommands();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 4,
      "nat-ho": 8,
      "dozenmatter": 34,
      "chloesyy": 3,
      "yuen-sihao": 9
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListQuoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class ListQuoteCommand extends ListCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public ListQuoteCommand(String arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        listQuotes(quoteList, ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotes(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if ((information.isEmpty())) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listAllQuotes(quoteList, ui);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (information.contains(Command.FLAG_AUTHOR) \u0026\u0026 information.contains(Command.FLAG_REFERENCE)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                information \u003d information.substring(1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                HashMap\u003cString, String\u003e referenceAndAuthorName \u003d QuoteParser.parseReferenceAndAuthor(information);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String reference \u003d referenceAndAuthorName.get(Command.REFERENCE_KEYWORD);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String authorName \u003d referenceAndAuthorName.get(Command.AUTHORNAME_KEYWORD);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listQuotesByReferenceAndAuthor(quoteList, reference, authorName, ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (information.contains(Command.FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String authorName \u003d QuoteParser.parseListWithAuthor(information);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listQuotesByAuthor(quoteList, authorName, ui);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (information.contains(Command.FLAG_REFERENCE)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String reference \u003d QuoteParser.parseListWithReference(information);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listQuotesByReference(quoteList, reference, ui);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_LIST_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotesByReferenceAndAuthor(QuoteList quoteList, String reference, String authorName, TextUi ui) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotesByReferenceAndAuthor(quoteList, reference, authorName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listAllQuotes(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotes(quoteList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotesByAuthor(QuoteList quoteList, String authorName, TextUi ui) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotesByAuthor(quoteList, authorName);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotesByReference(QuoteList quoteList, String reference, TextUi ui) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotesByReference(quoteList, reference);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 63
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListQuoteReflection.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class ListQuoteReflection extends ListCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public ListQuoteReflection(String arguements) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguements);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        listQuoteReflection(quoteList, ui);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuoteReflection(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (information.trim().isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_QUOTE_NUMBER);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int quoteNumber \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quoteNumber \u003c 0 || quoteNumber \u003e quoteList.getSize()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Quote quote \u003d quoteList.getQuote(quoteNumber);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                ui.printQuoteAndReflection(quote);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 39
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListRatingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class ListRatingCommand extends ListCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public ListRatingCommand(String arguments) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        listRatings(ratings, ui);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void listRatings(RatingList ratingList, TextUi ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ArrayList\u003cRating\u003e ratings \u003d ratingList.getList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.sort(Comparator.comparing(Rating::getRating));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Collections.reverse(ratings);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (information.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            listAllRatings(ratingList, ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            listSpecifiedRating(ratingList, ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void listAllRatings(RatingList ratingList, TextUi ui) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ui.printAllRatings(ratingList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void listSpecifiedRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assert !information.isEmpty() : \"Rating details should not be empty\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingToPrint \u003d RatingParser.checkValidityOfRatingScore(information);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratingToPrint \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getRating() \u003d\u003d ratingToPrint) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                isFound \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (isFound) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printSpecifiedRating(ratings, ratingToPrint);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.printf((LIST_SPECIFIED_RATING_NOT_FOUND_MESSAGE) + \"\\n\", ratingToPrint);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 62
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListToDoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class ListToDoCommand extends ListCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ListToDoCommand(String arguments) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDoList toDoList \u003d (ToDoList) ListManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        listToDos(toDoList,ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void listToDos(ToDoList toDoList, TextUi ui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        toDoList.sortByDate();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ui.printAllToDos(toDoList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 22
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/exception/QuotesifyException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class QuotesifyException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuotesifyException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 7
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/lists/ListManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.lists;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ListManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int BOOK_LIST \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int BOOKMARK_LIST \u003d 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int CATEGORY_LIST \u003d 2;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int QUOTE_LIST \u003d 3;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int RATING_LIST \u003d 4;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final int TODO_LIST \u003d 5;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static HashMap\u003cInteger, QuotesifyList\u003c?\u003e\u003e listManager \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static void initialiseAllLists() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(BOOK_LIST, new BookList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(BOOKMARK_LIST, new BookmarkList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(CATEGORY_LIST, new CategoryList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(QUOTE_LIST, new QuoteList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(RATING_LIST, new RatingList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(TODO_LIST, new ToDoList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static void addToList(int type, QuotesifyList\u003c?\u003e list) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(type, list);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static QuotesifyList\u003c?\u003e getList(int type) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return listManager.get(type);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 1,
      "dozenmatter": 37
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/lists/QuotesifyList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.lists;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public abstract class QuotesifyList\u003cT\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cT\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuotesifyList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuotesifyList(ArrayList\u003cT\u003e list) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ArrayList\u003cT\u003e getList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract void add(T t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract void delete(int index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract JSONArray toJsonArray();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 31
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/parser/JsonSerializer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public interface JsonSerializer {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 7
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.BookmarkCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.add.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.delete.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.commands.done.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.edit.EditCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.find.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.list.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_ADD \u003d \"add\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_EDIT \u003d \"edit\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_BOOKMARK \u003d \"bookmark\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Command parseUserCommand(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] tokens \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let tokens[1] be empty string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            tokens \u003d new String[]{tokens[0], \"\"};"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String command \u003d tokens[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String arguments \u003d tokens[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_ADD:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return new AddCommand(arguments);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_BOOKMARK:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return new BookmarkCommand(arguments);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_EDIT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return new EditCommand(arguments);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new ListCommand(arguments);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return new DoneCommand(arguments);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case COMMAND_FIND:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return new FindCommand(arguments);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_BYE:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case COMMAND_HELP:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            // can consider throwing an exception here for invalid command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 4,
      "nat-ho": 5,
      "dozenmatter": 42,
      "chloesyy": 2,
      "yuen-sihao": 7
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/quote/Quote.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Quote implements JsonSerializer {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Author author;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String quote;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String reference;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String reflection;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote, Author author) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote,String reference) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote, String reference, Author author) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Quote(Author author, String quote, ArrayList\u003cString\u003e categories, String reference) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(Author author, String quote, ArrayList\u003cString\u003e categories, String reference, String reflection) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reflection \u003d reflection;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Author getAuthor() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setAuthor(Author author) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAuthorName() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return author.getName();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean hasAuthor() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (author !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getQuote() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return quote;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setQuote(String quote) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getReference() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return reference;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void setReference(String reference) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean hasReference() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (reference !\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ArrayList\u003cString\u003e getCategories() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return categories;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setCategories(ArrayList\u003cString\u003e categories) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void setReflection(String reflection) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reflection \u003d reflection;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getReflection() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return reflection;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void setReflectionNull() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        reflection \u003d null;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quoteWithoutInformation \u003d \u0027\\\"\u0027 + quote + \u0027\\\"\u0027;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quoteInformation \u003d \"\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (author !\u003d null \u0026\u0026 reference !\u003d null) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation \u003d \" - by \" + author.getName() + \", (from \" + reference + \u0027)\u0027;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (author !\u003d null) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation \u003d \" - by \" + author.getName();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (reference !\u003d null) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation \u003d \" - from \" + reference;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (reflection !\u003d null) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation +\u003d \" [R]\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quoteWithoutInformation + quoteInformation;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (hasAuthor()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"author\", this.getAuthor().toJson());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"author\", null);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"quote\", this.getQuote());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"categories\", this.getCategories());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"reference\", this.getReference());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        json.put(\"reflection\", this.getReflection());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return json;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 79,
      "dozenmatter": 69
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/quote/QuoteList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class QuoteList extends QuotesifyList\u003cQuote\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private ArrayList\u003cQuote\u003e quotes \u003d super.getList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public QuoteList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public QuoteList(ArrayList\u003cQuote\u003e quotes) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(quotes);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote getQuote(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quotes.get(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quotes.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public int getIndex(Quote quote) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return quotes.indexOf(quote);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void updateQuote(Quote quote, int quoteNumber) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quotes.get(quoteNumber).getReflection() !\u003d null)  {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quote.setReflection(quotes.get(quoteNumber).getReflection());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.set(quoteNumber, quote);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote addReflection(String reflection, int quoteNumber) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Quote quote \u003d quotes.get(quoteNumber);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quote.setReflection(reflection);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.set(quoteNumber, quote);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quote;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void deleteReflection(int index) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.get(index).setReflectionNull();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void updateReflection(String editedReflection, int quoteNumber) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.get(quoteNumber).setReflection(editedReflection);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void add(Quote newQuote) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.add(newQuote);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.remove(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quotesToReturn \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (int i \u003d 0; i \u003c getSize(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quotesToReturn +\u003d (i + 1 + \". \" + quotes.get(i).toString()) + System.lineSeparator();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quotesToReturn;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public QuoteList filterByCategory(String categoryName) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ArrayList\u003cQuote\u003e filteredQuotes \u003d (ArrayList\u003cQuote\u003e) quotes.stream()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .filter(quote -\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    ArrayList\u003cString\u003e categories \u003d quote.getCategories();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    return categories.contains(categoryName);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new QuoteList(filteredQuotes);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getRandomQuote() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Random rand \u003d new Random();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int randomQuoteNumber \u003d rand.nextInt(getSize() - 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Quote quoteToPrint \u003d getQuote(randomQuoteNumber);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return quoteToPrint.toString();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return \"*Inserts inspirational quote here*\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAllQuotesByAuthor(QuoteList quoteList, String authorName) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String listToReturn \u003d \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quote.hasAuthor() \u0026\u0026 quote.getAuthorName().equals(authorName)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return listToReturn;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAllQuotesByReference(QuoteList quoteList, String reference) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String listToReturn \u003d \"\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quote.hasReference() \u0026\u0026 quote.getReference().equals(reference)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return listToReturn;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAllQuotesByReferenceAndAuthor(QuoteList quoteList, String reference, String authorName) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String listToReturn \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quote.hasReference() \u0026\u0026 quote.getReference().equals(reference)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                if (quote.hasAuthor() \u0026\u0026 quote.getAuthorName().equals(authorName)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return listToReturn;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String findQuoteByKeyword(QuoteList quoteList, String keyword) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String listToReturn \u003d \"\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quote.getQuote().contains(keyword)) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (quote.hasReference() \u0026\u0026 quote.getReference().contains(keyword)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (quote.hasAuthor() \u0026\u0026 quote.getAuthorName().contains(keyword)) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return listToReturn;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : quotes) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(quote.toJson());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 124,
      "dozenmatter": 25
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/quote/QuoteParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class QuoteParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_QUOTE \u003d \"I don\u0027t see the quote anywhere\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_AUTHOR \u003d \"Author name cannot be empty if \\\"/by\\\" flag is present\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_REFERENCE \u003d \"Reference field cannot be empty if \\\"/from\\\" flag is present\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_REFERENCE_OR_AUTHOR \u003d \"Author name and Reference cannot be empty if \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"\\\"/by\\\" flag and \\\"/from\\\" flag are present\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_INVALID_QUOTE_NUM \u003d \"Quote number provided is invalid\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseAddParameters(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assert !userInput.isEmpty() : \"field should not be empty\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (userInput.contains(Command.FLAG_REFERENCE) \u0026\u0026 userInput.contains(Command.FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithReferenceAndAuthor(userInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (userInput.contains(Command.FLAG_REFERENCE)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithReference(userInput);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (userInput.contains(Command.FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithAuthor(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithoutAdditionalInfo(userInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithoutAdditionalInfo(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if quote is empty"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(quote);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithReferenceAndAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if any fields are empty"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[]  quoteAndInformation \u003d userInput.split(Command.FLAG_DELIMITER, 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(quoteAndInformation[0]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        HashMap\u003cString, String\u003e referenceAndAuthorName \u003d parseReferenceAndAuthor(quoteAndInformation[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reference \u003d referenceAndAuthorName.get(Command.REFERENCE_KEYWORD);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String authorName \u003d referenceAndAuthorName.get(Command.AUTHORNAME_KEYWORD);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!reference.isEmpty() \u0026\u0026 !authorName.isEmpty()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Author author \u003d new Author(authorName);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new Quote(quote, reference, author);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (!reference.isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_REFERENCE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static HashMap parseReferenceAndAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        HashMap\u003cString, String\u003e referenceAndAuthorName \u003d new HashMap\u003cString, String\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] referenceAndAuthor \u003d userInput.split(Command.FLAG_DELIMITER,2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reference \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String authorName \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (referenceAndAuthor[0].startsWith(\"from\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                reference \u003d referenceAndAuthor[0].substring(5).trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                authorName \u003d referenceAndAuthor[1].substring(3).trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                assert !reference.isEmpty() : \"reference field should not be empty\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                assert !authorName.isEmpty() : \"author field should not be empty\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                reference \u003d referenceAndAuthor[1].substring(5).trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                authorName \u003d referenceAndAuthor[0].substring(3).trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                assert !reference.isEmpty() : \"reference field should not be empty\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                assert !authorName.isEmpty() : \"author field should not be empty\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_REFERENCE_OR_AUTHOR);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        referenceAndAuthorName.put(\"reference\", reference);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        referenceAndAuthorName.put(\"authorName\", authorName);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return referenceAndAuthorName;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithReference(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if quote of reference is empty"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] quoteAndReference \u003d userInput.split(Command.FLAG_REFERENCE, 2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(quoteAndReference[0]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reference \u003d trimAndCheckEmptyReference(quoteAndReference[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(quote, reference);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if quote of author name is empty"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] quoteAndAuthor \u003d userInput.split(Command.FLAG_AUTHOR, 2);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(quoteAndAuthor[0]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Author author \u003d trimAndCheckEmptyAuthor(quoteAndAuthor[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(quote, author);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String trimAndCheckEmptyQuote(String quote) throws QuotesifyException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assert !quote.isEmpty() : \"quote field should not be empty\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quote \u003d quote.trim();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!quote.isEmpty()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return quote;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_QUOTE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Author trimAndCheckEmptyAuthor(String authorName) throws QuotesifyException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assert !authorName.isEmpty() : \"author field should not be empty\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        authorName \u003d authorName.trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!authorName.isEmpty()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new Author(authorName);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String trimAndCheckEmptyReference(String reference) throws QuotesifyException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assert !reference.isEmpty() : \"reference field should not be empty\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        reference \u003d reference.trim();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!reference.isEmpty()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return reference;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_REFERENCE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String parseListWithAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] authorFlagAndName \u003d userInput.split(Command.FLAG_AUTHOR);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String authorName \u003d authorFlagAndName[1].trim();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return authorName;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String parseListWithReference(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] referenceFlagAndName \u003d userInput.split(Command.FLAG_REFERENCE);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String reference \u003d referenceFlagAndName[1].trim();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return reference;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static int parseQuoteNumber(String userInput, QuoteList quotes, String command) throws QuotesifyException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int quoteNumberToEdit \u003d Integer.parseInt(userInput.split(command, 2)[0].trim());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quoteNumberToEdit \u003c\u003d 0 || quoteNumberToEdit \u003e quotes.getSize()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                return quoteNumberToEdit - 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote getEditedQuote(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quoteAndInformation \u003d userInput.split(Command.FLAG_EDIT, 2)[1];"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return parseAddParameters(quoteAndInformation);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String getReflectionToAdd(String userInput) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reflection \u003d userInput.split(Command.FLAG_REFLECT, 2)[1].trim();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return reflection;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String getEditedReflection(String userInput) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String updatedReflection \u003d userInput.split(Command.FLAG_EDIT, 2)[1].trim();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return updatedReflection;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 173,
      "dozenmatter": 4
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/rating/Rating.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Rating implements JsonSerializer {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String titleOfRatedBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String authorOfRatedBook;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private int rating;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private Book ratedBook;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public Rating(Book ratedBook, int rating) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        titleOfRatedBook \u003d ratedBook.getTitle();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        authorOfRatedBook \u003d ratedBook.getAuthor().getName();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.rating \u003d rating;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.ratedBook \u003d ratedBook;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String getTitleOfRatedBook() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return titleOfRatedBook;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String getAuthorOfRatedBook() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return authorOfRatedBook;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public int getRating() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return rating;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void setRating(int rating) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.rating \u003d rating;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public Book getRatedBook() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return ratedBook;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return \"[\" + titleOfRatedBook + \"] by \" + authorOfRatedBook + \": \" + rating + \" star\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"titleOfRatedBook\", this.getTitleOfRatedBook());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        json.put(\"authorOfRatedBook\", this.getAuthorOfRatedBook());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"rating\", this.getRating());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return json;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 27,
      "yuen-sihao": 26
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/rating/RatingList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class RatingList extends QuotesifyList\u003cRating\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private ArrayList\u003cRating\u003e ratings \u003d super.getList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public RatingList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public RatingList(ArrayList\u003cRating\u003e ratings) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(ratings);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void add(Rating newRating) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.add(newRating);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.remove(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String ratingsToReturn \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingsToReturn +\u003d rating.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return ratingsToReturn;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Rating rating : ratings) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(rating.toJson());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 16,
      "yuen-sihao": 31
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/rating/RatingParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.add.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class RatingParser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final int RATING_ONE \u003d 1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final int RATING_FIVE \u003d 5;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_INVALID_RATING_SCORE \u003d \"That score is out of our range my friend!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_INVALID_FORMAT_RATING \u003d \"Sorry I don\u0027t understand you\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static int checkValidityOfRatingScore(String rating) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingScore \u003d Integer.parseInt(rating);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            AddCommand.addLogger.log(Level.WARNING, \"format error\", e);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_INVALID_FORMAT_RATING);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (!(ratingScore \u003e\u003d RATING_ONE \u0026\u0026 ratingScore \u003c\u003d RATING_FIVE)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            AddCommand.addLogger.log(Level.INFO, \"rating score out of range\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_INVALID_RATING_SCORE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return ratingScore;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "dozenmatter": 1,
      "yuen-sihao": 28
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/store/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.store;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String CURRENT_DIR \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String SEPARATOR \u003d File.separator;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String BOOKS \u003d \"books\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String QUOTES \u003d \"quotes\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String CATEGORIES \u003d \"categories\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String RATINGS \u003d \"ratings\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String BOOKMARKS \u003d \"bookmarks\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String TODOS \u003d \"todos\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String DATA_CORRUPT_MESSAGE \u003d \"[%s] is corrupted in save file. Creating an empty list.\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private File saveFile;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        initialiseSaveFile(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void initialiseSaveFile(String filePath) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            filePath \u003d CURRENT_DIR + filePath.replace(\"/\", SEPARATOR).replace(\"\\\\\", SEPARATOR);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (!saveFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (!saveFile.exists()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(filePath + \" creation failed.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"books\", ListManager.getList(ListManager.BOOK_LIST).toJsonArray());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"quotes\", ListManager.getList(ListManager.QUOTE_LIST).toJsonArray());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"categories\", ListManager.getList(ListManager.CATEGORY_LIST).toJsonArray());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"bookmarks\", ListManager.getList(ListManager.BOOKMARK_LIST).toJsonArray());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"ratings\", ListManager.getList(ListManager.RATING_LIST).toJsonArray());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"todos\", ListManager.getList(ListManager.TODO_LIST).toJsonArray());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(saveFile);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            fileWriter.write(json.toJSONString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(\"Saving to file failed!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void load() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            FileReader fileReader \u003d new FileReader(saveFile);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONParser jsonParser \u003d new JSONParser();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONObject json \u003d (JSONObject) jsonParser.parse(fileReader);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            updateListManager(json);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (ParseException | IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            // e.printStackTrace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.initialiseAllLists();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void updateListManager(JSONObject json) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.BOOK_LIST, parseBookList(json));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.QUOTE_LIST, parseQuoteList(json));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.CATEGORY_LIST, parseCategoryList(json));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.RATING_LIST, parseRatingList(json));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.BOOKMARK_LIST, parseBookmarkList(json));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.TODO_LIST, parseTodoList(json));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            // e.printStackTrace();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private BookList parseBookList(JSONObject json) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray books \u003d (JSONArray) json.get(BOOKS);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cBook\u003e bookList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object book : books) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                bookList.add(parseBookObject((JSONObject) book));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new BookList(bookList);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, BOOKS);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new BookList();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private QuoteList parseQuoteList(JSONObject json) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray quotes \u003d (JSONArray) json.get(QUOTES);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cQuote\u003e quoteList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object quote : quotes) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                quoteList.add(parseQuoteObject((JSONObject) quote));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new QuoteList(quoteList);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, QUOTES);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new QuoteList();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private CategoryList parseCategoryList(JSONObject json) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray categories \u003d (JSONArray) json.get(CATEGORIES);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cCategory\u003e categoryList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object category : categories) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                categoryList.add(parseCategoryObject((JSONObject) category));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new CategoryList(categoryList);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, CATEGORIES);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new CategoryList();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private RatingList parseRatingList(JSONObject json) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray ratings \u003d (JSONArray) json.get(RATINGS);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cRating\u003e ratingList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object rating : ratings) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ratingList.add(parseRatingObject((JSONObject) rating));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new RatingList(ratingList);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, RATINGS);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new RatingList();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private BookmarkList parseBookmarkList(JSONObject json) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray bookmarks \u003d (JSONArray) json.get(BOOKMARKS);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cBookmark\u003e bookmarkList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object bookmark : bookmarks) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                bookmarkList.add(parseBookmarkObject((JSONObject) bookmark));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new BookmarkList(bookmarkList);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, BOOKMARKS);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new BookmarkList();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ToDoList parseTodoList(JSONObject json) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray todos \u003d (JSONArray) json.get(TODOS);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cToDo\u003e todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object todo : todos) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                todoList.add(parseTodoObject((JSONObject) todo));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new ToDoList(todoList);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, TODOS);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new ToDoList();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Book parseBookObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject authorObj \u003d (JSONObject) json.get(\"author\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Author author \u003d parseAuthorObject(authorObj);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String title \u003d (String) json.get(\"title\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        boolean isDone \u003d (boolean) json.get(\"isDone\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray array \u003d (JSONArray) json.get(\"categories\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        long rating \u003d (long) json.get(\"rating\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d (ArrayList\u003cString\u003e) array.stream()"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return new Book(author, title, isDone, categories, (int) rating);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Quote parseQuoteObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject authorObj \u003d (JSONObject) json.get(\"author\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Author author \u003d parseAuthorObject(authorObj);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String quote \u003d (String) json.get(\"quote\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String reference \u003d (String) json.get(\"reference\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reflection \u003d (String) json.get(\"reflection\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray array \u003d (JSONArray) json.get(\"categories\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d (ArrayList\u003cString\u003e) array.stream()"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(author, quote, categories, reference, reflection);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Category parseCategoryObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String name \u003d (String) json.get(\"category\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Category category \u003d new Category(name);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setBookList(bookList.filterByCategory(name));"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setQuoteList(quoteList.filterByCategory(name));"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Rating parseRatingObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String title \u003d (String) json.get(\"titleOfRatedBook\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String name \u003d (String) json.get(\"authorOfRatedBook\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Author author \u003d new Author(name);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        long rating \u003d (long) json.get(\"rating\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return new Rating(new Book(author, title), (int) rating);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Bookmark parseBookmarkObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject bookObj \u003d (JSONObject) json.get(\"book\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Book book \u003d parseBookObject(bookObj);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        long pageNum \u003d (long) json.get(\"pageNum\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new Bookmark(book, (int) pageNum);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ToDo parseTodoObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String name \u003d (String) json.get(\"name\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String deadline \u003d (String) json.get(\"deadline\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        boolean isDone \u003d (boolean) json.get(\"isDone\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo newToDo \u003d new ToDo(name, deadline, isDone);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        newToDo.updateDateFormat();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return newToDo;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Author parseAuthorObject(JSONObject json) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String authorName \u003d (String) json.get(\"name\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new Author(authorName);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 3,
      "nat-ho": 2,
      "dozenmatter": 249,
      "chloesyy": 3,
      "yuen-sihao": 3
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/todo/ToDo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.UiMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ToDo implements JsonSerializer {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private LocalDate formattedDeadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private boolean isDeadlineFormatted;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ToDo(String name, String deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.isDeadlineFormatted \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ToDo(String name, String deadline, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.isDeadlineFormatted \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setDeadline(String deadline) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public LocalDate getFormattedDeadline() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return formattedDeadline;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void setFormattedDeadline(LocalDate formattedDeadline) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.formattedDeadline \u003d formattedDeadline;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isDeadlineFormatted() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return isDeadlineFormatted;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void setDeadlineFormatted(boolean isFormatted) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        isDeadlineFormatted \u003d isFormatted;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (isDeadlineFormatted) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return \"[\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + this.name + \" (by: \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + formattedDeadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + \", \" + formattedDeadline.getDayOfWeek() + \")\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return \"[\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + this.name + \" (by: \" + this.deadline + \")\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String signTick \u003d \"v\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String signCross \u003d \"x\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return (isDone ? signTick : signCross);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void updateDateFormat() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            formattedDeadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            isDeadlineFormatted \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            formattedDeadline \u003d LocalDate.parse(\"3000-12-31\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            isDeadlineFormatted \u003d false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"name\", this.getName());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"deadline\", this.getDeadline());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"isDone\", this.isDone());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return json;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 66,
      "dozenmatter": 43
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/todo/ToDoList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class ToDoList extends QuotesifyList\u003cToDo\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private ArrayList\u003cToDo\u003e todos \u003d super.getList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ToDoList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ToDoList(ArrayList\u003cToDo\u003e toDos) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(toDos);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void add(ToDo newToDo) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        todos.add(newToDo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ToDo find(int taskNum) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int indexNum \u003d taskNum - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (taskNum \u003c\u003d todos.size() \u0026\u0026 indexNum \u003e\u003d 0 \u0026\u0026 todos.size() \u003e 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return todos.get(indexNum);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return todos.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void delete(int taskNum) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int indexNum \u003d taskNum - 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        todos.remove(indexNum);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String toDosToReturn \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int taskNum \u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (ToDo toDo : todos) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            taskNum++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            toDosToReturn +\u003d  taskNum + \".\" + toDo.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return toDosToReturn;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void sortByDate() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        todos.sort(Comparator.comparing(todo -\u003e todo.getFormattedDeadline()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (ToDo todo : todos) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(todo.toJson());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 52,
      "dozenmatter": 18
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/ui/TextUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LOGO);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.GOODBYE_MESSAGE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.PROMPT_MESSAGE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (in.hasNextLine()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return in.nextLine().trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return \"bye\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printAddBook(Book book) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.ADD_BOOK_MESSAGE + \"\\n\", book.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printDeleteBook(Book book) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DELETE_BOOK_MESSAGE + \"\\n\", book.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printEditBook(String oldTitle, String newTitle) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.EDIT_BOOK_MESSAGE + \"\\n\", oldTitle, newTitle);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printDoneBook(Book book) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.printf(UiMessage.DONE_BOOK_MESSAGE + \"\\n\", book.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printListDoneBook(BookList bookList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_DONE_BOOK_MESSAGE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(bookList.toStringWithIndex());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printListUndoneBook(BookList bookList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_UNDONE_BOOK_MESSAGE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(bookList.toStringWithIndex());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printAllBooks(BookList bookList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOKS_MESSAGE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(bookList.toStringWithIndex());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printBookDetails(Book book) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_DETAIL_MESSAGE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.print(book.getBookDetailString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printBooksByAuthor(BookList bookList, String authorName) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.LIST_BOOKS_BY_AUTHOR_MESSAGE + \"\\n\", authorName);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(bookList.toStringWithIndex());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printBooksByKeyword(BookList bookList, String keyword) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.printf(UiMessage.LIST_BOOKS_BY_KEYWORD_MESSAGE + \"\\n\", keyword);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(bookList.toStringWithIndex());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAddQuote(Quote quote) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf(UiMessage.ADD_QUOTE_MESSAGE + \"\\n\", quote.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotes(QuoteList quotes) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quotes.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_ALL_QUOTES);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(quotes);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotesByAuthor(QuoteList quoteList, String authorName) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quoteList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String listToPrint \u003d quoteList.getAllQuotesByAuthor(quoteList, authorName);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!listToPrint.isEmpty()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.printf((UiMessage.LIST_QUOTES_BY_AUTHOR_MESSAGE) + \"\\n\", authorName);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(listToPrint);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(UiMessage.LIST_NO_QUOTES_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotesByReference(QuoteList quoteList, String reference) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quoteList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String listToPrint \u003d quoteList.getAllQuotesByReference(quoteList, reference);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!listToPrint.isEmpty()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.printf((UiMessage.LIST_QUOTES_BY_REFERENCE_MESSAGE) + \"\\n\", reference);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(listToPrint);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(UiMessage.LIST_NO_QUOTES_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotesByReferenceAndAuthor(QuoteList quoteList, String reference, String authorName) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quoteList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String listToPrint \u003d quoteList.getAllQuotesByReferenceAndAuthor(quoteList, reference, authorName);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!listToPrint.isEmpty()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.printf(UiMessage.LIST_QUOTES_BY_AUTHOR_AND_REFERENCE_MESSAGE + \"\\n\", reference, authorName);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(listToPrint);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(UiMessage.LIST_NO_QUOTES_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printQuoteAndReflection(Quote quote) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quote.getReflection() !\u003d null) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.printf(UiMessage.LIST_QUOTE_REFLECTION + \"\\n\", quote.toString(), quote.getReflection());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(UiMessage.LIST_QUOTE_NO_REFLECTION);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  void printDeleteQuote(String quote) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf((UiMessage.DELETE_QUOTE_MESSAGE) + \"\\n\", quote);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printRandomQuote() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quotelist \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String randomQuote \u003d quotelist.getRandomQuote();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.PRINT_RANDOM_QUOTE + System.lineSeparator() + randomQuote);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printEditQuote(Quote oldQuote, Quote newQuote) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf(UiMessage.EDIT_QUOTE_MESSAGE + \"\\n\", oldQuote.toString(), newQuote.toString());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAddReflection(Quote quote, String reflection) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf(UiMessage.ADD_QUOTE_REFLECTION + \"\\n\", quote.toString(), reflection);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  void printDeleteQuoteReflection(String quote) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf((UiMessage.DELETE_QUOTE_REFLECTION_MESSAGE) + \"\\n\", quote);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  void printEditQuoteReflection(Quote quote, String updatedReflection) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf((UiMessage.EDIT_QUOTE_REFLECTION) + \"\\n\", quote.toString(), updatedReflection);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printFindQuoteFail() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf(UiMessage.FIND_QUOTE_FAIL);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printFindQuoteSuccess(String results) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.FIND_QUOTE_SUCCESS);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(results);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAddCategoryToBook(String bookTitle, String categoryName) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.ADD_CATEGORY_MESSAGE) + \"\\n\", categoryName, \"\\\"\" + bookTitle + \"\\\"\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAddCategoryToQuote(String quote, String categoryName) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.ADD_CATEGORY_MESSAGE) + \"\\n\", categoryName, \"\\\"\" + quote + \"\\\"\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printRemoveCategoryFromBook(String bookTitle, String categoryName) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.DELETE_CATEGORY_MESSAGE) + \"\\n\", categoryName, \"\\\"\" + bookTitle + \"\\\"\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printRemoveCategoryFromQuote(String quote, String categoryName) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.DELETE_CATEGORY_MESSAGE) + \"\\n\", categoryName, \"\\\"\" + quote + \"\\\"\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printRemoveCategory(String categoryName) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DELETE_CATEGORY_MESSAGE + \"\\n\", categoryName, \"all books and quotes\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printCategorySize(Category category) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.CATEGORY_SIZE_MESSAGE) + \"\\n\", category.getSize(), category.getCategoryName());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAllCategories(CategoryList categoryList) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (categoryList.getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.EMPTY_CATEGORY_LIST_MESSAGE);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_CATEGORIES_MESSAGE);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(categoryList.toString());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAllInCategory(Category category) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String categoryName \u003d category.getCategoryName();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (category.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(UiMessage.NO_ITEMS_IN_CATEGORY_MESSAGE + \"\\n\", categoryName);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.LIST_ALL_IN_CATEGORIES_MESSAGE + \"\\n\", categoryName);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        printAllBooksInCategory(category);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        printAllQuotesInCategory(category);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAllBooksInCategory(Category category) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d category.getBookList();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList allBooks \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (bookList.getList().size() \u003e 0) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(\"BOOKS:\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Book book : bookList.getList()) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                int index \u003d allBooks.getIndex(book) + 1;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                System.out.println(index + \". \" + book.toString());"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAllQuotesInCategory(Category category) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d category.getQuoteList();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList allQuotes \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (quoteList.getList().size() \u003e 0) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(\"QUOTES:\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                int index \u003d allQuotes.getIndex(quote) + 1;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                // used print() because quote.toString() has additional line separator"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                System.out.println(index + \". \" + quote.toString());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printEditCategory(String oldCategory, String newCategory) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.EDIT_CATEGORY_MESSAGE + \"\\n\", oldCategory, newCategory);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printErrorMessage(String message) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printAddRatingToBook(int ratingScore, String titleOfBookToRate, String authorOfBookToRate) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.printf((UiMessage.ADD_RATING_MESSAGE) + \"\\n\", titleOfBookToRate, authorOfBookToRate, ratingScore);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printAllRatings(RatingList ratingList) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratingList.getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_RATINGS_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_ALL_RATINGS_MESSAGE);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(ratingList.toString());"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printSpecifiedRating(RatingList ratings, int ratingToPrint) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.LIST_SPECIFIED_RATING_MESSAGE) + \"\\n\", ratingToPrint);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getRating() \u003d\u003d ratingToPrint) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                System.out.println(rating.toString());"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printDeleteRating(String bookTitle, String author) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.printf((UiMessage.DELETE_RATING_MESSAGE) + \"\\n\", bookTitle, author);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printEditRatingToBook(int ratingScore, String title, String author) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.printf((UiMessage.EDIT_RATING_MESSAGE) + \"\\n\", title, author, ratingScore);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printFoundRating(Rating rating, String title, String author) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.printf((UiMessage.FIND_RATING_MESSAGE) + \"\\n\", title, author);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(rating.toString());"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAddToDo(ToDo toDo) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (toDo !\u003d null) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(UiMessage.ADD_TODO_MESSAGE + \"\\n\", toDo.toString());"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printToDo(ToDo toDo) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(toDo.toString());"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAllToDos(ToDoList toDoList) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (toDoList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_TODOS_MESSAGE);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(toDoList.toString());"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.EMPTY_TODO_LIST_MESSAGE);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printDeleteToDo(ToDo  toDo) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DELETE_TODO_MESSAGE + \"\\n\", toDo.toString());"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printDoneToDo(ToDo  toDo) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DONE_TODO_MESSAGE + \"\\n\", toDo.toString());"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAddBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.ADD_BOOKMARK_MESSAGE + \"\\n\", bookmark.toString());"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printUpdateBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.UPDATE_BOOKMARK_MESSAGE + \"\\n\", bookmark.toString());"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printDeleteBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DELETE_BOOKMARK_MESSAGE + \"\\n\", bookmark.toString());"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAllBookmarks(BookmarkList bookmarkList) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_BOOKMARKS_MESSAGE);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(bookmarkList.toString());"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.EMPTY_BOOKMARK_LIST_MESSAGE);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printInvalidQuotesifyCommand() {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.INVALID_QUOTESIFY_COMMAND);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printHelpPage() {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"Feeling stuck? Well here are the things you can do with Quotesify v2.0:\""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                + System.lineSeparator());"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"1. Book Management\");"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_BOOK_COMMAND);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.DONE_BOOK_COMMAND);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_BOOK_COMMAND);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.EDIT_BOOK_COMMAND);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_COMMAND);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_DETAILS);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_COMPLETE);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"2. Quote Management\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.EDIT_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.FIND_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.ADD_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.DELETE_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.EDIT_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.LIST_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"3a. Bookmark Tracker\");"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"3b. Task Tracker\");"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_TODO_COMMAND);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_TODO_COMMAND);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_TODO_COMMAND);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DONE_COMMAND);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"4. Category Management\");"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"5. Rating System\");"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_RATING_COMMAND);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_RATING_COMMAND);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_RATING_COMMAND);"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.EDIT_RATING_COMMAND);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.FIND_RATING_COMMAND);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Other useful commands\");"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"Show this help page: \" + \"help\");"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"Quit Quotesify: \" + \"bye\");"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Remember: words in [] are optional, \""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                + \"and words in CAPS are your own input\" + System.lineSeparator()"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                + \"Hope this helps!\");"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"~ Your friends from Quotesify\");"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printListOfAddCommands() {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(\"Here is a list of Add commands you can do:\\n\");"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_BOOK_COMMAND);"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.ADD_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_RATING_COMMAND);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_TODO_COMMAND);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printListOfDeleteCommands() {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(\"Here is a list of Delete commands you can do:\\n\");"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_BOOK_COMMAND);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.DELETE_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_RATING_COMMAND);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_TODO_COMMAND);"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printListOfListCommands() {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(\"Here is a list of List commands you can do:\\n\");"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_COMMAND);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_DETAILS);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_COMPLETE);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.LIST_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_RATING_COMMAND);"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_TODO_COMMAND);"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printListOfEditCommands() {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(\"Here is a list of Edit commands you can do:\\n\");"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_BOOK_COMMAND);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.EDIT_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_RATING_COMMAND);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_TODO_COMMAND);"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printListOfFindCommands() {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(\"Here is a list of Find commands you can do:\\n\");"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_BOOK_COMMAND);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_RATING_COMMAND);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_TODO_COMMAND);"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printDoneCommandUsage() {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.DONE_BOOK_COMMAND);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DONE_COMMAND);"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 38,
      "nat-ho": 122,
      "dozenmatter": 199,
      "chloesyy": 50,
      "yuen-sihao": 65
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/ui/UiMessage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class UiMessage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    // I have no choice but to make all variables \"static\", else checkstyleMain will fail."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    // Quotesify messages"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LOGO \u003d \"________                __                .__  _____       \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"\\\\_____  \\\\  __ __  _____/  |_  ____   _____|__|/ ____\\\\__.__.\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \" /  / \\\\  \\\\|  |  \\\\/  _ \\\\   __\\\\/ __ \\\\ /  ___/  \\\\   __\u003c   |  |\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"/   \\\\_/.  \\\\  |  (  \u003c_\u003e )  | \\\\  ___/ \\\\___ \\\\|  ||  |  \\\\___  |\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"\\\\_____\\\\ \\\\_/____/ \\\\____/|__|  \\\\___  \u003e____  \u003e__||__|  / ____|\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"       \\\\__\u003e                      \\\\/     \\\\/          \\\\/    \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String WELCOME_MESSAGE \u003d \"Welcome to Quotesify v2.0!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String GOODBYE_MESSAGE \u003d \"Alright, have a nice day!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String PROMPT_MESSAGE \u003d \"\\nWhat would you like to do with Quotesify?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String INVALID_QUOTESIFY_COMMAND \u003d \"I don\u0027t understand you.\" + System.lineSeparator()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"Maybe type \\\"help\\\" for usage instructions?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    // Command related messages"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_BOOK_MESSAGE \u003d \"The book [%s] has been added!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_BOOK_MESSAGE \u003d \"The book [%s] has been deleted!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_BOOK_MESSAGE \u003d \"The book has been edited from [%s] to [%s]!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_BOOKS_MESSAGE \u003d \"Here is a list of all books:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String LIST_BOOK_DETAIL_MESSAGE \u003d \"Here are the details of your book:\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String LIST_DONE_BOOK_MESSAGE \u003d \"Here are the books you have completed: \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String LIST_UNDONE_BOOK_MESSAGE \u003d \"Here are the books you have yet to complete: \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_BOOKS_BY_AUTHOR_MESSAGE \u003d \"Here is a list of books by %s:\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String LIST_BOOKS_BY_KEYWORD_MESSAGE \u003d \"Here is a list of books with the keyword \\\"%s\\\":\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String DONE_BOOK_MESSAGE \u003d \"The book [%s] has been marked as done!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ADD_CATEGORY_MESSAGE \u003d \"I have tagged category [%s] to %s!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DELETE_CATEGORY_MESSAGE \u003d \"I have removed category [%s] from %s!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String CATEGORY_SIZE_MESSAGE \u003d \"You have a total of %d item(s) tagged as [%s].\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_CATEGORIES_MESSAGE \u003d \"Here is the list of all categories:\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_ALL_IN_CATEGORIES_MESSAGE \u003d \"Here are the list of items tagged as [%s]:\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EMPTY_CATEGORY_LIST_MESSAGE \u003d \"There are no categories created!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String NO_ITEMS_IN_CATEGORY_MESSAGE \u003d \"There are no items tagged as [%s].\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_CATEGORY_MESSAGE \u003d \"The category has been changed from [%s] to [%s]!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ADD_RATING_MESSAGE \u003d \"You have just rated [%s by %s] %d star!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DELETE_RATING_MESSAGE \u003d \"Rating for [%s by %s] has been deleted!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_ALL_RATINGS_MESSAGE \u003d \"Planning to recommend some books?\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \" Here are your rated books!\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_NO_RATINGS_FOUND_MESSAGE \u003d \"None of the books are rated yet!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_SPECIFIED_RATING_MESSAGE \u003d \"Here are the books you rated as %d star!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String EDIT_RATING_MESSAGE \u003d \"Ratings for [%s by %s] has been updated to %d star!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FIND_RATING_MESSAGE \u003d \"Here is your rating for [%s by %s]!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_TODO_MESSAGE \u003d \"The task [%s] has been added!\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TODO_SIZE_MESSAGE \u003d \"You have a total of %d task(s) recorded.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_TODOS_MESSAGE \u003d \"Here is the list of all task(s) recorded:\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_TODO_MESSAGE \u003d \"The Task [%s] has been deleted!\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DONE_TODO_MESSAGE \u003d \"The Task [%s] has been marked as done!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EMPTY_TODO_LIST_MESSAGE \u003d \"There are no task created\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String INCORRECT_DATE_FORMAT_MESSAGE \u003d \"The format of the date you provide is incorrect! \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            + \"I will add the task with a deadline of plain task instead.\" + System.lineSeparator()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            + \"Note that this task may not be displayed in order of time.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_BOOKMARK_MESSAGE \u003d \"The bookmark [%s] has been added!\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String UPDATE_BOOKMARK_MESSAGE \u003d \"The bookmark [%s] has been updated\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String BOOKMARK_SIZE_MESSAGE \u003d \"You have a total of %d bookmark(s) recorded.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_BOOKMARKS_MESSAGE \u003d \"Here is the list of all bookmark(s) recorded:\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EMPTY_BOOKMARK_LIST_MESSAGE \u003d \"There are no bookmark created\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_BOOKMARK_MESSAGE \u003d \"The bookmark [%s] has been removed!\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EMPTY_BOOKMARK_COMMAND \u003d \"There is no info related to bookmark provided!\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ADD_QUOTE_MESSAGE \u003d \"The quote [%s] has been added!\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_ALL_QUOTES \u003d \"Here are all your quotes:\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_QUOTE_MESSAGE \u003d \"The quote \\\"%s\\\" has been deleted!\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_NO_QUOTES_SAVED_MESSAGE \u003d \"You have no saved quotes!\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_NO_QUOTES_FOUND_MESSAGE \u003d \"I could not find any that matched your specifications.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_QUOTES_BY_AUTHOR_MESSAGE \u003d \"Here is a list of quotes by %s:\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_QUOTES_BY_REFERENCE_MESSAGE \u003d \"Here is a list of quotes from %s:\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_QUOTES_BY_AUTHOR_AND_REFERENCE_MESSAGE \u003d \"Here is a list of quotes from %s by %s:\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String PRINT_RANDOM_QUOTE \u003d \"Before you continue, here\u0027s something:\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String EDIT_QUOTE_MESSAGE \u003d \"The quote has been edited from: [%s] to [%s]!\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FIND_QUOTE_SUCCESS \u003d \"Here are the results of my search:\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FIND_QUOTE_FAIL \u003d \"None of your quotes matches the keyword\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ADD_QUOTE_REFLECTION \u003d \"Reflection has added been to quote: %s\" + System.lineSeparator()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"Reflection: %s\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String LIST_QUOTE_REFLECTION \u003d \"Here is the reflection you are looking for!\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + System.lineSeparator() + \"Quote: %s\" + System.lineSeparator() + \"Reflection: %s\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String LIST_QUOTE_NO_REFLECTION \u003d \"That quote does not have any reflection attached!\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DELETE_QUOTE_REFLECTION_MESSAGE \u003d \"Reflection for the quote \\\"%s\\\" has been deleted!\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String EDIT_QUOTE_REFLECTION \u003d \"Reflection has been updated!\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + System.lineSeparator() + \"Quote: %s\" + System.lineSeparator() + \"Reflection: %s\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    // Help page commands"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_BOOK_COMMAND \u003d \"Add book: \" + \"add -b BOOK_TITLE /by AUTHOR\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_BOOKMARK_COMMAND \u003d \"Add bookmark: \" + \"bookmark -b BOOK_TITLE /pg PAGE_NUMBER\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_QUOTE_COMMAND \u003d \"Add quote: \" + \"add -q QUOTE [/from BOOK_TITLE] [/by AUTHOR]\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ADD_QUOTE_REFLECTION_COMMAND \u003d \"Add reflection to quote: \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"add -qr QUOTE_NUM /reflect REFLECTION\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_CATEGORY_COMMAND \u003d \"Add category: \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"add -c CATEGORY {[-b BOOK_TITLE] | [-q QUOTE_NUMBER]}\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ADD_RATING_COMMAND \u003d \"Add rating: \" + \"add -r RATING_SCORE BOOK_TITLE /by AUTHOR\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_TODO_COMMAND \u003d \"Add task: \" + \"add -t TASK /by DEADLINE\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String DELETE_BOOK_COMMAND \u003d \"Delete book: \" + \"delete -b BOOK_NUMBER\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_BOOKMARK_COMMAND \u003d \"Delete bookmark: \" + \"delete -bm BOOK_TITLE\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_QUOTE_COMMAND \u003d \"Delete quote:\" + \"delete -q QUOTE_NUMBER\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DELETE_QUOTE_REFLECTION_COMMAND \u003d \"Delete quote reflection:\" + \"delete -qr QUOTE_NUMBER\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_CATEGORY_COMMAND \u003d \"Delete category: \""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"delete -c CATEGORY {[-b BOOK_TITLE] | [-q QUOTE_NUMBER]}\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DELETE_RATING_COMMAND \u003d \"Delete rating: \" + \"delete -r BOOK_TITLE /by AUTHOR\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_TODO_COMMAND \u003d \"Delete task: \" + \"delete -t TASK_NUMBER\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String EDIT_BOOK_COMMAND \u003d \"Edit book: \" + \"edit -b BOOK_NUMBER /to NEW_TITLE\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_BOOKMARK_COMMAND \u003d \"Update bookmark: \" + \"bookmark -b BOOK_TITLE /pg PAGE_NUMBER\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String EDIT_QUOTE_COMMAND \u003d \"Edit quote: \" + \"edit -q QUOTE_NUMBER /to NEW_QUOTE\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String EDIT_QUOTE_REFLECTION_COMMAND \u003d \"Edit quote reflection: \""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"edit -qr QUOTE_NUMBER /to NEW_REFLECTION\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_CATEGORY_COMMAND \u003d \"Edit category: \" + \"edit -c OLD_CATEGORY /to NEW_CATEGORY\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String EDIT_RATING_COMMAND \u003d \"Edit rating: \" + \"edit -r RATING_SCORE BOOK_TITLE /by AUTHOR\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_TODO_COMMAND \u003d \"\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String FIND_BOOK_COMMAND \u003d \"Find book: \" + \"find -b KEYWORD\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String FIND_BOOKMARK_COMMAND \u003d \"\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FIND_QUOTE_COMMAND \u003d \"Find quote: \" + \"find -q QUOTE_NUMBER\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String FIND_CATEGORY_COMMAND \u003d \"\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FIND_RATING_COMMAND \u003d \"Find rating: \" + \"find -r BOOK_TITLE /by AUTHOR\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String FIND_TODO_COMMAND \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_BOOK_COMMAND \u003d \"List books: \" + \"list -b [/by AUTHOR]\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String LIST_BOOK_COMPLETE \u003d \"List books by completion: \" + \"list -b done/undone\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String LIST_BOOK_DETAILS \u003d \"List book details: \" + \"list -b BOOK_NUMBER\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_BOOKMARK_COMMAND \u003d \"List bookmarks: \" + \"list -bm\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_QUOTE_COMMAND \u003d \"List quotes: \" + \"list -q [/by AUTHOR] [/from BOOK_TITLE]\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String LIST_QUOTE_REFLECTION_COMMAND \u003d \"List quote reflection: \" + \"list -qr QUOTE_NUMBER\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_CATEGORY_COMMAND \u003d \"List categories: \" + \"list -c [CATEGORY]\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_RATING_COMMAND \u003d \"List ratings: \" + \"list -r [RATING_SCORE]\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_TODO_COMMAND \u003d \"List tasks: \" + \"list -t\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String DONE_BOOK_COMMAND \u003d \"Mark book as done: \" + \"done -b BOOK_NUMBER\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"Mark task as done: \" + \"done -t TASK_NUMBER\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 3,
      "nat-ho": 31,
      "dozenmatter": 86,
      "chloesyy": 10,
      "yuen-sihao": 1
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/QuotesifyTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "class QuotesifyTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "dozenmatter": 2,
      "-": 10
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/book/BookTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "class BookTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void toString_titleAuthor_titleByAuthor() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Author author \u003d new Author(\"author\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Book book \u003d new Book(author, \"title\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        assertEquals(\"title by author\", book.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 2,
      "chloesyy": 13
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/category/CategoryTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void getBookCategoryTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Author author \u003d new Author(\"me\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Book book \u003d new Book(author, \"book1\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories.add(\"romance\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        book.setCategories(categories);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Category category \u003d new Category(\"romance\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertEquals(category.getCategoryName(), book.getCategories().get(0));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 22
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/quote/QuoteTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class QuoteTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void quoteAddTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quotes \u003d new QuoteList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Author author \u003d new Author(\"Gill Bates\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Quote quote \u003d new Quote(\"It was the butler\", \"Herlock Shomles\", author);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.add(quote);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assertEquals(quote, quotes.getQuote(0));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 15,
      "dozenmatter": 2
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/rating/RatingTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class RatingTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    RatingList ratings \u003d new RatingList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void addRating_validBookTitleAndRating_success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String titleOfRatedBook \u003d \"Harry Potter\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String name \u003d \"J K Rowling\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Author author \u003d new Author(name);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Book book \u003d new Book(author, titleOfRatedBook);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d 4;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating rating \u003d new Rating(book, ratingScore);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.add(rating);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(rating, ratings.getList().get(0));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void listRatings_emptyList_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(ratings.toString(), \"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void listRatings_validRatings_sucess() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String titleOfRatedBook \u003d \"Book 1\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String name \u003d \"someone\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Author author \u003d new Author(name);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Book book \u003d new Book(author, titleOfRatedBook);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d 2;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating rating \u003d new Rating(book, ratingScore);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.add(rating);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(ratings.toString(), \"[\" + titleOfRatedBook + \"] by \" + name + \": \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                + ratingScore + \" star\" + System.lineSeparator());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 1,
      "yuen-sihao": 41
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/todo/ToDoTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String taskName \u003d \"read Chapter 2\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String deadline \u003d \"Tuesday night\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo toDo \u003d new ToDo(taskName, deadline);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        assertEquals(\"[x] read Chapter 2 (by: Tuesday night)\", toDo.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 14,
      "dozenmatter": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "helloooo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -b book1 /by me"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -q quote1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -c action -b 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -c motivational -q 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -c nice -b 1 -q 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "delete -c action -b 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c action"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "delete -c motivational -q 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c motivational"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c nice"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "delete -b 1"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "dozenmatter": 11,
      "chloesyy": 1
    }
  }
]
