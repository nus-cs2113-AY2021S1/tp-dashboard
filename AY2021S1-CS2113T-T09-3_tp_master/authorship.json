[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "# Quotesify"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is a greenfield Java project by a team of software engineering students."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is a free desktop CLI application to help users in their reading activities."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "With Quotesify, users can add books and quotes that they wish to remember. They can categorize their books and quotes"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "by author, customized categories, and even rate their books. Quotesify also comes with a progress tracker just to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "improve the reading experience of users."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Interested to contribute to the development of Quotesify? Given below are instructions on how to use it."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## Setting up in IntelliJ"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Fork the Quotesify repo from [here](https://github.com/AY2021S1-CS2113T-T09-3/tp),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "and clone the fork to your computer."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Open up your IDE (IntelliJ is highly recommended). If you are not at the welcome screen,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "click `File` \u003e `Close Project` to close any existing project."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3. Set up the correct JDK version for Gradle:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    1. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    2. Click `Newâ€¦` and find the directory where you saved your JDK."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "4. Click `Import Project`."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "5. Locate the *build.gradle* file and select it."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "6. Click `OK`."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "7. Click `Open as Project`."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "8. Click `OK` to accept all default settings."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "9. To verify the set up, locate the `Quotesify.java` file, right-click it and select `Run Quotesify.main()`."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "If the setup is correct, you should see something like this as shown below:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "\u003e Task :compileJava UP-TO-DATE"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Task :processResources NO-SOURCE"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "\u003e Task :classes UP-TO-DATE"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "\u003e Task :Quotesify.main()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "________                __                .__  _____       "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "\\_____  \\  __ __  _____/  |_  ____   _____|__|/ ____\\__.__."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " /  / \\  \\|  |  \\/  _ \\   __\\/ __ \\ /  ___/  \\   __\u003c   |  |"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/   \\_/.  \\  |  (  \u003c_\u003e )  | \\  ___/ \\___ \\|  ||  |  \\___  |"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "\\_____\\ \\_/____/ \\____/|__|  \\___  \u003e____  \u003e__||__|  / ____|"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "       \\__\u003e                      \\/     \\/          \\/    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Welcome to Quotesify v2.1!"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Before you continue, here\u0027s something:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Better days are coming, they are called Saturday and Sunday."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---------------------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "What would you like to do with Quotesify?"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## Documentation"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Documentation for Quotesify is stored in */docs* directory."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Click [here](https://ay2021s1-cs2113t-t09-3.github.io/tp/) to access the documentation such as User Guide and Developer Guide."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "## Build automation using Gradle"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "### I/O redirection tests"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit tests"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "## Checkstyle"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "* A sample CheckStyle rule configuration is provided in this project."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "## CI using GitHub Actions"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 47,
      "-": 33
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    mainClassName \u003d \"seedu.quotesify.Quotesify\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    archiveBaseName \u003d \"quotesify\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        attributes \"Main-Class\": \"seedu.quotesify.Quotesify\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    from {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "dozenmatter": 13,
      "-": 45
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chin Heng | [Github](https://github.com/dozenmatter) | [Portfolio](team/dozenmatter.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Si Hao | [Github](https://github.com/yuen-sihao) | [Portfolio](team/yuen-sihao.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nathaniel | [Github](https://github.com/nat-ho) | [Portfolio](team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chloe | [Github](https://github.com/chloesyy) | [Portfolio](team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yilun | [Github](https://github.com/lunzard) | [Portfolio](team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 5,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "- [Introduction](#10-introduction)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "- [Setting up](#20-setting-up)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "- [Design](#30-design)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Architecture](#31-architecture)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [UI component](#32-ui-component)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Logic component](#33-logic-component)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Model component](#34-model-component)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Storage component](#35-storage-component)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "- [Implementation](#40-implementation)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Book Management](#41-feature-book-management)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Quote Management](#42-feature-quote-management)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Progress Tracker](#43-feature-progress-tracker)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Category Management](#44-feature-category-management)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Rating System for books](#45-feature-rating-system-for-books)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "- [Appendix: Requirements](#appendix-requirements)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Product Scope](#product-scope)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [User Stories](#user-stories)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Non-Functional Requirments](#non-functional-requirements)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Glossary](#glossary)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "- [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Launch and Shutdown](#launch-and-shutdown)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Initial Launch](#initial-launch)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Subsequent Launch](#subsequent-launch)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Shutdown](#shutdown)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Testing for Book Management](#testing-for-book-management)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Adding a book](#adding-a-book)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [List all existing books](#list-all-existing-books)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [List book details](#list-book-details)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [List books by author](#list-books-by-author)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Find books by keyword](#find-books-by-keyword)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Delete books](#delete-books)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Edit book](#edit-book)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Testing for Quote Management](#testing-for-quote-management)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Adding a quote](#adding-a-quote)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Listing all quotes](#listing-all-quotes)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Listing quotes by a specific author](#listing-quotes-by-a-specific-author)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Listing quotes from a specific reference](#listing-quotes-from-a-specific-reference)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Listing quotes from a specific reference and by a specific author](#listing-quotes-from-a-specific-reference-and-by-a-specific-author)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Editing a quote](#editing-a-quote)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Deleting a quote](#deleting-a-quote)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Finding a quote](#finding-a-quote)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Adding reflection to quote](#adding-reflection-to-a-quote)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Listing reflection of a quote](#listing-reflection-of-a-quote)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Editing reflection of a quote](#editing-reflection-of-a-quote)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Deleting reflection of a quote](#deleting-reflection-of-a-quote)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Testing for Progress Tracker](#testing-for-progress-tracker)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Adding a bookmark to book](#adding-a-bookmark-to-book)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [List all existing bookmarks](#list-all-existing-bookmarks)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Deleting an existing bookmark](#deleting-an-existing-bookmark)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Editing an existing bookmark](#edit-an-existing-bookmark)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Adding a task to todo list](#adding-a-task-to-todo-list)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Listing all existing tasks](#listing-all-existing-tasks)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Marking an existing task as done](#marking-an-existing-task-as-done)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Deleting an existing task](#deleting-an-existing-task)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Testing for Category Management](#testing-for-category-management)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Adding categories](#adding-categories)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Listing all categories](#listing-all-categories)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Listing a specific category](#listing-a-specific-category)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Deleting existing categories](#deleting-existing-categories)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Editing an existing category](#editing-an-existing-category)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Finding an existing category](#finding-an-existing-category)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Testing for Rating System for books](#testing-for-rating-system-for-books)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Adding a book rating](#adding-a-book-rating)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Listing all existing book ratings](#listing-all-existing-book-ratings)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Listing books of a specific book rating](#listing-books-of-a-specific-book-rating)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Deleting a book rating](#deleting-a-book-rating)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Editing a book rating](#editing-a-book-rating)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    + [Finding book ratings](#finding-book-ratings)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 1.0 Introduction"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "**Welcome to Quotesify!**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is a free desktop application to help you in your reading activities. With Quotesify, you can add"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "books and the related quotes that you wish to remember. You can categorize your books and quotes by author,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "customized categories, and even rate your books. Quotesify also comes with a progress tracker just to improve"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "your reading experience."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "This guide will provide information on the design and implementation of Quotesify. It will help you get started"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "on your journey of being a contributor to Quotesify. This guide will also explain the steps to test out the program,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "so that you will have a better understanding of the current status of Quotesify."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 2.0 Setting up"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. Fork the Quotesify repo from [here](https://github.com/AY2021S1-CS2113T-T09-3/tp),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "and clone the fork to your computer."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Open up your IDE (IntelliJ is highly recommended). If you are not at the welcome screen,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "click `File` \u003e `Close Project` to close any existing project."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3. Set up the correct JDK version for Gradle:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    1. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    2. Click `Newâ€¦` and find the directory where you saved your JDK."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "4. Click `Import Project`."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "5. Locate the *build.gradle* file and select it."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "6. Click `OK`."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "7. Click `Open as Project`."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "8. Click `OK` to accept all default settings."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "9. To verify the set up, locate the `Quotesify.java` file, right-click it and select `Run Quotesify.main()`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "If the setup is correct, you should see something like this as shown below:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "________                __                .__  _____       "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "\\_____  \\  __ __  _____/  |_  ____   _____|__|/ ____\\__.__."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " /  / \\  \\|  |  \\/  _ \\   __\\/ __ \\ /  ___/  \\   __\u003c   |  |"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/   \\_/.  \\  |  (  \u003c_\u003e )  | \\  ___/ \\___ \\|  ||  |  \\___  |"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "\\_____\\ \\_/____/ \\____/|__|  \\___  \u003e____  \u003e__||__|  / ____|"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "       \\__\u003e                      \\/     \\/          \\/    "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Welcome to Quotesify v2.1!"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Before you continue, here\u0027s something:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Better days are coming, they are called Saturday and Sunday."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "What would you like to do with Quotesify?"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "*Note: If you have added a quote before, the quote printed will be randomized.*"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "## 3.0 Design"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "*Note: All UML diagrams in this guide are stored in the images/directory.*"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### 3.1 Architecture"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "![Architecture Diagram](images/Architecture_Diagram.png)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "The architecture diagram displayed above describes the high-level design of Quotesify. Below details a brief"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "description of each component shown."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "#### Main class: `Quotesify.java`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* On program launch, the Main is responsible for initialising the required components in the correct sequence as well"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "as to connect these components to start Quotesify."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* On shutdown, the Main gracefully terminates the application and its running components."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "The other components that make up Quotesify include:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* **UI**: Text-based User Interface (UI) of the application."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* **Logic**: Handles the execution of user input commands."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* **Model**: Stores Quotesifyâ€™s data objects in application memory."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* **Storage**: Stores and accesses program data in the hard disk."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "The Sequence Diagram below shows an example of how the components work together upon receiving the command"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`add -b Harry Potter /by JK Rowling`."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "![Sequence Diagram for Components](images/SeqDiagram_Components.png)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* The user command `add -b Harry Potter /by JK Rowling` will be converted into a String object named `userCommandText`, which is then"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "passed into the Logic component for parsing and execution of the command."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### 3.2 UI Component"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "The class diagram below shows the association between classes that make up the UI component."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "![Class Diagram for UI Component](images/ClassDiagram_UI.png)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "The UI component is made up of main 2 classes:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* `TextUi`: Responsible for the majority display of Quotesifyâ€™s messages. "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `UiMessage`: Holds all messages required for TextUI to print to the program console."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "In essence, the UI is responsible for the majority display of all successful command executions, error messages"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ", as well as user interaction by prompting for the next command."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### 3.3 Logic Component"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "The class diagram below shows the association between classes that make up the Logic component."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Note: **Model** and **Storage** in this diagram represent components, not classes."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "![Class Diagram for Logic Component](images/ClassDiagram_Logic.png)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "The Logic component is made up of 2 sub-components, namely the `Parser` and `Command`. Below describes the sequence"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "flow from the time a user input is read till command execution ends."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. User input is fetched from the UI and passed into the Parser for parsing."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. A Command object is returned and subsequently executed."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "3. The command execution outcome may affect Quotesifyâ€™s model objects. (e.g. adding a book)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "4. Command instructs the UI component to print out relevant output messages depending on command type."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Also, Command may invoke saving of data via Storage at a given point in time."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "5. Finally, Command will then inspect the exit status after command execution to verify if the program should exit."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "6. Control is handed back over to the UI, either for processing of program exit or the next user input command."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* `X` represents the execution type such as `Add`, `Delete`, `Edit`, etc."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* `Y` represents the model type such as `Book`, `Quote`, `Category`, etc."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Therefore,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `XCommand` class represents the command type such as `AddCommand`, `FindCommand`, `DeleteCommand`, etc."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* `XYCommand` class represents the command to execute from a specific model type. Such as `AddBookCommand`"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ", `FindBookCommand`, `DeleteQuoteCommand`, etc."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### 3.4 Model Component"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "The class diagram below shows the association between classes that make up the Model component."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "![Class Diagram for Model Component](images/ClassDiagram_Model.png)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "The model component consists of several classes that make up the main features of Quotesify."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Each object holds in-application data unique to each feature and is stored in a list of their own."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### 3.5 Storage Component"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "The storage component consists of a single `Storage` class. It is responsible for saving user data as instructed"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "by the command component as well as to detect and load data on program launch."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "On program launch:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. `Storage` is initialised and checks for the existence of save data."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. If save data exists, `Storage` will read the save data in JSON format and parses them back into their"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "model objects (e.g. Book)."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "3. If save data does not exist, `Storage` will create an empty save file in the specified directory."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "On Command execution:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. `Storage` parses all model objects in JSON format and writes into the save file."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "## 4.0 Implementation"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "*Note: All UML diagrams in this guide are stored in the images/ directory.*"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### 4.1 Feature: Book Management"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Given below is the class diagram for classes related to Book Management in Quotesify:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "![Class Diagram for Book Management](images/ClassDiagram_Book.png)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### 4.1.1 Add Books"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The sequence diagram below demonstrates the command execution process when adding a book to the booklist."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "![Sequence Diagram for Add Books](images/SeqDiagram_AddBook.png)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* To reduce complexity and increase readability, the sequence diagram excludes error handling."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* Parsing of user input is done in the Parser and AddCommand classes, which is also not shown in the diagram."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* `checkMissingInformation()` method is also not included in the sequence diagram as it merely checks for possible"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "missing information given in the user input and throws exceptions."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* Upon ensuring there are no mistakes in the user input, `createNewBook()` will be called, which essentially creates a "
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "new book after ensuring there are no identical books already in the BookList."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* `sort()` method is called after adding the book to the BookList in order to sort the books in "
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "alphabetical order."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "##### Design Considerations"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Title and author must be specified as \u003ctitle,author\u003e is used as the primary key."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Pros: Allows users to specify different books with the same title but different author."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Cons: Need to check for both title and author to prevent duplicates."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* BookList is always sorted in alphabetical order "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * Alternative 1: Sort after adding the book"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        * Pros: Only need to sort after every addition, listing is as per normal"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        * Cons: Adding books may take longer if size of BookList is too large"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * Alternative 2: Sort before listing the books"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        * Pros: Adding books will not take as long"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        * Cons: Since there are multiple listing methods, may not be the best method to keep sorting before listing."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### 4.1.2 Find Book by Keyword"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The sequence diagram below demonstrates the command execution process when finding books by a keyword."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "![Sequence Diagram for Find Book by Keyword](images/SeqDiagram_FindBook.png)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* Opt-frames ensure that the user input is correct and that the keyword results in a non-empty list of books."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* Parsing of user input is done in the Parser and FindCommand classes, which is not shown in the diagram."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* `findByKeyword()` method filters books regardless of case. "
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "##### Design Considerations"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Allows user to find books if either title or author contains the keyword."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Pros: Users can find books not just based on book title alone. The search range is increased to author name as well."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Cons: Need to check for both title and author for the list of results."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Case insensitive"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Pros: Users do not have to bother about the exact letter case when typing the keyword."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Cons: Need to ensure all title or author are converted to the same case before searching."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Keyword or phrase"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * Alternative 1: Let users find by multiple space-separated keywords"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        * Pros: Users can find books if they can only remember part of the book title."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        * Cons: Search list may not be narrowed as much. "
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * Alternative 2: Let users find by exact phrase"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        * Pros: Users can narrow down the search using an exact phrase instead of just one word."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        * Cons: The exact phrase must be typed out for the correct result to show."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 4.2 Feature: Quote Management"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Given below is the class diagram for classes related to the Quote Management System in Quotesify:"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "![Class Diagram for Quote Management System](images/ClassDiagram_Quote.png)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The `XQuoteCommand` class represents `AddQuoteCommand`, `ListQuoteCommand`, `EditQuoteCommand`, `DeleteQuoteCommand`,"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`FindQuoteCommand`, `AddQuoteReflectionCommand`, `ListQuoteReflectionCommand`, `EditQuoteReflectionCommand`,"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`DeleteQuoteReflectionCommand`."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### 4.2.1 Add quote"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The add quote feature allows users to add quotes of multiple formats to Quotesify."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Quotes added can be of the following format:"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote with author name and reference title"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote with author name"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote with reference title"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote with no author name and reference title"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The sequence diagram below reflects the command execution when a user adds a quote to Quotesify."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "![Sequence Diagram for Add Quotes](images/SeqDiagram_AddQuote.png)"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Not shown in the sequence diagram is the parsing of user input by Quotesify\u0027s main parser class that creates an"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`AddCommand` object which subsequently creates the `AddQuoteCommand` as seen in the diagram, and then calling it\u0027s "
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`execute()` method."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The `parseAddParameters()` method from `QuoteParser` will be called to identify the format desired by the user and "
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "creates the appropriate `Quote` object to be added into the `QuoteList`. "
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Appropriate validation checks will be conducted to identify if the quote field is empty. Similarly, if author and"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "reference tags are used, their respective fields will also be checked. If any missing field is found, the quote will"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "not be added and an error message will be displayed."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Upon successful addition of a quote, the user will now be able to list, edit, delete, find and add a reflection to it."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Ability to add author name and reference title to quotes"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Pros: Provides categorization and allows for the implementation of other useful features such as search and list"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Cons: Increased memory overhead for each quote and implementation complexity"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Allowing users to add quotes of different formats with single command"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Pros: Users will not be restricted to a single format or be required to use a different commands for each format."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Cons: Increased implementation complexity due to parsing different formats."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### 4.2.2 Edit Quote Reflection"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The edit quote reflection feature updates current reflection of a quote into a new one, keeping the remainding "
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "information such as quote, author name and reference the same."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The sequence diagram below reflects the command execution when a user edits the reflection of a quote."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "![Sequence Diagram for Edit Quotes Reflection](images/SeqDiagram_EditQuoteReflection.png)"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Not shown in the sequence diagram is the parsing of user input by Quotesify\u0027s main parser class that creates an"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`EditCommand` object which subsequently creates the `EditQuoteReflectionCommand` as seen in the diagram, and then "
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "calling it\u0027s `execute()` method."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Appropriate validation checks will be conducted to determine if the edit tag `/to` is present, and the updated "
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "reflection is not empty. If the following conditions are not met, the reflection will not be updated and an error "
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "message will be displayed."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Use of `/to` flag"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Pros: Clear demarcation between quote number and start of updated reflection."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Cons: Additional parsing required and users are required to type more."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Include a `updateReflection` method in `QuoteList` instead of editing quote object directly"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Pros: Better encapsulation and data hiding as attributes can be set to private"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Cons: Additional methods and passing of data required"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    "
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "lunzard"
        },
        "content": "### 4.3 Feature: Progress Tracker"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Progress Tracker consists of two parts: Bookmark Management and Task Management."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Given below is the class diagram for classes related to Bookmark Management in Quotesify:"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "lunzard"
        },
        "content": "![Class Diagram for Bookmark Management](images/ClassDiagram_Bookmark.png)"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Given below is the class diagram for classes related to Task Management in Quotesify:"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "lunzard"
        },
        "content": "![Class Diagram for Task Management](images/ClassDiagram_ToDo.png)"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "lunzard"
        },
        "content": "#### 4.3.1 Add/Update bookmark"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The proposed add or update bookmark feature will rely on an existing `Book` object, and then a `Bookmark` object will "
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "be created in the process."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The `Bookmark` object will be made up of the `Book` object and a page number, which is stored in a list of "
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "bookmarks named `BookmarkList`."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The sequence diagram below demonstrates the command execution process when adding or updating a bookmark to an existing book."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "lunzard"
        },
        "content": "![Sequence Diagram for Add Bookmark](images/SeqDiagram_AddBookmark.png)"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* To reduce complexity and increase readability, the sequence diagram excludes error handling."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* Not shown in the sequence diagram is the parsing of user input by Quotesify\u0027s main parser class that creates an"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "lunzard"
        },
        "content": "`BookmarkCommand` object as seen in the diagram, and then calling it\u0027s `execute()` method."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "lunzard"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* BookmarkList is always sorted in order of creation time"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    * Pros: Allow user to easily find the earliest and the latest book they started to read."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    * Cons: Make user hard to find the bookmark they recently updated."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "lunzard"
        },
        "content": "#### 4.3.2 Add task"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The add task feature allows users to add tasks with a deadline to Quotesify. Tasks added can be of the following format:"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* Task without any deadline"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* Task with an unformatted deadline"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* Task with a formatted deadline "
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "lunzard"
        },
        "content": " "
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* The `ToDo` object (we mentioned as \u0027task\u0027 before) will be made up of a name and a deadline, which is stored in a list of "
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "lunzard"
        },
        "content": "tasks named `ToDoList`."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The sequence diagram below demonstrates the command execution process when adding a task."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "lunzard"
        },
        "content": "![Sequence Diagram for Add ToDo](images/SeqDiagram_AddToDo.png)"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* To reduce complexity and increase readability, the sequence diagram excludes error handling."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* Not shown in the sequence diagram is the parsing of user input by Quotesify\u0027s main parser class that creates an"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "lunzard"
        },
        "content": "`AddCommand` object which subsequently creates the `AddToDoCommand` as seen in the diagram, and then calling it\u0027s "
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "lunzard"
        },
        "content": "`execute()` method."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "lunzard"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* ToDoList is sorted in two ways:"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    * Tasks with formatted deadline will be sorted in ascending order of time. (The one with an earlier deadline "
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    is displayed ahead of the one with a later deadline)"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    * Task with unformatted deadline and without specified deadline will be arranged in order of creation time."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    * Tasks with formatted deadline will be listed ahead of all other tasks."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    "
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        * Pros: User can view the most urgent task easily"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        * Cons: It is hard for user to find a task with an unformatted deadline "
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        even though the text in the deadline represents a high urgency."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    "
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    "
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 4.4 Feature: Category Management"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Given below is the class diagram for classes related to Category Management in Quotesify:"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "![Class Diagram for Category Management](images/ClassDiagram_Category.png)"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "A `Category` object holds the following attributes:"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* A `String` object that holds the category name in **lower-case** format."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* A `BookList` object that stores a list of `Book` objects tagged with the specified category name."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* A `QuoteList` object that stores a list of `Quote` objects tagged with the specified category name."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* An `int` value that indicates the total number of books/quotes tagged under the specified category."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.4.1 Add Categories"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The proposed add categories feature allows a user to add multiple categories to an existing book, quote, or both. "
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The sequence diagram below demonstrates the command execution process when adding a category to an existing book."
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "![Sequence Diagram for Add Categories](images/SeqDiagram_AddCategories.png)"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* For each category that the user has specified, the process will be executed in a loop until all categories have been processed."
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Additional checks include verifying the existence of the specified book and if the specified category already exists in the book. If either one of these checks fail, an error message will be prompted."
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* On success, "
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "  * The category name will be added into the *categories* attribute of the `Book` object. "
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "  * A new `Category` object will be created and stored into the category list if it does not exist. "
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "  * The book will be added into the category\u0027s *bookList* attribute for record keeping."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "##### Design Consideration"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* Aspect: Allowing users to specify only a single, or multiple categories at once."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "  * Alternative 1 (current choice): Allowing users to specify multiple categories at once."
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * Pros: Increases efficiency for users as they could add multiple categories to a book/quote in a single command."
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    * Cons: Increased complexity in implementation."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "  * Alternative 2: Allowing users to specify only a single category at any time."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * Pros: Easier to implement."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * Cons: Inefficient for users who wish to add multiple categories to a book/quote."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* Aspect: Whether to give users an option to specify both books and quotes to be tagged with a category."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "  * Alternative 1 (current choice): Giving users an option to specify a book, quote, or both to be tagged with a category."
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * Pros: Increases efficiency for users as they could add the same category to a book and quote in a single command."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * Cons: Difficult to implement."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "  * Alternative 2: Users can only specify a book or quote, but not both to be tagged with a category:"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * Pros: Easier to implement."
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * Cons: Inefficient for users who wish to add a category to a book and quote at the same time. "
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "With the addition of new categories, users can perform several commands that makes use of them. Such as editing of category name, finding a category, deleting a category,"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "listing all categories, or adding the same category to other books and quotes."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "### 4.5 Feature: Rating system for books"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Given below is the class diagram for classes related to the Rating System in Quotesify:"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![Class Diagram for Rating system](images/ClassDiagram_Rating.png)"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* A `Book` must exists before a `Rating` can be created."
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The `XRatingCommand` class represents `AddRatingCommand`, `DeleteRatingCommand`, `ListRatingCommand`"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ", `EditRatingCommand`, `FindRatingCommand` classes which all extends their respective parent `XCommand` classes."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* All the `XCommand` classes extends the abstract `Command` class."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### 4.5.1 Add rating"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "The *add rating* feature will rely on an existing book object, and a rating object will then be created"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "in the process."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The book object will store an attribute named *rating*, which will be set by this feature."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The rating object will be made up of the book object and a rating score, which is stored in a list of ratings."
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Given below is the sequence diagram for adding rating to a book:"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![Sequence Diagram for Add Ratings](images/SeqDiagram_AddRating.png)"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The sequence diagram shows the process of *Add Rating* from the `execute()` method in `AddRatingCommand` class,"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "which extends the `AddCommand` class. The switch statement in the `execute()` method to decide the item that the user"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "is adding is not shown in the diagram."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The list of ratings will be retrieved from the `ListManager` class which stores all the different lists in Quotesify."
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* In the `addRating()` method, if the user input such as book number or rating score is missing"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ", a message will be printed to inform the user and the method is returned."
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* There will also be checks implemented by the `RatingParser` to check if the rating score is within range,"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "if the book to be rated exists in Quotesify and if the book has been rated before."
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "This is done by checking the list of books in Quotesify. If all these conditions are met, the book will be rated."
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* When rating a book, the attribute *rating* of the book is set to the rating score. A rating object containing the"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "book details and rating score will also be created and stored in the rating list."
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "This list of ratings will be used when listing or finding ratings."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "##### Design Consideration"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Aspect: Saving the ratings in a Rating List as compared to just only using the Book List"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * Alternative 1 (current choice): Saving the ratings in a Rating List."
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        * Pros: Helps in listing and finding ratings as not all books are rated."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        * Cons: Increases memory usage."
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * Alternative 2: Saving the ratings only in the Book List."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        * Pros: Less memory usage."
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        * Cons: May be slower as not all books are rated and the list is not sorted according to rating score."
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Aspect: Using both book title and author to identify a rating instead of just book title"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * Alternative 1 (current choice): Using both book title and author to identify a rating."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        * Pros: Allows books with the same title but different author to be rated."
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * Alternative 2: Using only book title to identify a rating."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        * Cons: Books with same title but different author will not be rated."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "#### 4.5.2 Find ratings"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "The *find ratings* feature will search for books with title that contains the specified keyword"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "and print details about the rating."
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Given below is the sequence diagram for finding ratings:"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![Sequence Diagram for Find Ratings](images/SeqDiagram_FindRating.png)"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The sequence diagram shows the process of *Find Rating* from the `execute()` method in `FindRatingCommand` class"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "which extends the `FindCommand` class. The switch statement in the `execute()` method to decide the item that the"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "user is finding is not shown in the diagram."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The list of ratings will be retrieved from the `ListManager` class which stores all the different lists in Quotesify."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* In the `findRating()` method, if the keyword to search for is missing, a message will be printed"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "to inform the user and the method is returned."
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The list of ratings will be looped to see if ratings exists for books with title containing the specified keyword."
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The details of the ratings found will be printed to the user."
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## Appendix: Requirements"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Product scope"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Target user profile"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "The intended user of Quotesify is someone that meets the following criterias:"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* reads a lot"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* has difficulty remembering content after reading them"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* prefers typing over other means of input"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* prefers using desktop applications"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* comfortable with using Command Line Interface (CLI) applications"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Value proposition"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify will help you to improve your reading experience with quick and easy features such as book management,"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "quote management, progress tracker, category management and a rating system for your books."
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### User Stories"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|Version| As a ... | I want to ... | So that I ...|"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|reader|enter good quotes and phrases from a book I read|can quickly refer back to it at any time|"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|user|categorize my listings|can view quotes from a specific category that I want|"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|long time user|have a page to see a list of books and categories of my notes|can navigate into the relevant book/category without having to remember the titles|"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|user|give rating for the books I read|can recommend book titles to others when asked|"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|beginner reader|add deadlines to books I am reading|can keep track of my readling deadlines|"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|avid reader|be able to keep track of books|can filter out books I have read and those that are on my list of books to read|"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|forgetful user|add bookmarks to my book|can find the page where I last stopped|"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "|v1.0|user|categorise my books or quotes|can view items from a specific category whenever I need|"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "|v1.0|user|save quotes I find meaningful|can view my favourite quotes whenever I want|"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v2.0|forgetful reader|be reminded of quotes I saved|can remember them better in the long run|"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "|v2.0|student and reader|pen my thoughts to a highlighted quote or text|can expand on certain ideas or express how I feel|"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v2.0|long time user|be able to search for keywords|can find specific quotes I want from the list|"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v2.0|user after some time|find a book rating by its book title|do not have to go through the whole list|"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Non-Functional Requirements"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Should work on major Operating Systems (OS) such as Windows and Mac with at least `Java 11` installed."
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. A user should have no problems using the various commands without referring to the help page after some time."
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "3. Users should prefer typing to GUI."
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "4. Data should be stored locally inside the device\u0027s hard disk."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Glossary"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* *GUI* - Graphical User Interface"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## Appendix: Instructions for manual testing"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Launch and shutdown"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Initial launch"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   1. Ensure `Java 11` and above is installed."
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   2. Download the latest **Quotesify JAR file** from [here](https://github.com/AY2021S1-CS2113T-T09-3/tp/releases)."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   3. Save the jar file in a desired file directory."
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   4. Open your command line or terminal and navigate into the file directory where Quotesify is saved."
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   5. Run `java -jar quotesify.jar` to launch Quotesify."
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Subsequent launch"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   1. Open your command line or terminal and navigate into the file directory where Quotesify is saved."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   2. Run `java -jar quotesify.jar` to launch Quotesify."
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   3. Data will be automatically loaded from the data file upon launch."
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Shutdown"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   1. To terminate Quotesify, enter the `bye` command. You should see the following:"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   2. Data will be automatically saved into a data file."
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Before you continue, here\u0027s something:"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Better days are coming, they are called Saturday and Sunday."
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Alright, have a nice day!"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "*Note: If you have added a quote before, the quote printed will be randomized.*"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Testing for Book Management"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Adding a book"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `add -b Harry Potter /by JK Rowling`"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    "
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book is added to Quotesify. A message will be prompted to indicate that"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   the book has been successfully added."
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * `add -b`: Book title left empty"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * `add -b /by JK Rowling`: Book title left empty with author name specified"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * `add -b title`: Author name left empty"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    * `add -b title /by`: Author name left empty with author tag specified"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    "
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    Expected: Book will not be added. An error message will by printed."
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    "
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### List all existing books"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `list -b`"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: All existing books in booklist will be listed."
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### List book details"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `list -b 2`"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book details of book with the book index 2 from list of all books will be printed."
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `list -b Harry Potter /by JK Rowling`: Wrong format. "
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `list -b 10000`: Index out of range of booklist."
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book details will not be printed. An error message will be printed instead."
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### List books by author"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `list -b /by JK Rowling`"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Books with the author JK Rowling will be listed. "
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `list -b JK Rowling`: Flag `/by` not specified"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Books will not be listed. An error message will be printed."
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Find books by keyword"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `find -b Harry`"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Books with the title or author name containing Harry will be listed. "
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `find -b`: Keyword not specified"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Books will not be listed. An error message will be printed."
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Delete books"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `delete -b 3`"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book with the book index of 3 in booklist will be deleted from list."
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Successful message will be printed."
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `delete -b Harry Potter`: Wrong format"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `delete -b 10000`: Index out of range of booklist."
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book will not be deleted. An error message will be printed."
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Edit book"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. Test case: `edit -b 3 /to Harry Potterrrrr`"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book title of book with the book index of 3 will be changed to Harry Potterrrrr."
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. Other incorrect commands to try: "
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `edit -b Harry Potter /to Harry Potterrrrr`: Wrong format"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `edit -b 3 Harry Potterrrrr`: Flag `/to` not specified. "
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   * `edit -b 3 /to`: New title not specified. "
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   "
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "   Expected: Book title will not be edited. An error message will be printed. "
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Testing for Quote Management"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Adding a quote"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Add a quote without author and reference to Quotesify"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Test case: `add -q Life\u0027s short, smile while you still have teeth`"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Expected: Quote is added to Quotesify. message will be prompted to indicate that the quote has been successfully edited."
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Add a quote with an author name to Quotesify"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Test case: `add -q Luke, I am your father /by Darth Vader`"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Expected: Quote is added to Quotesify. message will be prompted to indicate that the quote has been successfully edited."
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "3. Add a quote with reference to Quotesify"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Test case:`add -q Get schwifty /from Rick and Morty`"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Expected: Quote is added to Quotesify. message will be prompted to indicate that the quote has been successfully edited."
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "4. Add a quote with an author and reference to "
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Test case: `add -q So everyoneâ€™s supposed to sleep every single night now? /by Rick /from Rick and Morty`"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    Expected: Quote is added to Quotesify. message will be prompted to indicate that the quote has been successfully edited. "
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "5. Incorrect commands to try:"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -q` : quote field left empty"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -q ` : empty space entered for quote field  "
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -q you can\u0027t see me /by` : author tag with missing author name"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -q my name is inigo montoya /from` : reference tag with missing reference title"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -q i am your father /by /from` : missing reference title and author name"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Quote will not be added. A message with error details will be shown."
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Listing all quotes"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `list -q`"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: The entire list of quotes with reference and author name (if present) in Quotesify will be displayed."
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Listing quotes by a specific author"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `list -q /by rick`"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: The list of quotes with the specified author name will be displayed."
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -q /by` : author tag with missing author name"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: No quotes are listed. A message with error details will be shown."
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Listing quotes from a specific reference"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `list -q /from rick and morty`"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: The list of quotes with the specified reference title will be displayed."
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -q /from` : reference tag with missing reference title"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: No quotes are listed. A message with error details will be shown."
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Listing quotes from a specific reference and by a specific author"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `list -q /from rick and morty /by rick`"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: The list of quotes with the specified reference title and author name will be displayed."
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -q /from rick and morty /by` : reference and author tag with missing author name"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -q /from /by rick` : reference and author tag with missing reference title"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -q /from /by` : missing reference title and author name"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: No quotes are listed. A message with error details will be shown."
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Editing a quote"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `edit -q 2 /to No, I am your mummy /by Darth Vader`"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Quote will be updated, a prompt displaying old and updated quote will be shown."
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -q` : missing quote number and updated quote"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -q 1 /to`: missing updated quote"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -q 1 You can\u0027t see me` : missing \"/to\" flag"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -q 9999999 /to You can\u0027t see me` : non-existent quote number"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Quote will not be updated. A message with error details will be shown."
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Deleting a quote"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `delete -q 1`"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Quote will be deleted from Quotesify. A message will be prompted to indicate that "
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   the quote has been successfully deleted."
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `delete -q`: missing quote number field"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `delete -q X`: non integer input"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `delete -q 9999999`: non existent quote number"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: No quote is deleted. A message with error details will be shown."
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Finding a quote"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `find -q sleep`"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Quotes related to the keyword will be shown."
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `find -q`: missing keyword"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `find -q `: empty space as keyword"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: No quotes will be found and listed. A message with error details will be shown."
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Adding reflection to a quote"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `add -qr 1 /reflect No, that\u0027s not true. It\u0027s impossible!`"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    "
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Reflection is added to quote. A message will be prompted to indicate that the reflection has been successfully added."
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * Quotes with reflection will have a \"[R]\" tag attached to differentiate."
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "5. Incorrect commands to try:"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -qr` : missing quote number, reflection tag and reflection"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -qr 1 /reflect` : reflection field missing"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `add -qr 9999 /reflect Reflection is here` : non-existent quote"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Reflection will not be added. A message with error details will be shown."
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Listing reflection of a quote"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `list -qr 1`"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: The reflection attached to the specified quote will be displayed."
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -qr` : missing quote number"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `list -qr 9999` : non-existent quote"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Reflection is not listed. A message with error details will be shown."
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Editing reflection of a quote"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `edit -qr 1 /to Who is Yodaâ€™s daddy?`"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Reflection will be updated, a prompt displaying updated reflection will be shown."
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -qr` : missing quote number, to tag and updated reflection"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -qr 1 /to`: missing updated reflection"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -qr 1 nothing to reflect` : missing to flag"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `edit -qr 9999999 /to updated reflection here!` : non-existent quote number"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Reflection will not be updated. A message with error details will be shown."
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Deleting reflection of a quote"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. Test case: `delete -qr 1`"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   Expected: Reflection will be deleted from the quote. A message will be prompted to indicate that "
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   the reflection has been successfully deleted."
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `delete -qr`: missing quote number field"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `delete -qr X`: non integer input"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   * `delete -qr 9999999`: non existent quote number"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "   "
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "lunzard"
        },
        "content": "   Expected: Quote reflection will not be deleted. A message with error details will be shown."
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "lunzard"
        },
        "content": "   "
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Testing for Progress Tracker"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Adding a bookmark to book"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `bookmark -b 1 /pg 123`"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: a page number will be marked at the book. A message will be prompted to indicate that "
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   the bookmark has been tagged to the book successfully."
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `bookmark -b 1 /pg`: missing page number field"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `bookmark -b 0 /pg 123`: incorrect book number input"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Bookmark will not be added to any book. A message will error details will be shown."
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### List all existing bookmarks"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `list -bm`"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: A list of bookmarks will be displayed. Each row contains an index assigned to the bookmark in the list,"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    its bookâ€™s information, and a page number marked by the bookmark. "
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Deleting an existing bookmark"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `delete -bm 1`"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Bookmark will be deleted from the book. A message will be prompted to indicate that "
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   the bookmark has been removed from the book successfully."
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `delete -bm 999` : bookmark number with given index does not exist"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `delete -bm abc` : invalid bookmark number provided"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Bookmark will not be deleted from the book. A message with error details will be shown."
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Edit an existing bookmark"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `bookmark -b 1 /pg 123`"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: The page number will be updated in the bookmark. A message will be prompted to indicate that "
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   the bookmark has been updated successfully."
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `bookmark -b 1 /pg`: missing page number field"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `bookmark -b 0 /pg 123`: incorrect book number input"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Bookmark will not be updated to any book. A message will error details will be shown."
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Adding a task to todo list"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Adding a task without deadline"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   - Test case: `add -t return Harry Potter`"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     Expected: A message will be prompted to indicate that the task has been added to the todo list successfully,"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    and the deadline is â€˜not specifiedâ€™."
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    "
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Adding a task with unformatted deadline"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   - Test case: `add -t return Harry Potter /by tmr`"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     Expected: A message will be prompted to indicate that the task has been added to the todo list successfully, "
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   and the deadline is the same as stated in the command line."
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3. Adding a task with formatted deadline"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   - Test case: `add -t return Harry Potter /by 2020-10-24`"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     Expected: A message will be prompted to indicate that the task has been added to the todo list successfully, "
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     and the deadline will be formatted as â€˜Oct 24 2020, Saturdayâ€™."
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Listing all existing tasks"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `list -t`"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: A list of tasks will be displayed. The tasks with formatted deadlines will be displayed in the front, "
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   and sorted in ascending order of timing, while other tasks will be displayed at the back without any order."
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Marking an existing task as done"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `done -t 1`"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: A message will be prompted to indicate that the task has been marked as done in the todo list successfully."
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Deleting an existing task"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `delete -t 1`"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: A message will be prompted to indicate that the task has been removed from the todo list successfully."
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Testing for Category Management"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Adding categories"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. Add one or more category to a book"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Prerequisites: A book should exist in Quotesify."
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Assume that the book \"Harry Potter\" is added into Quotesify assigned to index 1."
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `add -c fantasy -b 1`"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that category has been tagged to the book successfully."
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `add -c fantasy romance -b 1`"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that categories have been tagged to the book successfully."
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. Add one or more category to a quote"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Prerequisites: A quote should exist in Quotesify."
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Assume that the quote \"Life is great!\" is added into Quotesify assigned to index 1."
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `add -c inspirational -q 1`"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that category has been tagged to the quote successfully."
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `add -c inspirational happy -q 1`"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that categories have been tagged to the quote successfully."
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "3. Add one or more category to a book and quote"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Prerequisites: A book and quote should exist in Quotesify."
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Assume that an existing book and quote are both assigned to index 1."
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `add -c inspirational -b 1 -q 1`"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that category has been tagged to both book and quote successfully."
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `add -c inspirational action -q 1`"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that categories have been tagged to both book and quote successfully."
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "4. Incorrect commands to try"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `add -c` missing category name, book or quote"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `add -c action` missing a book or quote"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `add -c action -b 0 -q 0` invalid book and quote index"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `add -c -b 1 -q 1` missing category name"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   Expected: An error message will be prompted. No changes will be made."
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Listing all categories"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. List all existing categories"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `list -c`"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A list of categories with the total number of items tagged under each category will be displayed."
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Listing a specific category"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. List all books and quotes tagged by a specific category"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `list -c action`"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A list of books and quotes tagged under that category will be displayed."
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. Incorrect commands to try"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `list -c 123` invalid category name"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   Expected: An error message will be displayed indicating that no such category exists."
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Deleting existing categories"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. Remove one or more category from a book"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Prerequisites: Specified book index, quote index and category should exist in Quotesify."
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Assume the book \"Harry Potter\" is tagged with [action, fantasy] category and assigned with index 1."
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `delete -c action -b 1`"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that category has been removed from book successfully."
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `delete -c action fantasy -b 1`"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that categories have been removed from book successfully."
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. Remove one or more category from a quote"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    - Prerequisites: Specified book index, quote index and category should exist in Quotesify."
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    - Assume the quote \"Life is great!\" is tagged with [inspirational, happy] category and assigned with index 1."
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    - Test case: `delete -c inspirational -q 1`"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "      Expected: A message will be prompted to indicate that category has been removed from quote successfully."
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    - Test case: `delete -c inspirational happy -q 1`"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "      Expected: A message will be prompted to indicate that categories have been removed from quote successfully."
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "3. Remove one or more category from a book and quote"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Prerequisites: Specified book index, quote index and category should exist in Quotesify."
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Assume that a book and quote are both tagged with [action, happy] categories."
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `delete -c action -b 1 -q 1`"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that category has been removed from both book and quote successfully."
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `delete -c action happy -b 1 -q 1`"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted to indicate that categories have been removed from both book and quote successfully."
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "4. Remove one or more category from list"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `delete -c action`"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   Expected: A message will be prompted to indicate that category has been removed from all book and quotes."
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `delete -c action fantasy`"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   Expected: A message will be prompted to indicate that categories has been removed from all book and quotes."
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "5. Incorrect commands to try"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `delete -c` missing category name, book or quote"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `delete -c action -b 0 -q 0` invalid book and quote index"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `delete -c -b 1 -q 1` missing category name"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   Expected: An error message will be prompted. No changes will be made."
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "         "
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Editing an existing category"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. Edit an existing category name"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `edit -c love /to romance`"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: A message will be prompted indicating that category has been changed successfully. All books and quotes tagged under the old category will be changed as well."
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. Incorrect commands to try"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `edit -c` missing existing and new category name"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `edit -c love` missing new category name"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   Expected: An error message indicating invalid parameters and a command usage will be prompted. No changes will be made."
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Finding an existing category"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. Find existing categories related to a keyword."
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - Test case: `find -c man`"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     Expected: Quotesify will list all categories containing the keyword \"man\"."
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     "
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. Incorrect commands to try"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `find -c` missing keyword"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   - `find -c 123` invalid category name"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   "
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   Expected: An error message will be prompted. No categories will be listed."
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Testing for Rating System for books"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Adding a book rating"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Prerequisite: Book to be rated should exist in Quotesify."
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Use `list -b` to list all existing books and get book number."
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Test case: `add -r 5 1`, assuming book number 1 exists."
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Rating is added to the book. A message will be prompted to indicate rating has been added successfully."
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3. Other incorrect commands to try:"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `add -r`: rating score and/or book number fields left empty"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `add -r 6 1`: assuming book number 1 exists, but rating score is out of the range"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `add -r 1 x`: where x is a book number that does not exist"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is added. A message with error details will be prompted."
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    "
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Listing all existing book ratings"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `list -r`"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: The entire list of books and their ratings will be shown. Rating of books are sorted"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   in descending order, with the highest rating at the top."
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Listing books of a specific book rating"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `list -r 5`"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: The list of books with the specified rating will be shown."
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `list -r 6`: rating score is out of the range"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `list -r AAA`: invalid rating score"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is listed. A message with error details will be prompted."
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Deleting a book rating"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Prerequisite: Book to be rated should exist in Quotesify."
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Use `list -b` to list all existing books and get book number."
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Test case: `delete -r 1`, assuming book number 1 exists."
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Rating is deleted from book. A message will be prompted to indicate rating has "
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   been deleted successfully."
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3. Other incorrect commands to try:"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `delete -r`: book number field left empty"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `delete -r x`: where x is a book number that does not exist or has not been rated"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is deleted. A message with error details will be prompted."
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Editing a book rating"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Prerequisite: Book to be rated should exist in Quotesify."
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Use `list -b` to list all existing books and get book number."
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Test case: `edit -r 4 1`, assuming book number 1 exists."
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Rating is edited to the new rating. A message will be prompted to indicate rating has"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   been edited successfully."
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3. Other incorrect commands to try:"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `edit -r`: rating score and/or book number fields left empty"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `edit -r -1 1`: assuming book number 1 exists, but rating score is out of the range"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `edit -r 3 x`: where x is a book number that does not exist or has not been rated"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is edited. A message with error details will be prompted."
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Finding book ratings"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `find -r POT`"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Ratings of books with title that contains the keyword (case-insensitive) will be listed."
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `find -r`: keyword field left empty"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is found and listed. A message with error details will be prompted."
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      }
    ],
    "authorContributionMap": {
      "lunzard": 56,
      "nat-ho": 278,
      "dozenmatter": 212,
      "chloesyy": 91,
      "yuen-sihao": 537,
      "-": 23
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "# Quotesify"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is a free desktop application to help you in your reading activities. With Quotesify, you can add "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "books and the related quotes that you wish to remember. You can categorize your books and quotes by author,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "customized categories, and even rate your books. Quotesify also comes with a progress tracker just to improve"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "your reading experience."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is available for download on all major operating systems such as Windows and Mac."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 7,
      "-": 6
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "- [Introduction](#10-introduction)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "- [Quick Start](#20-quick-start)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "- [Features](#30-features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Book Management](#31-book-management)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Quote Management](#32-quote-management)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Progress Tracker](#33-progress-tracker)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Category Management](#34-category-management)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Rating System for books](#35-rating-system-for-books)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "- [Usage](#40-usage)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Book Management](#41-book-management)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Adding a book](#411-adding-a-book-add--b)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Completing a book](#412-completing-a-book-done--b)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Listing all existing book](#413-listing-all-existing-books-list--b)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Listing book details](#414-listing-book-details-list--b)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Listing books by an Author](#415-listing-books-by-an-author-list--b)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Listing books by completion](#416-listing-books-by-completion-list--b)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [List done books](#417-list-done-books)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [List undone books](#418-list-undone-books)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Finding books by keyword](#419-finding-books-by-keyword-find--b)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Deleting a book](#4110-deleting-a-book-delete--b)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Editing an existing book](#4111-editing-an-existing-book-edit--b)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Quote Management](#42-quote-management)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Add quotes](#421-adding-a-quote-add--q)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [List all quotes](#422-listing-all-quotes-list--q)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [List quotes from a specific reference](#423-listing-quotes-from-a-specific-reference-list--q)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [List quotes from a specific author](#424-listing-quotes-from-a-specific-author-list--q)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [List quotes from a specific reference and author](#425-listing-quotes-from-a-specific-reference-and-author-list--q)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Edit an existing quote](#426-editing-an-existing-quote-edit--q)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Delete a quote](#427-deleting-a-quote-delete--q)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Finding quotes](#428-finding-quotes-find--q)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Add quote reflection](#429-adding-reflection-to-a-quote-add--qr)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [List quote reflection](#4210-listing-reflection-of-a-quote-list--qr)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Edit an existing quote reflection](#4211-editing-reflection-of-a-quote-edit--qr)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Delete a quote reflection](#4212-deleting-reflection-of-a-quote-delete--qr)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Progress Tracker](#43-progress-tracker)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Add bookmarks](#431-add-bookmarks-bookmark--b-pg)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [List bookmarks](#432-list-bookmarks-list--bm)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Delete bookmarks](#433-delete-bookmarks-delete--bm)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Edit bookmarks](#434-edit-bookmarks-bookmark--b)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Add tasks](#435-add-tasks-add--t-by)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [List tasks](#436-list-tasks-list--t)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Mark tasks as done](#437-mark-tasks-as-done-done--t)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Delete tasks](#438-delete-tasks-delete--t)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Category Management](#44-category-management)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Add categories](#441-add-categories-add--c)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [List categories](#442-list-categories-list--c)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [List items in a category](#443-list-items-in-a-category-list--c)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Delete categories](#444-delete-categories-delete--c)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Edit an existing category](#445-edit-an-existing-category-edit--c)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Find an existing category](#446-find-an-existing-category-find--c)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Rating System for books](#45-rating-system-for-books)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Adding a book rating](#451-adding-a-book-rating-add--r)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Listing book ratings](#452-listing-book-ratings-list--r)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Deleting a book rating](#453-deleting-a-book-rating-delete--r)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Editing an existing book rating](#454-editing-an-existing-book-rating-edit--r)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    * [Finding book ratings](#455-finding-book-ratings-find--r)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Getting Help in Quotesify](#46-getting-help-in-quotesify)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  * [Terminating the program](#47-terminating-the-program)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "- [FAQs](#50-faqs)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "- [Command Summary](#60-command-summary)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "  "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 1.0 Introduction"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is a free desktop application to help you in your reading activities. With Quotesify, you can add "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "books and the related quotes that you wish to remember. You can categorize your books and quotes by author,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "customized categories, and even rate your books. Quotesify also comes with a progress tracker just to improve"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "your reading experience."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is available for download on all major operating systems such as Windows and Mac."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 2.0 Quick Start"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Before you begin, here\u0027s what you need to do:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Ensure you have at least `Java 11` installed on your system."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Download the latest **Quotesify JAR file** from [here](https://github.com/AY2021S1-CS2113T-T09-3/tp/releases)."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3. Open your command line or terminal and navigate into the file directory where you saved the application."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "4. Run `java -jar quotesify.jar` to launch Quotesify."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "5. Type a command in the command line and press `ENTER` to execute it. You should see the following:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "6. Refer to [4.0 Usage](#40-usage) for details of each command."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "________                __                .__  _____       "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "\\_____  \\  __ __  _____/  |_  ____   _____|__|/ ____\\__.__."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " /  / \\  \\|  |  \\/  _ \\   __\\/ __ \\ /  ___/  \\   __\u003c   |  |"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/   \\_/.  \\  |  (  \u003c_\u003e )  | \\  ___/ \\___ \\|  ||  |  \\___  |"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "\\_____\\ \\_/____/ \\____/|__|  \\___  \u003e____  \u003e__||__|  / ____|"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "       \\__\u003e                      \\/     \\/          \\/    "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Welcome to Quotesify v2.1!"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Before you continue, here\u0027s something:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Better days are coming, they are called Saturday and Sunday."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "*Note: If you have added a quote before, the quote printed will be randomized.*"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 3.0 Features"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Wondering what Quotesify can do for you? Read this section to find out more!"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 3.1 Book Management"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "To manage your books, the book management feature allows you to add, delete and edit books you\u0027ve already read or"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "wish to read. You can then mark these books as done if you\u0027ve already finished reading them, list them according to "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "their authors or completion and even find any book you want by just typing in keywords."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "What are you waiting for? If you\u0027ve struggled with keeping up with your long booklist, Quotesify is here to help! "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 3.2 Quote Management"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The quote management system in Quotesify allows you to add your quotes, list, edit and delete them acting as"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "a log to keep track of all your favourite quotes. You can also store additional information such as the author of the "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "quote and reference from where it was taken. As the list may get large over time, you can find specific quotes from "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "keywords with the search feature. Last but not least, you can add your thoughts to quotes stored in Quotesify by adding"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "a reflection to it allowing you to expand and note down important ideas or why this quote resonated with you."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "If you are someone trying to remember and apply productivity tips from a book you just read, or someone trying to "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "track those all inspiring quotes to come back to, Quotesify\u0027s quote management system is the perfect fit for you!"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 3.3 Progress Tracker"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Progress Tracker in Quotesify allows you to add, update, list and delete bookmarks for the books you add. "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lunzard"
        },
        "content": "It also allows you to add, mark as done, list and delete tasks in the todo list. "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lunzard"
        },
        "content": "With the bookmarks you have created, you can record your reading progress and trace to the page you stopped at quickly. "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lunzard"
        },
        "content": "WIth the tasks in your todo list, you can set reminders for various activities "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lunzard"
        },
        "content": "and easily find the most urgent task in the list."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lunzard"
        },
        "content": "If you hate flipping pages to find the page to continue reading, "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lunzard"
        },
        "content": "or want to develop a reading habit by setting many goals of readling, this feature is prepared for you!"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 3.4 Category Management"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Category Management in Quotesify allows you to create, list, edit and delete categories at your free will."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "With the categories you have created, you can simply tag them to any book or quote and list all of them in a categorised fashion."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Whenever you have second thoughts about a given category name, simply change the name or remove it whilst Quotesify helps you"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "update the change across all books and quotes."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "If you are someone who likes being neat, organised and efficient, this feature is for you!"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 3.5 Rating System for books"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "The rating system in Quotesify allows you to rate your books from 1 to 5 star. With this system, you will not forget"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "how you feel about the books you read, and will always be ready to recommend a book to your fellow book readers."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Ratings can be edited whenever you change your mind about the book, or be deleted when you are not interested"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "in that rating anymore. Ratings can also be listed according to their rating score - with your favourites at the top -"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "as well as be searched based on keywords in the title."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "With Quotesify\u0027s rating system, remembering the books you love will never be an issue for you!"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 4.0 Usage"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "This section will walk you through the features in Quotesify."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 4.1 Book Management"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Do you have books you are currently reading and want to keep track of them? "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Or do you have a list of books you wish to read in the future but could never remember them? "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "You can add books to your booklist so that you can refer to it at any time. "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.1.1 Adding a book: `add -b`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "You can add a book to your current booklist. "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `add -b BOOK_TITLE /by AUTHOR`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* You must specify both the title and the author of the book. "
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`add -b Harry Potter /by JK Rowling`"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "The book [Harry Potter by JK Rowling] has been added!"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.1.2 Completing a book: `done -b`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Finished reading a book? You can now mark your book as done."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `done -b BOOK_NUMBER`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* `BOOK_NUMBER` refers to the index you see when you list ALL books."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* The book number must be an existing number in the list when you list ALL books."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " `done -b 2`"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "The book [Harry Potter by JK Rowling] has been marked as done!"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.1.3 Listing all existing books: `list -b`"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Want to see what books you have in your reading list? You can list all books currently in your booklist. "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `list -b`"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list -b`"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------------------"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here is a list of all books:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. [x] Becoming by Michelle Obama"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. [x] Harry Potter by JK Rowling"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "3. [x] The Chronicles of Narnia by CS Lewis"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "4. [x] The Lion, the Witch and the Wardrobe by CS Lewis"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------------------"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.1.4 Listing book details: `list -b`"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Want to check a book\u0027s details? You can list the details of a book by specifying the book number."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `list -b BOOK_NUMBER`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* `BOOK_NUMBER` refers to the index you see when you list ALL books."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* The book number must be an existing number in the list when you list ALL books."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list -b 2`"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Case 1: When the book has not been rated and not completed."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here are the details of your book:"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Title: Harry Potter"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Author: JK Rowling"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Categories:"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "There are no categories created!"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Case 2: When the book has been rated but not completed."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here are the details of your book:"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Title: Harry Potter"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Author: JK Rowling"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Categories:"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "There are no categories created!"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Rating: 5"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Case 3: When the book has not been rated but completed."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here are the details of your book:"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "[Completed]"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Title: Harry Potter "
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Author: JK Rowling"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Categories:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "There are no categories created!"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Case 4: When the book has been rated and completed."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here are the details of your book:"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "[Completed]"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Title: Harry Potter"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Author: JK Rowling"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Categories:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "There are no categories created!"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Rating: 5"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.1.5 Listing books by an Author: `list -b`"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "You can list all books currently in your booklist with the same author. "
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `list -b /by AUTHOR`"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* You must specify an existing author name"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* You must put `/by` before the author name"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list -b /by CS Lewis`"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------------------"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here is a list of books by CS Lewis:"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. [x] The Chronicles of Narnia by CS Lewis"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. [x] The Lion, the Witch and the Wardrobe by CS Lewis"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------------------"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.1.6 Listing books by completion: `list -b`"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Only want to see the books you have finished or not finished? You can do that using the command below."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "##### 4.1.7 List done books"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `list -b done`"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list -b done`"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here are the books you have completed:"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. [v] Harry Potter by JK Rowling"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "##### 4.1.8 List undone books"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `list -b undone`"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list -b undone`"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------------------"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here are the books you have yet to complete:"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. [x] Becoming by Michelle Obama"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. [x] The Chronicles of Narnia by CS Lewis"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "3. [x] The Lion, the Witch and the Wardrobe by CS Lewis"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------------------"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.1.9 Finding books by keyword: `find -b`"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Can\u0027t recall the book title you want in your long list of books? You can find the book using a keyword."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `find -b KEYWORD`"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`find -b the`"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------------------"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Here is a list of books with the keyword \"the\":"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "1. [x] The Chronicles of Narnia by CS Lewis"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "2. [x] The Lion, the Witch and the Wardrobe by CS Lewis"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------------------"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.1.10 Deleting a book: `delete -b`"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Don\u0027t need a book anymore? You can delete the book permanently. "
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `delete -b BOOK_NUMBER`"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* `BOOK_NUMBER` refers to the index you see when you list ALL books."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* The book number must be an existing number in the list when you list ALL books."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`delete -b 2`"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------------------"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "The book [Harry Potter by JK Rowling] has been deleted!"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------------------"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~ "
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.1.11 Editing an existing book: `edit -b`"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Accidentally typed in the wrong book title? You can edit your book titles. "
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Format: `edit -b BOOK_NUMBER /to NEW_TITLE`"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* `BOOK_NUMBER` refers to the index you see when you list ALL books."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* The book number must be an existing number in the list when you list ALL books."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "* `/to` flag must be typed before the new title"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`edit -b 2 /to Harry Potter 2`"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "The book has been edited from [Harry Potter] to [Harry Potter 2]!"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 4.2 Quote Management"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Came across an inspiring quote while reading, or a useful productivity tip from an article only to forget it after"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "some time? Quotesify is here to help you store and track those all inspiring quotes while reminding you about them"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "so you\u0027ll never forget them!  "
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.2.1 Adding a quote: `add -q`"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Adds a quote to your current list of quotes."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `add -q QUOTE {[/by AUTHOR] | [/from REFERENCE]}`"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The quote field should not be empty."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Reference and Author fields are optional, both or either one can be used."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Tags should not be used without their relevant data."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. `add -q Life is short, smile while you still have teeth`"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. `add -q Luke, I am your father /by Darth Vader`"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "3. `add -q Get schwifty! /from Rick and Morty`"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "4. `add -q So everyoneâ€™s supposed to sleep every single night now? /from Rick and Morty /by Rick`"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome 1:"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-----------------------------------------------------------------------------"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The quote [\"Life is short, smile while you still have teeth\"] has been added!"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-----------------------------------------------------------------------------"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome 2:"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------------"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The quote [\"Luke, I am your father\" - by Darth Vader] has been added!"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------------"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome 3:"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------------"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The quote [\"Get schwifty!\" - from Rick and Morty] has been added!"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------------"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome 4:"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The quote [\"So everyoneâ€™s supposed to sleep every single night now?\" - by Rick, (from Rick and Morty)] has been added!"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.2.2 Listing all quotes: `list -q`"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Lists all existing quotes."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `list -q`"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `list -q`"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Here are all your quotes:"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "1. \"Life is short, smile while you still have teeth\""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "2. \"Luke, I am your father\" - by Darth Vader"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "3. \"Get schwifty!\" - from Rick and Morty"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "4. \"So everyoneâ€™s supposed to sleep every single night now?\" - by Rick, (from Rick and Morty)"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.2.3 Listing quotes from a specific reference: `list -q`"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Lists all quotes tagged under the specified reference title."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `list -q /from REFERENCE`"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `list -q /from rick and morty`"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Here is a list of quotes from rick and morty:"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "\"Get schwifty!\" - from Rick and Morty"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "\"So everyoneâ€™s supposed to sleep every single night now?\" - by Rick, (from Rick and Morty)"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.2.4 Listing quotes from a specific author: `list -q`"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Lists all quotes tagged under the specified author."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `list -q /by AUTHOR`"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `list -q /by darth vader`"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------------"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Here is a list of quotes by darth vader:"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "\"Luke, I am your father\" - by Darth Vader"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------------"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.2.5 Listing quotes from a specific reference and author: `list -q`"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Lists all quotes tagged under the specified reference and author."
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `list -q /by AUTHOR /from REFERENCE`"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `list -q /by rick /from rick and morty`"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Here is a list of quotes from rick and morty by rick:"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "\"So everyoneâ€™s supposed to sleep every single night now?\" - by Rick, (from Rick and Morty)"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.2.6 Editing an existing quote: `edit -q`"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Edits an existing quote from your list of quotes."
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `edit -q QUOTE_NUMBER /to UPDATED_QUOTE`"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote number field should not be empty."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The specified quote should exist in Quotesify."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Format of quote follows adding of quote above."
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `edit -q 2 /to No, I am your mummy /by Darth Vader`"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The quote has been edited from: [\"Luke, I am your father\" - by Darth Vader] to [\"No, I am your mummy\" - by Darth Vader]!"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.2.7 Deleting a quote: `delete -q`"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Removes a quote from your current list of quotes."
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `delete -q QUOTE_NUMBER`"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote number field should not be empty."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The specified quote should exist in Quotesify."
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `delete -q 1`"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-----------------------------------------------------------------------------"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "The quote \"Life is short, smile while you still have teeth\" has been deleted!"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-----------------------------------------------------------------------------"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.2.8 Finding quotes: `find -q`"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Finds existing quotes related to a keyword."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `find -q KEYWORD`"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Keyword field should not be empty."
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `find -q sleep`"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "-------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Here are the results of my search:"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "\"So everyoneâ€™s supposed to sleep every single night now?\" - by Rick, (from Rick and Morty)"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.2.9 Adding reflection to a quote: `add -qr`"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Adds your reflection to an existing quote."
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `add -qr QUOTE_NUMBER /reflect REFLECTION`"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote number field should not be empty."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The specified quote should exist in Quotesify."
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Reflect tag and reflection field should not be empty."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `add -qr 1 /reflect No, Thatâ€™s not true. Itâ€™s impossible!`"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Reflection has been added to quote: \"No, I am your mummy\" - by Darth Vader [R]"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Reflection: No, thatâ€™s not true. Itâ€™s impossible!"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.2.10 Listing reflection of a quote: `list -qr`"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Lists reflection of an existing quote."
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `list -qr QUOTE_NUMBER`"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote number field should not be empty."
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The specified quote should exist in Quotesify."
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote should have a reflection added to it"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `list -qr 1`"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-------------------------------------------------"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Here is the reflection you are looking for!"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Quote: \"No, I am your mummy\" - by Darth Vader [R]"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Reflection: No, thatâ€™s not true. Itâ€™s impossible!"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-------------------------------------------------"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.2.11 Editing reflection of a quote: `edit -qr`"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Edits the reflection of an existing quote."
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `edit -qr QUOTE_NUMBER /to UPDATED_REFLECTION`"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote number field should not be empty."
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The specified quote should exist in Quotesify."
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote should have a reflection added to it"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `edit -qr 1 /to Who is Yodaâ€™s daddy?`"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-------------------------------------------------"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Reflection has been updated!"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Quote: \"No, I am your mummy\" - by Darth Vader [R]"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Reflection: Who is Yodaâ€™s daddy?"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-------------------------------------------------"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.2.12 Deleting reflection of a quote: `delete -qr`"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Deletes reflection of an existing quote."
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Format: `delete -qr QUOTE_NUMBER`"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote number field should not be empty."
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* The specified quote should exist in Quotesify."
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "* Quote should have a reflection added to it"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Example of usage: `delete -qr 1`"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-----------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Reflection for the quote [\"No, I am your mummy\" - by Darth Vader] has been deleted!"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-----------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "```"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 4.3 Progress Tracker"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "lunzard"
        },
        "content": "If you want to save your reading progress, you can do so by adding bookmarks to the books you read."
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "lunzard"
        },
        "content": "If you want to set a goal on reading, you can do so by adding tasks (with deadlines) to your todo list. "
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.3.1 Add bookmarks: `bookmark -b /pg`"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Add the only one bookmark to any book that has been already added."
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Format: `bookmark -b BOOK_NUMBER /pg PAGE_NUMBER`"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* book number refers to the index of the book shown in the book list."
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* You must specify both book number and page number."
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Example of usage: `bookmark -b 3 /pg 109`"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The bookmark [\"Harry Potter\" at page: 109] has been added!"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.3.2 List bookmarks: `list -bm`"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "lunzard"
        },
        "content": "List all bookmarks that you have already added."
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Format: `list -bm`"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* You mist specify the bookmark number."
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Example of usage: `list -bm`"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Here is the lsit of all bookmark(s) recorded:"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "lunzard"
        },
        "content": "1. \"hp\" at page: 123"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "lunzard"
        },
        "content": "2. \"Harry Potter\" at page: 56"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.3.3 Delete bookmarks: `delete -bm`"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Delete the bookmark that you have already added."
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Format: `delete -bm BOOKMARK_NUMBER`"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* You mist specify the bookmark number."
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Example of usage: `delete -bm 1`"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------------"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The bookmark [\"hp\" at page: 123] has been removed!"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------------"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.3.4 Edit bookmarks: `bookmark -b`"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Update the bookmark that you have already added. "
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The command is the same as adding a new bookmark."
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Format: `bookmark -b BOOK_NUMBER /pg PAGE_NUMBER`"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* You must add the bookmark of the same book before so as to update it."
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* * You must specify both book number and page number."
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Example of usage: `bookmark -b 3 /pg 185`"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The bookmark [\"Harry Potter\" at page: 185] has been updated!"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.3.5 Add tasks: `add -t /by`"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "lunzard"
        },
        "content": "1. `add -t TASK_NAME /by DEADLINE`"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "lunzard"
        },
        "content": "2. `add -t TASK_NAME /by YYYY-MM-DD`"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "lunzard"
        },
        "content": "3. `add -t TASK_NAME`"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* You must specify the task name."
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* If you want to use YYYY-MM-DD format, remember the date must exist in real life. Fake date such as `3001-02-30`"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "lunzard"
        },
        "content": " will be rejected by the system and treated as an unformatted deadline (plain text)."
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "lunzard"
        },
        "content": "1. add a task with an unformatted deadline: `add -t return Harry Potter /by tmr 2pm`"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The task [[x] return Harry Potter (by: tmr 2pm)] has been added!"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "lunzard"
        },
        "content": "2. add a task with a formatted deadline: `add -t return Harry Potter /by 2020-10-24`"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The task [[x] return Harry Potter (by: Oct 24 2020, SATURDAY)] has been added!"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "lunzard"
        },
        "content": "3. add a task without any deadline: `add -t return Harry Potter`"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------------"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The task [[x] return Harry Potter (by: not specified)] has been added!"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------------"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.3.6 List tasks: `list -t`"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "lunzard"
        },
        "content": "If successful, you will see a full list of todo tasks added by you."
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "lunzard"
        },
        "content": "If some tasks have formatted deadlines (YYYY-MM-DD), they will be arranged in ascending order of date "
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "lunzard"
        },
        "content": "and displayed ahead of those with unformatted deadline. "
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Format: `list -t`"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Example of usage: `list -t`"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------------------"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Here is the list of all task(s) recorded:"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "lunzard"
        },
        "content": "1.[x] task4 (by: Sep 13 2020, Sunday)"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "lunzard"
        },
        "content": "2.[x] task3 (by: Oct 24 2020, SATURDAY)"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "lunzard"
        },
        "content": "3.[x] return Harry Potter (by: Oct 25 2020, SUNDAY)"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "lunzard"
        },
        "content": "4.[x] task 1 (by: 1908008)"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "lunzard"
        },
        "content": "5.[x] task 2 (by: 1999-12-34)"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------------------"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.3.7 Mark tasks as Done: `done -t`"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Format: `done -t TASK_NUMBER`"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* The task Number must be an integer and smaller than the total number of tasks you added."
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Example of usage: `done -t 1`"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------------------------------------"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The task [[v] return Harry Potter (by: tmr 2pm)] has been marked as done!"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------------------------------------"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.3.8 Delete tasks: `delete -t`"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Format: `delete -t TASK_NUMBER`"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "lunzard"
        },
        "content": "* The task Number must be an integer and smaller than the total number of tasks you added."
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Example of usage: `delete -t 1`"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "lunzard"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "lunzard"
        },
        "content": "The task [[v] return Harry Potter (by: tmr 2pm)] has been deleted!"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "lunzard"
        },
        "content": "```"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 4.4 Category Management"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "If you like customising your own list, you can do so by categorising your books and quotes."
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Note: All categories will be stored in **lower-case** format."
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.4.1 Add categories: `add -c`"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Add one or more categories to a specified book or quote."
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Format: `add -c CATEGORIES {[-b BOOK_NUMBER] | [-q QUOTE_NUMBER]}`"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* `[-b BOOK_NUMBER]` tag is optional. Use it to specify an existing book."
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* `[-q QUOTE_NUMBER]` tag is optional. Use it to specify an existing quote."
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* You must specify either a book, quote, or both."
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* The specified book or quote should exist in Quotesify."
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* Multiple categories should be **space separated**."
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* All categories specified will be converted and stored in **lower-case** format."
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. `add -c fantasy -b 1`"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. `add -c inspirational -q 1`"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome 1:"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "I have tagged category [fantasy] to the book [Harry Potter]!"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome 2:"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------------"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "I have tagged category [inspirational] to the quote [\"Life is Great\"]!"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------------"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.4.2 List categories: `list -c`"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "List all existing categories."
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Format: `list -c`"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Example of usage: `list -c`"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Here is the list of all categories:"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. action - (2 items)"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. inspirational - (1 items)"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "3. fantasy - (1 items)"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.4.3 List items in a category: `list -c`"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "List all books and quotes tagged under the specified category name."
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Format: `list -c CATEGORY`"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Example of usage: `list -c fantasy`"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-------------------------------------------------"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Here are the list of items tagged as [fantasy]:"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "BOOKS:"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. Harry Potter by JK Rowling"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-------------------------------------------------"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.4.4 Delete categories: `delete -c`"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Remove one or more categories from a specified book or quote."
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Format: `delete -c CATEGORIES [-b BOOK_NUMBER] [-q QUOTE_NUMBER]`"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* `[-b BOOK_NUMBER]` tag is optional. Use it to specify an existing book."
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* `[-b QUOTE_NUMBER]` tag is optional. Use it to specify an existing quote."
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* The specified book or quote should exist in Quotesify."
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* Multiple categories should be \u003cu\u003espace separated\u003c/u\u003e."
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. `delete -c fantasy`"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. `delete -c fantasy -b 1`"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "3. `delete -c inspirational -q 1`"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome 1:"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "I have removed category [fantasy] from all books and quotes!"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------------------------"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome 2:"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "I have removed category [fantasy] from the book [Harry Potter]!"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome 3:"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-------------------------------------------------------------------------"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "I have removed category [inspirational] from the quote [\"Life is Great\"]!"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-------------------------------------------------------------------------"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.4.5 Edit an existing category: `edit -c`"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Edit an existing category name."
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Format: `edit -c OLD_CATEGORY /to NEW_CATEGORY`"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Example of usage: `edit -c fantasy /to romance`"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "The category has been changed from [fantasy] to [romance]!"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.4.6 Find an existing category: `find -c`"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Find existing categories related to a keyword."
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Format: `find -c KEYWORD`"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Example of usage: `find -c man`"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-----------------------------------------------------"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Here is a list of categories with the keyword \"man\":"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. romance - (1 items)"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-----------------------------------------------------"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "```"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 4.5 Rating System for books"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Are you having your own opinions about the books you read? You might want to record down your favorites,"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "so that you can recommend the best books to your friends and fellow book readers."
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.5.1 Adding a book rating: `add -r`"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Adds a rating to a book."
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `add -r RATING_SCORE BOOK_NUMBER`"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The book you would like to rate should exist in Quotesify."
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Use `list -b` to list all existing books and get the `BOOK_NUMBER`."
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` should be within the range of ONE (1) to FIVE (5)."
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` and `BOOK_NUMBER` fields cannot be left empty."
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage: `add -r 5 1`"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------------------"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "You have just rated [Harry Potter by JK Rowling] 5 star!"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "---------------------------------------------------------"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.5.2 Listing book ratings: `list -r`"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Lists ratings of books."
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `list -r [RATING_SCORE]`"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` is **optional**"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` should be within the range of ONE (1) to FIVE (5)."
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. `list -r`"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. `list -r 5`"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome 1:"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-------------------------------------------------------------"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Planning to recommend some books? Here are your rated books!"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "[Harry Potter] by JK Rowling: 5 star"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-------------------------------------------------------------"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome 2:"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Here are the books you rated as 5 star!"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "[Harry Potter] by JK Rowling: 5 star"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.5.3 Deleting a book rating: `delete -r`"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Deletes a rating from a book."
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `delete -r BOOK_NUMBER`"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Use `list -b` to list all existing books and get the `BOOK_NUMBER`."
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `BOOK_NUMBER` field cannot be left empty."
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage: `delete -r 1`"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Rating for [Harry Potter by JK Rowling] has been deleted!"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.5.4 Editing an existing book rating: `edit -r`"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Edits a rating of a book."
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `edit -r RATING_SCORE BOOK_NUMBER`"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` should be within the range of ONE (1) to FIVE (5)."
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Use `list -b` to list all existing books and get the `BOOK_NUMBER`."
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` and `BOOK_NUMBER` fields cannot be left empty."
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage: `edit -r 4 1`"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------------"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Ratings for [Harry Potter by JK Rowling] has been updated to 4 star!"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "----------------------------------------------------------------------"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### 4.5.5 Finding book ratings: `find -r`"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Finds ratings of books that have the specified keyword in the title."
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `find -r KEYWORD`"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `KEYWORD` field cannot be left empty."
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage: `find -r POT`"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-----------------------------------------------"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Here are the ratings you may be looking for!"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "[Harry Potter] by JK Rowling: 4 star"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "-----------------------------------------------"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 4.6 Getting help in Quotesify"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Forgotten the commands to get things done? You will not be left feeling lost."
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify got you covered with the Help page."
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage: `help`"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Feeling stuck? Well here are the things you can do with Quotesify v2.1:"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                            1. Book Management"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Add book:                                           add -b BOOK_TITLE /by AUTHOR"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Mark book as complete:                              done -b BOOK_NUMBER"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Delete book:                                        delete -b BOOK_NUMBER"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Edit book:                                          edit -b BOOK_NUMBER /to NEW_TITLE"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List books:                                         list -b [/by AUTHOR]"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List book details:                                  list -b BOOK_NUMBER"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List books by completion:                           list -b done/undone"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                            2. Quote Management"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Add quote:                                          add -q QUOTE [/from BOOK_TITLE] [/by AUTHOR]"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Delete quote:                                       delete -q QUOTE_NUMBER"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List quotes:                                        list -q [/by AUTHOR] [/from BOOK_TITLE]"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Edit quote:                                         edit -q QUOTE_NUMBER /to NEW_QUOTE [/by AUTHOR] [/from BOOK_TITLE]"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Find quote:                                         find -q QUOTE_NUMBER"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Add quote reflection:                               add -qr QUOTE_NUMBER /reflect REFLECTION"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Delete quote reflection:                            delete -qr QUOTE_NUMBER"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "Edit quote reflection:                              edit -qr QUOTE_NUMBER /to UPDATED_REFLECTION"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List quote reflection:                              list -qr QUOTE_NUMBER"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                            3a. Bookmark Tracker"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Add bookmark:                                       bookmark -b BOOK_TITLE /pg PAGE_NUMBER"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Delete bookmark:                                    delete -bm BOOK_NUMBER"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List bookmarks:                                     list -bm"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Update bookmark:                                    bookmark -b BOOK_NUMBER /pg PAGE_NUMBER"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                            3b. Task Tracker"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Add task:                                           add -t TASK /by DEADLINE"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Delete task:                                        delete -t TASK_NUMBER"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List tasks:                                         list -t"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Mark task as done:                                  done -t TASK_NUMBER"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                            4. Category Management"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Add category:                                       add -c CATEGORY {[-b BOOK_TITLE] | [-q QUOTE_NUMBER]}"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Delete category:                                    delete -c CATEGORY {[-b BOOK_TITLE] | [-q QUOTE_NUMBER]}"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List categories:                                    list -c [CATEGORY]"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Edit category:                                      edit -c OLD_CATEGORY /to NEW_CATEGORY"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                            5. Rating System"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Add rating:                                         add -r RATING_SCORE BOOK_NUMBER"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Delete rating:                                      delete -r BOOK_NUMBER"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "List ratings:                                       list -r [RATING_SCORE]"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Edit rating:                                        edit -r RATING_SCORE BOOK_NUMBER"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Find rating:                                        find -r KEYWORD"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                            Other useful commands"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Show this help page:                                help"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quit Quotesify:                                     bye"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Remember: words in [] are optional, and words in CAPS are your own input"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Hope this helps!"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "~ Your friends from Quotesify"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### 4.7 Terminating the program"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Done what you wished to do? Here\u0027s how to say goodbye and hope to see you soon!"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage: `bye`"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Before you continue, here\u0027s something:"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Better days are coming, they are called Saturday and Sunday."
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Alright, have a nice day!"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "```"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "*Note: If you have added a quote before, the quote printed will be randomized.*"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 5.0 FAQs"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "**Q: How do I transfer my data to another computer?** "
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "**A**: Launch Quotesify on your other computer and exit the program. Copy the save file located in data/quotesify.json "
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "on your current computer and replace it with the save file on your other computer. Launch Quotesify on your other "
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "computer again and the saved data should load."
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "**Q: What is a JAR file? Why do I need it?** "
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "**A**: A JAR (Java ARchive) file is a container file that holds other smaller files,  similar to a Zip file. JAR files "
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "are practical as it groups everything a Java program requires to run allowing others to run the program with a single "
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "file."
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "**Q: What if I run into bugs while using Quotesify?**"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "**A**: Please head over [here](https://github.com/AY2021S1-CS2113T-T09-3/tp/issues) and create a new issue tracker with a "
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "description of the bug. Our dedicated team of developers are always on the clock squashing any bugs found! "
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Alternatively, you can also reach us at *contact@quotesify.com*!"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "**Q: I have a suggestion for Quotesify, what should I do?** "
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "**A**: The team at Quotesify is constantly seeking to improve and better the experience for our users! If you have a "
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "suggestion for Quotesify, please do not hesitate to reach us at *contact@quotesify.com*!"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## 6.0 Command Summary"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Enter the following command | To do this"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "--------------------------- | -----------"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`add -b BOOK_TITLE /by AUTHOR` | Add book"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`add -q QUOTE [/from BOOK_TITLE] [/by AUTHOR]` | Add quote"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`add -qr QUOTE_NUMBER /reflect REFLECTION` | Add quote reflection"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`add -t TASK /by DEADLINE` | Add task"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`add -c CATEGORIES {[-b BOOK_TITLE] [-q QUOTE_NUMBER]}` | Add categories"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`add -r RATING_SCORE BOOK_NUMBER` | Add rating"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`bookmark -b BOOK_TITLE /pg PAGE_NUMBER` | Add bookmark"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`list -b [/by AUTHOR]` | List books"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`list -b BOOK_NUMBER` | List book details"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list -b done/undone` | List books by completion"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`list -q [/by AUTHOR] [/from BOOK_TITLE]` | List quotes"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`list -qr QUOTE_NUMBER` | List quote reflection"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`list -bm` | List bookmarks"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`list -t` | List tasks"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`list -c [CATEGORY]` | List all categories / List items in a category"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`list -r [RATING_SCORE]` | List ratings"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`edit -b BOOK_NUMBER /to NEW_TITLE` | Edit book title"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`edit -q QUOTE_NUMBER /to NEW_QUOTE [/by AUTHOR] [/from BOOK_TITLE]` | Edit quote"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`edit -qr QUOTE_NUMBER /to UPDATED_REFLECTION` | Edit quote reflection"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`edit -c OLD_CATEGORY /to NEW_CATEGORY` | Edit a category name"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`edit -r RATING_SCORE BOOK_NUMBER` | Edit rating"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`bookmark -b BOOK_NUMBER /pg PAGE_NUMBER` | Update bookmark"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`delete -b BOOK_NUMBER` | Delete book"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`delete -q QUOTE_NUMBER` | Delete quote"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`delete -qr QUOTE_NUMBER` | Delete quote reflection"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`delete -bm BOOK_NUMBER` | Delete bookmark"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`delete -t TASK_NUMBER` | Delete task"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`delete -c CATEGORIES {[-b BOOK_TITLE] [-q QUOTE_NUMBER]}` | Delete categories"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`delete -r BOOK_NUMBER` | Delete rating"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`find -b KEYWORD` | Find books"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`find -q KEYWORD` | Find quotes"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`find -r KEYWORD` | Find rating"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "`find -c KEYWORD` | Find categories"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`done -b BOOK_NUMBER` | Mark book as complete"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "`done -t TASK_NUMBER` | Mark task as done"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`help` | Show help page"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`bye` | Terminate the program"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Words in [] are **OPTIONAL**"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Words in **CAPS** are your own input"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Words are seperated by a single whitespace"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "---"
      }
    ],
    "authorContributionMap": {
      "lunzard": 137,
      "nat-ho": 245,
      "dozenmatter": 116,
      "chloesyy": 322,
      "yuen-sihao": 404,
      "-": 31
    }
  },
  {
    "path": "docs/team/dozenmatter.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "# Tay Chin Heng - Project Portfolio Page for Quotesify"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "I am part of a team of 5 software engineering students and we were tasked to design and implement a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Command Line Interface (CLI) desktop application for our team project. The application that we developed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "is called Quotesify. I was tasked with the Category Management feature in Quotesify."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### About the project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Quotesify is a free desktop application to help book readers improve their reading experience. With Quotesify,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "users can add books and quotes they wished to remember into the application. Users can also categorize their books and"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "quotes, as well as rate their books. Quotesify is also built with a progress tracker to manage your reading activities."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "## Summary of Contributions"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "This section shows a brief summary of my contributions to the team project, including coding, documentation"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "and other helpful contributions throughout the development of Quotesify."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### Code contributed:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "Please click [here](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003ddozenmatter\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other) to access the code that I contributed in this project."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### Enhancements implemented:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "1. Category Management feature in Quotesify."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "   **What it does:**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * The user may use `add -c` command to add multiple categories to an existing book and quote."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * The user may use `edit -c` or `delete -c` commands to edit the existing category name or delete the existing categories respectively."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * The user may use `list -c` to list all their existing categories or to list items tagged under a specified category."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    * The user may also use `find -c` to find categories that contains the specified keyword."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    **Justification:**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    The Category Management feature is designed to allow users to categorise their existing books and quotes in Quotesify."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    This feature is useful especially when the user has a large list of books and quotes stored, as it helps them organise these items into groups, making each item easier for reference."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    **Highlights:**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    The total number of items tagged under a category is displayed whenever a user runs the command to list all categories."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    The aim is to provide the user a basic statistic on the number of items under each category, just in case if they may be interested."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "2. Storage feature in Quotesify."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    **What it does:**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     * Serialises all model objects of Quotesify into a JSON String and saves them into a save file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "     * On program launch, data is loaded from the save file and deserialised into Quotesify\u0027s model objects."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    **Justification:**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    The Storage is a must-have component for Quotesify as it would have defeated the purpose if a user\u0027s favourite books or quotes only lasts on runtime."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### Contributions to documentation:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* I have contributed to all parts relating to Category Management in the UG."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* Additionally, I have contributed to the Quick Start and FAQ sections of the UG."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### Contributions to the DG:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* I have contributed to all parts relating to Category Management in the DG, including all UML diagrams."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* Additionally, I have contributed largely to the Design section of the DG."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### Contributions to team-based tasks:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* I have managed the timely release of various Quotesify versions onto the team\u0027s Github releases page."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "### Contributions beyond the project team:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "* I have contributed in bug catching for another team\u0027s application which can be found [here](https://github.com/AY2021S1-CS2113T-T12-4/tp/issues)."
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 58
    }
  },
  {
    "path": "docs/team/yuen-sihao.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "# Yuen Si Hao - Project Portfolio Page for Quotesify"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "I am part of a team of 5 software engineering students and we were tasked to design and implement a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Command Line Interface (CLI) desktop application for our team project. The application that we developed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "is called Quotesify. I was tasked with the Rating System for Books feature in Quotesify."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### About the project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is a free desktop application to help book readers improve their reading experience. With Quotesify,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "users can add books and quotes they wished to remember into the application. Users can also categorize their books and"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "quotes, as well as rate their books. Quotesify is also built with a progress tracker to manage your reading activities."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## Summary of Contributions"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "This section shows a brief summary of my contributions to the team project, including coding, documenting"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "and other helpful contributions throughout the development of Quotesify."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Code contributed:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Please click [here](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dyuen-sihao\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dyuen-sihao\u0026tabRepo\u003dAY2021S1-CS2113T-T09-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other) to access the code that I contributed in this project."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Enhancements implemented:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "I added the Rating System for books feature in Quotesify."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "**What it does:**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The user will be able to use `add -r` command to add rating to a book that exists in Quotesify."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The user may use `edit -r` or `delete -r` commands to edit and delete their existing ratings respectively."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The user can use `list -r` to list all their existing ratings or to list books of a specific rating value."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The user may also use `find -r` to find ratings of books with title that contains the specified keyword."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "**Justification:**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "This feature is designed to allow users to rate the books that they have read, as a record of how they feel"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "about the book. This will help users to be able to recommend books to their friends and fellow book readers easily."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "**Highlights:**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "One design thought with the user in mind would be that the ratings are sorted according to their rating score when"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "listed, with the highest rating at the top. This is because users would usually recommend the books they like best,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "and this reduces the amount of scrolling needed to be done by the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Contributions to documentation:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* I contributed to the parts of the UG that describe and explain the Rating System for books feature."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* I also contributed to other sections of the UG such as Introduction, Getting Help in Quotesify,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Terminating the program, and the Command Summary."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Contributions to the DG:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* I contributed to the parts of the DG that describe and explain the Rating System for books feature,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "including the UML diagrams."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* I also contributed to other sections of the DG such as Introduction, Setting up, Product Scope,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "User Stories, and Non-Functional Requirements."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Contributions to team-based tasks:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Project Management: Maintaining the issue tracker by managing the various milestones and their deadlines."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* General formatting of UG/DG as a team."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Contributions beyond the project team:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* I offered suggestions for other teams to consider for their DG, as well as potential bugs based on the version they released for PE-D."
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 54
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/Quotesify.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Main entry point for Quotesify."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class Quotesify {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private final Logger logger \u003d Logger.getLogger(\"QuotesifyLogger\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private final String saveFileLocation \u003d \"/data/quotesify.json\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Quotesify() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui \u003d new TextUi();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        setupLogger();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ListManager.initialiseAllLists();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage \u003d new Storage(saveFileLocation);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printRandomQuote();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ui.printRandomQuote();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printDividerLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void runLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printDividerLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String userCommandText \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Command command \u003d parser.parseUserCommand(userCommandText);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printDividerLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ui.printInvalidQuotesifyCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            command.execute(ui, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        runLoopUntilExitCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        new Quotesify().run();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void setupLogger() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        logger.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            FileHandler fileHandler \u003d new FileHandler(\"quotesify.log\", true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            // remove this if you want to view logs in XML format"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            logger.addHandler(fileHandler);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 30,
      "dozenmatter": 44,
      "chloesyy": 2,
      "yuen-sihao": 5,
      "-": 6
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/author/Author.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.author;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Author implements JsonSerializer {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Author(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"name\", this.getName());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return json;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 27
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/book/Book.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.UiMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Book implements JsonSerializer {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Author author;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private int rating;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Book(Author author, String title) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.rating \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Book(Author author, String title, ArrayList\u003cString\u003e category) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.categories \u003d category;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.rating \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Book(Author author, String title, ArrayList\u003cString\u003e category, int rating) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.categories \u003d category;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.rating \u003d rating;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Book(Author author, String title, boolean isDone, ArrayList\u003cString\u003e category, int rating) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.categories \u003d category;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.rating \u003d rating;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Author getAuthor() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setAuthor(Author author) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return isDone ? \"[v] \" : \"[x] \";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ArrayList\u003cString\u003e getCategories() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return categories;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setCategories(ArrayList\u003cString\u003e categories) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public int getRating() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return rating;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void setRating(int ratingScore) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.rating \u003d ratingScore;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String getBookDetailString() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String stringToReturn \u003d \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            stringToReturn +\u003d \"[Completed]\" + System.lineSeparator();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        stringToReturn +\u003d \"Title: \" + title + System.lineSeparator();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        stringToReturn +\u003d \"Author: \" + author.getName() + System.lineSeparator();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        stringToReturn +\u003d \"Categories: \" + System.lineSeparator();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (categories.size() \u003e 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            for (String category : categories) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                stringToReturn +\u003d index + \". \" + category + System.lineSeparator();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            stringToReturn +\u003d UiMessage.EMPTY_CATEGORY_LIST_MESSAGE + System.lineSeparator();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (rating !\u003d 0) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            stringToReturn +\u003d \"Rating: \" + rating + System.lineSeparator();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (categories !\u003d null) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return title + \" by \" + author.getName(); // removed display of category"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return title + \" by \" + author.getName();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject details \u003d new JSONObject();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"author\", this.getAuthor().toJson());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"title\", this.getTitle());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        details.put(\"isDone\", this.isDone());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"categories\", this.getCategories());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        details.put(\"rating\", this.getRating());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 59,
      "chloesyy": 69,
      "yuen-sihao": 10
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/book/BookList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class BookList extends QuotesifyList\u003cBook\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cBook\u003e books \u003d super.getList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private BookTitleComparator comparator \u003d new BookTitleComparator();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList(ArrayList\u003cBook\u003e books) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(books);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void add(Book newBook) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        books.add(newBook);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        books.remove(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void deleteByBook(Book book) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        books.remove(book);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return books.isEmpty();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public int getIndex(Book book) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return books.indexOf(book);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Book getBook(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return books.get(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void sort() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        books.sort(comparator);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String booksToReturn \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            booksToReturn +\u003d book.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return booksToReturn;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String toStringWithIndex() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String booksToReturn \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            booksToReturn +\u003d getIndex(book) + 1 + \". \" + book.getStatusIcon()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    + book.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return booksToReturn;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void ensureNoSimilarBooks(String title, String authorName) throws QuotesifyException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e similarBooks \u003d find(title, authorName);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (!similarBooks.isEmpty()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(Command.ERROR_BOOK_ALREADY_EXISTS);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public ArrayList\u003cBook\u003e find(String title, String authorName) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        assert !title.isEmpty() || !authorName.isEmpty();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseTitle \u003d title.toLowerCase();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseAuthor \u003d authorName.toLowerCase();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .filter(book -\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    Author bookAuthor \u003d book.getAuthor();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    String bookAuthorName \u003d bookAuthor.getName();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    String bookTitle \u003d book.getTitle();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    return bookAuthorName.toLowerCase().equals(lowerCaseAuthor)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                            \u0026\u0026 bookTitle.toLowerCase().equals(lowerCaseTitle);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return filteredBooks;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList findByKeyword(String keyword) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        assert !keyword.isEmpty();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseKeyword \u003d keyword.toLowerCase();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .filter(book -\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    String authorName \u003d book.getAuthor().getName();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    String bookTitle \u003d book.getTitle();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    return authorName.toLowerCase().contains(lowerCaseKeyword)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                            || bookTitle.toLowerCase().contains(lowerCaseKeyword);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return new BookList(filteredBooks);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Book findByTitle(String title) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        assert !title.isEmpty();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseTitle \u003d title.toLowerCase();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (book.getTitle().toLowerCase().equals(lowerCaseTitle)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                return book;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Book findByNum(int num) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d num - 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (num \u003c\u003d books.size()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return books.get(index);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Author findExistingAuthor(String authorName) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList filteredBooks \u003d filterByAuthor(authorName);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (filteredBooks.isEmpty()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Author author \u003d filteredBooks.getBook(0).getAuthor();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList filterDone(boolean isDone) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    .filter(book -\u003e book.isDone())"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    .filter(book -\u003e !book.isDone())"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return new BookList(filteredBooks);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList filterByAuthor(String authorName) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseAuthor \u003d authorName.toLowerCase();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .filter(book -\u003e {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    Author bookAuthor \u003d book.getAuthor();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    String bookAuthorName \u003d bookAuthor.getName();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    return bookAuthorName.toLowerCase().equals(lowerCaseAuthor);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return new BookList(filteredBooks);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public BookList filterByCategory(String categoryName) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .filter(book -\u003e {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    ArrayList\u003cString\u003e categories \u003d book.getCategories();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    return categories.contains(categoryName);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new BookList(filteredBooks);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(book.toJson());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 19,
      "dozenmatter": 41,
      "chloesyy": 134
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/book/BookTitleComparator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class BookTitleComparator implements Comparator\u003cBook\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public int compare(Book b1, Book b2) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return b1.getTitle().toLowerCase().compareTo(b2.getTitle().toLowerCase());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 10
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/bookmark/Bookmark.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Bookmark implements JsonSerializer {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Book book;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private int pageNum;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Bookmark(Book book, int pageNum) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.book \u003d book;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.pageNum \u003d pageNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Book getBook() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return book;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setBook(Book book) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.book \u003d book;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public int getPageNum() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return pageNum;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setPageNum(int pageNum) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.pageNum \u003d pageNum;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return \"\\\"\" + book.getTitle() + \"\\\"\" + \" at page: \" + Integer.toString(pageNum);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject details \u003d new JSONObject();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"book\", this.getBook().toJson());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"pageNum\", this.pageNum);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 5,
      "dozenmatter": 39
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/bookmark/BookmarkList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class BookmarkList extends QuotesifyList\u003cBookmark\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private ArrayList\u003cBookmark\u003e bookmarks \u003d super.getList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public BookmarkList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public BookmarkList(ArrayList\u003cBookmark\u003e bookmarks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(bookmarks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void add(Bookmark newBookmark) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.add(newBookmark);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark find(Book book) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (Bookmark bookmark : bookmarks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (bookmark.getBook().equals(book)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                return bookmark;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark findByIndex(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (index \u003c\u003d bookmarks.size() - 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return bookmarks.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookmarks.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.remove(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void delete(Bookmark bookmark) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.remove(bookmark);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String bookmarksToReturn \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (Bookmark bookmark: bookmarks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarksToReturn +\u003d index + \". \" + bookmark.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookmarksToReturn;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Bookmark bookmark : bookmarks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(bookmark.toJson());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 58,
      "dozenmatter": 18
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/category/Category.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Category implements JsonSerializer {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private BookList bookList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private QuoteList quoteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private int size;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Category(String category) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        bookList \u003d new BookList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quoteList \u003d new QuoteList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        size \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getCategoryName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setCategoryName(String category) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return bookList.getList().size() + quoteList.getList().size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setSize(int size) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.size \u003d size;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public BookList getBookList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return bookList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setBookList(BookList books) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.bookList \u003d books;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuoteList getQuoteList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return quoteList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setQuoteList(QuoteList quoteList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quoteList \u003d quoteList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return String.format(\"%s - (%d items)\", getCategoryName(), getSize());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject details \u003d new JSONObject();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"category\", this.getCategoryName());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 64
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/category/CategoryList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryList extends QuotesifyList\u003cCategory\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cCategory\u003e categories \u003d super.getList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public CategoryList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public CategoryList(ArrayList\u003cCategory\u003e categories) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(categories);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExistingCategory(String name) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (category.getCategoryName().equals(name)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Category getCategoryByName(String name) throws QuotesifyException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (category.getCategoryName().equals(name)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                return category;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        throw new QuotesifyException(\"Category [\" + name + \"] does not exist!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void updateListsInAllCategories() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            category.setBookList(bookList.filterByCategory(category.getCategoryName()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            category.setQuoteList(quoteList.filterByCategory(category.getCategoryName()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void updateListsInCategory(Category category) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setBookList(bookList.filterByCategory(category.getCategoryName()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setQuoteList(quoteList.filterByCategory(category.getCategoryName()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public CategoryList findByKeyword(String keyword) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cCategory\u003e list \u003d (ArrayList\u003cCategory\u003e) categories.stream()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .filter(category -\u003e category.getCategoryName().contains(keyword.toLowerCase()))"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new CategoryList(list);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void remove(Category category) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories.remove(category);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void add(Category category) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories.add(category);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories.remove(index);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list +\u003d String.format(\"%d. %s\\n\", ++index, category.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(category.toJson());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 98
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/category/CategoryParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.UiMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String TAG_BOOK \u003d \"-b\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String TAG_QUOTE \u003d \"-q\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String ERROR_INVALID_PARAMS \u003d \"Invalid parameters!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static Stack\u003cString\u003e convertStringArrayToStack(String[] tokens) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Stack\u003cString\u003e parameters \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (String token : tokens) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            parameters.push(token);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return parameters;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static String[] getRequiredParameters(String[] tokens) throws QuotesifyException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String categories;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String bookTitle \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String quoteNum \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        int bookTagCount \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        int quoteTagCount \u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Stack\u003cString\u003e parameters \u003d convertStringArrayToStack(tokens);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String line \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        while (!parameters.empty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String item \u003d parameters.pop();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (item.equals(TAG_BOOK)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                bookTagCount++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                bookTitle \u003d line.trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                line \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            } else if (item.equals(TAG_QUOTE)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                quoteTagCount++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                quoteNum \u003d line.trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                line \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            line \u003d item + \" \" + line;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories \u003d line.trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (bookTagCount \u003e 1 || quoteTagCount \u003e 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            throw new QuotesifyException(ERROR_INVALID_PARAMS);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new String[]{categories, bookTitle, quoteNum};"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static int validateParametersResult(String[] parameters) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String categoryName \u003d parameters[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String bookNum \u003d parameters[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String quoteNum \u003d parameters[2];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (categoryName.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (quoteNum.isEmpty() \u0026\u0026 bookNum.isEmpty()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static String[] getEditParameters(String information) throws QuotesifyException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String[] oldAndNewCategory \u003d information.split(\" /to \", 2);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new String[]{oldAndNewCategory[0].trim(), oldAndNewCategory[1].trim()};"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            throw new QuotesifyException(ERROR_INVALID_PARAMS"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    + System.lineSeparator() + UiMessage.EDIT_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static List\u003cString\u003e parseCategoriesToList(String categories) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return Arrays.asList(categories.split(\" \"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 85
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/BookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class BookmarkCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static Logger addLogger \u003d Logger.getLogger(\"QuotesifyLogger\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public BookmarkCommand(String arguments) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            BookmarkList bookmarks \u003d (BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            handleBookmarkByNumber(books, bookmarks, ui);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_TAG);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void handleBookmark(BookList books, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] titleAndPage \u003d information.split(\"/pg\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (titleAndPage.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_PAGE_NUM);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String title \u003d titleAndPage[0].trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String page \u003d titleAndPage[1].trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            Book bookToMark \u003d books.findByTitle(title);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (bookToMark !\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                addBookmarkToBook(bookToMark, bookmarks, page, ui);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                System.out.println(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_PAGE_NUM);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addLogger.log(Level.INFO, \"add bookmark to bookmarkList failed\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void handleBookmarkByNumber(BookList books, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] numberAndPage \u003d information.split(\"/pg\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (numberAndPage.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_PAGE_NUM);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String bookNumber \u003d numberAndPage[0].trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String page \u003d numberAndPage[1].trim();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            int number \u003d convertBookNumToInt(bookNumber);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            Book bookToMark \u003d books.findByNum(number);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (bookToMark !\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                addBookmarkToBook(bookToMark, bookmarks, page, ui);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                System.out.println(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_PAGE_NUM);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addLogger.log(Level.INFO, \"add bookmark to bookmarkList failed\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void addBookmarkToBook(Book book, BookmarkList bookmarks, String page, TextUi ui) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark bookmarkToAdd \u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int pageNum \u003d computePageNum(page);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarkToAdd \u003d bookmarks.find(book);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkToAdd \u003d\u003d null \u0026\u0026 pageNum \u003e -1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarkToAdd \u003d createNewBookmark(bookmarks, book, pageNum);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printAddBookmark(bookmarkToAdd);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else if (bookmarkToAdd !\u003d null \u0026\u0026 pageNum \u003e -1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarkToAdd \u003d updateExistingBookmark(bookmarkToAdd, pageNum);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printUpdateBookmark(bookmarkToAdd);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addLogger.log(Level.INFO, \"add bookmark to bookmarkList failed\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark createNewBookmark(BookmarkList bookmarks, Book book, int pageNum) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark newBookmark \u003d new Bookmark(book, pageNum);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.add(newBookmark);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return newBookmark;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark updateExistingBookmark(Bookmark bookmark, int pageNum) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmark.setPageNum(pageNum);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookmark;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int computePageNum(String information) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int pageNum \u003d -1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            pageNum \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_PAGE_NUM);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return pageNum;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int convertBookNumToInt(String information) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int bookNum \u003d -1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookNum \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookNum;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 136,
      "dozenmatter": 13
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents a user command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /** Tags used to identify the different features. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_BOOK \u003d \"-b\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_QUOTE \u003d \"-q\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String TAG_QUOTE_REFLECTION \u003d \"-qr\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_RATING \u003d \"-r\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_CATEGORY \u003d \"-c\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String TAG_TODO \u003d \"-t\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String TAG_BOOKMARK \u003d \"-bm\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /** Error messages for the different commands. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_INVALID_BOOK_NUM \u003d \"Invalid book number specified!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_INVALID_QUOTE_NUM \u003d \"Invalid quote number specified!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_DUPLICATE_QUOTE \u003d \"This quote has already been added!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_INVALID_TODO_NUM \u003d \"Invalid task number specified!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_INVALID_PAGE_NUM \u003d \"Invalid page number specified!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_INVALID_BOOKMARK_NUM \u003d \"Invalid bookmark number specified!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_INVALID_TAG \u003d \"Invalid / No tag provided\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_BOOK_FOUND \u003d \"There is no such book!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_BOOK_TITLE_MISSING \u003d \"There is no book title specified!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_BOOK_ALREADY_EXISTS \u003d \"The book already exists!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_CATEGORY_EXISTS_IN_BOOK \u003d \"Category [%s] already exists in book [%s]!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_CATEGORY_EXISTS_IN_QUOTE \u003d \"Category [%s] already exists in quote [\\\"%s\\\"]!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_CATEGORY_NOT_IN_BOOK \u003d \"Category [%s] not found in book [%s]!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_CATEGORY_NOT_IN_QUOTE \u003d \"Category [%s] not found in quote [\\\"%s\\\"]!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_NO_MATCHING_CATEGORY \u003d \"There are no matching categories!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_NO_QUOTE_FOUND \u003d \"There is no such quote!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_NO_QUOTE_NUMBER \u003d \"Quote number is missing\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_FIND_KEYWORD_MISSING \u003d \"Keyword to search is missing\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_BOOKS_IN_LIST \u003d \"There are no books in the list!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_BOOKS_BY_AUTHOR \u003d \"There are no books by this author!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_LIST_SPECIFIED_RATING_NOT_FOUND \u003d \"I can\u0027t find any books rated %d star!\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_AUTHOR_NAME \u003d \"Please type in the author name.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_NO_PAGE_NUM \u003d \"There is no page number provided!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_NO_TASK_NAME \u003d \"There is no task name provided!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_RATING_EXIST \u003d \"This book has already been rated!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_RATING_DO_NOT_EXIST \u003d \"This book has not been rated!\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_RATING_NOT_FOUND \u003d \"I can\u0027t find any ratings related to [%s]!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_TODO_NOT_FOUND \u003d \"There is no such task!\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_BOOKMARK_NOT_FOUND \u003d \"There is no such bookmark!\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_LIST_UNKNOWN_COMMAND \u003d \"I do not understand that command. Try again\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_EDIT_FLAG \u003d \"Editing requires a \\\"/to\\\" flag\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_MISSING_KEYWORD \u003d \"Please type in the keyword.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_MISSING_CATEGORY \u003d \"Missing category name\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_MISSING_BOOK_OR_QUOTE \u003d \"Please specify a book title or quote number!\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_REFLECTION_FIELD \u003d \"Please specify your reflection!\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_NO_REFLECTION \u003d \"The quote you selected does not have a reflection!\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_AUTHOR \u003d \"/by\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_REFERENCE \u003d \"/from\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_DELIMITER \u003d \"/\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String FLAG_EDIT \u003d \"/to\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_REFLECT \u003d \"/reflect\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String REFERENCE_KEYWORD \u003d \"reference\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String AUTHORNAME_KEYWORD \u003d \"authorName\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String DONE_KEYWORD \u003d \"done\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Executes the different commands."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ui Ui of the program."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param storage Storage of the program."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract void execute(TextUi ui, Storage storage);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Decides if the program should be terminated."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return decision to terminate the program."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 10,
      "nat-ho": 15,
      "dozenmatter": 24,
      "chloesyy": 11,
      "yuen-sihao": 21
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents the Exit Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Executes the exit command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ui Ui of the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param storage Storage of the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Decides if the program should be terminated."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return decision to terminate the program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 15,
      "chloesyy": 1,
      "yuen-sihao": 14
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents the Help Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Executes the Help command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ui Ui of the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param storage Storage of the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ui.printHelpPage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Decides if the program should be terminated."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return decision to terminate the program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 6,
      "yuen-sihao": 25
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddBookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.commands.add.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class AddBookCommand extends AddCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public AddBookCommand(String arguments) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        addBook(books, ui);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void addBook(BookList books, TextUi ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String[] titleAndAuthor \u003d information.split(Command.FLAG_AUTHOR, 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // if user did not provide author, let titleAndAuthor[1] be empty string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (titleAndAuthor.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                titleAndAuthor \u003d new String[]{titleAndAuthor[0], \"\"};"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String title \u003d titleAndAuthor[0].trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String authorName \u003d titleAndAuthor[1].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            checkMissingInformation(title, authorName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Book newBook \u003d createNewBook(books, title, authorName);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            books.add(newBook);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            books.sort();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printAddBook(newBook);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"add book to booklist failed\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private Book createNewBook(BookList books, String title, String authorName) throws QuotesifyException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Book newBook;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Author existingAuthor \u003d books.findExistingAuthor(authorName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (existingAuthor \u003d\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // Book is definitely unique"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            newBook \u003d new Book(new Author(authorName), title);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            books.ensureNoSimilarBooks(title, existingAuthor.getName());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            newBook \u003d new Book(existingAuthor, title);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return newBook;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void checkMissingInformation(String title, String authorName) throws QuotesifyException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (title.isEmpty()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(ERROR_BOOK_TITLE_MISSING);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (authorName.isEmpty()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(ERROR_NO_AUTHOR_NAME);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 71,
      "yuen-sihao": 1
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class AddCategoryCommand extends AddCommand {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public AddCategoryCommand(String arguments) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        CategoryList categories \u003d (CategoryList) ListManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        addCategoryToBookOrQuote(categories, ui);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToBookOrQuote(CategoryList categories, TextUi ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String[] tokens \u003d information.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String[] parameters \u003d CategoryParser.getRequiredParameters(tokens);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int result \u003d CategoryParser.validateParametersResult(parameters);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (result \u003d\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                executeParameters(categories, parameters, ui);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            } else if (result \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ui.printErrorMessage(ERROR_MISSING_BOOK_OR_QUOTE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ui.printErrorMessage(ERROR_MISSING_CATEGORY);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void executeParameters(CategoryList categoryList, String[] parameters, TextUi ui) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String categoryNames \u003d parameters[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            assert !categoryNames.isEmpty() : \"category name should not be empty\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            List\u003cString\u003e categories \u003d CategoryParser.parseCategoriesToList(categoryNames);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (String categoryName : categories) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                categoryName \u003d categoryName.toLowerCase();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                addCategoryToList(categoryList, categoryName);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                Category category \u003d categoryList.getCategoryByName(categoryName);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String bookNum \u003d parameters[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String quoteNum \u003d parameters[2];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                addCategoryToBook(category, bookNum, ui);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                addCategoryToQuote(category, quoteNum, ui);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                categoryList.updateListsInCategory(category);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToList(CategoryList categories, String categoryName) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (!categories.isExistingCategory(categoryName)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            categories.add(new Category(categoryName));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToBook(Category category, String bookNum, TextUi ui) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // ignore this action if user did not provide book title"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (bookNum.isEmpty()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int bookIndex \u003d Integer.parseInt(bookNum) - 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Book book \u003d bookList.getBook(bookIndex);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (book.getCategories().contains(category.getCategoryName())) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String errorMessage \u003d String.format(ERROR_CATEGORY_EXISTS_IN_BOOK,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                        category.getCategoryName(), book.getTitle());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                throw new QuotesifyException(errorMessage);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            book.getCategories().add(category.getCategoryName());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printAddCategoryToBook(book.getTitle(), category.getCategoryName());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"add category to book success\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToQuote(Category category, String quoteNum, TextUi ui) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // ignore this action if user did not provide quote number"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (quoteNum.isEmpty()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int quoteIndex \u003d Integer.parseInt(quoteNum) - 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Quote quote \u003d quoteList.getList().get(quoteIndex);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (quote.getCategories().contains(category.getCategoryName())) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String errorMessage \u003d String.format(ERROR_CATEGORY_EXISTS_IN_QUOTE,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                        category.getCategoryName(), quote.getQuote());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                throw new QuotesifyException(errorMessage);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quote.getCategories().add(category.getCategoryName());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printAddCategoryToQuote(quote.getQuote(), category.getCategoryName());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"add category to quote success\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, ERROR_NO_QUOTE_FOUND);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_QUOTE_FOUND);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 130,
      "yuen-sihao": 9
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents the Add Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static Logger quotesifyLogger \u003d Logger.getLogger(\"QuotesifyLogger\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String information;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String arguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Constructor for the Add command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param arguments Input by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public AddCommand(String arguments) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Executes the Add command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ui Ui of the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param storage Storage of the program."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"going to add book to booklist\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            new AddBookCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"added book to booklist\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"going to add quote to quote list\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new AddQuoteCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE_REFLECTION:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"going to add reflection to quote list\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new AddQuoteReflectionCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"going to add category to book/quote\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            new AddCategoryCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"going to add rating to book\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new AddRatingCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"going to add task to ToDoList\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            new AddToDoCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printListOfAddCommands();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Decides if the program should be terminated."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return decision to terminate the program."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 3,
      "nat-ho": 9,
      "chloesyy": 19,
      "dozenmatter": 18,
      "yuen-sihao": 37
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddQuoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class AddQuoteCommand extends AddCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public AddQuoteCommand(String arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        addQuote(quoteList, ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void addQuote(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Quote quote \u003d QuoteParser.parseAddParameters(information);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            boolean isDuplicate \u003d quoteList.checkDuplicateQuote(quote);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (isDuplicate) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_DUPLICATE_QUOTE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteList.add(quote);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printAddQuote(quote);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"add quote to quote list success\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"add quote to quote list failed\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 37,
      "yuen-sihao": 3
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddQuoteReflectionCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class AddQuoteReflectionCommand extends AddCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public AddQuoteReflectionCommand(String arguments) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        addQuoteReflection(quoteList, ui);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void addQuoteReflection(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int quoteNum \u003d QuoteParser.getQuoteNumber(information, quoteList, Command.FLAG_REFLECT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String reflection \u003d QuoteParser.getReflectionToAdd(information);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!reflection.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Quote quoteWithReflection \u003d quoteList.addReflection(reflection, quoteNum);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                ui.printAddReflection(quoteWithReflection, quoteWithReflection.getReflection());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_MISSING_REFLECTION_FIELD);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"add reflection to quote failed\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 39,
      "yuen-sihao": 1
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddRatingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents the AddRating Command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class AddRatingCommand extends AddCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Constructor for the AddRating command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param arguments Input by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public AddRatingCommand(String arguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Executes the AddRating command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ui Ui of the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param storage Storage of the program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        addRating(ratings, ui);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void addRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean hasMissingInput \u003d RatingParser.checkUserInput(information);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (hasMissingInput) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"user input is missing\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] ratingDetails;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String ratingValue;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String bookNumber;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingDetails \u003d information.split(\" \", 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingValue \u003d ratingDetails[0].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            bookNumber \u003d ratingDetails[1].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(RatingParser.ERROR_INVALID_FORMAT_RATING);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"invalid format provided\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d RatingParser.checkValidityOfRatingScore(ratingValue);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Book bookToRate \u003d RatingParser.checkBookExists(bookNumber);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isRated \u003d isRated(bookToRate);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isValid \u003d (ratingScore !\u003d RatingParser.INVALID_RATING) \u0026\u0026 (bookToRate !\u003d null) \u0026\u0026 (!isRated);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (isValid) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            bookToRate.setRating(ratingScore);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratings.add(new Rating(bookToRate, ratingScore));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            String title \u003d bookToRate.getTitle();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            String author \u003d bookToRate.getAuthor().getName();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printAddRating(ratingScore, title, author);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private boolean isRated(Book bookToRate) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (bookToRate !\u003d null \u0026\u0026 bookToRate.getRating() !\u003d RatingParser.UNRATED) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"book has been rated before\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_EXIST);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 81
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/add/AddToDoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.quotesify.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.commands.add.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class AddToDoCommand extends AddCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public AddToDoCommand(String arguments) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDoList toDos \u003d (ToDoList) ListManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo newToDo \u003d addToDo(toDos, ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ui.printAddToDo(newToDo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private ToDo addToDo(ToDoList toDos, TextUi ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] taskNameAndDeadline \u003d information.split(\"/by\", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo newToDo \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            // if user did not provide deadline, let titleAndAuthor[1] be \"not specified\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (taskNameAndDeadline.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                taskNameAndDeadline \u003d new String[]{taskNameAndDeadline[0], \"not specified\"};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (taskNameAndDeadline[0].isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_TASK_NAME);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String taskName \u003d taskNameAndDeadline[0].trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            assert !taskName.isEmpty() : \"task name should not be empty\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String deadline \u003d taskNameAndDeadline[1].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            assert !deadline.isEmpty() : \"deadline should not be empty\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            newToDo \u003d new ToDo(taskName, deadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            newToDo.updateDateFormat();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            toDos.add(newToDo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"add toDo to toDoList failed\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return newToDo;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 50,
      "yuen-sihao": 1
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteBookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class DeleteBookCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public DeleteBookCommand(String arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        deleteBook(books, ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void deleteBook(BookList books, TextUi ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            int bookIndex \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Book book \u003d books.getBook(bookIndex);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String bookTitle \u003d book.getTitle();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String author \u003d book.getAuthor().getName();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // clear bookmarks before deleting the entire book."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            BookmarkList bookmarks \u003d (BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            clearBookmark(books, bookmarks, bookTitle, ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // delete ratings before deleting the entire book."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                if (rating.getTitle().equals(bookTitle) \u0026\u0026 rating.getAuthor().equals(author)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    ratings.delete(ratings.getList().indexOf(rating));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            books.delete(bookIndex);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printDeleteBook(book);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void clearBookmark(BookList books, BookmarkList bookmarks, String titleName, TextUi ui) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Book targetBook \u003d books.findByTitle(titleName);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (targetBook !\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            clearBookmarkFromDeletedBook(targetBook, bookmarks, ui);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void clearBookmarkFromDeletedBook(Book targetBook, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Bookmark bookmarkToBeDeleted \u003d bookmarks.find(targetBook);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (bookmarkToBeDeleted !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            bookmarks.delete(bookmarkToBeDeleted);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 67,
      "yuen-sihao": 1
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class DeleteBookmarkCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public DeleteBookmarkCommand(String arguments) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        BookmarkList bookmarks \u003d (BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        deleteBookmarkByIndex(bookmarks,information.trim(),ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void deleteBookmark(BookList books, BookmarkList bookmarks, String titleName, TextUi ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Book targetBook \u003d books.findByTitle(titleName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (targetBook !\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            removeBookmarkFromBook(targetBook, bookmarks, ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void deleteBookmarkByIndex(BookmarkList bookmarks, String bookmarkNumber, TextUi ui) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int bookmarkNum \u003d convertBookmarkNumberToInt(bookmarkNumber, ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkNum \u003c\u003d bookmarks.getSize() \u0026\u0026 bookmarkNum \u003e 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            Bookmark targetBookmark \u003d bookmarks.findByIndex(bookmarkNum - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarks.delete(bookmarkNum - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDeleteBookmark(targetBookmark);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void removeBookmarkFromBook(Book targetBook, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark bookmarkToBeDeleted \u003d bookmarks.find(targetBook);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkToBeDeleted !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarks.delete(bookmarkToBeDeleted);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDeleteBookmark(bookmarkToBeDeleted);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_BOOKMARK_NOT_FOUND);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void clearBookmark(BookList books, BookmarkList bookmarks, String titleName, TextUi ui) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Book targetBook \u003d books.findByTitle(titleName);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (targetBook !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            clearBookmarkFromDeletedBook(targetBook, bookmarks, ui);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void clearBookmarkFromDeletedBook(Book targetBook, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark bookmarkToBeDeleted \u003d bookmarks.find(targetBook);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkToBeDeleted !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarks.delete(bookmarkToBeDeleted);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int convertBookmarkNumberToInt(String numberString, TextUi ui) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int numInt \u003d -1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            numInt \u003d Integer.parseInt(numberString);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOKMARK_NUM);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return numInt;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 78
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class DeleteCategoryCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public DeleteCategoryCommand(String arguments) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        CategoryList categories \u003d (CategoryList) ListManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        deleteCategoryFromBookOrQuote(categories, ui);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteCategoryFromBookOrQuote(CategoryList categories, TextUi ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String[] tokens \u003d information.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String[] parameters \u003d CategoryParser.getRequiredParameters(tokens);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int result \u003d CategoryParser.validateParametersResult(parameters);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (result \u003d\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                executeParameters(categories, parameters, ui);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            } else if (result \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                deleteCategory(categories, parameters[0], ui);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ui.printErrorMessage(ERROR_MISSING_CATEGORY);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                quotesifyLogger.log(Level.WARNING, ERROR_MISSING_CATEGORY);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void executeParameters(CategoryList categoryList, String[] parameters, TextUi ui) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String categoryNames \u003d parameters[0];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            assert !categoryNames.isEmpty() : \"category name should not be empty\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            List\u003cString\u003e categories \u003d CategoryParser.parseCategoriesToList(categoryNames);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (String categoryName : categories) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                categoryName \u003d categoryName.toLowerCase();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                Category category \u003d categoryList.getCategoryByName(categoryName);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String bookTitle \u003d parameters[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String quoteNum \u003d parameters[2];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                deleteCategoryFromBook(category, bookTitle, ui);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                deleteCategoryFromQuote(category, quoteNum, ui);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                categoryList.updateListsInCategory(category);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                if (category.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    categoryList.remove(category);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteCategoryFromBook(Category category, String bookTitle, TextUi ui) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // ignore this action if user did not provide book title"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (bookTitle.isEmpty()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quotesifyLogger.log(Level.INFO, \"removing category from book.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int bookNum \u003d Integer.parseInt(bookTitle) - 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Book book \u003d bookList.getBook(bookNum);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cString\u003e categories \u003d book.getCategories();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (!categories.contains(category.getCategoryName())) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String errorMessage \u003d String.format(ERROR_CATEGORY_NOT_IN_BOOK,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                        category.getCategoryName(), book.getTitle());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                throw new QuotesifyException(errorMessage);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            categories.remove(category.getCategoryName());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printRemoveCategoryFromBook(book.getTitle(), category.getCategoryName());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"successfully removed category from book.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteCategoryFromQuote(Category category, String index, TextUi ui) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // ignore this action if user did not provide quote number"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (index.isEmpty()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quotesifyLogger.log(Level.INFO, \"removing category from quote.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cQuote\u003e quotes \u003d quoteList.getList();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int quoteNum \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Quote quote \u003d quotes.get(quoteNum);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cString\u003e categories \u003d quote.getCategories();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (!categories.contains(category.getCategoryName())) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String errorMessage \u003d String.format(ERROR_CATEGORY_NOT_IN_QUOTE,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                        category.getCategoryName(), quote.getQuote());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                throw new QuotesifyException(errorMessage);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            categories.remove(category.getCategoryName());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printRemoveCategoryFromQuote(quote.getQuote(), category.getCategoryName());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"successfully removed category from quote.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_QUOTE_FOUND);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, ERROR_NO_QUOTE_FOUND);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteCategory(CategoryList categoryList, String categories, TextUi ui) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quotesifyLogger.log(Level.INFO, \"removing category from all books and quotes.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (String name : categories.split(\" \")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            name \u003d name.toLowerCase();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                Category category \u003d categoryList.getCategoryByName(name);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                deleteCategoryInBooksAndQuotes(name);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                categoryList.remove(category);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ui.printRemoveCategory(name);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                quotesifyLogger.log(Level.INFO, \"successfully removed category from all books and quotes.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                quotesifyLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteCategoryInBooksAndQuotes(String oldCategory) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        bookList.filterByCategory(oldCategory).getList().forEach(book -\u003e book.getCategories().remove(oldCategory));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quoteList.filterByCategory(oldCategory).getList().forEach(quote -\u003e quote.getCategories().remove(oldCategory));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 165
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents the Delete Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static Logger quotesifyLogger \u003d Logger.getLogger(\"QuotesifyLogger\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String information;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String arguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Constructor for the Delete command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param arguments Input by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public DeleteCommand(String arguments) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        /** if user did not provide arguments, let details[1] be empty string */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Executes the Delete command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ui Ui of the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param storage Storage of the program."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            new DeleteCategoryCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            new DeleteBookCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"going to delete rating from book\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new DeleteRatingCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new DeleteToDoCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_BOOKMARK:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new DeleteBookmarkCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new DeleteQuoteCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE_REFLECTION:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new DeleteQuoteReflectionCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printListOfDeleteCommands();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Decides if the program should be terminated."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return decision to terminate the program."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 4,
      "nat-ho": 8,
      "dozenmatter": 34,
      "chloesyy": 3,
      "yuen-sihao": 35
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteQuoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class DeleteQuoteCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public DeleteQuoteCommand(String arguments) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        deleteQuote(quoteList, ui, information);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void deleteQuote(QuoteList quoteList, TextUi ui, String information) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (information.trim().isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_QUOTE_NUMBER);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int quoteNumber \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Quote quoteToBeDeleted \u003d quoteList.getQuote(quoteNumber);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteList.delete(quoteNumber);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printDeleteQuote(quoteToBeDeleted.getQuote());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 38
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteQuoteReflectionCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class DeleteQuoteReflectionCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public DeleteQuoteReflectionCommand(String arguments) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        deleteQuoteReflection(quoteList, ui, information);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void deleteQuoteReflection(QuoteList quoteList, TextUi ui, String information) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int quoteNumber \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quoteList.getQuote(quoteNumber).getReflection() !\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                quoteList.deleteReflection(quoteNumber);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                ui.printDeleteQuoteReflection(quoteList.getQuote(quoteNumber).toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException | QuotesifyException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 34
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteRatingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents the DeleteRating command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class DeleteRatingCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Constructor for the DeleteRating command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param arguments Input by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public DeleteRatingCommand(String arguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Executes the DeleteRating command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ui Ui of the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param storage Storage of the program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        deleteRating(ratings, ui);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void deleteRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean hasMissingInput \u003d RatingParser.checkUserInput(information);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (hasMissingInput) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"user input is missing\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String bookIndex \u003d information.trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Book bookToDeleteRating \u003d RatingParser.checkBookExists(bookIndex);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (bookToDeleteRating \u003d\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        bookToDeleteRating.setRating(RatingParser.UNRATED);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String title \u003d bookToDeleteRating.getTitle();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String author \u003d bookToDeleteRating.getAuthor().getName();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitle().equals(title) \u0026\u0026 rating.getAuthor().equals(author)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ratings.delete(ratings.getList().indexOf(rating));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ui.printDeleteRating(title, author);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(ERROR_RATING_DO_NOT_EXIST);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        quotesifyLogger.log(Level.INFO, \"book has not been rated before\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 67
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/delete/DeleteToDoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.quotesify.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class DeleteToDoCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public DeleteToDoCommand(String arguments) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDoList toDos \u003d (ToDoList) ListManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d computeToDoIndex(information.trim());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        deleteToDo(toDos, index, ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void deleteToDo(ToDoList toDos, int index, TextUi ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo toDoToBeDeleted \u003d toDos.find(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (toDoToBeDeleted !\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            toDos.delete(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDeleteToDo(toDoToBeDeleted);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_TODO_NOT_FOUND);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int computeToDoIndex(String information) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            index \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_TODO_NUM);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 40
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/done/DoneBookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.done;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class DoneBookCommand extends DoneCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public DoneBookCommand(String arguments) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        doneBooks(books, ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void doneBooks(BookList books, TextUi ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            int bookIndex \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Book book \u003d books.getBook(bookIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            book.setDone(true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printDoneBook(book);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 30
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/done/DoneCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.done;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String information;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private String arguments;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public DoneCommand(String arguments) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            new DoneToDoCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            new DoneBookCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printDoneCommandUsage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 29,
      "chloesyy": 9,
      "dozenmatter": 6
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/done/DoneToDoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.quotesify.commands.done;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class DoneToDoCommand extends DoneCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public DoneToDoCommand(String arguments) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDoList toDos \u003d (ToDoList) ListManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d computeToDoIndex(information.trim());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        doneToDo(toDos,index,ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void doneToDo(ToDoList toDos, int index, TextUi ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo targetTask \u003d toDos.find(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (targetTask !\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            targetTask.setDone(true);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDoneToDo(targetTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_TODO_NOT_FOUND);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int computeToDoIndex(String information) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            index \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_TODO_NUM);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 40
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/edit/EditBookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.commands.edit.EditCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class EditBookCommand extends EditCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public EditBookCommand(String arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        editBook(books, ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void editBook(BookList books, TextUi ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String[] bookDetails \u003d information.split(FLAG_EDIT, 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (bookDetails.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                bookDetails \u003d new String[]{bookDetails[0], \"\"};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            int bookIndex \u003d Integer.parseInt(bookDetails[0].trim()) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String newTitle \u003d bookDetails[1].trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (newTitle.isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                throw new QuotesifyException(ERROR_BOOK_TITLE_MISSING);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Book book \u003d books.getBook(bookIndex);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String oldTitle \u003d book.getTitle();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String authorName \u003d book.getAuthor().getName();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            books.ensureNoSimilarBooks(newTitle, authorName);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            book.setTitle(newTitle);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printEditBook(oldTitle, newTitle);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            checkRatingForOldTitle(book, oldTitle, authorName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void checkRatingForOldTitle(Book book, String oldTitle, String author) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        // check ratings in rating list before editing the title."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitle().equals(oldTitle) \u0026\u0026 rating.getAuthor().equals(author)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                int currentRatingOfBook \u003d rating.getRating();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                ratings.delete(ratings.getList().indexOf(rating));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ratings.add(new Rating(book, currentRatingOfBook));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 63,
      "yuen-sihao": 3
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/edit/EditCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class EditCategoryCommand extends EditCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public EditCategoryCommand(String arguments) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        CategoryList categories \u003d (CategoryList) ListManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        editCategory(categories, ui);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void editCategory(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quotesifyLogger.log(Level.INFO, \"editing category.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String[] oldAndNewCategories \u003d CategoryParser.getEditParameters(information);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String oldCategory \u003d oldAndNewCategories[0].toLowerCase();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String newCategory \u003d oldAndNewCategories[1].toLowerCase();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (categoryList.isExistingCategory(newCategory)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                throw new QuotesifyException(\"Category [\" + newCategory + \"] already exists!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Category category \u003d categoryList.getCategoryByName(oldCategory);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            category.setCategoryName(newCategory);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            editCategoryInBooksAndQuotes(oldCategory, newCategory);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printEditCategory(oldCategory, newCategory);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"edit category success!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void editCategoryInBooksAndQuotes(String oldCategory, String newCategory) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        bookList.filterByCategory(oldCategory).getList().forEach(book -\u003e {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            book.getCategories().remove(oldCategory);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            book.getCategories().add(newCategory);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        });"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quoteList.filterByCategory(oldCategory).getList().forEach(quote -\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quote.getCategories().remove(oldCategory);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quote.getCategories().add(newCategory);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        });"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 60
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/edit/EditCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents the Edit Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static Logger quotesifyLogger \u003d Logger.getLogger(\"QuotesifyLogger\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String information;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String arguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Constructor for the Edit command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param arguments Input by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public EditCommand(String arguments) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        /** if user did not provide arguments, let details[1] be empty string */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Executes the Edit command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ui Ui of the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param storage Storage of the program."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"going to edit rating of book\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new EditRatingCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            new EditBookCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            new EditCategoryCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new EditQuoteCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE_REFLECTION:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new EditQuoteReflectionCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printListOfEditCommands();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Decides if the program should be terminated."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return decision to terminate the program."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 8,
      "dozenmatter": 10,
      "chloesyy": 3,
      "yuen-sihao": 57
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/edit/EditQuoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class EditQuoteCommand extends EditCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public EditQuoteCommand(String arguments) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        editQuote(quoteList, ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void editQuote(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (information.contains(FLAG_EDIT)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                int quoteNumToEdit \u003d QuoteParser.getQuoteNumber(information, quoteList, Command.FLAG_EDIT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Quote oldQuote \u003d quoteList.getQuote(quoteNumToEdit);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Quote editedQuote \u003d QuoteParser.getEditedQuote(information);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                quoteList.updateQuote(editedQuote, quoteNumToEdit);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                ui.printEditQuote(oldQuote, editedQuote);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_MISSING_EDIT_FLAG);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 39
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/edit/EditQuoteReflectionCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class EditQuoteReflectionCommand extends  EditCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public EditQuoteReflectionCommand(String arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        editQuoteReflection(quoteList, ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void editQuoteReflection(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!information.contains(FLAG_EDIT)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_MISSING_EDIT_FLAG);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int quoteNumToEdit \u003d QuoteParser.getQuoteNumber(information, quoteList, Command.FLAG_EDIT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quoteList.getQuote(quoteNumToEdit).getReflection() \u003d\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_REFLECTION);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String editedReflection \u003d QuoteParser.getEditedReflection(information);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!editedReflection.isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                quoteList.updateReflection(editedReflection, quoteNumToEdit);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                ui.printEditQuoteReflection(quoteList.getQuote(quoteNumToEdit), editedReflection);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_MISSING_REFLECTION_FIELD);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 45
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/edit/EditRatingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.quotesify.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.UiMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents the EditRating Command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class EditRatingCommand extends EditCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Constructor for the EditRating command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param arguments Input by the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public EditRatingCommand(String arguments) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Executes the EditRating command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ui Ui of the program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param storage Storage of the program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        editRating(ratings, ui);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void editRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean hasMissingInput \u003d RatingParser.checkUserInput(information);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (hasMissingInput) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"user input is missing\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] ratingDetails;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String ratingValue;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String bookNumber;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingDetails \u003d information.split(\" \", 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingValue \u003d ratingDetails[0].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            bookNumber \u003d ratingDetails[1].trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(RatingParser.ERROR_INVALID_FORMAT_RATING);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"invalid format provided\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d RatingParser.checkValidityOfRatingScore(ratingValue);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Book bookToRate \u003d RatingParser.checkBookExists(bookNumber);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (bookToRate \u003d\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String title \u003d bookToRate.getTitle();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String author \u003d bookToRate.getAuthor().getName();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating existingRating \u003d isRated(title, author, ratings);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isValid \u003d ((ratingScore !\u003d RatingParser.INVALID_RATING) \u0026\u0026 (existingRating !\u003d null));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (isValid) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            bookToRate.setRating(ratingScore);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            existingRating.setRating(ratingScore);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printEditRating(ratingScore, title, author);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private Rating isRated(String title, String author, RatingList ratings) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitle().equals(title) \u0026\u0026 rating.getAuthor().equals(author)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                return rating;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(ERROR_RATING_DO_NOT_EXIST);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        quotesifyLogger.log(Level.INFO, \"book has not been rated before\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 88
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/find/FindBookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.find;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class FindBookCommand extends FindCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public FindBookCommand(String arguments) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        findBooks(books, ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void findBooks(BookList books, TextUi ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String keyword \u003d information.trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (keyword.isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                throw new QuotesifyException(ERROR_MISSING_KEYWORD);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            BookList filteredBooks \u003d books.findByKeyword(keyword);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (filteredBooks.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_BOOKS_IN_LIST);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printBooksByKeyword(filteredBooks, keyword);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 38
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/find/FindCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands.find;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class FindCategoryCommand extends FindCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public FindCategoryCommand(String arguments) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        CategoryList categoryList \u003d (CategoryList) ListManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        findCategories(categoryList, ui);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void findCategories(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quotesifyLogger.log(Level.INFO, \"finding categories by keyword.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String keyword \u003d information.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (keyword.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                throw new QuotesifyException(ERROR_MISSING_KEYWORD);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            CategoryList searchResult \u003d categoryList.findByKeyword(keyword);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (searchResult.getList().isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_MATCHING_CATEGORY);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printMatchingCategories(searchResult, keyword);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"found matching categories!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quotesifyLogger.log(Level.INFO, e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 40
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/find/FindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.find;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents the Find Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static Logger quotesifyLogger \u003d Logger.getLogger(\"QuotesifyLogger\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String information;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String arguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Constructor for the Find command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param arguments Input by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public FindCommand(String arguments) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        /** if user did not provide arguments, let details[1] be empty string */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Executes the Find command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ui Ui of the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param storage Storage of the program."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"going to find rating of books\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new FindRatingCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            new FindBookCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new FindQuoteCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            new FindCategoryCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printListOfFindCommands();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Decides if the program should be terminated."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return decision to terminate the program."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 9,
      "dozenmatter": 9,
      "chloesyy": 3,
      "yuen-sihao": 53
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/find/FindQuoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.find;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class FindQuoteCommand extends FindCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public FindQuoteCommand(String arguments) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        findQuote(quoteList, ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void findQuote(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String keyword \u003d information.trim().toLowerCase();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!keyword.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String resultList \u003d quoteList.findQuoteByKeyword(quoteList, keyword);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                if (!resultList.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    ui.printFindQuoteSuccess(resultList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    ui.printFindQuoteFail();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_FIND_KEYWORD_MISSING);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(ERROR_FIND_KEYWORD_MISSING);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 38
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/find/FindRatingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.quotesify.commands.find;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents the FindRating Command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class FindRatingCommand extends FindCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Constructor for the FindRating command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param arguments Input by the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public FindRatingCommand(String arguments) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Executes the FindRating command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ui Ui of the program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param storage Storage of the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        findRating(ratings, ui);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void findRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean hasMissingInput \u003d RatingParser.checkUserInput(information);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (hasMissingInput) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"user input is missing\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assert information !\u003d null : \"keyword should not be null\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String keyword \u003d information.toLowerCase().trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitle().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                isFound \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (!isFound) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.printf(ERROR_RATING_NOT_FOUND + \"\\n\", keyword);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"ratings not found\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ui.printFoundRating(ratings, keyword);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 62
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListBookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class ListBookCommand extends ListCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public ListBookCommand(String arguments) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        listBooks(bookList, ui);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooks(BookList bookList, TextUi ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (information.isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                listAllBooks(bookList, ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } else if (information.contains(FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                listBooksByAuthor(bookList, ui);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } else if (information.contains(DONE_KEYWORD)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                listBooksDoneOrUndone(bookList, ui);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                listBookDetails(bookList, ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (information.contains(FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                ui.printErrorMessage(ERROR_NO_AUTHOR_NAME);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_LIST_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooksDoneOrUndone(BookList bookList, TextUi ui) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (information.trim().equals(DONE_KEYWORD)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            listBooksDone(bookList, ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else if (information.trim().equals(\"undone\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            listBooksUndone(bookList, ui);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooksDone(BookList bookList, TextUi ui) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList completedBooks \u003d bookList.filterDone(true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printListDoneBook(completedBooks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooksUndone(BookList bookList, TextUi ui) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList undoneBooks \u003d bookList.filterDone(false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printListUndoneBook(undoneBooks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBookDetails(BookList bookList, TextUi ui) throws NumberFormatException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        int bookIndex \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Book book \u003d bookList.getBook(bookIndex);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printBookDetails(book);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listAllBooks(BookList bookList, TextUi ui) throws QuotesifyException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (bookList.isEmpty()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(ERROR_NO_BOOKS_IN_LIST);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printAllBooks(bookList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooksByAuthor(BookList bookList, TextUi ui) throws QuotesifyException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String authorName \u003d information.substring(4);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList filteredBooks \u003d bookList.filterByAuthor(authorName);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (filteredBooks.isEmpty()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(ERROR_NO_BOOKS_BY_AUTHOR);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printBooksByAuthor(filteredBooks, authorName);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 84
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class ListBookmarkCommand extends ListCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ListBookmarkCommand(String arguments) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        BookmarkList bookmarkList \u003d (BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        listBookmarks(bookmarkList, ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void listBookmarks(BookmarkList bookmarkList, TextUi ui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ui.printAllBookmarks(bookmarkList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 22
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ListCategoryCommand extends ListCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ListCategoryCommand(String arguments) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        CategoryList categoryList \u003d (CategoryList) ListManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listCategories(categoryList, ui);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void listCategories(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categoryList.updateListsInAllCategories();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if ((information.isEmpty())) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            listAllCategories(categoryList, ui);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            listAllInCategory(categoryList, ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void listAllCategories(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ui.printAllCategories(categoryList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void listAllInCategory(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printAllInCategory(categoryList.getCategoryByName(information.toLowerCase()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 39
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents the List Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static Logger quotesifyLogger \u003d Logger.getLogger(\"QuotesifyLogger\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String information;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String arguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Constructor for the List command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param arguments Input by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ListCommand(String arguments) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        /** if user did not provide arguments, let details[1] be empty string */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Executes the List command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ui Ui of the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param storage Storage of the program."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            new ListCategoryCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"going to list rating of books\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new ListRatingCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new ListToDoCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_BOOKMARK:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            new ListBookmarkCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new ListQuoteCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE_REFLECTION:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            new ListQuoteReflection(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            new ListBookCommand(arguments).execute(ui, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printListOfListCommands();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Decides if the program should be terminated."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return decision to terminate the program."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 4,
      "nat-ho": 8,
      "dozenmatter": 33,
      "chloesyy": 3,
      "yuen-sihao": 35
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListQuoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class ListQuoteCommand extends ListCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public ListQuoteCommand(String arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        listQuotes(quoteList, ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotes(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if ((information.isEmpty())) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listAllQuotes(quoteList, ui);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (information.contains(Command.FLAG_AUTHOR) \u0026\u0026 information.contains(Command.FLAG_REFERENCE)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                information \u003d information.substring(1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                HashMap\u003cString, String\u003e referenceAndAuthorName \u003d QuoteParser.parseReferenceAndAuthor(information);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String reference \u003d referenceAndAuthorName.get(Command.REFERENCE_KEYWORD).toLowerCase();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String authorName \u003d referenceAndAuthorName.get(Command.AUTHORNAME_KEYWORD).toLowerCase();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listQuotesByReferenceAndAuthor(quoteList, reference, authorName, ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (information.contains(Command.FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String authorName \u003d QuoteParser.parseListWithAuthor(information).toLowerCase();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listQuotesByAuthor(quoteList, authorName, ui);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (information.contains(Command.FLAG_REFERENCE)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String reference \u003d QuoteParser.parseListWithReference(information).toLowerCase();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listQuotesByReference(quoteList, reference, ui);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_LIST_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotesByReferenceAndAuthor(QuoteList quoteList, String reference, String authorName, TextUi ui) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotesByReferenceAndAuthor(quoteList, reference, authorName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listAllQuotes(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotes(quoteList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotesByAuthor(QuoteList quoteList, String authorName, TextUi ui) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotesByAuthor(quoteList, authorName);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotesByReference(QuoteList quoteList, String reference, TextUi ui) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotesByReference(quoteList, reference);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 63
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListQuoteReflection.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class ListQuoteReflection extends ListCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public ListQuoteReflection(String arguements) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(arguements);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        listQuoteReflection(quoteList, ui);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuoteReflection(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (information.trim().isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_QUOTE_NUMBER);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int quoteNumber \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quoteNumber \u003c 0 || quoteNumber \u003e quoteList.getSize()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Quote quote \u003d quoteList.getQuote(quoteNumber);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                ui.printQuoteAndReflection(quote);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 39
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListRatingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents the ListRating Command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class ListRatingCommand extends ListCommand {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Constructor for the ListRating command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param arguments Input by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public ListRatingCommand(String arguments) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Executes the ListRating command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ui Ui of the program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param storage Storage of the program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        listRatings(ratings, ui);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void listRatings(RatingList ratingList, TextUi ui) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ArrayList\u003cRating\u003e ratings \u003d ratingList.getList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.sort(Comparator.comparing(Rating::getRating));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Collections.reverse(ratings);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (information.isEmpty()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            listAllRatings(ratingList, ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            listSpecifiedRating(ratingList, ui);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void listAllRatings(RatingList ratingList, TextUi ui) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ui.printAllRatings(ratingList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void listSpecifiedRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assert !information.isEmpty() : \"Rating details should not be empty\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingToPrint \u003d RatingParser.checkValidityOfRatingScore(information);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratingToPrint \u003d\u003d RatingParser.INVALID_RATING) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getRating() \u003d\u003d ratingToPrint) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                isFound \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (isFound) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printSpecifiedRating(ratings, ratingToPrint);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.printf((ERROR_LIST_SPECIFIED_RATING_NOT_FOUND) + \"\\n\", ratingToPrint);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            quotesifyLogger.log(Level.INFO, \"ratings not found\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 79
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/list/ListToDoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package seedu.quotesify.commands.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class ListToDoCommand extends ListCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ListToDoCommand(String arguments) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void execute(TextUi ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDoList toDoList \u003d (ToDoList) ListManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        listToDos(toDoList,ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void listToDos(ToDoList toDoList, TextUi ui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        toDoList.sortByDate();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ui.printAllToDos(toDoList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 22
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/exception/QuotesifyException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class QuotesifyException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuotesifyException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 7
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/lists/ListManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.lists;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ListManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int BOOK_LIST \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int BOOKMARK_LIST \u003d 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int CATEGORY_LIST \u003d 2;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int QUOTE_LIST \u003d 3;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int RATING_LIST \u003d 4;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final int TODO_LIST \u003d 5;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static HashMap\u003cInteger, QuotesifyList\u003c?\u003e\u003e listManager \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static void initialiseAllLists() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(BOOK_LIST, new BookList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(BOOKMARK_LIST, new BookmarkList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(CATEGORY_LIST, new CategoryList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(QUOTE_LIST, new QuoteList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(RATING_LIST, new RatingList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(TODO_LIST, new ToDoList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static void addToList(int type, QuotesifyList\u003c?\u003e list) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(type, list);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static QuotesifyList\u003c?\u003e getList(int type) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return listManager.get(type);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 1,
      "dozenmatter": 37
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/lists/QuotesifyList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.lists;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public abstract class QuotesifyList\u003cT\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cT\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuotesifyList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuotesifyList(ArrayList\u003cT\u003e list) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ArrayList\u003cT\u003e getList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract void add(T t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract void delete(int index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract JSONArray toJsonArray();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 31
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/parser/JsonSerializer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public interface JsonSerializer {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 7
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.BookmarkCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.add.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.delete.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.commands.done.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.edit.EditCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.find.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.list.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_ADD \u003d \"add\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_EDIT \u003d \"edit\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_BOOKMARK \u003d \"bookmark\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Command parseUserCommand(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] tokens \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let tokens[1] be empty string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            tokens \u003d new String[]{tokens[0], \"\"};"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String command \u003d tokens[0].toLowerCase();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String arguments \u003d tokens[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_ADD:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return new AddCommand(arguments);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_BOOKMARK:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return new BookmarkCommand(arguments);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_EDIT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return new EditCommand(arguments);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new ListCommand(arguments);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return new DoneCommand(arguments);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case COMMAND_FIND:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return new FindCommand(arguments);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_BYE:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case COMMAND_HELP:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            // can consider throwing an exception here for invalid command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 4,
      "nat-ho": 5,
      "dozenmatter": 41,
      "chloesyy": 2,
      "yuen-sihao": 8
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/quote/Quote.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Quote implements JsonSerializer {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Author author;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String quote;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String reference;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String reflection;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote, Author author) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote,String reference) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote, String reference, Author author) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Quote(Author author, String quote, ArrayList\u003cString\u003e categories, String reference) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(Author author, String quote, ArrayList\u003cString\u003e categories, String reference, String reflection) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reflection \u003d reflection;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Author getAuthor() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setAuthor(Author author) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAuthorName() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return author.getName();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean hasAuthor() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (author !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getQuote() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return quote;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setQuote(String quote) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getReference() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return reference;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void setReference(String reference) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean hasReference() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (reference !\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ArrayList\u003cString\u003e getCategories() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return categories;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setCategories(ArrayList\u003cString\u003e categories) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void setReflection(String reflection) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reflection \u003d reflection;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getReflection() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return reflection;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void setReflectionNull() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        reflection \u003d null;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quoteWithoutInformation \u003d \u0027\\\"\u0027 + quote + \u0027\\\"\u0027;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quoteInformation \u003d \"\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (author !\u003d null \u0026\u0026 reference !\u003d null) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation \u003d \" - by \" + author.getName() + \", (from \" + reference + \u0027)\u0027;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (author !\u003d null) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation \u003d \" - by \" + author.getName();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (reference !\u003d null) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation \u003d \" - from \" + reference;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (reflection !\u003d null) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation +\u003d \" [R]\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quoteWithoutInformation + quoteInformation;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (hasAuthor()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"author\", this.getAuthor().toJson());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"author\", null);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"quote\", this.getQuote());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"categories\", this.getCategories());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"reference\", this.getReference());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        json.put(\"reflection\", this.getReflection());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return json;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 79,
      "dozenmatter": 69
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/quote/QuoteList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class QuoteList extends QuotesifyList\u003cQuote\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private ArrayList\u003cQuote\u003e quotes \u003d super.getList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DEFAULT_QUOTE \u003d \"Better days are coming, they are called Saturday and Sunday.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public QuoteList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public QuoteList(ArrayList\u003cQuote\u003e quotes) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(quotes);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote getQuote(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quotes.get(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quotes.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public int getIndex(Quote quote) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return quotes.indexOf(quote);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void updateQuote(Quote quote, int quoteNumber) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quotes.get(quoteNumber).getReflection() !\u003d null)  {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quote.setReflection(quotes.get(quoteNumber).getReflection());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.set(quoteNumber, quote);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote addReflection(String reflection, int quoteNumber) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Quote quote \u003d quotes.get(quoteNumber);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quote.setReflection(reflection);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.set(quoteNumber, quote);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quote;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void deleteReflection(int index) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.get(index).setReflectionNull();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void updateReflection(String editedReflection, int quoteNumber) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.get(quoteNumber).setReflection(editedReflection);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean checkDuplicateQuote(Quote newQuote) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : getList()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String quoteToCheck \u003d newQuote.getQuote().toLowerCase();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quote.getQuote().toLowerCase().equals(quoteToCheck)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void add(Quote newQuote) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.add(newQuote);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.remove(index);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quotesToReturn \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (int i \u003d 0; i \u003c getSize(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quotesToReturn +\u003d (i + 1 + \". \" + quotes.get(i).toString()) + System.lineSeparator();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quotesToReturn;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public QuoteList filterByCategory(String categoryName) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ArrayList\u003cQuote\u003e filteredQuotes \u003d (ArrayList\u003cQuote\u003e) quotes.stream()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .filter(quote -\u003e {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    ArrayList\u003cString\u003e categories \u003d quote.getCategories();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    return categories.contains(categoryName);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new QuoteList(filteredQuotes);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getRandomQuote() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (getSize() \u003e 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Random rand \u003d new Random();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                int randomQuoteNumber \u003d rand.nextInt(getSize() - 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Quote quoteToPrint \u003d getQuote(randomQuoteNumber);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                return quoteToPrint.toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (getSize() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                return getQuote(0).toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                return DEFAULT_QUOTE;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return DEFAULT_QUOTE;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAllQuotesByAuthor(QuoteList quoteList, String authorName) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String listToReturn \u003d \"\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quote.hasAuthor() \u0026\u0026 quote.getAuthorName().toLowerCase().equals(authorName)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return listToReturn;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAllQuotesByReference(QuoteList quoteList, String reference) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String listToReturn \u003d \"\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quote.hasReference() \u0026\u0026 quote.getReference().toLowerCase().equals(reference)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return listToReturn;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAllQuotesByReferenceAndAuthor(QuoteList quoteList, String reference, String authorName) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String listToReturn \u003d \"\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quote.hasReference() \u0026\u0026 quote.getReference().toLowerCase().equals(reference)) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                if (quote.hasAuthor() \u0026\u0026 quote.getAuthorName().toLowerCase().equals(authorName)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return listToReturn;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String findQuoteByKeyword(QuoteList quoteList, String keyword) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String listToReturn \u003d \"\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quote.getQuote().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (quote.hasReference() \u0026\u0026 quote.getReference().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (quote.hasAuthor() \u0026\u0026 quote.getAuthorName().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return listToReturn;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : quotes) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(quote.toJson());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 142,
      "dozenmatter": 25
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/quote/QuoteParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class QuoteParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_QUOTE \u003d \"I don\u0027t see the quote anywhere\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_AUTHOR \u003d \"Author name cannot be empty if \\\"/by\\\" flag is present\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_REFERENCE \u003d \"Reference field cannot be empty if \\\"/from\\\" flag is present\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_REFERENCE_OR_AUTHOR \u003d \"Author name and Reference cannot be empty if \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"\\\"/by\\\" flag and \\\"/from\\\" flag are present\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_INVALID_QUOTE_NUM \u003d \"Quote number provided is invalid\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseAddParameters(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assert !userInput.isEmpty() : \"field should not be empty\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (userInput.contains(Command.FLAG_REFERENCE) \u0026\u0026 userInput.contains(Command.FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithReferenceAndAuthor(userInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (userInput.contains(Command.FLAG_REFERENCE)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithReference(userInput);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (userInput.contains(Command.FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithAuthor(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithoutAdditionalInfo(userInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithoutAdditionalInfo(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if quote is empty"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(quote);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithReferenceAndAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if any fields are empty"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[]  quoteAndInformation \u003d userInput.split(Command.FLAG_DELIMITER, 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(quoteAndInformation[0]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        HashMap\u003cString, String\u003e referenceAndAuthorName \u003d parseReferenceAndAuthor(quoteAndInformation[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reference \u003d referenceAndAuthorName.get(Command.REFERENCE_KEYWORD);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String authorName \u003d referenceAndAuthorName.get(Command.AUTHORNAME_KEYWORD);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!reference.isEmpty() \u0026\u0026 !authorName.isEmpty()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Author author \u003d new Author(authorName);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new Quote(quote, reference, author);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (!reference.isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_REFERENCE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static HashMap parseReferenceAndAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        HashMap\u003cString, String\u003e referenceAndAuthorName \u003d new HashMap\u003cString, String\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] referenceAndAuthor \u003d userInput.split(Command.FLAG_DELIMITER,2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reference \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String authorName \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (referenceAndAuthor[0].startsWith(\"from\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                reference \u003d referenceAndAuthor[0].substring(5).trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                authorName \u003d referenceAndAuthor[1].substring(3).trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                assert !reference.isEmpty() : \"reference field should not be empty\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                assert !authorName.isEmpty() : \"author field should not be empty\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                reference \u003d referenceAndAuthor[1].substring(5).trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                authorName \u003d referenceAndAuthor[0].substring(3).trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                assert !reference.isEmpty() : \"reference field should not be empty\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                assert !authorName.isEmpty() : \"author field should not be empty\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_REFERENCE_OR_AUTHOR);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        referenceAndAuthorName.put(\"reference\", reference);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        referenceAndAuthorName.put(\"authorName\", authorName);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return referenceAndAuthorName;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithReference(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if quote of reference is empty"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] quoteAndReference \u003d userInput.split(Command.FLAG_REFERENCE, 2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(quoteAndReference[0]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reference \u003d trimAndCheckEmptyReference(quoteAndReference[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(quote, reference);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if quote of author name is empty"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] quoteAndAuthor \u003d userInput.split(Command.FLAG_AUTHOR, 2);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(quoteAndAuthor[0]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Author author \u003d trimAndCheckEmptyAuthor(quoteAndAuthor[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(quote, author);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String trimAndCheckEmptyQuote(String quote) throws QuotesifyException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assert !quote.isEmpty() : \"quote field should not be empty\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quote \u003d quote.trim();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!quote.isEmpty()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return quote;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_QUOTE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Author trimAndCheckEmptyAuthor(String authorName) throws QuotesifyException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assert !authorName.isEmpty() : \"author field should not be empty\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        authorName \u003d authorName.trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!authorName.isEmpty()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new Author(authorName);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String trimAndCheckEmptyReference(String reference) throws QuotesifyException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assert !reference.isEmpty() : \"reference field should not be empty\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        reference \u003d reference.trim();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!reference.isEmpty()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return reference;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_REFERENCE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String parseListWithAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] authorFlagAndName \u003d userInput.split(Command.FLAG_AUTHOR);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String authorName \u003d authorFlagAndName[1].trim();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return authorName;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String parseListWithReference(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] referenceFlagAndName \u003d userInput.split(Command.FLAG_REFERENCE);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String reference \u003d referenceFlagAndName[1].trim();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return reference;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_REFERENCE);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static int getQuoteNumber(String userInput, QuoteList quotes, String command) throws QuotesifyException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int quoteNumberToEdit \u003d Integer.parseInt(userInput.split(command, 2)[0].trim());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quoteNumberToEdit \u003c\u003d 0 || quoteNumberToEdit \u003e quotes.getSize()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new QuotesifyException(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                return quoteNumberToEdit - 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote getEditedQuote(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quoteAndInformation \u003d userInput.split(Command.FLAG_EDIT, 2)[1];"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return parseAddParameters(quoteAndInformation);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String getReflectionToAdd(String userInput) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reflection \u003d userInput.split(Command.FLAG_REFLECT, 2)[1].trim();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return reflection;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String getEditedReflection(String userInput) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String updatedReflection \u003d userInput.split(Command.FLAG_EDIT, 2)[1].trim();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return updatedReflection;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 173,
      "dozenmatter": 4
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/rating/Rating.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents a rating for a book."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Rating implements JsonSerializer {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String author;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private int rating;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Constructor for rating."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ratedBook Book that is rated."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param rating Rating score given to book."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public Rating(Book ratedBook, int rating) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        title \u003d ratedBook.getTitle();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        author \u003d ratedBook.getAuthor().getName();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.rating \u003d rating;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Returns title of rated book."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return Title."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Returns author name of rated book."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return Author name"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String getAuthor() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Returns rating score of book."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return Rating score."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public int getRating() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return rating;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Assigns a rating to book."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param rating Rating score."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void setRating(int rating) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.rating \u003d rating;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Returns details of rating."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return Rating details."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return \"[\" + title + \"] by \" + author + \": \" + rating + \" star\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Returns JSON object of the rating for storage."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return JSON object."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        json.put(\"titleOfRatedBook\", this.getTitle());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        json.put(\"authorOfRatedBook\", this.getAuthor());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"rating\", this.getRating());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return json;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 26,
      "yuen-sihao": 60
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/rating/RatingList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents a Rating List."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class RatingList extends QuotesifyList\u003cRating\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private ArrayList\u003cRating\u003e ratings \u003d super.getList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Constructor for rating list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public RatingList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Constructor for rating list with existing list of ratings."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param ratings List of ratings from storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public RatingList(ArrayList\u003cRating\u003e ratings) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(ratings);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Adds a rating to the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param newRating Rating to be added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void add(Rating newRating) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.add(newRating);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Deletes a rating."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param index Index of rating to be deleted."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.remove(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Returns details of ratings in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return Rating details."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String ratingsToReturn \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingsToReturn +\u003d rating.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return ratingsToReturn;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Returns JSONArray of the ratings for storage."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return JSONArray."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Rating rating : ratings) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(rating.toJson());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 16,
      "yuen-sihao": 62
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/rating/RatingParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import seedu.quotesify.commands.add.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " * Represents a Rating Parser."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class RatingParser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /** Boundary, invalid and unrated values for rating score. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final int RATING_ONE \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final int RATING_FIVE \u003d 5;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final int UNRATED \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final int INVALID_RATING \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /** Error messages for inputs checked by rating parser. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_INVALID_RATING_SCORE \u003d \"That score is out of our range my friend!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_INVALID_FORMAT_RATING \u003d \"Sorry I don\u0027t understand you\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_RATING_MISSING_INPUTS \u003d \"I need more details from you!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String ERROR_NO_BOOK_FOUND \u003d \"There is no such book!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Checks the validity of rating score."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * If rating score is invalid, 0 is returned."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param rating Rating to be validated."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return Value of rating score."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static int checkValidityOfRatingScore(String rating) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingScore \u003d Integer.parseInt(rating);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            AddCommand.quotesifyLogger.log(Level.INFO, \"invalid format provided\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_INVALID_FORMAT_RATING);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (!(ratingScore \u003e\u003d RATING_ONE \u0026\u0026 ratingScore \u003c\u003d RATING_FIVE)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            AddCommand.quotesifyLogger.log(Level.INFO, \"rating score out of range\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_INVALID_RATING_SCORE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return ratingScore;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Checks if user input is empty."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param information Input entered by user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return Value to determine if user input is empty."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static boolean checkUserInput(String information) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (information.isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_MISSING_INPUTS);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * Checks if book exists."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @param bookNumber Index of book."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     * @return Book with the specified index."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static Book checkBookExists(String bookNumber) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assert bookList !\u003d null : \"book list should not be null\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Book bookToRate \u003d null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            int indexOfBook \u003d Integer.parseInt(bookNumber) - 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            bookToRate \u003d bookList.getBook(indexOfBook);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            AddCommand.quotesifyLogger.log(Level.INFO, \"book does not exist\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return bookToRate;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "dozenmatter": 1,
      "yuen-sihao": 82
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/store/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.store;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String CURRENT_DIR \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String SEPARATOR \u003d File.separator;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String BOOKS \u003d \"books\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String QUOTES \u003d \"quotes\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String CATEGORIES \u003d \"categories\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String RATINGS \u003d \"ratings\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String BOOKMARKS \u003d \"bookmarks\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String TODOS \u003d \"todos\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String DATA_CORRUPT_MESSAGE \u003d \"[%s] is corrupted in save file. Creating an empty list.\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private File saveFile;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        initialiseSaveFile(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void initialiseSaveFile(String filePath) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            filePath \u003d CURRENT_DIR + filePath.replace(\"/\", SEPARATOR).replace(\"\\\\\", SEPARATOR);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (!saveFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (!saveFile.exists()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(filePath + \" creation failed.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"books\", ListManager.getList(ListManager.BOOK_LIST).toJsonArray());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"quotes\", ListManager.getList(ListManager.QUOTE_LIST).toJsonArray());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"categories\", ListManager.getList(ListManager.CATEGORY_LIST).toJsonArray());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"bookmarks\", ListManager.getList(ListManager.BOOKMARK_LIST).toJsonArray());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"ratings\", ListManager.getList(ListManager.RATING_LIST).toJsonArray());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"todos\", ListManager.getList(ListManager.TODO_LIST).toJsonArray());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(saveFile);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            fileWriter.write(json.toJSONString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(\"Saving to file failed!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void load() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            FileReader fileReader \u003d new FileReader(saveFile);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONParser jsonParser \u003d new JSONParser();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONObject json \u003d (JSONObject) jsonParser.parse(fileReader);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            updateListManager(json);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (ParseException | IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            // e.printStackTrace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.initialiseAllLists();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void updateListManager(JSONObject json) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.BOOK_LIST, parseBookList(json));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.QUOTE_LIST, parseQuoteList(json));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.CATEGORY_LIST, parseCategoryList(json));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.RATING_LIST, parseRatingList(json));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.BOOKMARK_LIST, parseBookmarkList(json));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.TODO_LIST, parseTodoList(json));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            // e.printStackTrace();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private BookList parseBookList(JSONObject json) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray books \u003d (JSONArray) json.get(BOOKS);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cBook\u003e bookList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object book : books) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                bookList.add(parseBookObject((JSONObject) book));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new BookList(bookList);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, BOOKS);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new BookList();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private QuoteList parseQuoteList(JSONObject json) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray quotes \u003d (JSONArray) json.get(QUOTES);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cQuote\u003e quoteList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object quote : quotes) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                quoteList.add(parseQuoteObject((JSONObject) quote));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new QuoteList(quoteList);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, QUOTES);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new QuoteList();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private CategoryList parseCategoryList(JSONObject json) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray categories \u003d (JSONArray) json.get(CATEGORIES);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cCategory\u003e categoryList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object category : categories) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                categoryList.add(parseCategoryObject((JSONObject) category));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new CategoryList(categoryList);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, CATEGORIES);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new CategoryList();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private RatingList parseRatingList(JSONObject json) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray ratings \u003d (JSONArray) json.get(RATINGS);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cRating\u003e ratingList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object rating : ratings) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ratingList.add(parseRatingObject((JSONObject) rating));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new RatingList(ratingList);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, RATINGS);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new RatingList();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private BookmarkList parseBookmarkList(JSONObject json) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray bookmarks \u003d (JSONArray) json.get(BOOKMARKS);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cBookmark\u003e bookmarkList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object bookmark : bookmarks) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                bookmarkList.add(parseBookmarkObject((JSONObject) bookmark));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new BookmarkList(bookmarkList);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, BOOKMARKS);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new BookmarkList();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ToDoList parseTodoList(JSONObject json) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray todos \u003d (JSONArray) json.get(TODOS);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cToDo\u003e todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object todo : todos) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                todoList.add(parseTodoObject((JSONObject) todo));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new ToDoList(todoList);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, TODOS);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new ToDoList();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Book parseBookObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject authorObj \u003d (JSONObject) json.get(\"author\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Author author \u003d parseAuthorObject(authorObj);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String title \u003d (String) json.get(\"title\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        boolean isDone \u003d (boolean) json.get(\"isDone\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray array \u003d (JSONArray) json.get(\"categories\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        long rating \u003d (long) json.get(\"rating\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d (ArrayList\u003cString\u003e) array.stream()"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return new Book(author, title, isDone, categories, (int) rating);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Quote parseQuoteObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject authorObj \u003d (JSONObject) json.get(\"author\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Author author \u003d parseAuthorObject(authorObj);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String quote \u003d (String) json.get(\"quote\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String reference \u003d (String) json.get(\"reference\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reflection \u003d (String) json.get(\"reflection\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray array \u003d (JSONArray) json.get(\"categories\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d (ArrayList\u003cString\u003e) array.stream()"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(author, quote, categories, reference, reflection);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Category parseCategoryObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String name \u003d (String) json.get(\"category\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Category category \u003d new Category(name);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setBookList(bookList.filterByCategory(name));"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setQuoteList(quoteList.filterByCategory(name));"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Rating parseRatingObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String title \u003d (String) json.get(\"titleOfRatedBook\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String name \u003d (String) json.get(\"authorOfRatedBook\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Author author \u003d new Author(name);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        long rating \u003d (long) json.get(\"rating\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return new Rating(new Book(author, title), (int) rating);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Bookmark parseBookmarkObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject bookObj \u003d (JSONObject) json.get(\"book\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Book book \u003d parseBookObject(bookObj);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        long pageNum \u003d (long) json.get(\"pageNum\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new Bookmark(book, (int) pageNum);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ToDo parseTodoObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String name \u003d (String) json.get(\"name\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String deadline \u003d (String) json.get(\"deadline\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        boolean isDone \u003d (boolean) json.get(\"isDone\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo newToDo \u003d new ToDo(name, deadline, isDone);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        newToDo.updateDateFormat();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return newToDo;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Author parseAuthorObject(JSONObject json) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String authorName \u003d (String) json.get(\"name\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new Author(authorName);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 3,
      "nat-ho": 2,
      "dozenmatter": 249,
      "chloesyy": 3,
      "yuen-sihao": 3
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/todo/ToDo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import seedu.quotesify.ui.UiMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ToDo implements JsonSerializer {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private LocalDate formattedDeadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private boolean isDeadlineFormatted;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ToDo(String name, String deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.isDeadlineFormatted \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ToDo(String name, String deadline, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.isDeadlineFormatted \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setDeadline(String deadline) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public LocalDate getFormattedDeadline() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return formattedDeadline;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void setFormattedDeadline(LocalDate formattedDeadline) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.formattedDeadline \u003d formattedDeadline;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isDeadlineFormatted() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return isDeadlineFormatted;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void setDeadlineFormatted(boolean isFormatted) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        isDeadlineFormatted \u003d isFormatted;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (isDeadlineFormatted) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return \"[\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + this.name + \" (by: \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + formattedDeadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + \", \" + formattedDeadline.getDayOfWeek() + \")\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return \"[\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + this.name + \" (by: \" + this.deadline + \")\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String signTick \u003d \"v\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String signCross \u003d \"x\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return (isDone ? signTick : signCross);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void updateDateFormat() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            formattedDeadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            isDeadlineFormatted \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            formattedDeadline \u003d LocalDate.parse(\"3000-12-31\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            isDeadlineFormatted \u003d false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"name\", this.getName());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"deadline\", this.getDeadline());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"isDone\", this.isDone());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return json;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 66,
      "dozenmatter": 43
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/todo/ToDoList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class ToDoList extends QuotesifyList\u003cToDo\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private ArrayList\u003cToDo\u003e todos \u003d super.getList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ToDoList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ToDoList(ArrayList\u003cToDo\u003e toDos) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(toDos);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void add(ToDo newToDo) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        todos.add(newToDo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ToDo find(int taskNum) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int indexNum \u003d taskNum - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (taskNum \u003c\u003d todos.size() \u0026\u0026 indexNum \u003e\u003d 0 \u0026\u0026 todos.size() \u003e 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return todos.get(indexNum);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return todos.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void delete(int taskNum) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int indexNum \u003d taskNum - 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        todos.remove(indexNum);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String toDosToReturn \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int taskNum \u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (ToDo toDo : todos) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            taskNum++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            toDosToReturn +\u003d  taskNum + \".\" + toDo.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return toDosToReturn;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void sortByDate() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        todos.sort(Comparator.comparing(todo -\u003e todo.getFormattedDeadline()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (ToDo todo : todos) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(todo.toJson());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 52,
      "dozenmatter": 18
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/ui/TextUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LOGO);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.GOODBYE_MESSAGE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.PROMPT_MESSAGE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (in.hasNextLine()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return in.nextLine().trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return \"bye\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printDividerLine() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printAddBook(Book book) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.ADD_BOOK_MESSAGE + \"\\n\", book.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printDeleteBook(Book book) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DELETE_BOOK_MESSAGE + \"\\n\", book.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printEditBook(String oldTitle, String newTitle) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.EDIT_BOOK_MESSAGE + \"\\n\", oldTitle, newTitle);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printDoneBook(Book book) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.printf(UiMessage.DONE_BOOK_MESSAGE + \"\\n\", book.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printListDoneBook(BookList bookList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_DONE_BOOK_MESSAGE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.print(bookList.toStringWithIndex());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printListUndoneBook(BookList bookList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_UNDONE_BOOK_MESSAGE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.print(bookList.toStringWithIndex());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printAllBooks(BookList bookList) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOKS_MESSAGE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.print(bookList.toStringWithIndex());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printBookDetails(Book book) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_DETAIL_MESSAGE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.print(book.getBookDetailString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printBooksByAuthor(BookList bookList, String authorName) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.LIST_BOOKS_BY_AUTHOR_MESSAGE + \"\\n\", authorName);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.print(bookList.toStringWithIndex());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printBooksByKeyword(BookList bookList, String keyword) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.printf(UiMessage.LIST_BOOKS_BY_KEYWORD_MESSAGE + \"\\n\", keyword);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.print(bookList.toStringWithIndex());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAddQuote(Quote quote) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf(UiMessage.ADD_QUOTE_MESSAGE + \"\\n\", quote.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotes(QuoteList quotes) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quotes.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_ALL_QUOTES);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(quotes);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotesByAuthor(QuoteList quoteList, String authorName) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quoteList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String listToPrint \u003d quoteList.getAllQuotesByAuthor(quoteList, authorName);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!listToPrint.isEmpty()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.printf((UiMessage.LIST_QUOTES_BY_AUTHOR_MESSAGE) + \"\\n\", authorName);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(listToPrint);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(UiMessage.LIST_NO_QUOTES_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotesByReference(QuoteList quoteList, String reference) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quoteList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String listToPrint \u003d quoteList.getAllQuotesByReference(quoteList, reference);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!listToPrint.isEmpty()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.printf((UiMessage.LIST_QUOTES_BY_REFERENCE_MESSAGE) + \"\\n\", reference);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(listToPrint);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(UiMessage.LIST_NO_QUOTES_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotesByReferenceAndAuthor(QuoteList quoteList, String reference, String authorName) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quoteList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String listToPrint \u003d quoteList.getAllQuotesByReferenceAndAuthor(quoteList, reference, authorName);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!listToPrint.isEmpty()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.printf(UiMessage.LIST_QUOTES_BY_AUTHOR_AND_REFERENCE_MESSAGE + \"\\n\", reference, authorName);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(listToPrint);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(UiMessage.LIST_NO_QUOTES_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printQuoteAndReflection(Quote quote) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quote.getReflection() !\u003d null) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.printf(UiMessage.LIST_QUOTE_REFLECTION + \"\\n\", quote.toString(), quote.getReflection());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(UiMessage.LIST_QUOTE_NO_REFLECTION);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  void printDeleteQuote(String quote) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf((UiMessage.DELETE_QUOTE_MESSAGE) + \"\\n\", quote);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printRandomQuote() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quotelist \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String randomQuote \u003d quotelist.getRandomQuote();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.PRINT_RANDOM_QUOTE + System.lineSeparator() + randomQuote);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printEditQuote(Quote oldQuote, Quote newQuote) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf(UiMessage.EDIT_QUOTE_MESSAGE + \"\\n\", oldQuote.toString(), newQuote.toString());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAddReflection(Quote quote, String reflection) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf(UiMessage.ADD_QUOTE_REFLECTION + \"\\n\", quote.toString(), reflection);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  void printDeleteQuoteReflection(String quote) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf((UiMessage.DELETE_QUOTE_REFLECTION_MESSAGE) + \"\\n\", quote);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  void printEditQuoteReflection(Quote quote, String updatedReflection) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf((UiMessage.EDIT_QUOTE_REFLECTION) + \"\\n\", quote.toString(), updatedReflection);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printFindQuoteFail() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.printf(UiMessage.FIND_QUOTE_FAIL);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printFindQuoteSuccess(String results) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.FIND_QUOTE_SUCCESS);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(results);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAddCategoryToBook(String bookTitle, String categoryName) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String trailer \u003d \"the book [\" + bookTitle + \"]\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.ADD_CATEGORY_MESSAGE) + \"\\n\", categoryName, trailer);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAddCategoryToQuote(String quote, String categoryName) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String trailer \u003d \"the quote [\\\"\" + quote + \"\\\"]\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.ADD_CATEGORY_MESSAGE) + \"\\n\", categoryName, trailer);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printRemoveCategoryFromBook(String bookTitle, String categoryName) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String trailer \u003d \"the book [\" + bookTitle + \"]\";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.DELETE_CATEGORY_MESSAGE) + \"\\n\", categoryName, trailer);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printRemoveCategoryFromQuote(String quote, String categoryName) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String trailer \u003d \"the quote [\\\"\" + quote + \"\\\"]\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.DELETE_CATEGORY_MESSAGE) + \"\\n\", categoryName, trailer);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printRemoveCategory(String categoryName) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DELETE_CATEGORY_MESSAGE + \"\\n\", categoryName, \"all books and quotes\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printCategorySize(Category category) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.CATEGORY_SIZE_MESSAGE) + \"\\n\", category.getSize(), category.getCategoryName());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAllCategories(CategoryList categoryList) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (categoryList.getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.EMPTY_CATEGORY_LIST_MESSAGE);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_CATEGORIES_MESSAGE);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(categoryList.toString());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printMatchingCategories(CategoryList categoryList, String keyword) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.FIND_CATEGORIES_MESSAGE + \"\\n\", keyword);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(categoryList.toString());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAllInCategory(Category category) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String categoryName \u003d category.getCategoryName();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (category.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(UiMessage.NO_ITEMS_IN_CATEGORY_MESSAGE + \"\\n\", categoryName);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.LIST_ALL_IN_CATEGORIES_MESSAGE + \"\\n\", categoryName);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        printAllBooksInCategory(category);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        printAllQuotesInCategory(category);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAllBooksInCategory(Category category) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d category.getBookList();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList allBooks \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (bookList.getList().size() \u003e 0) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(\"BOOKS:\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Book book : bookList.getList()) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                int index \u003d allBooks.getIndex(book) + 1;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                System.out.println(index + \". \" + book.toString());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAllQuotesInCategory(Category category) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d category.getQuoteList();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList allQuotes \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (quoteList.getList().size() \u003e 0) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(\"QUOTES:\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                int index \u003d allQuotes.getIndex(quote) + 1;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                // used print() because quote.toString() has additional line separator"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                System.out.println(index + \". \" + quote.toString());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printEditCategory(String oldCategory, String newCategory) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.EDIT_CATEGORY_MESSAGE + \"\\n\", oldCategory, newCategory);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printErrorMessage(String message) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printAddRating(int ratingScore, String titleOfBookToRate, String authorOfBookToRate) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.printf((UiMessage.ADD_RATING_MESSAGE) + \"\\n\", titleOfBookToRate, authorOfBookToRate, ratingScore);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printAllRatings(RatingList ratingList) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratingList.getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_RATINGS_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_ALL_RATINGS_MESSAGE);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.print(ratingList.toString());"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printSpecifiedRating(RatingList ratings, int ratingToPrint) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.LIST_SPECIFIED_RATING_MESSAGE) + \"\\n\", ratingToPrint);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getRating() \u003d\u003d ratingToPrint) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                System.out.println(rating.toString());"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printDeleteRating(String bookTitle, String author) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.printf((UiMessage.DELETE_RATING_MESSAGE) + \"\\n\", bookTitle, author);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printEditRating(int ratingScore, String title, String author) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.printf((UiMessage.EDIT_RATING_MESSAGE) + \"\\n\", title, author, ratingScore);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printFoundRating(RatingList ratings, String keyword) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.FIND_RATING_MESSAGE);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitle().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                System.out.println(rating.toString());"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAddToDo(ToDo toDo) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (toDo !\u003d null) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(UiMessage.ADD_TODO_MESSAGE + \"\\n\", toDo.toString());"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printToDo(ToDo toDo) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(toDo.toString());"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAllToDos(ToDoList toDoList) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (toDoList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_TODOS_MESSAGE);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(toDoList.toString());"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.EMPTY_TODO_LIST_MESSAGE);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printDeleteToDo(ToDo  toDo) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DELETE_TODO_MESSAGE + \"\\n\", toDo.toString());"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printDoneToDo(ToDo  toDo) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DONE_TODO_MESSAGE + \"\\n\", toDo.toString());"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAddBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.ADD_BOOKMARK_MESSAGE + \"\\n\", bookmark.toString());"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printUpdateBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.UPDATE_BOOKMARK_MESSAGE + \"\\n\", bookmark.toString());"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printDeleteBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DELETE_BOOKMARK_MESSAGE + \"\\n\", bookmark.toString());"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAllBookmarks(BookmarkList bookmarkList) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_BOOKMARKS_MESSAGE);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(bookmarkList.toString());"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.EMPTY_BOOKMARK_LIST_MESSAGE);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printInvalidQuotesifyCommand() {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.INVALID_QUOTESIFY_COMMAND);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printHelpPage() {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Feeling stuck? Well here are the things you can do with Quotesify v2.1:\");"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"                                1. Book Management\");"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_BOOK_COMMAND);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.DONE_BOOK_COMMAND);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_BOOK_COMMAND);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.EDIT_BOOK_COMMAND);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_COMMAND);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_DETAILS);"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_COMPLETE);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_BOOK_COMMAND);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"                                2. Quote Management\");"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.EDIT_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.FIND_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.ADD_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.DELETE_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.EDIT_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.LIST_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"                                3a. Bookmark Tracker\");"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"                                3b. Task Tracker\");"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_TODO_COMMAND);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_TODO_COMMAND);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_TODO_COMMAND);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DONE_COMMAND);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"                                4. Category Management\");"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"                                5. Rating System for books\");"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_RATING_COMMAND);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_RATING_COMMAND);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_RATING_COMMAND);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.EDIT_RATING_COMMAND);"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.FIND_RATING_COMMAND);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"                                Other useful commands\");"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"Show this help page:                                             \" + \"help\");"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"Quit Quotesify:                                                  \" + \"bye\");"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Remember: words in [] are optional, \""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                + \"and words in CAPS are your own input\" + System.lineSeparator()"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                + \"Hope this helps!\");"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"~ Your friends from Quotesify\");"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printListOfAddCommands() {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Here is a list of Add commands you can do:\");"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_BOOK_COMMAND);"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.ADD_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_RATING_COMMAND);"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_TODO_COMMAND);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printListOfDeleteCommands() {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Here is a list of Delete commands you can do:\");"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_BOOK_COMMAND);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.DELETE_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_RATING_COMMAND);"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_TODO_COMMAND);"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printListOfListCommands() {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Here is a list of List commands you can do:\");"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_COMMAND);"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_DETAILS);"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_COMPLETE);"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.LIST_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_RATING_COMMAND);"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_TODO_COMMAND);"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printListOfEditCommands() {"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Here is a list of Edit commands you can do:\");"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_BOOK_COMMAND);"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(UiMessage.EDIT_QUOTE_REFLECTION_COMMAND);"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_RATING_COMMAND);"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printListOfFindCommands() {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Here is a list of Find commands you can do:\");"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_BOOK_COMMAND);"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_RATING_COMMAND);"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printDoneCommandUsage() {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Here is a list of Done commands you can do:\");"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.DIVIDER_LINE);"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(UiMessage.DONE_BOOK_COMMAND);"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DONE_COMMAND);"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 38,
      "nat-ho": 122,
      "dozenmatter": 202,
      "chloesyy": 62,
      "yuen-sihao": 87
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/ui/UiMessage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class UiMessage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    // I have no choice but to make all variables \"static\", else checkstyleMain will fail."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    // Quotesify messages"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LOGO \u003d \"________                __                .__  _____       \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"\\\\_____  \\\\  __ __  _____/  |_  ____   _____|__|/ ____\\\\__.__.\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \" /  / \\\\  \\\\|  |  \\\\/  _ \\\\   __\\\\/ __ \\\\ /  ___/  \\\\   __\u003c   |  |\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"/   \\\\_/.  \\\\  |  (  \u003c_\u003e )  | \\\\  ___/ \\\\___ \\\\|  ||  |  \\\\___  |\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"\\\\_____\\\\ \\\\_/____/ \\\\____/|__|  \\\\___  \u003e____  \u003e__||__|  / ____|\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"       \\\\__\u003e                      \\\\/     \\\\/          \\\\/    \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String WELCOME_MESSAGE \u003d \"Welcome to Quotesify v2.1!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String GOODBYE_MESSAGE \u003d \"Alright, have a nice day!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String PROMPT_MESSAGE \u003d \"\\nWhat would you like to do with Quotesify?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String INVALID_QUOTESIFY_COMMAND \u003d \"I don\u0027t understand you.\" + System.lineSeparator()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"Maybe type \\\"help\\\" for usage instructions?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    // Command related messages"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_BOOK_MESSAGE \u003d \"The book [%s] has been added!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_BOOK_MESSAGE \u003d \"The book [%s] has been deleted!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_BOOK_MESSAGE \u003d \"The book has been edited from [%s] to [%s]!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_BOOKS_MESSAGE \u003d \"Here is a list of all books:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String LIST_BOOK_DETAIL_MESSAGE \u003d \"Here are the details of your book:\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String LIST_DONE_BOOK_MESSAGE \u003d \"Here are the books you have completed: \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String LIST_UNDONE_BOOK_MESSAGE \u003d \"Here are the books you have yet to complete: \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_BOOKS_BY_AUTHOR_MESSAGE \u003d \"Here is a list of books by %s:\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String LIST_BOOKS_BY_KEYWORD_MESSAGE \u003d \"Here is a list of books with the keyword \\\"%s\\\":\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String DONE_BOOK_MESSAGE \u003d \"The book [%s] has been marked as done!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ADD_CATEGORY_MESSAGE \u003d \"I have tagged category [%s] to %s!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DELETE_CATEGORY_MESSAGE \u003d \"I have removed category [%s] from %s!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String CATEGORY_SIZE_MESSAGE \u003d \"You have a total of %d item(s) tagged as [%s].\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_CATEGORIES_MESSAGE \u003d \"Here is the list of all categories:\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_ALL_IN_CATEGORIES_MESSAGE \u003d \"Here are the list of items tagged as [%s]:\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EMPTY_CATEGORY_LIST_MESSAGE \u003d \"There are no categories created!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String NO_ITEMS_IN_CATEGORY_MESSAGE \u003d \"There are no items tagged as [%s].\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_CATEGORY_MESSAGE \u003d \"The category has been changed from [%s] to [%s]!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String FIND_CATEGORIES_MESSAGE \u003d \"Here is a list of categories with the keyword \\\"%s\\\":\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ADD_RATING_MESSAGE \u003d \"You have just rated [%s by %s] %d star!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DELETE_RATING_MESSAGE \u003d \"Rating for [%s by %s] has been deleted!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_ALL_RATINGS_MESSAGE \u003d \"Planning to recommend some books?\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \" Here are your rated books!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_NO_RATINGS_FOUND_MESSAGE \u003d \"None of the books are rated yet!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_SPECIFIED_RATING_MESSAGE \u003d \"Here are the books you rated as %d star!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String EDIT_RATING_MESSAGE \u003d \"Ratings for [%s by %s] has been updated to %d star!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String FIND_RATING_MESSAGE \u003d \"Here are the ratings you may be looking for!\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_TODO_MESSAGE \u003d \"The task [%s] has been added!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TODO_SIZE_MESSAGE \u003d \"You have a total of %d task(s) recorded.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_TODOS_MESSAGE \u003d \"Here is the list of all task(s) recorded:\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_TODO_MESSAGE \u003d \"The Task [%s] has been deleted!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DONE_TODO_MESSAGE \u003d \"The Task [%s] has been marked as done!\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EMPTY_TODO_LIST_MESSAGE \u003d \"There are no task created\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String INCORRECT_DATE_FORMAT_MESSAGE \u003d \"The format of the date you provide is incorrect! \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            + \"I will add the task with a deadline of plain task instead.\" + System.lineSeparator()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            + \"Note that this task may not be displayed in order of time.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_BOOKMARK_MESSAGE \u003d \"The bookmark [%s] has been added!\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String UPDATE_BOOKMARK_MESSAGE \u003d \"The bookmark [%s] has been updated\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String BOOKMARK_SIZE_MESSAGE \u003d \"You have a total of %d bookmark(s) recorded.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_BOOKMARKS_MESSAGE \u003d \"Here is the list of all bookmark(s) recorded:\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EMPTY_BOOKMARK_LIST_MESSAGE \u003d \"There are no bookmark created\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_BOOKMARK_MESSAGE \u003d \"The bookmark [%s] has been removed!\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EMPTY_BOOKMARK_COMMAND \u003d \"There is no info related to bookmark provided!\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ADD_QUOTE_MESSAGE \u003d \"The quote [%s] has been added!\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_ALL_QUOTES \u003d \"Here are all your quotes:\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_QUOTE_MESSAGE \u003d \"The quote \\\"%s\\\" has been deleted!\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_NO_QUOTES_SAVED_MESSAGE \u003d \"You have no saved quotes!\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_NO_QUOTES_FOUND_MESSAGE \u003d \"I could not find any that matched your specifications.\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_QUOTES_BY_AUTHOR_MESSAGE \u003d \"Here is a list of quotes by %s:\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_QUOTES_BY_REFERENCE_MESSAGE \u003d \"Here is a list of quotes from %s:\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_QUOTES_BY_AUTHOR_AND_REFERENCE_MESSAGE \u003d \"Here is a list of quotes from %s by %s:\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String PRINT_RANDOM_QUOTE \u003d \"Before you continue, here\u0027s something:\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String EDIT_QUOTE_MESSAGE \u003d \"The quote has been edited from: [%s] to [%s]!\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FIND_QUOTE_SUCCESS \u003d \"Here are the results of my search:\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FIND_QUOTE_FAIL \u003d \"None of your quotes matches the keyword\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ADD_QUOTE_REFLECTION \u003d \"Reflection has added been to quote: %s\" + System.lineSeparator()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"Reflection: %s\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String LIST_QUOTE_REFLECTION \u003d \"Here is the reflection you are looking for!\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + System.lineSeparator() + \"Quote: %s\" + System.lineSeparator() + \"Reflection: %s\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String LIST_QUOTE_NO_REFLECTION \u003d \"That quote does not have any reflection attached!\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DELETE_QUOTE_REFLECTION_MESSAGE \u003d \"Reflection for the quote [%s] has been deleted!\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String EDIT_QUOTE_REFLECTION \u003d \"Reflection has been updated!\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + System.lineSeparator() + \"Quote: %s\" + System.lineSeparator() + \"Reflection: %s\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String DIVIDER_LINE \u003d \"---------------------------------------------------------------------\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"------------------------------------------------------------------\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    // Help page commands"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ADD_BOOK_COMMAND \u003d \"Add book:                                                        \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"add -b BOOK_TITLE /by AUTHOR\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ADD_QUOTE_COMMAND \u003d \"Add quote:                                                       \""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"add -q QUOTE [/from BOOK_TITLE] [/by AUTHOR]\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ADD_QUOTE_REFLECTION_COMMAND \u003d \"Add quote reflection:                                 \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"           \" + \"add -qr QUOTE_NUMBER /reflect REFLECTION\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ADD_TODO_COMMAND \u003d \"Add task:                                                        \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"add -t TASK /by DEADLINE\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_CATEGORY_COMMAND \u003d \"Add category:                                                \""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"    \" + \"add -c CATEGORY {[-b BOOK_TITLE] | [-q QUOTE_NUMBER]}\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ADD_RATING_COMMAND \u003d \"Add rating:                                                    \""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"  \" + \"add -r RATING_SCORE BOOK_NUMBER\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ADD_BOOKMARK_COMMAND \u003d \"Add bookmark:                                                \""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"    \" + \"bookmark -b BOOK_TITLE /pg PAGE_NUMBER\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String DELETE_BOOK_COMMAND \u003d \"Delete book:                                                  \""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"   \" + \"delete -b BOOK_NUMBER\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String DELETE_QUOTE_COMMAND \u003d \"Delete quote:                                                 \""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"   \" + \"delete -q QUOTE_NUMBER\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String DELETE_QUOTE_REFLECTION_COMMAND \u003d \"Delete quote reflection:                           \""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"              \" + \"delete -qr QUOTE_NUMBER\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String DELETE_BOOKMARK_COMMAND \u003d \"Delete bookmark:                                          \""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"       \" + \"delete -bm BOOK_NUMBER\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String DELETE_TODO_COMMAND \u003d \"Delete task:                                                  \""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"   \" + \"delete -t TASK_NUMBER\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_CATEGORY_COMMAND \u003d \"Delete category:                                          \""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"       \" + \"delete -c CATEGORY {[-b BOOK_TITLE] | [-q QUOTE_NUMBER]}\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String DELETE_RATING_COMMAND \u003d \"Delete rating:                                              \""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"     \" + \"delete -r BOOK_NUMBER\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String EDIT_BOOK_COMMAND \u003d \"Edit book:                                                     \""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"  \" + \"edit -b BOOK_NUMBER /to NEW_TITLE\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String EDIT_QUOTE_COMMAND \u003d \"Edit quote:                                                    \""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"  \" + \"edit -q QUOTE_NUMBER /to NEW_QUOTE [/by AUTHOR]\" + \" [/from BOOK_TITLE]\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String EDIT_QUOTE_REFLECTION_COMMAND \u003d \"Edit quote reflection:                             \""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"              \" + \"edit -qr QUOTE_NUMBER /to UPDATED_REFLECTION\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String EDIT_CATEGORY_COMMAND \u003d \"Edit category:                                              \""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"     \" + \"edit -c OLD_CATEGORY /to NEW_CATEGORY\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String EDIT_RATING_COMMAND \u003d \"Edit rating:                                                 \""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"    \" + \"edit -r RATING_SCORE BOOK_NUMBER\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String EDIT_BOOKMARK_COMMAND \u003d \"Update bookmark:                                            \""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"     \" + \"bookmark -b BOOK_NUMBER /pg PAGE_NUMBER\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String FIND_BOOK_COMMAND \u003d \"Find book:                                                     \""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"  \" + \"find -b KEYWORD\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String FIND_QUOTE_COMMAND \u003d \"Find quote:                                                   \""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"   \" + \"find -q QUOTE_NUMBER\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String FIND_RATING_COMMAND \u003d \"Find rating:                                                 \""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"    \" + \"find -r KEYWORD\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String FIND_CATEGORY_COMMAND \u003d \"Find category:                                              \""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"     \" + \"find -c KEYWORD\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String LIST_BOOK_COMMAND \u003d \"List books:                                                      \""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"list -b [/by AUTHOR]\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String LIST_BOOK_DETAILS \u003d \"List book details:                                               \""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"list -b BOOK_NUMBER\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String LIST_BOOK_COMPLETE \u003d \"List books by completion:                                        \""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"list -b done/undone\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String LIST_QUOTE_COMMAND \u003d \"List quotes:                                                     \""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"list -q [/by AUTHOR] [/from BOOK_TITLE]\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String LIST_QUOTE_REFLECTION_COMMAND \u003d \"List quote reflection:                               \""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"            \" + \"list -qr QUOTE_NUMBER\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String LIST_BOOKMARK_COMMAND \u003d \"List bookmarks:                                             \""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"     \" + \"list -bm\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String LIST_TODO_COMMAND \u003d \"List tasks:                                                      \""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"list -t\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String LIST_CATEGORY_COMMAND \u003d \"List categories:                                            \""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"     \" + \"list -c [CATEGORY]\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String LIST_RATING_COMMAND \u003d \"List ratings:                                                 \""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"   \" + \"list -r [RATING_SCORE]\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String DONE_BOOK_COMMAND \u003d \"Mark book as complete:                                           \""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"done -b BOOK_NUMBER\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"Mark task as done:                                               \""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            + \"done -t TASK_NUMBER\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 3,
      "nat-ho": 19,
      "dozenmatter": 65,
      "chloesyy": 4,
      "yuen-sihao": 72
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/QuotesifyTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "class QuotesifyTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "dozenmatter": 2,
      "-": 10
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/book/BookTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "class BookTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void toString_titleAuthor_titleByAuthor() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Author author \u003d new Author(\"author\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Book book \u003d new Book(author, \"title\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        assertEquals(\"title by author\", book.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 2,
      "chloesyy": 13
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/category/CategoryListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryListTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Book book1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private BookList bookList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Quote quote1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private QuoteList quoteList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Category category1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        bookList \u003d new BookList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quoteList \u003d new QuoteList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Author author \u003d new Author(\"me\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        book1 \u003d new Book(author, \"book1\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        bookList.add(book1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quote1 \u003d new Quote(\"quote1\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quoteList.add(quote1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ListManager.addToList(ListManager.BOOK_LIST, bookList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ListManager.addToList(ListManager.QUOTE_LIST, quoteList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category1 \u003d new Category(\"romance\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category1.setBookList(bookList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category1.setQuoteList(quoteList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void isExistingCategory_invalidName() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        CategoryList categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categoryList.add(category1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertFalse(categoryList.isExistingCategory(\"action\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertTrue(categoryList.isExistingCategory(\"romance\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void getCategoryByName_invalidName_throwsQuotesifyException() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        CategoryList categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categoryList.add(category1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Throwable exception \u003d assertThrows(QuotesifyException.class, () -\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            categoryList.getCategoryByName(\"action\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        });"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertEquals(\"Category [action] does not exist!\", exception.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void findByKeyword_invalidKeyword() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        CategoryList categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categoryList.add(category1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertTrue(categoryList.findByKeyword(\"act\").getList().isEmpty());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertFalse(categoryList.findByKeyword(\"man\").getList().isEmpty());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 70
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/category/CategoryParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import static org.junit.Assert.assertArrayEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void getRequiredParameters_validCommand() throws QuotesifyException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String param1 \u003d \"action -b 1\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String param2 \u003d \"romance -q 1\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String param3 \u003d \"fantasy -b 1 -q 1\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertArrayEquals(new String[]{\"action\", \"1\", \"\"},"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                CategoryParser.getRequiredParameters(param1.split(\" \")));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertArrayEquals(new String[]{\"romance\", \"\", \"1\"},"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                CategoryParser.getRequiredParameters(param2.split(\" \")));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertArrayEquals(new String[]{\"fantasy\", \"1\", \"1\"},"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                CategoryParser.getRequiredParameters(param3.split(\" \")));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void getRequiredParameters_throwsQuotesifyException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String param \u003d \"action -b 1 -b 1\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Throwable exception \u003d assertThrows(QuotesifyException.class, () -\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                CategoryParser.getRequiredParameters(param.split(\" \"))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertEquals(\"Invalid parameters!\", exception.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 32
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/category/CategoryTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Book book1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private BookList bookList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Quote quote1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private QuoteList quoteList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        bookList \u003d new BookList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quoteList \u003d new QuoteList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Author author \u003d new Author(\"me\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        book1 \u003d new Book(author, \"book1\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        bookList.add(book1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quote1 \u003d new Quote(\"quote1\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quoteList.add(quote1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Category category \u003d new Category(\"romance\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setBookList(bookList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setQuoteList(quoteList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertEquals(\"romance\", category.getCategoryName());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertEquals(2, category.getSize());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertEquals(\"book1 by me\", category.getBookList().getBook(0).toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertEquals(\"\\\"quote1\\\"\", category.getQuoteList().getQuote(0).toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        bookList.delete(0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertEquals(1, category.getSize());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 45
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/quote/QuoteTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class QuoteTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void quoteAddTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quotes \u003d new QuoteList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Author author \u003d new Author(\"Gill Bates\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Quote quote \u003d new Quote(\"It was the butler\", \"Herlock Shomles\", author);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.add(quote);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assertEquals(quote, quotes.getQuote(0));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 15,
      "dozenmatter": 2
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/rating/RatingTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class RatingTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private RatingList ratings;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private BookList books;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private Book book;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ListManager.initialiseAllLists();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ui \u003d new TextUi();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        storage \u003d new Storage(\"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String title \u003d \"Harry Potter\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String name \u003d \"JK Rowling\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Author author \u003d new Author(name);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        book \u003d new Book(author, title);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        books.add(book);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void addRating_validRatingScore_ratingAdded() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String ratingValue \u003d \"3\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d RatingParser.checkValidityOfRatingScore(ratingValue);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(ratingScore, 3);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating rating \u003d new Rating(book, ratingScore);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.add(rating);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(ratings.toString(), \"[Harry Potter] by JK Rowling: 3 star\" + System.lineSeparator());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void addRating_invalidRatingScore_throwsQuotesifyException() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String ratingValue \u003d \"6\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String secondRatingValue \u003d \"-1\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String thirdRatingValue \u003d \"a string\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(RatingParser.checkValidityOfRatingScore(ratingValue), 0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(RatingParser.checkValidityOfRatingScore(secondRatingValue), 0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(RatingParser.checkValidityOfRatingScore(thirdRatingValue), 0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void checkForUserInput_emptyInput_throwsQuotesifyException() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String information \u003d \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertTrue(RatingParser.checkUserInput(information));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void checkForUserInput_validInput_success() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String informationForAddDeleteEdit \u003d \"3 1\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String secondInformationForFind \u003d \"POT\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String thirdInformationForList \u003d \"5\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertFalse(RatingParser.checkUserInput(informationForAddDeleteEdit));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertFalse(RatingParser.checkUserInput(secondInformationForFind));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertFalse(RatingParser.checkUserInput(thirdInformationForList));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void checkBookExists_invalidBook_throwsQuotesifyException() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String bookNumber \u003d \"2\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Book bookToRate \u003d RatingParser.checkBookExists(bookNumber);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertNull(bookToRate);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void checkBookExists_validBook_throwsQuotesifyException() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String bookNumber \u003d \"1\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Book bookToRate \u003d RatingParser.checkBookExists(bookNumber);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertNotNull(bookToRate);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void deleteRating_validBook_ratingDeleted() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        book.setRating(0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(book.getRating(), 0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(ratings.getList().size(), 0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void listRatings_emptyList_success() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(ratings.toString(), \"\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 1,
      "yuen-sihao": 101
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/todo/ToDoTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String taskName \u003d \"read Chapter 2\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String deadline \u003d \"Tuesday night\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo toDo \u003d new ToDo(taskName, deadline);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        assertEquals(\"[x] read Chapter 2 (by: Tuesday night)\", toDo.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 14,
      "dozenmatter": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "helloooo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -b book1 /by me"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -q quote1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -c action -b 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -c motivational -q 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -c nice -b 1 -q 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "delete -c action -b 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c action"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "delete -c motivational -q 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c motivational"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c nice"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "add -r 3 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "list -r"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "edit -r 5 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "list -r 3"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "list -r 5"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "find -r oo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "delete -r 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "delete -b 1"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "dozenmatter": 11,
      "chloesyy": 1,
      "yuen-sihao": 7
    }
  }
]
