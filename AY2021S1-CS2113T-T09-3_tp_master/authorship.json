[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    mainClassName \u003d \"seedu.quotesify.Quotesify\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    archiveBaseName \u003d \"quotesify\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        attributes \"Main-Class\": \"seedu.quotesify.Quotesify\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    from {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "dozenmatter": 13,
      "-": 45
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chin Heng | [Github](https://github.com/dozenmatter) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Si Hao | [Github](https://github.com/yuen-sihao) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nathaniel | [Github](https://github.com/nat-ho) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chloe | [Github](https://github.com/chloesyy) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yilun | [Github](https://github.com/lunzard) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 5,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Design \u0026 implementation"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Product scope"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* reads a lot"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* has difficulty remembering content after reading them"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* prefers typing over other means of input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* prefers using desktop applications"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* comfortable with using Command Line Interface (CLI) applications"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Improves the reading experience of users with quick and easy features"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "## User Stories"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|Version| As a ... | I want to ... | So that I ...|"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v1.0|user|give rating for the books I read|can recommend book titles to others when asked|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "|v2.0|user after some time|find a book rating by its book title|do not have to go through the whole list|"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "## Non-Functional Requirements"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Should work on major Operating Systems (OS) such as Windows and Mac with at least `Java 11` installed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "## Glossary"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "* *glossary item* - Definition"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for manual testing"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Launch and shutdown"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Adding a book rating"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Prerequisite: Book to be rated should exist in Quotesify."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Test case: `add -r 5 Harry Potter`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Rating is added to the book. A message will be prompted to indicate rating has been added successfully."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3. Other incorrect commands to try:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `add -r`: rating score and/or book title fields left empty"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `add -r 1000 Harry Potter`: rating score is out of the range"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `add -r 3 x`: where x is a book that does not exist"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is added. A message with error details will be prompted."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Listing all existing book ratings"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `list -r`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: The entire list of books and their ratings will be shown. Rating of books are sorted"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   in descending order, with the highest rating at the top."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Listing books of a specific book rating"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `list -r 5`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: The list of books with the specified rating will be shown."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `list -r 1000`: rating score is out of the range"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `list -r AAA`: invalid rating score"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is listed. A message with error details will be prompted."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Deleting a book rating"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `delete -r Harry Potter`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Rating is deleted from book. A message will be prompted to indicate rating has "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   been deleted successfully."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `delete -r`: book title field left empty"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `delete -r x`: where x is a book that has not been rated"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is deleted. A message with error details will be prompted."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Editing a book rating"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `edit -r 4 Harry Potter`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: Rating is edited to the new rating. A message will be prompted to indicate rating has"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   been edited successfully."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `edit -r 1000 Harry Potter`: rating score is out of the range"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `edit -r 3 x`: where x is a book that has not been rated"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is edited. A message with error details will be prompted."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Finding a book rating"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Test case: `find -r Harry Potter`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: The rating for book titled \"Harry Potter\" will be shown."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Other incorrect commands to try:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `find -r`: book title field left empty"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   * `find -r x`: where x is a book that has not been rated"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "   Expected: No rating is found and listed. A message with error details will be prompted."
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 86,
      "-": 27
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "# Quotesify"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is a free desktop application to help you in your reading activities. With Quotesify, you can add "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "books and the related quotes that you wish to remember. You can categorize your books and quotes by author,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "customized categories, and even rate your books. Quotesify also comes with a progress tracker just to improve"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "your reading experience."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is available for download on all major operating systems such as Windows and Mac."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 7,
      "-": 6
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is a free desktop application to help you in your reading activities. With Quotesify, you can add "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "books and the related quotes that you wish to remember. You can categorize your books and quotes by author,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "customized categories, and even rate your books. Quotesify also comes with a progress tracker just to improve"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "your reading experience."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify is available for download on all major operating systems such as Windows and Mac."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Before you begin, here\u0027s what you need to do:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "1. Ensure you have at least `Java 11` installed on your system."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "2. Download the latest **Quotesify JAR file** from [here](https://github.com/AY2021S1-CS2113T-T09-3/tp/releases)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "3. Open your command line or terminal and navigate into the file directory where you saved the application."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "4. Run `java -jar Quotesify.jar` to launch Quotesify."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "5. Type a command in the command line and press `ENTER` to execute it."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "6. Refer to Features below for details of each command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "{Give detailed description of each feature}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Rating System"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Are you having your own opinions about the books you read? You might want to record down your favorites,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "so that you can recommend the best books to your friends and fellow book readers."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Adding a book rating: `add -r`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Adds a rating to a book."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `add -r RATING_SCORE BOOK_TITLE`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* The book you would like to rate should exist in Quotesify."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` should be within the range of ONE (1) to FIVE (5)."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Both `RATING_SCORE` and `BOOK_TITLE` fields cannot be left empty."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`add -r 5 Harry Potter`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Listing book ratings: `list -r`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Lists ratings of books."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `list -r [RATING_SCORE]`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` is **optional**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` should be within the range of ONE (1) to FIVE (5)."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `list -r`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `list -r 5`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Deleting a book rating: `delete -r`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Deletes a rating from a book."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `delete -r [BOOK_TITLE]`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `BOOK_TITLE` field cannot be left empty."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`delete -r Harry Potter`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Editing an existing book rating: `edit -r`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Edits a rating of a book."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `edit -r RATING_SCORE BOOK_TITLE`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `RATING_SCORE` should be within the range of ONE (1) to FIVE (5)."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Both `RATING_SCORE` and `BOOK_TITLE` fields cannot be left empty."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`edit -r 5 Harry Potter`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "#### Finding an existing book rating: `find -r`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Finds a rating of a book."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `find -r BOOK_TITLE`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* `BOOK_TITLE` field cannot be left empty."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`find -r Harry Potter`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "### Getting help in Quotesify"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Forgotten the commands to get things done? You will not be left feeling lost."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Quotesify got you covered with the Help page."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Example: `help`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "Enter the following command | To do this"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "--------------------------- | -----------"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`add -r RATING_SCORE BOOK_TITLE` | Add rating"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`delete -r BOOK_TITLE` | Delete rating"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`list -r [/RATING_SCORE]` | List ratings"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`edit -r RATING_SCORE BOOK_TITLE` | Edit rating"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`find -r BOOK_TITLE` | Find rating"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`help` | Show help page"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "`bye` | Terminate the program"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "* Words in [] are **OPTIONAL**, and words in **CAPS** are your own input"
      }
    ],
    "authorContributionMap": {
      "yuen-sihao": 91,
      "-": 27
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/Quotesify.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Quotesify {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private BookList books;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private QuoteList quotes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private CategoryList categories;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private RatingList ratings;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private ToDoList toDos;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private final Logger logger \u003d Logger.getLogger(\"QuotesifyLogger\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private final String saveFileLocation \u003d \"/data/quotesify.json\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Quotesify() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui \u003d new TextUi();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        books \u003d new BookList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories \u003d new CategoryList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes \u003d new QuoteList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings \u003d new RatingList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        toDos \u003d new ToDoList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        setupLogger();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ListManager.addToList(ListManager.BOOK_LIST, books);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ListManager.addToList(ListManager.QUOTE_LIST, quotes);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ListManager.addToList(ListManager.CATEGORY_LIST, categories);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ListManager.addToList(ListManager.RATING_LIST, ratings);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ListManager.addToList(ListManager.TODO_LIST, toDos);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ListManager.addToList(ListManager.BOOKMARK_LIST, bookmarks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Storage.initialiseSaveFile(saveFileLocation);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Storage.load();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        //Print random quote - After storage implementation"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ui.printRandomQuote();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void runLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String userCommandText \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Command command \u003d new Parser().parseUserCommand(userCommandText);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ui.printInvalidQuotesifyCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            command.execute(ui);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        runLoopUntilExitCommand();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        new Quotesify().run();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void setupLogger() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        logger.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            FileHandler fileHandler \u003d new FileHandler(\"quotesify.log\", true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            // remove this if you want to view logs in XML format"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            logger.addHandler(fileHandler);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 4,
      "nat-ho": 33,
      "dozenmatter": 54,
      "chloesyy": 2,
      "yuen-sihao": 3,
      "-": 7
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/author/Author.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.author;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Author implements JsonSerializer {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Author(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"name\", this.getName());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return json;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 27
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/book/Book.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Book implements JsonSerializer {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Author author;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Book(Author author, String title) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Book(Author author, String title, ArrayList\u003cString\u003e category) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.categories \u003d category;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Author getAuthor() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setAuthor(Author author) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ArrayList\u003cString\u003e getCategories() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return categories;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setCategories(ArrayList\u003cString\u003e categories) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (categories !\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return title + \" by \" + author.getName(); // removed display of category"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return title + \" by \" + author.getName();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject details \u003d new JSONObject();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"author\", this.getAuthor().toJson());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"title\", this.getTitle());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"categories\", this.getCategories());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 59,
      "chloesyy": 7
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/book/BookList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class BookList extends QuotesifyList\u003cBook\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cBook\u003e books \u003d super.getList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList(ArrayList\u003cBook\u003e books) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(books);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void add(Book newBook) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        books.add(newBook);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        books.remove(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void deleteByBook(Book book) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        books.remove(book);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return books.isEmpty();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public int getIndex(Book book) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return books.indexOf(book);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Book getBook(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return books.get(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String booksToReturn \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            booksToReturn +\u003d book.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return booksToReturn;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String toStringWithIndex() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String booksToReturn \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            booksToReturn +\u003d getIndex(book) + 1 + \". \" + book.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return booksToReturn;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public ArrayList\u003cBook\u003e find(String title, String authorName) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        assert !title.isEmpty() || !authorName.isEmpty();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseTitle \u003d title.toLowerCase();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseAuthor \u003d authorName.toLowerCase();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .filter(book -\u003e {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    Author bookAuthor \u003d book.getAuthor();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    String bookAuthorName \u003d bookAuthor.getName();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    String bookTitle \u003d book.getTitle();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    return bookAuthorName.toLowerCase().equals(lowerCaseAuthor)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                            \u0026\u0026 bookTitle.toLowerCase().equals(lowerCaseTitle);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return filteredBooks;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Book findByTitle(String title) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        assert !title.isEmpty();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseTitle \u003d title.toLowerCase();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (book.getTitle().toLowerCase().equals(lowerCaseTitle)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                return book;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Book findByNum(int num) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d num - 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (num \u003c\u003d books.size()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return books.get(index);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public BookList filterByAuthor(String authorName) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String lowerCaseAuthor \u003d authorName.toLowerCase();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .filter(book -\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    Author bookAuthor \u003d book.getAuthor();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    String bookAuthorName \u003d bookAuthor.getName();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                    return bookAuthorName.toLowerCase().equals(lowerCaseAuthor);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return new BookList(filteredBooks);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public BookList filterByCategory(String categoryName) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cBook\u003e filteredBooks \u003d (ArrayList\u003cBook\u003e) books.stream()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .filter(book -\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    ArrayList\u003cString\u003e categories \u003d book.getCategories();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    return categories.contains(categoryName);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new BookList(filteredBooks);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Book book : books) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(book.toJson());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 19,
      "dozenmatter": 41,
      "chloesyy": 74
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/bookmark/Bookmark.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Bookmark implements JsonSerializer {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Book book;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private int pageNum;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Bookmark(Book book, int pageNum) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.book \u003d book;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.pageNum \u003d pageNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Book getBook() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return book;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setBook(Book book) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.book \u003d book;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public int getPageNum() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return pageNum;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setPageNum(int pageNum) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.pageNum \u003d pageNum;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return \"\\\"\" + book.getTitle() + \"\\\"\" + \" at page: \" + Integer.toString(pageNum);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject details \u003d new JSONObject();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"book\", this.getBook().toJson());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"pageNum\", this.pageNum);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 5,
      "dozenmatter": 39
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/bookmark/BookmarkList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class BookmarkList extends QuotesifyList\u003cBookmark\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private ArrayList\u003cBookmark\u003e bookmarks \u003d super.getList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public BookmarkList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public BookmarkList(ArrayList\u003cBookmark\u003e bookmarks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(bookmarks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void add(Bookmark newBookmark) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.add(newBookmark);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark find(Book book) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (Bookmark bookmark : bookmarks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (bookmark.getBook().equals(book)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                return bookmark;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookmarks.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void delete(Bookmark bookmark) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.remove(bookmark);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String bookmarksToReturn \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (Bookmark bookmark: bookmarks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarksToReturn +\u003d bookmark.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookmarksToReturn;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Bookmark bookmark : bookmarks) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(bookmark.toJson());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 48,
      "dozenmatter": 18
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/category/Category.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Category implements JsonSerializer {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private BookList bookList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private QuoteList quoteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private int size;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Category(String category) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        bookList \u003d new BookList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        quoteList \u003d new QuoteList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        size \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getCategoryName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setCategoryName(String category) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return bookList.getList().size() + quoteList.getList().size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setSize(int size) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.size \u003d size;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public BookList getBookList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return bookList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setBookList(BookList books) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.bookList \u003d books;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuoteList getQuoteList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return quoteList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setQuoteList(QuoteList quoteList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quoteList \u003d quoteList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return String.format(\"%s - (%d items)\", getCategoryName(), getSize());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject details \u003d new JSONObject();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        details.put(\"category\", this.getCategoryName());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 64
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/category/CategoryList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryList extends QuotesifyList\u003cCategory\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cCategory\u003e categories \u003d super.getList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public CategoryList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public CategoryList(ArrayList\u003cCategory\u003e categories) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(categories);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExistingCategory(String name) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (category.getCategoryName().equals(name)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Category getCategoryByName(String name) throws QuotesifyException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (category.getCategoryName().equals(name)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                return category;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        throw new QuotesifyException(\"Category [\" + name + \"] does not exist!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void updateListsInAllCategories() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            category.setBookList(bookList.filterByCategory(category.getCategoryName()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            category.setQuoteList(quoteList.filterByCategory(category.getCategoryName()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void updateListInCategory(Category category) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setBookList(bookList.filterByCategory(category.getCategoryName()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setQuoteList(quoteList.filterByCategory(category.getCategoryName()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void add(Category category) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories.add(category);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories.remove(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list +\u003d String.format(\"%d. %s\\n\", ++index, category.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(category.toJson());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 88
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/category/CategoryParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String TAG_BOOK \u003d \"-b\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String TAG_QUOTE \u003d \"-q\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String ERROR_MISSING_CATEGORY \u003d \"Missing category name\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String ERROR_MISSING_BOOK_OR_QUOTE \u003d \"Please specify a book title or quote number!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String ERROR_MISSING_EDIT_PARAMS \u003d \"Please specify both an existing and a new category name!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static Stack\u003cString\u003e convertStringArrayToStack(String[] tokens) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Stack\u003cString\u003e parameters \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (String token : tokens) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            parameters.push(token);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return parameters;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static String[] getRequiredParameters(String[] tokens) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String categories;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String bookTitle \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String quoteNum \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Stack\u003cString\u003e parameters \u003d convertStringArrayToStack(tokens);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String line \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        while (!parameters.empty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String item \u003d parameters.pop();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (item.equals(TAG_BOOK)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                bookTitle \u003d line.trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                line \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            } else if (item.equals(TAG_QUOTE)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                quoteNum \u003d line.trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                line \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            line \u003d item + \" \" + line;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories \u003d line.trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new String[]{categories, bookTitle, quoteNum};"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static boolean isValidParameters(String[] parameters) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String categoryName \u003d parameters[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String bookNum \u003d parameters[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String quoteNum \u003d parameters[2];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (categoryName.isEmpty()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(ERROR_MISSING_CATEGORY);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (quoteNum.isEmpty() \u0026\u0026 bookNum.isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(ERROR_MISSING_BOOK_OR_QUOTE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static String[] getEditParameters(String information) throws QuotesifyException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String[] oldAndNewCategory \u003d information.split(\" \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new String[]{oldAndNewCategory[0], oldAndNewCategory[1]};"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_EDIT_PARAMS);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static List\u003cString\u003e parseCategoriesToList(String categories) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return Arrays.asList(categories.split(\" \"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 79
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingParser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static Logger addLogger \u003d Logger.getLogger(\"QuotesifyLogger\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public AddCommand(String arguments) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            addLogger.log(Level.INFO, \"going to add book to booklist\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            addBook(books, ui);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            addLogger.log(Level.INFO, \"added book to booklist\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            addLogger.log(Level.INFO, \"going to add quote to quote list\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            QuoteList quotes \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            addQuote(quotes, ui);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.INFO, \"going to add category to book/quote\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            CategoryList categories \u003d (CategoryList) ListManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addCategoryToBookOrQuote(categories, ui);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.INFO, \"going to add rating to book\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addRating(ratings, ui);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            addLogger.log(Level.INFO, \"rating of book has completed\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ToDoList toDos \u003d (ToDoList) ListManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ToDo newToDo \u003d addToDo(toDos, ui);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printAddToDo(newToDo);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printListOfAddComnmands();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Storage.save();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void addBook(BookList books, TextUi ui) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String[] titleAndAuthor \u003d information.split(Command.FLAG_AUTHOR, 2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // if user did not provide author, let titleAndAuthor[1] be empty string"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (titleAndAuthor.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                titleAndAuthor \u003d new String[]{titleAndAuthor[0], \"\"};"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String title \u003d titleAndAuthor[0].trim();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String authorName \u003d titleAndAuthor[1].trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (authorName.isEmpty()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_AUTHOR_NAME);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ensureNoSimilarBooks(books, title, authorName);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Book newBook \u003d createNewBook(title, authorName);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            books.add(newBook);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printAddBook(newBook);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            addLogger.log(Level.INFO, \"add book to booklist failed\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void ensureNoSimilarBooks(BookList books, String title, String authorName) throws QuotesifyException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cBook\u003e similarBooks \u003d books.find(title, authorName);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (!similarBooks.isEmpty()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(ERROR_BOOK_ALREADY_EXISTS);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Book createNewBook(String title, String authorName) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Author author \u003d new Author(authorName);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Book newBook \u003d new Book(author, title);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return newBook;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void addQuote(QuoteList quotes, TextUi ui) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Quote quote \u003d QuoteParser.parseAddParameters(information);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quotes.add(quote);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printAllQuotes(quotes);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            addLogger.log(Level.INFO, \"add quote to quote list success\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            addLogger.log(Level.INFO, \"add quote to quote list failed\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            addLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToBookOrQuote(CategoryList categories, TextUi ui) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] tokens \u003d information.split(\" \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] parameters \u003d CategoryParser.getRequiredParameters(tokens);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (CategoryParser.isValidParameters(parameters)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            executeParameters(categories, parameters, ui);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void executeParameters(CategoryList categoryList, String[] parameters, TextUi ui) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String categoryNames \u003d parameters[0];"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            assert !categoryNames.isEmpty() : \"category name should not be empty\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            List\u003cString\u003e categories \u003d CategoryParser.parseCategoriesToList(categoryNames);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (String categoryName : categories) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                addCategoryToList(categoryList, categoryName);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                Category category \u003d categoryList.getCategoryByName(categoryName);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String bookNum \u003d parameters[1];"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String quoteNum \u003d parameters[2];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                addCategoryToBook(category, bookNum, ui);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                addCategoryToQuote(category, quoteNum, ui);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                categoryList.updateListInCategory(category);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToList(CategoryList categories, String categoryName) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (!categories.isExistingCategory(categoryName)) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            categories.add(new Category(categoryName));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToBook(Category category, String bookNum, TextUi ui) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // ignore this action if user did not provide book title"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (bookNum.isEmpty()) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int bookIndex \u003d Integer.parseInt(bookNum) - 1;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Book book \u003d bookList.getBook(bookIndex);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            book.getCategories().add(category.getCategoryName());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printAddCategoryToBook(book.getTitle(), category.getCategoryName());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.INFO, \"add category to book success\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.WARNING, ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.WARNING, ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addCategoryToQuote(Category category, String index, TextUi ui) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // ignore this action if user did not provide quote number"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (index.isEmpty()) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cQuote\u003e quotes \u003d quoteList.getList();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int quoteNum \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Quote quote \u003d quotes.get(quoteNum);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            quote.getCategories().add(category.getCategoryName());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printAddCategoryToQuote(quote.getQuote(), category.getCategoryName());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.INFO, \"add category to quote success\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.WARNING, ERROR_NO_QUOTE_FOUND);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_QUOTE_FOUND);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            addLogger.log(Level.WARNING, ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void addRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] ratingDetails;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String titleOfBookToRate;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingDetails \u003d information.split(\" \", 2);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            titleOfBookToRate \u003d ratingDetails[1].trim();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_MISSING_BOOK_TITLE_OR_RATING_SCORE);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d RatingParser.checkValidityOfRatingScore(ratingDetails[0]);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isValid \u003d ((ratingScore !\u003d 0) \u0026\u0026 (!isRated(ratings, titleOfBookToRate))"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                \u0026\u0026 isExistingBook(titleOfBookToRate));"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (isValid) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratings.add(new Rating(ratingScore, titleOfBookToRate));"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printAddRatingToBook(ratingScore, titleOfBookToRate);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private boolean isExistingBook(String titleOfBookToRate) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ArrayList\u003cBook\u003e existingBooks \u003d bookList.getList();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Book existingBook : existingBooks) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (existingBook.getTitle().equals(titleOfBookToRate)) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                isFound \u003d true;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (!isFound) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            addLogger.log(Level.INFO, \"book does not exist\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_BOOK_TO_RATE_NOT_FOUND);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return isFound;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private boolean isRated(RatingList ratings, String titleOfBookToRate) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isRated \u003d false;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitleOfRatedBook().equals(titleOfBookToRate)) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                isRated \u003d true;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (isRated) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            addLogger.log(Level.INFO, \"book has been rated\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_EXIST);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private ToDo addToDo(ToDoList toDos, TextUi ui) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] taskNameAndDeadline \u003d information.split(\"/by\", 2);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo newToDo \u003d null;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            // if user did not provide deadline, let titleAndAuthor[1] be \"not specified\""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (taskNameAndDeadline.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                taskNameAndDeadline \u003d new String[]{taskNameAndDeadline[0], \"not specified\"};"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (taskNameAndDeadline[0].isEmpty()) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_TASK_NAME);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String taskName \u003d taskNameAndDeadline[0].trim();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            assert !taskName.isEmpty() : \"task name should not be empty\";"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String deadline \u003d taskNameAndDeadline[1].trim();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            assert !deadline.isEmpty() : \"deadline should not be empty\";"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            newToDo \u003d new ToDo(taskName, deadline);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            toDos.add(newToDo);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addLogger.log(Level.INFO, \"add toDo to toDoList failed\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return newToDo;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 31,
      "nat-ho": 19,
      "dozenmatter": 127,
      "chloesyy": 62,
      "yuen-sihao": 64
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/BookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class BookmarkCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static Logger addLogger \u003d Logger.getLogger(\"QuotesifyLogger\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public BookmarkCommand(String arguments) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            BookmarkList bookmarks \u003d (BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            handleBookmark(books, bookmarks, ui);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_NUMBER:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarks \u003d (BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            handleBookmarkByNumber(books, bookmarks, ui);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_TAG);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Storage.save();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void handleBookmark(BookList books, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] titleAndPage \u003d information.split(\"/pg\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (titleAndPage.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_PAGE_NUM);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String title \u003d titleAndPage[0].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String page \u003d titleAndPage[1].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            Book bookToMark \u003d books.findByTitle(title);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (bookToMark !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                addBookmarkToBook(bookToMark, bookmarks, page, ui);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                System.out.println(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_PAGE_NUM);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addLogger.log(Level.INFO, \"add bookmark to bookmarkList failed\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void handleBookmarkByNumber(BookList books, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] numberAndPage \u003d information.split(\"/pg\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (numberAndPage.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                throw new QuotesifyException(ERROR_NO_PAGE_NUM);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String bookNumber \u003d numberAndPage[0].trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String page \u003d numberAndPage[1].trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            int number \u003d convertBookNumToInt(bookNumber);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            Book bookToMark \u003d books.findByNum(number);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (bookToMark !\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                addBookmarkToBook(bookToMark, bookmarks, page, ui);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                System.out.println(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_PAGE_NUM);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addLogger.log(Level.INFO, \"add bookmark to bookmarkList failed\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void addBookmarkToBook(Book book, BookmarkList bookmarks, String page, TextUi ui) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark bookmarkToAdd \u003d null;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int pageNum \u003d computePageNum(page);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarkToAdd \u003d bookmarks.find(book);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkToAdd \u003d\u003d null \u0026\u0026 pageNum \u003e -1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarkToAdd \u003d createNewBookmark(bookmarks, book, pageNum);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printAddBookmark(bookmarkToAdd);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else if (bookmarkToAdd !\u003d null \u0026\u0026 pageNum \u003e -1) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarkToAdd \u003d updateExistingBookmark(bookmarkToAdd, pageNum);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printUpdateBookmark(bookmarkToAdd);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addLogger.log(Level.INFO, \"add bookmark to bookmarkList failed\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark createNewBookmark(BookmarkList bookmarks, Book book, int pageNum) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark newBookmark \u003d new Bookmark(book, pageNum);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmarks.add(newBookmark);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return newBookmark;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Bookmark updateExistingBookmark(Bookmark bookmark, int pageNum) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        bookmark.setPageNum(pageNum);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookmark;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int computePageNum(String information) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int pageNum \u003d -1;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            pageNum \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_PAGE_NUM);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return pageNum;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int convertBookNumToInt(String information) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int bookNum \u003d -1;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookNum \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return bookNum;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 140,
      "dozenmatter": 13
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_BOOK \u003d \"-b\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_QUOTE \u003d \"-q\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_RATING \u003d \"-r\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TAG_CATEGORY \u003d \"-c\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String TAG_TODO \u003d \"-t\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String TAG_BOOKMARK \u003d \"-bm\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String TAG_NUMBER \u003d \"-n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_INVALID_BOOK_NUM \u003d \"Invalid book number specified!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_INVALID_QUOTE_NUM \u003d \"Invalid quote number specified!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_INVALID_TODO_NUM \u003d \"Invalid task number specified!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_INVALID_PAGE_NUM \u003d \"Invalid page number specified!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_INVALID_TAG \u003d \"Invalid / No tag provided\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_BOOK_FOUND \u003d \"There is no such book!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_BOOK_TITLE_MISSING \u003d \"There is no book title specified!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_BOOK_ALREADY_EXISTS \u003d \"The book already exists!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_NO_QUOTE_FOUND \u003d \"There is no such quote!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_BOOKS_IN_LIST \u003d \"There are no books in the list!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_BOOKS_BY_AUTHOR \u003d \"There are no books by this author!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String LIST_SPECIFIED_RATING_NOT_FOUND_MESSAGE \u003d \"I can\u0027t find any books rated %d star!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String ERROR_NO_AUTHOR_NAME \u003d \"Please type in the author name.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_NO_PAGE_NUM \u003d \"There is no page number provided!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_NO_TASK_NAME \u003d \"There is no task name provided!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_RATING_EXIST \u003d \"This book has already been rated!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_BOOK_TO_RATE_NOT_FOUND \u003d \"I can\u0027t find this book to rate!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_RATING_NOT_FOUND \u003d \"I can\u0027t find ratings for this book!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_RATING_MISSING_BOOK_TITLE_OR_RATING_SCORE"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            \u003d \"Both book title and rating score cannot be empty.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_RATING_MISSING_BOOK_TITLE \u003d \"Book title cannot be empty.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_TODO_NOT_FOUND \u003d \"There is no such task!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String ERROR_BOOKMARK_NOT_FOUND \u003d \"There is no such bookmark!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ERROR_LIST_UNKNOWN_COMMAND \u003d \"I do not understand that command. Try again\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_AUTHOR \u003d \"/by\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_REFERENCE \u003d \"/from\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FLAG_DELIMITER \u003d \"/\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static final String FLAG_EDIT \u003d \"/to\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String REFERENCE_KEYWORD \u003d \"reference\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String AUTHORNAME_KEYWORD \u003d \"authorName\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract void execute(TextUi ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 10,
      "nat-ho": 7,
      "dozenmatter": 16,
      "chloesyy": 9,
      "yuen-sihao": 8
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public DeleteCommand(String arguments) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            CategoryList categories \u003d (CategoryList) ListManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            deleteCategoryFromBookOrQuote(categories, ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            deleteBook(books, ui);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            deleteRating(ratings, ui);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ToDoList toDos \u003d (ToDoList) ListManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            int index \u003d computeToDoIndex(information.trim());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            deleteToDo(toDos, index, ui);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_BOOKMARK:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            BookmarkList bookmarks \u003d (BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            String title \u003d information.trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            deleteBookmark(bookList, bookmarks, title, ui);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            QuoteList quotes \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            deleteQuote(quotes, ui, information);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printListOfDeleteCommands();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Storage.save();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void deleteQuote(QuoteList quotes, TextUi ui, String information) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int quoteNumber \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Quote quoteToBeDeleted \u003d quotes.getQuote(quoteNumber);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quotes.delete(quoteNumber);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printDeleteQuote(quoteToBeDeleted.getQuote());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void deleteRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String bookTitle \u003d information.trim();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (bookTitle.isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_MISSING_BOOK_TITLE);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating ratingToBeDeleted \u003d null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitleOfRatedBook().equals(bookTitle)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ratingToBeDeleted \u003d rating;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratingToBeDeleted \u003d\u003d null) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_NOT_FOUND);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.delete(ratings.getList().indexOf(ratingToBeDeleted));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ui.printDeleteRating(bookTitle);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteBook(BookList books, TextUi ui) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            int bookIndex \u003d Integer.parseInt(information.trim()) - 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Book book \u003d books.getBook(bookIndex);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String bookTitle \u003d book.getTitle();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // clear bookmarks before deleting the entire book."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            BookmarkList bookmarks \u003d (BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            clearBookmark(books, bookmarks, bookTitle, ui);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // delete ratings before deleting the entire book."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            Rating ratingToBeDeleted;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                if (rating.getTitleOfRatedBook().equals(bookTitle)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                    ratingToBeDeleted \u003d rating;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                    ratings.delete(ratings.getList().indexOf(ratingToBeDeleted));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            books.delete(bookIndex);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printDeleteBook(book);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteCategoryFromBookOrQuote(CategoryList categories, TextUi ui) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] tokens \u003d information.split(\" \");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] parameters \u003d CategoryParser.getRequiredParameters(tokens);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (CategoryParser.isValidParameters(parameters)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            executeParameters(categories, parameters, ui);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void executeParameters(CategoryList categoryList, String[] parameters, TextUi ui) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String categoryNames \u003d parameters[0];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            assert !categoryNames.isEmpty() : \"category name should not be empty\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            List\u003cString\u003e categories \u003d CategoryParser.parseCategoriesToList(categoryNames);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (String categoryName : categories) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                Category category \u003d categoryList.getCategoryByName(categoryName);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String bookTitle \u003d parameters[1];"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                String quoteNum \u003d parameters[2];"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                deleteCategoryFromBook(category, bookTitle, ui);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                deleteCategoryFromQuote(category, quoteNum, ui);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                categoryList.updateListInCategory(category);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteCategoryFromBook(Category category, String bookTitle, TextUi ui) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // ignore this action if user did not provide book title"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (bookTitle.isEmpty()) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d category.getBookList();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int bookNum \u003d Integer.parseInt(bookTitle) - 1;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Book book \u003d bookList.getBook(bookNum);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cString\u003e categories \u003d book.getCategories();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            categories.remove(category.getCategoryName());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printRemoveCategoryFromBook(book.getTitle(), category.getCategoryName());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_BOOK_FOUND + \"\\b tagged as [\" + category.getCategoryName() + \"]!\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void deleteCategoryFromQuote(Category category, String index, TextUi ui) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // ignore this action if user did not provide quote number"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (index.isEmpty()) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d category.getQuoteList();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cQuote\u003e quotes \u003d quoteList.getList();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            int quoteNum \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Quote quote \u003d quotes.get(quoteNum);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cString\u003e categories \u003d quote.getCategories();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            categories.remove(category.getCategoryName());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printRemoveCategoryFromQuote(quote.getQuote(), category.getCategoryName());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_QUOTE_FOUND + \"\\b tagged as [\" + category.getCategoryName() + \"]!\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_QUOTE_NUM);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void deleteToDo(ToDoList toDos, int index, TextUi ui) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo toDoToBeDeleted \u003d toDos.find(index);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (toDoToBeDeleted !\u003d null) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            toDos.delete(index);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDeleteToDo(toDoToBeDeleted);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_TODO_NOT_FOUND);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int computeToDoIndex(String information) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            index \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_TODO_NUM);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void deleteBookmark(BookList books, BookmarkList bookmarks, String titleName, TextUi ui) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Book targetBook \u003d books.findByTitle(titleName);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (targetBook !\u003d null) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            removeBookmarkFromBook(targetBook, bookmarks, ui);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_NO_BOOK_FOUND);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void removeBookmarkFromBook(Book targetBook, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark bookmarkToBeDeleted \u003d bookmarks.find(targetBook);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkToBeDeleted !\u003d null) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarks.delete(bookmarkToBeDeleted);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDeleteBookmark(bookmarkToBeDeleted);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_BOOKMARK_NOT_FOUND);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void clearBookmark(BookList books, BookmarkList bookmarks, String titleName, TextUi ui) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Book targetBook \u003d books.findByTitle(titleName);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (targetBook !\u003d null) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            clearBookmarkFromDeletedBook(targetBook, bookmarks, ui);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void clearBookmarkFromDeletedBook(Book targetBook, BookmarkList bookmarks, TextUi ui) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Bookmark bookmarkToBeDeleted \u003d bookmarks.find(targetBook);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkToBeDeleted !\u003d null) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            bookmarks.delete(bookmarkToBeDeleted);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 67,
      "nat-ho": 13,
      "dozenmatter": 136,
      "chloesyy": 18,
      "yuen-sihao": 37
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/DoneCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public DoneCommand(String arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ToDoList toDos \u003d (ToDoList) ListManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            int index \u003d computeToDoIndex(information.trim());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            doneToDo(toDos,index,ui);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printDoneCommandUsage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Storage.save();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void doneToDo(ToDoList toDos, int index, TextUi ui) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo targetTask \u003d toDos.find(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (targetTask !\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            targetTask.setDone(true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            ui.printDoneToDo(targetTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_TODO_NOT_FOUND);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private int computeToDoIndex(String information) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            index \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(ERROR_INVALID_TODO_NUM);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 53,
      "dozenmatter": 10
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/EditCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import org.w3c.dom.Text;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public EditCommand(String arguments) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void execute(TextUi ui) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            editRating(ratings, ui);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            BookList books \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            editBook(books, ui);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            CategoryList categoryList \u003d (CategoryList) ListManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            editCategory(categoryList, ui);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printListOfEditCommands();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Storage.save();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void editBook(BookList books, TextUi ui) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String[] bookDetails \u003d information.split(FLAG_EDIT, 2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (bookDetails.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                bookDetails \u003d new String[]{bookDetails[0], \"\"};"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            int bookIndex \u003d Integer.parseInt(bookDetails[0].trim()) - 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String newTitle \u003d bookDetails[1].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (newTitle.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                throw new QuotesifyException(ERROR_BOOK_TITLE_MISSING);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Book book \u003d books.getBook(bookIndex);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String oldTitle \u003d book.getTitle();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            // check if book has ratings before editing the title."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            int currentRatingOfBook \u003d 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                if (rating.getTitleOfRatedBook().equals(oldTitle)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                    currentRatingOfBook \u003d rating.getRating();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                    ratings.delete(ratings.getList().indexOf(rating));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (currentRatingOfBook !\u003d 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ratings.add(new Rating(currentRatingOfBook, newTitle));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            book.setTitle(newTitle);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printEditBook(oldTitle, newTitle);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_INVALID_BOOK_NUM);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void editRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] ratingDetails;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String titleToUpdate;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingDetails \u003d information.split(\" \", 2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            titleToUpdate \u003d ratingDetails[1].trim();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_MISSING_BOOK_TITLE_OR_RATING_SCORE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d RatingParser.checkValidityOfRatingScore(ratingDetails[0]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isValid \u003d ((ratingScore !\u003d 0) \u0026\u0026 isRated(ratings, titleToUpdate));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (isValid) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            Rating ratingToUpdate \u003d null;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                if (rating.getTitleOfRatedBook().equals(titleToUpdate)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                    ratingToUpdate \u003d rating;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            assert ratingToUpdate !\u003d null;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingToUpdate.setRating(ratingScore);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printEditRatingToBook(ratingScore, titleToUpdate);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private boolean isRated(RatingList ratings, String titleToUpdate) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isRated \u003d false;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitleOfRatedBook().equals(titleToUpdate)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                isRated \u003d true;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (!isRated) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_NOT_FOUND);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void editCategory(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String[] oldAndNewCategories \u003d CategoryParser.getEditParameters(information);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String oldCategory \u003d oldAndNewCategories[0];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String newCategory \u003d oldAndNewCategories[1];"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            Category category \u003d categoryList.getCategoryByName(oldCategory);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (categoryList.isExistingCategory(newCategory)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                throw new QuotesifyException(\"Category [\" + newCategory + \"] already exists!\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            category.setCategoryName(newCategory);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printEditCategory(oldCategory, newCategory);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 32,
      "dozenmatter": 29,
      "yuen-sihao": 98
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Storage.save();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 15,
      "chloesyy": 1
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/FindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.store.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public FindCommand(String arguments) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void execute(TextUi ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            RatingList ratings \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            findRating(ratings, ui);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printListOfFindCommands();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Storage.save();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void findRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String ratingToFind \u003d information.trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratingToFind.isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_RATING_MISSING_BOOK_TITLE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getTitleOfRatedBook().equals(ratingToFind)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                ui.printFoundRating(rating, ratingToFind);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(ERROR_RATING_NOT_FOUND);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 4,
      "yuen-sihao": 52
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void execute(TextUi ui) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ui.printHelpPage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 2,
      "yuen-sihao": 12
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/commands/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingParser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.ui.TextUi;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String information;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ListCommand(String arguments) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] details \u003d arguments.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let details[1] be empty string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            details \u003d new String[]{details[0], \"\"};"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assert details.length \u003d\u003d 2;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        type \u003d details[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        information \u003d details[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void execute(TextUi ui) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case TAG_CATEGORY:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            CategoryList categoryList \u003d (CategoryList) ListManager.getList(ListManager.CATEGORY_LIST);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            listCategories(categoryList, ui);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case TAG_RATING:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            RatingList ratingList \u003d (RatingList) ListManager.getList(ListManager.RATING_LIST);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            listRatings(ratingList, ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_TODO:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ToDoList toDoList \u003d (ToDoList) ListManager.getList(ListManager.TODO_LIST);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            listToDos(toDoList,ui);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case TAG_BOOKMARK:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            BookmarkList bookmarkList \u003d (BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            listBookmarks(bookmarkList, ui);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case TAG_QUOTE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            QuoteList quoteListList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            listQuotes(quoteListList, ui);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case TAG_BOOK:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            listBooks(bookList, ui);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printListOfListCommands();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooks(BookList bookList, TextUi ui) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            if (information.isEmpty()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                listAllBooks(bookList, ui);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } else if (information.contains(FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                listBooksByAuthor(bookList, ui);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                throw new QuotesifyException(ERROR_LIST_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(ERROR_NO_AUTHOR_NAME);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listAllBooks(BookList bookList, TextUi ui) throws QuotesifyException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (bookList.isEmpty()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(ERROR_NO_BOOKS_IN_LIST);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printAllBooks(bookList);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private void listBooksByAuthor(BookList bookList, TextUi ui) throws QuotesifyException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String authorName \u003d information.substring(4);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        BookList filteredBooks \u003d bookList.filterByAuthor(authorName);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (filteredBooks.isEmpty()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new QuotesifyException(ERROR_NO_BOOKS_BY_AUTHOR);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printBooksByAuthor(filteredBooks, authorName);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotes(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if ((information.isEmpty())) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listAllQuotes(quoteList, ui);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (information.contains(Command.FLAG_AUTHOR) \u0026\u0026 information.contains(Command.FLAG_REFERENCE)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                information \u003d information.substring(1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                HashMap\u003cString, String\u003e referenceAndAuthorName \u003d QuoteParser.parseReferenceAndAuthor(information);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String reference \u003d referenceAndAuthorName.get(Command.REFERENCE_KEYWORD);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String authorName \u003d referenceAndAuthorName.get(Command.AUTHORNAME_KEYWORD);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listQuotesByReferenceAndAuthor(quoteList, reference, authorName, ui);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (information.contains(Command.FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String authorName \u003d QuoteParser.parseListWithAuthor(information);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listQuotesByAuthor(quoteList, authorName, ui);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else if (information.contains(Command.FLAG_REFERENCE)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String reference \u003d QuoteParser.parseListWithReference(information);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listQuotesByReference(quoteList, reference, ui);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                throw new QuotesifyException(ERROR_LIST_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotesByReferenceAndAuthor(QuoteList quoteList, String reference, String authorName, TextUi ui) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotesByReferenceAndAuthor(quoteList, reference, authorName);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listAllQuotes(QuoteList quoteList, TextUi ui) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotes(quoteList);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotesByAuthor(QuoteList quoteList, String authorName, TextUi ui) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotesByAuthor(quoteList, authorName);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private void listQuotesByReference(QuoteList quoteList, String reference, TextUi ui) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAllQuotesByReference(quoteList, reference);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void listRatings(RatingList ratingList, TextUi ui) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ArrayList\u003cRating\u003e ratings \u003d ratingList.getList();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.sort(Comparator.comparing(Rating::getRating));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Collections.reverse(ratings);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (information.isEmpty()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            listAllRatings(ratingList, ui);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            listSpecifiedRating(ratingList, ui);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void listAllRatings(RatingList ratingList, TextUi ui) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ui.printAllRatings(ratingList);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private void listSpecifiedRating(RatingList ratings, TextUi ui) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assert !information.isEmpty() : \"Rating details should not be empty\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingToPrint \u003d RatingParser.checkValidityOfRatingScore(information);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratingToPrint \u003d\u003d 0) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getRating() \u003d\u003d ratingToPrint) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                isFound \u003d true;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (isFound) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ui.printSpecifiedRating(ratings, ratingToPrint);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.printf((LIST_SPECIFIED_RATING_NOT_FOUND_MESSAGE) + \"\\n\", ratingToPrint);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void listCategories(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categoryList.updateListsInAllCategories();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if ((information.isEmpty())) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            listAllCategories(categoryList, ui);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            listAllInCategory(categoryList, ui);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void listAllCategories(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ui.printAllCategories(categoryList);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private void listAllInCategory(CategoryList categoryList, TextUi ui) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printAllInCategory(categoryList.getCategoryByName(information));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (QuotesifyException e) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void listToDos(ToDoList toDoList, TextUi ui) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ui.printAllToDos(toDoList);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private void listBookmarks(BookmarkList bookmarkList, TextUi ui) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ui.printAllBookmarks(bookmarkList);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 14,
      "nat-ho": 43,
      "dozenmatter": 74,
      "chloesyy": 36,
      "yuen-sihao": 46
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/exception/QuotesifyException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class QuotesifyException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuotesifyException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 7
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/lists/ListManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.lists;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ListManager {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int BOOK_LIST \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int BOOKMARK_LIST \u003d 1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int CATEGORY_LIST \u003d 2;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int QUOTE_LIST \u003d 3;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final int RATING_LIST \u003d 4;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final int TODO_LIST \u003d 5;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static HashMap\u003cInteger, QuotesifyList\u003c?\u003e\u003e listManager \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static void addToList(int type, QuotesifyList\u003c?\u003e list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        listManager.put(type, list);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static QuotesifyList\u003c?\u003e getList(int type) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return listManager.get(type);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 1,
      "dozenmatter": 21
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/lists/QuotesifyList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.lists;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public abstract class QuotesifyList\u003cT\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cT\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuotesifyList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuotesifyList(ArrayList\u003cT\u003e list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ArrayList\u003cT\u003e getList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract void add(T t);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract void delete(int index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract JSONArray toJsonArray();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 32
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/parser/JsonSerializer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public interface JsonSerializer {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 7
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.BookmarkCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.commands.EditCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import seedu.quotesify.commands.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_ADD \u003d \"add\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_EDIT \u003d \"edit\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_BOOKMARK \u003d \"bookmark\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Command parseUserCommand(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String[] tokens \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        // if user did not provide arguments, let tokens[1] be empty string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            tokens \u003d new String[]{tokens[0], \"\"};"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String command \u003d tokens[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String arguments \u003d tokens[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_ADD:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return new AddCommand(arguments);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_BOOKMARK:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return new BookmarkCommand(arguments);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_EDIT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return new EditCommand(arguments);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new ListCommand(arguments);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return new DoneCommand(arguments);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case COMMAND_FIND:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return new FindCommand(arguments);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        case COMMAND_BYE:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        case COMMAND_HELP:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            // can consider throwing an exception here for invalid command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 4,
      "dozenmatter": 46,
      "chloesyy": 1,
      "yuen-sihao": 9
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/quote/Quote.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Quote implements JsonSerializer {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private Author author;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private String quote;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String reference;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote, Author author) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote,String reference) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote(String quote, String reference, Author author) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Quote(Author author, String quote, ArrayList\u003cString\u003e categories, String reference) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public Author getAuthor() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setAuthor(Author author) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAuthorName() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return author.getName();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean hasAuthor() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (author !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getQuote() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return quote;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setQuote(String quote) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.quote \u003d quote;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getReference() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return reference;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void setReference(String reference) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.reference \u003d reference;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean hasReference() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (reference !\u003d null) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ArrayList\u003cString\u003e getCategories() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return categories;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setCategories(ArrayList\u003cString\u003e categories) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quoteWithoutInformation \u003d \u0027\\\"\u0027 + quote + \u0027\\\"\u0027;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quoteInformation \u003d \"\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (author !\u003d null \u0026\u0026 reference !\u003d null) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation \u003d \" - \" + author.getName() + \", (\" + reference + \u0027)\u0027;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (author !\u003d null) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation \u003d \" - \" + author.getName();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (reference !\u003d null) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quoteInformation \u003d \" - \" + reference;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quoteWithoutInformation + quoteInformation + System.lineSeparator();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (hasAuthor()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"author\", this.getAuthor().toJson());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"author\", null);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"quote\", this.getQuote());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"categories\", this.getCategories());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"reference\", this.getReference());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return json;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 52,
      "dozenmatter": 69
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/quote/QuoteList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class QuoteList extends QuotesifyList\u003cQuote\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private ArrayList\u003cQuote\u003e quotes \u003d super.getList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public QuoteList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public QuoteList(ArrayList\u003cQuote\u003e quotes) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(quotes);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Quote getQuote(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quotes.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quotes.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public int getIndex(Quote quote) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return quotes.indexOf(quote);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void add(Quote newQuote) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.add(newQuote);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.remove(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quotesToReturn \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (int i \u003d 0; i \u003c getSize(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            quotesToReturn +\u003d (i + 1 + \". \" + quotes.get(i).toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return quotesToReturn;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public QuoteList filterByCategory(String categoryName) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cQuote\u003e filteredQuotes \u003d (ArrayList\u003cQuote\u003e) quotes.stream()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .filter(quote -\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    ArrayList\u003cString\u003e categories \u003d quote.getCategories();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                    return categories.contains(categoryName);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                }).collect(Collectors.toList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new QuoteList(filteredQuotes);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getRandomQuote() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Random rand \u003d new Random();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            int randomQuoteNumber \u003d rand.nextInt(getSize() - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Quote quoteToPrint \u003d getQuote(randomQuoteNumber);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return quoteToPrint.toString();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return \"*Inserts inspirational quote here*\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAllQuotesByAuthor(QuoteList quoteList, String authorName) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String listToReturn \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quote.hasAuthor() \u0026\u0026 quote.getAuthorName().equals(authorName)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return listToReturn;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAllQuotesByReference(QuoteList quoteList, String reference) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String listToReturn \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quote.hasReference() \u0026\u0026 quote.getReference().equals(reference)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return listToReturn;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAllQuotesByReferenceAndAuthor(QuoteList quoteList, String reference, String authorName) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String listToReturn \u003d \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (quote.hasReference() \u0026\u0026 quote.getReference().equals(reference)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                if (quote.hasAuthor() \u0026\u0026 quote.getAuthorName().equals(authorName)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    listToReturn +\u003d quote.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return listToReturn;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Quote quote : quotes) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(quote.toJson());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 82,
      "dozenmatter": 30
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/quote/QuoteParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.exception.QuotesifyException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class QuoteParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_QUOTE \u003d \"I don\u0027t see the quote anywhere\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_AUTHOR \u003d \"Author name cannot be empty if \\\"/by\\\" flag is present\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_REFERENCE \u003d \"Reference field cannot be empty if \\\"/from\\\" flag is present\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ERROR_MISSING_REFERENCE_OR_AUTHOR \u003d \"Author name and Reference cannot be empty if \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"\\\"/by\\\" flag and \\\"/from\\\" flag are present\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseAddParameters(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assert !userInput.isEmpty() : \"field should not be empty\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (userInput.contains(Command.FLAG_REFERENCE) \u0026\u0026 userInput.contains(Command.FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithReferenceAndAuthor(userInput);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (userInput.contains(Command.FLAG_REFERENCE)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithReference(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (userInput.contains(Command.FLAG_AUTHOR)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithAuthor(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return parseQuoteWithoutAdditionalInfo(userInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithoutAdditionalInfo(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if quote is empty"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(quote);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithReferenceAndAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if any fields are empty"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[]  quoteAndInformation \u003d userInput.split(Command.FLAG_DELIMITER, 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(quoteAndInformation[0]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        HashMap\u003cString, String\u003e referenceAndAuthorName \u003d parseReferenceAndAuthor(quoteAndInformation[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reference \u003d referenceAndAuthorName.get(Command.REFERENCE_KEYWORD);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String authorName \u003d referenceAndAuthorName.get(Command.AUTHORNAME_KEYWORD);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!reference.isEmpty() \u0026\u0026 !authorName.isEmpty()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Author author \u003d new Author(authorName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new Quote(quote, reference, author);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else if (!reference.isEmpty()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_REFERENCE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static HashMap parseReferenceAndAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(userInput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        HashMap\u003cString, String\u003e referenceAndAuthorName \u003d new HashMap\u003cString, String\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] referenceAndAuthor \u003d userInput.split(Command.FLAG_DELIMITER,2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reference \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String authorName \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (referenceAndAuthor[0].startsWith(\"from\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                reference \u003d referenceAndAuthor[0].substring(5).trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                authorName \u003d referenceAndAuthor[1].substring(3).trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                assert !reference.isEmpty() : \"reference field should not be empty\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                assert !authorName.isEmpty() : \"author field should not be empty\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                reference \u003d referenceAndAuthor[1].substring(5).trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                authorName \u003d referenceAndAuthor[0].substring(3).trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                assert !reference.isEmpty() : \"reference field should not be empty\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                assert !authorName.isEmpty() : \"author field should not be empty\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_REFERENCE_OR_AUTHOR);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        referenceAndAuthorName.put(\"reference\", reference);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        referenceAndAuthorName.put(\"authorName\", authorName);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return referenceAndAuthorName;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithReference(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if quote of reference is empty"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] quoteAndReference \u003d userInput.split(Command.FLAG_REFERENCE, 2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(quoteAndReference[0]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String reference \u003d trimAndCheckEmptyReference(quoteAndReference[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(quote, reference);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Quote parseQuoteWithAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        // Throws exception if quote of author name is empty"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] quoteAndAuthor \u003d userInput.split(Command.FLAG_AUTHOR, 2);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String quote \u003d trimAndCheckEmptyQuote(quoteAndAuthor[0]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Author author \u003d trimAndCheckEmptyAuthor(quoteAndAuthor[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return new Quote(quote, author);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String trimAndCheckEmptyQuote(String quote) throws QuotesifyException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assert !quote.isEmpty() : \"quote field should not be empty\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quote \u003d quote.trim();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!quote.isEmpty()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return quote;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_QUOTE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Author trimAndCheckEmptyAuthor(String authorName) throws QuotesifyException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assert !authorName.isEmpty() : \"author field should not be empty\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        authorName \u003d authorName.trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!authorName.isEmpty()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new Author(authorName);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String trimAndCheckEmptyReference(String reference) throws QuotesifyException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assert !reference.isEmpty() : \"reference field should not be empty\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        reference \u003d reference.trim();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (!reference.isEmpty()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return reference;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_REFERENCE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String parseListWithAuthor(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(userInput);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] authorFlagAndName \u003d userInput.split(Command.FLAG_AUTHOR);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String authorName \u003d authorFlagAndName[1].trim();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return authorName;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String parseListWithReference(String userInput) throws QuotesifyException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] referenceFlagAndName \u003d userInput.split(Command.FLAG_REFERENCE);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String reference \u003d referenceFlagAndName[1].trim();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return reference;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new QuotesifyException(ERROR_MISSING_AUTHOR);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 144,
      "dozenmatter": 4
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/rating/Rating.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Rating implements JsonSerializer {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private String titleOfRatedBook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private int rating;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public Rating(int rating, String titleOfRatedBook) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.rating \u003d rating;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.titleOfRatedBook \u003d titleOfRatedBook;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String getTitleOfRatedBook() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return titleOfRatedBook;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void setTitleOfRatedBook(String titleOfRatedBook) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        this.titleOfRatedBook \u003d titleOfRatedBook;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public int getRating() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return rating;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setRating(int rating) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.rating \u003d rating;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return titleOfRatedBook + \": \" + rating + \" star\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"titleOfRatedBook\", this.getTitleOfRatedBook());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"rating\", this.getRating());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return json;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 31,
      "yuen-sihao": 12
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/rating/RatingList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class RatingList extends QuotesifyList\u003cRating\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    private ArrayList\u003cRating\u003e ratings \u003d super.getList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public RatingList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public RatingList(ArrayList\u003cRating\u003e ratings) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        super(ratings);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public Rating getRating(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return ratings.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void add(Rating newRating) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.add(newRating);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.remove(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String ratingsToReturn \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingsToReturn +\u003d rating.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return ratingsToReturn;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (Rating rating : ratings) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(rating.toJson());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 18,
      "yuen-sihao": 34
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/rating/RatingParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class RatingParser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final int RATING_ONE \u003d 1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final int RATING_FIVE \u003d 5;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_INVALID_RATING_SCORE \u003d \"That score is out of our range my friend\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String ERROR_INVALID_FORMAT_RATING \u003d \"Sorry I don\u0027t understand you\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static int checkValidityOfRatingScore(String rating) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            ratingScore \u003d Integer.parseInt(rating);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            AddCommand.addLogger.log(Level.WARNING, \"format error\", e);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_INVALID_FORMAT_RATING);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (!(ratingScore \u003e\u003d RATING_ONE \u0026\u0026 ratingScore \u003c\u003d RATING_FIVE)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            AddCommand.addLogger.log(Level.INFO, \"rating score out of range\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            System.out.println(ERROR_INVALID_RATING_SCORE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return ratingScore;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 2,
      "yuen-sihao": 28
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/store/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.store;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String CURRENT_DIR \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String SEPARATOR \u003d File.separator;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String BOOKS \u003d \"books\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String QUOTES \u003d \"quotes\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String CATEGORIES \u003d \"categories\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String RATINGS \u003d \"ratings\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String BOOKMARKS \u003d \"bookmarks\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String TODOS \u003d \"todos\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static final String DATA_CORRUPT_MESSAGE \u003d \"[%s] is corrupted in save file. Creating an empty list.\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static File saveFile;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static void initialiseSaveFile(String filePath) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            filePath \u003d CURRENT_DIR + filePath.replace(\"/\", SEPARATOR).replace(\"\\\\\", SEPARATOR);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (!saveFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            if (!saveFile.exists()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(filePath + \" creation failed.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static void save() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"books\", ((BookList) ListManager.getList(ListManager.BOOK_LIST)).toJsonArray());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"quotes\", ((QuoteList) ListManager.getList(ListManager.QUOTE_LIST)).toJsonArray());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"categories\", ((CategoryList) ListManager.getList(ListManager.CATEGORY_LIST)).toJsonArray());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"bookmarks\", ((BookmarkList) ListManager.getList(ListManager.BOOKMARK_LIST)).toJsonArray());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"ratings\", ((RatingList) ListManager.getList(ListManager.RATING_LIST)).toJsonArray());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            json.put(\"todos\", ((ToDoList) ListManager.getList(ListManager.TODO_LIST)).toJsonArray());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(saveFile);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            fileWriter.write(json.toJSONString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(\"Saving to file failed!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static void load() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            FileReader fileReader \u003d new FileReader(saveFile);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONParser jsonParser \u003d new JSONParser();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONObject json \u003d (JSONObject) jsonParser.parse(fileReader);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            updateListManager(json);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (ParseException | IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            // e.printStackTrace();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static void updateListManager(JSONObject json) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.BOOK_LIST, parseBookList(json));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.QUOTE_LIST, parseQuoteList(json));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.CATEGORY_LIST, parseCategoryList(json));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.RATING_LIST, parseRatingList(json));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.BOOKMARK_LIST, parseBookmarkList(json));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ListManager.addToList(ListManager.TODO_LIST, parseTodoList(json));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            // e.printStackTrace();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static BookList parseBookList(JSONObject json) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray books \u003d (JSONArray) json.get(BOOKS);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cBook\u003e bookList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object book : books) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                bookList.add(parseBookObject((JSONObject) book));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new BookList(bookList);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, BOOKS);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new BookList();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static QuoteList parseQuoteList(JSONObject json) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray quotes \u003d (JSONArray) json.get(QUOTES);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cQuote\u003e quoteList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object quote : quotes) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                quoteList.add(parseQuoteObject((JSONObject) quote));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new QuoteList(quoteList);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, QUOTES);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new QuoteList();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static CategoryList parseCategoryList(JSONObject json) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray categories \u003d (JSONArray) json.get(CATEGORIES);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cCategory\u003e categoryList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object category : categories) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                categoryList.add(parseCategoryObject((JSONObject) category));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new CategoryList(categoryList);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, CATEGORIES);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new CategoryList();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static RatingList parseRatingList(JSONObject json) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray ratings \u003d (JSONArray) json.get(RATINGS);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cRating\u003e ratingList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object rating : ratings) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                ratingList.add(parseRatingObject((JSONObject) rating));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new RatingList(ratingList);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, RATINGS);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new RatingList();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static BookmarkList parseBookmarkList(JSONObject json) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray bookmarks \u003d (JSONArray) json.get(BOOKMARKS);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cBookmark\u003e bookmarkList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object bookmark : bookmarks) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                bookmarkList.add(parseBookmarkObject((JSONObject) bookmark));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new BookmarkList(bookmarkList);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, BOOKMARKS);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new BookmarkList();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static ToDoList parseTodoList(JSONObject json) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            JSONArray todos \u003d (JSONArray) json.get(TODOS);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            ArrayList\u003cToDo\u003e todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Object todo : todos) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                todoList.add(parseTodoObject((JSONObject) todo));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new ToDoList(todoList);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(DATA_CORRUPT_MESSAGE, TODOS);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new ToDoList();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static Book parseBookObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject authorObj \u003d (JSONObject) json.get(\"author\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Author author \u003d parseAuthorObject(authorObj);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String title \u003d (String) json.get(\"title\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray array \u003d (JSONArray) json.get(\"categories\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d (ArrayList\u003cString\u003e) array.stream()"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new Book(author, title, categories);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static Quote parseQuoteObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject authorObj \u003d (JSONObject) json.get(\"author\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Author author \u003d parseAuthorObject(authorObj);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String quote \u003d (String) json.get(\"quote\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String reference \u003d (String) json.get(\"reference\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray array \u003d (JSONArray) json.get(\"categories\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d (ArrayList\u003cString\u003e) array.stream()"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new Quote(author, quote, categories, reference);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static Category parseCategoryObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String name \u003d (String) json.get(\"category\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Category category \u003d new Category(name);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setBookList(bookList.filterByCategory(name));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        category.setQuoteList(quoteList.filterByCategory(name));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static Rating parseRatingObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String title \u003d (String) json.get(\"titleOfRatedBook\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        long rating \u003d (long) json.get(\"rating\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new Rating((int) rating, title);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static Bookmark parseBookmarkObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject bookObj \u003d (JSONObject) json.get(\"book\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Book book \u003d parseBookObject(bookObj);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        long pageNum \u003d (long) json.get(\"pageNum\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new Bookmark(book, (int) pageNum);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static ToDo parseTodoObject(JSONObject json) throws NullPointerException {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String name \u003d (String) json.get(\"name\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String deadline \u003d (String) json.get(\"deadline\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        boolean isDone \u003d (boolean) json.get(\"isDone\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return new ToDo(name, deadline, isDone);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    private static Author parseAuthorObject(JSONObject json) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            String authorName \u003d (String) json.get(\"name\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return new Author(authorName);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 248
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/todo/ToDo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.parser.JsonSerializer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class ToDo implements JsonSerializer {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ToDo(String name, String deadline) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public ToDo(String name, String deadline, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void setDeadline(String deadline) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return  \"[\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + this.name + \" (by: \" + this.deadline + \")\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String signTick \u003d \"v\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String signCross \u003d \"x\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return (isDone ? signTick : signCross);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONObject toJson() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONObject json \u003d new JSONObject();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"name\", this.getName());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"deadline\", this.getDeadline());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        json.put(\"isDone\", this.isDone());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return json;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 24,
      "dozenmatter": 43
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/todo/ToDoList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.QuotesifyList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class ToDoList extends QuotesifyList\u003cToDo\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private ArrayList\u003cToDo\u003e todos \u003d super.getList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ToDoList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ToDoList(ArrayList\u003cToDo\u003e toDos) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(toDos);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void add(ToDo newToDo) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        todos.add(newToDo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ToDo find(int taskNum) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int indexNum \u003d taskNum - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (taskNum \u003c\u003d todos.size() \u0026\u0026 indexNum \u003e\u003d 0 \u0026\u0026 todos.size() \u003e 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return todos.get(indexNum);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return todos.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void delete(int taskNum) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int indexNum \u003d taskNum - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        todos.remove(indexNum);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String toDosToReturn \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        int taskNum \u003d 0;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (ToDo toDo : todos) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            taskNum++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            toDosToReturn +\u003d  taskNum + \".\" + toDo.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return toDosToReturn;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public JSONArray toJsonArray() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        JSONArray list \u003d new JSONArray();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        for (ToDo todo : todos) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            list.add(todo.toJson());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 47,
      "dozenmatter": 18
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/ui/TextUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.BookList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.Category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.category.CategoryList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.lists.ListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.Quote;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.quote.QuoteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.Rating;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.rating.RatingList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.todo.ToDoList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LOGO);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.GOODBYE_MESSAGE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.PROMPT_MESSAGE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (in.hasNextLine()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return in.nextLine().trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        return \"bye\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printAddBook(Book book) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.ADD_BOOK_MESSAGE + \"\\n\", book.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printDeleteBook(Book book) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DELETE_BOOK_MESSAGE + \"\\n\", book.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printEditBook(String oldTitle, String newTitle) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.EDIT_BOOK_MESSAGE + \"\\n\", oldTitle, newTitle);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printAllBooks(BookList bookList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOKS_MESSAGE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(bookList.toStringWithIndex());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printBooksByAuthor(BookList bookList, String authorName) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.LIST_BOOKS_BY_AUTHOR_MESSAGE + \"\\n\", authorName);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(bookList.toStringWithIndex());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotes(QuoteList quotes) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_ALL_QUOTES);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(quotes);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAddCategoryToBook(String bookTitle, String categoryName) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.ADD_CATEGORY_MESSAGE) + \"\\n\", categoryName, bookTitle);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAddCategoryToQuote(String quote, String categoryName) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.ADD_CATEGORY_MESSAGE) + \"\\n\", categoryName, quote);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printRemoveCategoryFromBook(String bookTitle, String categoryName) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.DELETE_CATEGORY_MESSAGE) + \"\\n\", categoryName, bookTitle);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printRemoveCategoryFromQuote(String quote, String categoryName) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.DELETE_CATEGORY_MESSAGE) + \"\\n\", categoryName, quote);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printCategorySize(Category category) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.CATEGORY_SIZE_MESSAGE) + \"\\n\", category.getSize(), category.getCategoryName());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAllCategories(CategoryList categoryList) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (categoryList.getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.EMPTY_CATEGORY_LIST_MESSAGE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_CATEGORIES_MESSAGE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(categoryList.toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAllInCategory(Category category) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        String categoryName \u003d category.getCategoryName();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (category.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(UiMessage.NO_ITEMS_IN_CATEGORY_MESSAGE + \"\\n\", categoryName);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.LIST_ALL_IN_CATEGORIES_MESSAGE + \"\\n\", categoryName);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        printAllBooksInCategory(category);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        printAllQuotesInCategory(category);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAllBooksInCategory(Category category) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList bookList \u003d category.getBookList();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        BookList allBooks \u003d (BookList) ListManager.getList(ListManager.BOOK_LIST);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (bookList.getList().size() \u003e 0) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(\"BOOKS:\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Book book : bookList.getList()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                int index \u003d allBooks.getIndex(book) + 1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                System.out.println(index + \". \" + book.toString());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printAllQuotesInCategory(Category category) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList quoteList \u003d category.getQuoteList();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        QuoteList allQuotes \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        if (quoteList.getList().size() \u003e 0) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(\"QUOTES:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            for (Quote quote : quoteList.getList()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                int index \u003d allQuotes.getIndex(quote) + 1;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                // used print() because quote.toString() has additional line separator"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                System.out.print(index + \". \" + quote.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printEditCategory(String oldCategory, String newCategory) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.EDIT_CATEGORY_MESSAGE + \"\\n\", oldCategory, newCategory);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printErrorMessage(String message) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printAddRatingToBook(int ratingScore, String titleOfBookToRate) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.ADD_RATING_MESSAGE) + \"\\n\", titleOfBookToRate, ratingScore);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printAllRatings(RatingList ratingList) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        if (ratingList.getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_RATINGS_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_ALL_RATINGS_MESSAGE);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(ratingList.toString());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printSpecifiedRating(RatingList ratings, int ratingToPrint) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.LIST_SPECIFIED_RATING_MESSAGE) + \"\\n\", ratingToPrint);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        for (Rating rating : ratings.getList()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            if (rating.getRating() \u003d\u003d ratingToPrint) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                System.out.println(rating.getTitleOfRatedBook());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotesByAuthor(QuoteList quoteList, String authorName) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quoteList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String listToPrint \u003d quoteList.getAllQuotesByAuthor(quoteList, authorName);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!listToPrint.isEmpty()) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                System.out.printf((UiMessage.LIST_QUOTES_BY_AUTHOR_MESSAGE) + \"\\n\", authorName);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(listToPrint);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                System.out.println(UiMessage.LIST_NO_QUOTES_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotesByReference(QuoteList quoteList, String reference) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quoteList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String listToPrint \u003d quoteList.getAllQuotesByReference(quoteList, reference);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!listToPrint.isEmpty()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                System.out.printf((UiMessage.LIST_QUOTES_BY_REFERENCE_MESSAGE) + \"\\n\", reference);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(listToPrint);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                System.out.println(UiMessage.LIST_NO_QUOTES_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllQuotesByReferenceAndAuthor(QuoteList quoteList, String reference, String authorName) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (quoteList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String listToPrint \u003d quoteList.getAllQuotesByReferenceAndAuthor(quoteList, reference, authorName);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!listToPrint.isEmpty()) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                System.out.printf(UiMessage.LIST_QUOTES_BY_AUTHOR_AND_REFERENCE_MESSAGE + \"\\n\", reference, authorName);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(listToPrint);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "                System.out.println(UiMessage.LIST_NO_QUOTES_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_NO_QUOTES_SAVED_MESSAGE);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  void printDeleteQuote(String quote) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.DELETE_QUOTE_MESSAGE) + \"\\n\", quote);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printDeleteRating(String bookTitle) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.DELETE_RATING_MESSAGE) + \"\\n\", bookTitle);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printEditRatingToBook(int ratingScore, String titleToUpdate) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.EDIT_RATING_MESSAGE) + \"\\n\", titleToUpdate, ratingScore);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printFoundRating(Rating rating, String ratingToFind) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf((UiMessage.FIND_RATING_MESSAGE) + \"\\n\", ratingToFind);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(rating.toString());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAddToDo(ToDo toDo) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (toDo !\u003d null) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.printf(UiMessage.ADD_TODO_MESSAGE + \"\\n\", toDo.toString());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printToDo(ToDo toDo) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(toDo.toString());"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAllToDos(ToDoList toDoList) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (toDoList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_TODOS_MESSAGE);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(toDoList.toString());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.EMPTY_TODO_LIST_MESSAGE);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printDeleteToDo(ToDo  toDo) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DELETE_TODO_MESSAGE + \"\\n\", toDo.toString());"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printDoneToDo(ToDo  toDo) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DONE_TODO_MESSAGE + \"\\n\", toDo.toString());"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAddBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.ADD_BOOKMARK_MESSAGE + \"\\n\", bookmark.toString());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printUpdateBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.UPDATE_BOOKMARK_MESSAGE + \"\\n\", bookmark.toString());"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printDeleteBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.printf(UiMessage.DELETE_BOOKMARK_MESSAGE + \"\\n\", bookmark.toString());"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void printAllBookmarks(BookmarkList bookmarkList) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (bookmarkList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.LIST_BOOKMARKS_MESSAGE);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(bookmarkList.toString());"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            System.out.println(UiMessage.EMPTY_BOOKMARK_LIST_MESSAGE);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printRandomQuote() {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quotelist \u003d (QuoteList) ListManager.getList(ListManager.QUOTE_LIST);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String randomQuote \u003d quotelist.getRandomQuote();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.PRINT_RANDOM_QUOTE + System.lineSeparator() + randomQuote);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printInvalidQuotesifyCommand() {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.INVALID_QUOTESIFY_COMMAND);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void printHelpPage() {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"Feeling stuck? Well here are the things you can do with Quotesify v1.0:\""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                + System.lineSeparator());"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"1. Book Management\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_BOOK_COMMAND);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_BOOK_COMMAND);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_COMMAND);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"2. Quote Management\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"3a. Bookmark Tracker\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"3b. Task Tracker\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_TODO_COMMAND);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_TODO_COMMAND);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_TODO_COMMAND);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DONE_COMMAND);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"4. Category Management\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"5. Rating System\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_RATING_COMMAND);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_RATING_COMMAND);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_RATING_COMMAND);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.EDIT_RATING_COMMAND);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(UiMessage.FIND_RATING_COMMAND);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Other useful commands\");"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"Show this help page: \" + \"help\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(\"Quit Quotesify: \" + \"bye\");"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Remember: words in [] are optional, \""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                + \"and words in CAPS are your own input\" + System.lineSeparator()"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "                + \"Hope this helps!\");"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        System.out.println(System.lineSeparator() + \"~ Your friends from Quotesify\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printListOfAddComnmands() {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(\"Here is a list of Add commands you can do:\\n\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_BOOK_COMMAND);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_RATING_COMMAND);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.ADD_TODO_COMMAND);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printListOfDeleteCommands() {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(\"Here is a list of Delete commands you can do:\\n\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_BOOK_COMMAND);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_RATING_COMMAND);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DELETE_TODO_COMMAND);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printListOfListCommands() {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(\"Here is a list of List commands you can do:\\n\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOK_COMMAND);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_RATING_COMMAND);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.LIST_TODO_COMMAND);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printListOfEditCommands() {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(\"Here is a list of Edit commands you can do:\\n\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_BOOK_COMMAND);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_RATING_COMMAND);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.EDIT_TODO_COMMAND);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printListOfFindCommands() {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(\"Here is a list of Find commands you can do:\\n\");"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_BOOK_COMMAND);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_BOOKMARK_COMMAND);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_QUOTE_COMMAND);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_CATEGORY_COMMAND);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_RATING_COMMAND);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.FIND_TODO_COMMAND);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void printDoneCommandUsage() {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        System.out.println(UiMessage.DONE_COMMAND);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 38,
      "nat-ho": 56,
      "dozenmatter": 212,
      "chloesyy": 19,
      "yuen-sihao": 62
    }
  },
  {
    "path": "src/main/java/seedu/quotesify/ui/UiMessage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class UiMessage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    // I have no choice but to make all variables \"static\", else checkstyleMain will fail."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    // Quotesify messages"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LOGO \u003d \"________                __                .__  _____       \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"\\\\_____  \\\\  __ __  _____/  |_  ____   _____|__|/ ____\\\\__.__.\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \" /  / \\\\  \\\\|  |  \\\\/  _ \\\\   __\\\\/ __ \\\\ /  ___/  \\\\   __\u003c   |  |\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"/   \\\\_/.  \\\\  |  (  \u003c_\u003e )  | \\\\  ___/ \\\\___ \\\\|  ||  |  \\\\___  |\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"\\\\_____\\\\ \\\\_/____/ \\\\____/|__|  \\\\___  \u003e____  \u003e__||__|  / ____|\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"       \\\\__\u003e                      \\\\/     \\\\/          \\\\/    \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String WELCOME_MESSAGE \u003d \"Welcome to Quotesify v1.0!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String GOODBYE_MESSAGE \u003d \"Alright, have a nice day!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String PROMPT_MESSAGE \u003d \"\\nWhat would you like to do with Quotesify?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String INVALID_QUOTESIFY_COMMAND \u003d \"I don\u0027t understand you.\" + System.lineSeparator()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"Maybe type \\\"help\\\" for usage instructions?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    // Command related messages"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_BOOK_MESSAGE \u003d \"The book [%s] has been added!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_BOOK_MESSAGE \u003d \"The book [%s] has been deleted!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_BOOK_MESSAGE \u003d \"The book has been edited from [%s] to [%s]!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_BOOKS_MESSAGE \u003d \"Here is a list of all books:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_BOOKS_BY_AUTHOR_MESSAGE \u003d \"Here is a list of books by %s:\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_CATEGORY_MESSAGE \u003d \"I have tagged [%s] category to \\\"%s\\\"!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_CATEGORY_MESSAGE \u003d \"I have removed [%s] category from \\\"%s\\\"!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String CATEGORY_SIZE_MESSAGE \u003d \"You have a total of %d item(s) tagged as [%s].\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_CATEGORIES_MESSAGE \u003d \"Here is the list of all categories:\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_ALL_IN_CATEGORIES_MESSAGE \u003d \"Here are the list of items tagged as [%s]:\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EMPTY_CATEGORY_LIST_MESSAGE \u003d \"There are no categories created!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String NO_ITEMS_IN_CATEGORY_MESSAGE \u003d \"There are no items tagged as [%s].\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_CATEGORY_MESSAGE \u003d \"The category has been changed from [%s] to [%s]!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_RATING_MESSAGE \u003d \"You have just rated [%s] %d star!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_RATING_MESSAGE \u003d \"Rating for [%s] has been deleted!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_ALL_RATINGS_MESSAGE \u003d \"Planning to recommend some books?\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \" Here are your rated books!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_NO_RATINGS_FOUND_MESSAGE \u003d \"None of the books are rated yet!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_SPECIFIED_RATING_MESSAGE \u003d \"Here are the books you rated as %d star!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_RATING_MESSAGE \u003d \"Ratings for [%s] has been updated to %d star!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String FIND_RATING_MESSAGE \u003d \"Here is your rating for [%s]!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_TODO_MESSAGE \u003d \"The task [%s] has been added!\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String TODO_SIZE_MESSAGE \u003d \"You have a total of %d task(s) recorded.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_TODOS_MESSAGE \u003d \"Here is the list of all task(s) recorded:\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_TODO_MESSAGE \u003d \"The Task [%s] has been deleted!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DONE_TODO_MESSAGE \u003d \"The Task [%s] has been marked as done!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EMPTY_TODO_LIST_MESSAGE \u003d \"There are no task created\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_BOOKMARK_MESSAGE \u003d \"The bookmark [%s] has been added!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String UPDATE_BOOKMARK_MESSAGE \u003d \"The bookmark [%s] has been updated\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String BOOKMARK_SIZE_MESSAGE \u003d \"You have a total of %d bookmark(s) recorded.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_BOOKMARKS_MESSAGE \u003d \"Here is the list of all bookmark(s) recorded:\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EMPTY_BOOKMARK_LIST_MESSAGE \u003d \"There are no bookmark created\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_BOOKMARK_MESSAGE \u003d \"The bookmark [%s] has been removed!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EMPTY_BOOKMARK_COMMAND \u003d \"There is no info related to bookmark provided!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_ALL_QUOTES \u003d \"Here are all your quotes:\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_QUOTE_MESSAGE \u003d \"The quote \\\"%s\\\" has been deleted!\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_NO_QUOTES_SAVED_MESSAGE \u003d \"You have no saved quotes!\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_NO_QUOTES_FOUND_MESSAGE \u003d \"I could not find any that matched your specifications.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_QUOTES_BY_AUTHOR_MESSAGE \u003d \"Here is a list of quotes by %s:\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_QUOTES_BY_REFERENCE_MESSAGE \u003d \"Here is a list of quotes from %s:\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_QUOTES_BY_AUTHOR_AND_REFERENCE_MESSAGE \u003d \"Here is a list of quotes from %s by %s:\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String PRINT_RANDOM_QUOTE \u003d \"Before you continue, here\u0027s something:\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    // Help page commands"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_BOOK_COMMAND \u003d \"Add book: \" + \"add -b BOOK_TITLE /by AUTHOR\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_BOOKMARK_COMMAND \u003d \"Add bookmark: \" + \"bookmark -b BOOK_TITLE /pg PAGE_NUMBER\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_QUOTE_COMMAND \u003d \"Add quote: \" + \"add -q QUOTE [/from BOOK_TITLE] [/by AUTHOR]\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_CATEGORY_COMMAND \u003d \"Add category: \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"add -c CATEGORY {[-b BOOK_TITLE] | [-q QUOTE_NUMBER]}\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_RATING_COMMAND \u003d \"Add rating: \" + \"add -r RATING_SCORE BOOK_TITLE\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String ADD_TODO_COMMAND \u003d \"Add task: \" + \"add -t TASK /by DEADLINE\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_BOOK_COMMAND \u003d \"Delete book: \" + \"delete -b BOOK_TITLE /by AUTHOR\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_BOOKMARK_COMMAND \u003d \"Delete bookmark: \" + \"delete -bm BOOK_TITLE\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_QUOTE_COMMAND \u003d \"Delete quote:\" + \"delete -q QUOTE_NUMBER\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_CATEGORY_COMMAND \u003d \"Delete category: \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "            + \"delete -c CATEGORY {[-b BOOK_TITLE] | [-q QUOTE_NUMBER]}\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_RATING_COMMAND \u003d \"Delete rating: \" + \"delete -r BOOK_TITLE\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DELETE_TODO_COMMAND \u003d \"Delete task: \" + \"delete -t TASK_NUMBER\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_BOOK_COMMAND \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_BOOKMARK_COMMAND \u003d \"Update bookmark: \" + \"bookmark -b BOOK_TITLE /pg PAGE_NUMBER\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_QUOTE_COMMAND \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_CATEGORY_COMMAND \u003d \"Edit category: \" + \"edit -c OLD_CATEGORY NEW_CATEGORY\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String EDIT_RATING_COMMAND \u003d \"Edit rating: \" + \"edit -r RATING_SCORE BOOK_TITLE\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String EDIT_TODO_COMMAND \u003d \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String FIND_BOOK_COMMAND \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String FIND_BOOKMARK_COMMAND \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String FIND_QUOTE_COMMAND \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String FIND_CATEGORY_COMMAND \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public static final String FIND_RATING_COMMAND \u003d \"Find rating: \" + \"find -r BOOK_TITLE\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String FIND_TODO_COMMAND \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_BOOK_COMMAND \u003d \"List books: \" + \"list -b [/by AUTHOR]\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_BOOKMARK_COMMAND \u003d \"List bookmarks: \" + \"list -bm\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_QUOTE_COMMAND \u003d \"List quotes: \" + \"list -q [/by AUTHOR] [/from BOOK_TITLE]\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_CATEGORY_COMMAND \u003d \"List categories: \" + \"list -c [CATEGORY]\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_RATING_COMMAND \u003d \"List ratings: \" + \"list -r [RATING_SCORE]\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String LIST_TODO_COMMAND \u003d \"List tasks: \" + \"list -t\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"Mark task as done: \" + \"done -t TASK_NUMBER\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 100,
      "yuen-sihao": 2
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/QuotesifyTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "class QuotesifyTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "dozenmatter": 2,
      "-": 10
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/book/BookTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.book;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "class BookTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void toString_titleAuthor_titleByAuthor() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Author author \u003d new Author(\"author\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Book book \u003d new Book(author, \"title\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        assertEquals(\"title by author\", book.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 2,
      "chloesyy": 13
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/category/CategoryTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.book.Book;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "public class CategoryTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    public void getBookCategoryTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Author author \u003d new Author(\"me\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Book book \u003d new Book(author, \"book1\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        categories.add(\"romance\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        book.setCategories(categories);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        Category category \u003d new Category(\"romance\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "        assertEquals(category.getCategoryName(), book.getCategories().get(0));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 22
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/quote/QuoteTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.quote;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "import seedu.quotesify.author.Author;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class QuoteTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void quoteAddTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        QuoteList quotes \u003d new QuoteList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Author author \u003d new Author(\"Gill Bates\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Quote quote \u003d new Quote(\"It was the butler\", \"Herlock Shomles\", author);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        quotes.add(quote);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        assertEquals(quote, quotes.getQuote(0));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 15,
      "dozenmatter": 2
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/rating/RatingTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.rating;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "public class RatingTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    RatingList ratings \u003d new RatingList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void addRating_validBookTitleAndRating_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String titleOfRatedBook \u003d \"Harry Potter\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d 4;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating rating \u003d new Rating(ratingScore, titleOfRatedBook);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.add(rating);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(rating, ratings.getList().get(0));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void listRatings_emptyList_success() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(ratings.toString(), \"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    public void listRatings_validRatings_sucess() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        String titleOfRatedBook \u003d \"Book 1\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        int ratingScore \u003d 2;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        Rating rating \u003d new Rating(ratingScore, titleOfRatedBook);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        ratings.add(rating);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "        assertEquals(ratings.toString(), titleOfRatedBook + \": \" + ratingScore + \" star\" + System.lineSeparator());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuen-sihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dozenmatter": 1,
      "yuen-sihao": 32
    }
  },
  {
    "path": "src/test/java/seedu/quotesify/todo/ToDoTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "package seedu.quotesify.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String taskName \u003d \"read Chapter 2\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String deadline \u003d \"Tuesday night\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        ToDo toDo \u003d new ToDo(taskName, deadline);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        assertEquals(\"[x] read Chapter 2 (by: Tuesday night)\", toDo.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 14,
      "dozenmatter": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "helloooo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -b book1 /by me"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -q quote1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -c action -b 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -c motivational -q 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "add -c nice -b 1 -q 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "delete -c action -b 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c action"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "delete -c motivational -q 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c motivational"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dozenmatter"
        },
        "content": "list -c nice"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "delete -b 1"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "dozenmatter": 11,
      "chloesyy": 1
    }
  }
]
