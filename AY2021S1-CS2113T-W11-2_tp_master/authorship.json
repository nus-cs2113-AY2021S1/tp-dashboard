[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"    mainClassName \u003d \"seedu.trippie.Trippie\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":"    archiveBaseName \u003d \"trippie\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":46,"author":{"gitId":"felixhalim"},"content":"    enableAssertions \u003d true"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"felixhalim":1,"-":44,"ivanderjmw":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio "},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:"},{"lineNumber":5,"author":{"gitId":"felixhalim"},"content":"![](https://raw.githubusercontent.com/AY2021S1-CS2113T-W11-2/tp/master/docs/team/images/felix.jpg) | Felix Halim | [Github](https://github.com/felixhalim) | [Portfolio](team/felixhalim.md)"},{"lineNumber":6,"author":{"gitId":"felixhalim"},"content":"![](https://raw.githubusercontent.com/AY2021S1-CS2113T-W11-2/tp/master/docs/team/images/weishuang.jpg) | Tan Wei Shuang | [Github](https://github.com/weishuangtan/) | [Portfolio](team/weishuangtan.md)"},{"lineNumber":7,"author":{"gitId":"felixhalim"},"content":"![](https://raw.githubusercontent.com/AY2021S1-CS2113T-W11-2/tp/master/docs/team/images/ivander.jpg) | Ivander Jonathan | [Github](https://github.com/ivanderjmw) | [Portfolio](team/ivanderjmw.md)"},{"lineNumber":8,"author":{"gitId":"felixhalim"},"content":"![](https://raw.githubusercontent.com/AY2021S1-CS2113T-W11-2/tp/master/docs/team/images/kianen.jpg) | Teng Kian En| [Github](https://github.com/tengkianen) | [Portfolio](team/tengkianen.md)"},{"lineNumber":9,"author":{"gitId":"felixhalim"},"content":"![](https://raw.githubusercontent.com/AY2021S1-CS2113T-W11-2/tp/master/docs/team/images/shawn.jpg) | Tan Zheng Chong, Shawn | [Github](https://github.com/ShawnTanzc) | [Portfolio](team/shawntanzc.md)"}],"authorContributionMap":{"felixhalim":5,"-":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"![Trippie Logo](https://i.imgur.com/jSwGL7O.png)"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":"## Table of Content"},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":"Below is a list of contents that is included in this document."},{"lineNumber":7,"author":{"gitId":"tengkianen"},"content":"* [1.0 Introduction](#10-introduction)"},{"lineNumber":8,"author":{"gitId":"tengkianen"},"content":"* [2.0 Setting up the project in your computer](#20-setting-up-the-project-in-your-computer)"},{"lineNumber":9,"author":{"gitId":"tengkianen"},"content":"* [3.0 Design](#30-design)"},{"lineNumber":10,"author":{"gitId":"tengkianen"},"content":"    * [3.1 Architecture](#31-architecture-felix)"},{"lineNumber":11,"author":{"gitId":"tengkianen"},"content":"    * [3.2 Ui](#32-ui-felix)"},{"lineNumber":12,"author":{"gitId":"tengkianen"},"content":"    * [3.3 Parser](#33-parser-wei-shuang)"},{"lineNumber":13,"author":{"gitId":"tengkianen"},"content":"    * [3.4 TrippieData](#34-trippiedata-ivander)"},{"lineNumber":14,"author":{"gitId":"tengkianen"},"content":"    * [3.5 Storage](#35-storage-ivander)"},{"lineNumber":15,"author":{"gitId":"tengkianen"},"content":"    * [3.6 Command](#36-command-wei-shuang)"},{"lineNumber":16,"author":{"gitId":"tengkianen"},"content":"    * [3.7 Exceptions](#37-exceptions-wei-shuang)"},{"lineNumber":17,"author":{"gitId":"ShawnTanzc"},"content":"* [4.0 Implementation](#40-implementation)"},{"lineNumber":18,"author":{"gitId":"tengkianen"},"content":"    * [4.1 Multiple Trips Structure](#41-multiple-trips-structure-ivander)"},{"lineNumber":19,"author":{"gitId":"tengkianen"},"content":"    * [4.2 Sorting Place List](#42-sorting-place-list-kian-en)"},{"lineNumber":20,"author":{"gitId":"tengkianen"},"content":"    * [4.3 Budget and Expenses](#43-budget-and-expenses-shawn)"},{"lineNumber":21,"author":{"gitId":"tengkianen"},"content":"    * [4.4 Foreign Exchange Converter](#44-foreign-exchange-converter-shawn)"},{"lineNumber":22,"author":{"gitId":"tengkianen"},"content":"    * [4.5 Import and Export Files](#45-import-and-export-files-wei-shuang)"},{"lineNumber":23,"author":{"gitId":"tengkianen"},"content":"* [5.0 Appendix: Requirements](#50-appendix-requirements)"},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":"    * [5.1 Product Scope](#51-product-scope-kian-en)"},{"lineNumber":25,"author":{"gitId":"tengkianen"},"content":"        * [5.1.0 Target user profile](#510-target-user-profile)"},{"lineNumber":26,"author":{"gitId":"tengkianen"},"content":"        * [5.1.1 Value proposition](#511-value-proposition)"},{"lineNumber":27,"author":{"gitId":"tengkianen"},"content":"    * [5.2 User Stories](#52-user-stories-kian-en)"},{"lineNumber":28,"author":{"gitId":"tengkianen"},"content":"    * [5.3 Non-Functional Requirements](#53-non-functional-requirements-kian-en)"},{"lineNumber":29,"author":{"gitId":"tengkianen"},"content":"    * [5.4 Glossary](#54-glossary)"},{"lineNumber":30,"author":{"gitId":"tengkianen"},"content":"* [6.0 Appendix: Instructions for Manual Testing](#60-appendix-instructions-for-manual-testing-shawn)"},{"lineNumber":31,"author":{"gitId":"tengkianen"},"content":"    * [6.1 Launch and Shutdown](#61-launch-and-shutdown-felix)"},{"lineNumber":32,"author":{"gitId":"ShawnTanzc"},"content":"    * [6.2 Step by Step Guide](#62-step-by-step-guide-shawn)"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"ShawnTanzc"},"content":"## 1.0 Introduction"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"tengkianen"},"content":"Trippie is a command-line app to plan any of your upcoming trips. It is tailored to match the needs of student"},{"lineNumber":38,"author":{"gitId":"tengkianen"},"content":"travellers. Trippie lets users plan multiple trips through timetabling and allows users to track their expenses overseas."},{"lineNumber":39,"author":{"gitId":"tengkianen"},"content":"Trippie is designed for users to enter their input quickly and efficiently."},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"ShawnTanzc"},"content":"## 2.0 Setting up the project in your computer"},{"lineNumber":42,"author":{"gitId":"ShawnTanzc"},"content":"This section gives an overview on how to set up the project in your computer."},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"tengkianen"},"content":"**Prerequisites:**"},{"lineNumber":45,"author":{"gitId":"tengkianen"},"content":"* JDK 11"},{"lineNumber":46,"author":{"gitId":"tengkianen"},"content":"* IntelliJ IDEA"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"tengkianen"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"ShawnTanzc"},"content":"⚠️ **Caution:**"},{"lineNumber":51,"author":{"gitId":"tengkianen"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps."},{"lineNumber":52,"author":{"gitId":"tengkianen"},"content":"\u003c/div\u003e"},{"lineNumber":53,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":54,"author":{"gitId":"tengkianen"},"content":"First, **fork** this repo, and **clone** the fork into your computer."},{"lineNumber":55,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":56,"author":{"gitId":"tengkianen"},"content":"If you plan to use IntelliJ IDEA (highly recommended):"},{"lineNumber":57,"author":{"gitId":"tengkianen"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to ensure IntelliJ is configured to use **JDK 11**."},{"lineNumber":58,"author":{"gitId":"tengkianen"},"content":"2. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA."},{"lineNumber":59,"author":{"gitId":"tengkianen"},"content":"Importing a Gradle project is slightly different from importing a normal Java project."},{"lineNumber":60,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":61,"author":{"gitId":"tengkianen"},"content":"3. **Verify the setup**:"},{"lineNumber":62,"author":{"gitId":"tengkianen"},"content":"   1. Run the `seedu.trippie.Trippie` and try a few commands."},{"lineNumber":63,"author":{"gitId":"ShawnTanzc"},"content":"   2. [Run the tests](TestingGuide.md) to ensure they all pass. "},{"lineNumber":64,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":65,"author":{"gitId":"ShawnTanzc"},"content":"## 3.0 Design"},{"lineNumber":66,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":67,"author":{"gitId":"tengkianen"},"content":"This section explains the high-level design of the application. Given below is an overview of each component and a more detailed explanation of the architecture. Trippie is the main class which manages the initialization of the relevant classes and their execution."},{"lineNumber":68,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":69,"author":{"gitId":"felixhalim"},"content":"\u003c!-- @@author felixhalim --\u003e"},{"lineNumber":70,"author":{"gitId":"felixhalim"},"content":"### 3.1 Architecture (Felix)"},{"lineNumber":71,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":72,"author":{"gitId":"felixhalim"},"content":"![UML Diagram Main](https://i.imgur.com/N235vC0.jpg)"},{"lineNumber":73,"author":{"gitId":"felixhalim"},"content":"\u003ccenter\u003e\u003ci\u003eFigure 1: Overall Architecture\u003c/i\u003e\u003c/center\u003e"},{"lineNumber":74,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":75,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":76,"author":{"gitId":"felixhalim"},"content":"The Architecture Diagram given above explains the high-level design of Trippie. Shown below is a diagram of Trippie\u0027s high-level structure."},{"lineNumber":77,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":78,"author":{"gitId":"felixhalim"},"content":"The main class of`Trippie` is called [`Trippie.java`](https://github.com/AY2021S1-CS2113T-W11-2/tp/blob/master/src/main/java/seedu/trippie/Trippie.java?) It is responsible for:"},{"lineNumber":79,"author":{"gitId":"felixhalim"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other."},{"lineNumber":80,"author":{"gitId":"felixhalim"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary."},{"lineNumber":81,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":82,"author":{"gitId":"felixhalim"},"content":"The rest of the App consists of three components."},{"lineNumber":83,"author":{"gitId":"felixhalim"},"content":"- **UI** : The UI of the App."},{"lineNumber":84,"author":{"gitId":"felixhalim"},"content":"- **Parser** : Parses user input and its information to respective commands."},{"lineNumber":85,"author":{"gitId":"felixhalim"},"content":"- **Storage** : Reads data from, and write data to, the text file."},{"lineNumber":86,"author":{"gitId":"felixhalim"},"content":"- **Command** : Executes each command respectively."},{"lineNumber":87,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":88,"author":{"gitId":"felixhalim"},"content":"The Sequence diagram below (*Figure 2*) shows how the program flows across the different classes when parsing or executing user commands."},{"lineNumber":89,"author":{"gitId":"felixhalim"},"content":"The example below is shown for `HelpCommand`. Further references are shown in *Figure 2.1* and *Figure 2.2*"},{"lineNumber":90,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":91,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":92,"author":{"gitId":"felixhalim"},"content":"![UML-Command Execution](https://i.imgur.com/aSDvn4T.png)"},{"lineNumber":93,"author":{"gitId":"felixhalim"},"content":"\u003ccenter\u003e\u003ci\u003eFigure 2: Sequence Diagram during Command execution\u003c/i\u003e\u003c/center\u003e"},{"lineNumber":94,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":95,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":96,"author":{"gitId":"felixhalim"},"content":"\u003cbr/\u003e"},{"lineNumber":97,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":98,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":99,"author":{"gitId":"felixhalim"},"content":"![UML-Parse and Check Command](https://i.imgur.com/ioxLX19.png)"},{"lineNumber":100,"author":{"gitId":"felixhalim"},"content":"\u003ccenter\u003e\u003ci\u003eFigure 2.1: Reference of Parse and Check Command\u003c/i\u003e\u003c/center\u003e"},{"lineNumber":101,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":102,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":103,"author":{"gitId":"felixhalim"},"content":"\u003cbr/\u003e"},{"lineNumber":104,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":105,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":106,"author":{"gitId":"felixhalim"},"content":"![UML-Parse Command](https://i.imgur.com/w8bAV6A.png)"},{"lineNumber":107,"author":{"gitId":"felixhalim"},"content":"\u003ccenter\u003e\u003ci\u003eFigure 2.2: Reference of Parse Command\u003c/i\u003e\u003c/center\u003e"},{"lineNumber":108,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":109,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":110,"author":{"gitId":"felixhalim"},"content":"### 3.2 Ui (Felix)"},{"lineNumber":111,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":112,"author":{"gitId":"felixhalim"},"content":"The UI class is in charge of the user\u0027s input, from the `readCommand` or `getLine` methods. Other functions of the Ui is to provide shorthands of Trippie\u0027s outputs, such as `greetUser` or `showFarewells`."},{"lineNumber":113,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":114,"author":{"gitId":"felixhalim"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":115,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":116,"author":{"gitId":"weishuangtan"},"content":"\u003c!-- @@author weishuangtan --\u003e"},{"lineNumber":117,"author":{"gitId":"weishuangtan"},"content":"### 3.3 Parser (Wei Shuang)"},{"lineNumber":118,"author":{"gitId":"weishuangtan"},"content":"The `Parser` class is implemented to parse the user\u0027s input, and returns a `Command` object. The `Trippie` class will read in this object and call the `execute` method under the object."},{"lineNumber":119,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":120,"author":{"gitId":"weishuangtan"},"content":"When the `Parser` class is unable to successfully parse the user\u0027s input, `TrippieIllegalCommandException` will be thrown. (Refer to [3.7 Exceptions](#37-exceptions-wei-shuang))"},{"lineNumber":121,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":122,"author":{"gitId":"weishuangtan"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":123,"author":{"gitId":"ivanderjmw"},"content":"\u003c!-- @@author ivanderjmw --\u003e"},{"lineNumber":124,"author":{"gitId":"ivanderjmw"},"content":"### 3.4 TrippieData (Ivander)"},{"lineNumber":125,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":126,"author":{"gitId":"ivanderjmw"},"content":"The `TrippieData` class is being implemented to store all of your data during Trippie\u0027s runtime. Below is its class diagram."},{"lineNumber":127,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":128,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":129,"author":{"gitId":"ivanderjmw"},"content":"![TrippieData UML Diagram](https://i.imgur.com/OqhzWSZ.jpg)"},{"lineNumber":130,"author":{"gitId":"ivanderjmw"},"content":"\u003ccenter\u003e\u003ci\u003eFigure 3: Class Architecture\u003c/i\u003e\u003c/center\u003e"},{"lineNumber":131,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":132,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":133,"author":{"gitId":"ivanderjmw"},"content":"The explanation for the above *Figure 3* is as follows:"},{"lineNumber":134,"author":{"gitId":"ivanderjmw"},"content":"1. `TrippieData` can contain many `Trip` objects."},{"lineNumber":135,"author":{"gitId":"ivanderjmw"},"content":"2. Each `Trip` consists of a `PlaceList` and an `ExpenseList`."},{"lineNumber":136,"author":{"gitId":"ivanderjmw"},"content":"3. `PlaceList` contains an ArrayList of `Places`."},{"lineNumber":137,"author":{"gitId":"ivanderjmw"},"content":"4. `ExpenseList` contains an ArrayList of `Expense`."},{"lineNumber":138,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":139,"author":{"gitId":"ivanderjmw"},"content":"To get the name of a `Place` of index 5 in `PlaceList` and from Trip of index 4 in TrippieData, the program will be implemented based on the following UML diagram."},{"lineNumber":140,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":141,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":142,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":143,"author":{"gitId":"ivanderjmw"},"content":"![Getting_Name_Of_Place_Sequence_Diagram](https://i.imgur.com/7d8Ci50.png)"},{"lineNumber":144,"author":{"gitId":"ivanderjmw"},"content":"\u003ccenter\u003e\u003ci\u003eFigure 4: Getting a name of a Place object.\u003c/i\u003e\u003c/center\u003e"},{"lineNumber":145,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":146,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":147,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":148,"author":{"gitId":"ivanderjmw"},"content":"### 3.5 Storage (Ivander)"},{"lineNumber":149,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":150,"author":{"gitId":"ivanderjmw"},"content":"The storage class is in charge of all file input and output. More importantly, in managing *trip files* and *master file*."},{"lineNumber":151,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":152,"author":{"gitId":"ivanderjmw"},"content":"Important methods inside this class are:"},{"lineNumber":153,"author":{"gitId":"ivanderjmw"},"content":"- `setupMasterFile`: Setups *master file* from an existing file, or creates the master file if it is nonexistent."},{"lineNumber":154,"author":{"gitId":"ivanderjmw"},"content":"- `saveMasterFile`: Saves (overwrites) the current *master file* with current user data in `TrippieData`."},{"lineNumber":155,"author":{"gitId":"ivanderjmw"},"content":"- `saveTrip`: Saves (overwrites) a specified `Trip` into a *trip file*. Saves both the `ExpenseList` and the `PlaceList` of that trip."},{"lineNumber":156,"author":{"gitId":"ivanderjmw"},"content":"- `loadMasterFile`: Loads the master file from a specified file scanner and updates the given `TrippieData`."},{"lineNumber":157,"author":{"gitId":"ivanderjmw"},"content":"- `loadTrip`: Loads a trip file from a specified file scanner, and returns a complete `Trip` object."},{"lineNumber":158,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":159,"author":{"gitId":"ivanderjmw"},"content":"Refer to Multiple Trips Implementation to find out more about the file structure."},{"lineNumber":160,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":161,"author":{"gitId":"ivanderjmw"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":162,"author":{"gitId":"weishuangtan"},"content":"\u003c!-- @@author weishuangtan --\u003e"},{"lineNumber":163,"author":{"gitId":"weishuangtan"},"content":"### 3.6 Command (Wei Shuang)"},{"lineNumber":164,"author":{"gitId":"weishuangtan"},"content":"The `Command` class is designed as the parent class for other command classes (e.g. `NewTripCommand`, `AddExpenseCommand`, `ExitCommand` etc). Below shows its class diagram:"},{"lineNumber":165,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":166,"author":{"gitId":"weishuangtan"},"content":"![Command UML Diagram](https://i.imgur.com/tVi0gab.jpg)"},{"lineNumber":167,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":168,"author":{"gitId":"weishuangtan"},"content":"\u003ccenter\u003e\u003ci\u003eFigure 5: Commands Classes\u003c/i\u003e\u003c/center\u003e"},{"lineNumber":169,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":170,"author":{"gitId":"weishuangtan"},"content":"Classes inherited from the `Command` class will overwrite the `execute` method in the parent class, which is written in correspond to the command class\u0027 name. "},{"lineNumber":171,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":172,"author":{"gitId":"weishuangtan"},"content":"### 3.7 Exceptions (Wei Shuang)"},{"lineNumber":173,"author":{"gitId":"weishuangtan"},"content":"The `TrippieException` class is designed as the parent class for the other exception classes like the `TrippieIllegalCommandException` class. These exception classes are created to specify the exceptions faced when `Trippie` is running."},{"lineNumber":174,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":175,"author":{"gitId":"weishuangtan"},"content":"Below shows its class diagram:"},{"lineNumber":176,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":177,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":178,"author":{"gitId":"weishuangtan"},"content":"![Exception UML Diagram](https://i.imgur.com/wq0wsHU.jpg)"},{"lineNumber":179,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":180,"author":{"gitId":"weishuangtan"},"content":"\u003ccenter\u003e\u003ci\u003eFigure 6: Exception Classes\u003c/i\u003e \u003c/center\u003e"},{"lineNumber":181,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":182,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":183,"author":{"gitId":"weishuangtan"},"content":"* `TrippieIllegalCommandException` is thrown when `Parser` class is unable to parse the command successfully."},{"lineNumber":184,"author":{"gitId":"weishuangtan"},"content":"* `TrippieInvalidArgumentException` is thrown when the individual commands inherited from `Command` class meets an error."},{"lineNumber":185,"author":{"gitId":"weishuangtan"},"content":"* `TrippieExceedBudgetException` is thrown when expenses in the saved trip exceeds the budget given by user."},{"lineNumber":186,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":187,"author":{"gitId":"weishuangtan"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":188,"author":{"gitId":"ShawnTanzc"},"content":"## 4.0 Implementation"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"ShawnTanzc"},"content":"This section elaborates on some unique details about how certain features are implemented."},{"lineNumber":191,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":192,"author":{"gitId":"ivanderjmw"},"content":"\u003c!-- @@author ivanderjmw --\u003e"},{"lineNumber":193,"author":{"gitId":"ivanderjmw"},"content":"### 4.1 Multiple Trips Structure (Ivander)"},{"lineNumber":194,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":195,"author":{"gitId":"ivanderjmw"},"content":"Trippie is built for travelers, those who most probably has more than a single trip in mind. Therefore, the multiple trips feature is designed so that someone can easily work and switch between many trips."},{"lineNumber":196,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":197,"author":{"gitId":"ivanderjmw"},"content":"All your `Trip` objects are stored in a java ArrayList object called tripList inside the `TrippieData` object. In this `TrippieData` object, an attribute called `currentTrip` is used to point to `Trip` object inside the ArrayList that is currently being worked on."},{"lineNumber":198,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":199,"author":{"gitId":"ivanderjmw"},"content":"Multiple trips feature is designed to **minimize program startup time** and **minimize memory usage**. These aims are achieved by:"},{"lineNumber":200,"author":{"gitId":"ivanderjmw"},"content":"1. Reading only one Master File `trippie.txt` that will be loaded on start-up."},{"lineNumber":201,"author":{"gitId":"ivanderjmw"},"content":"2. Saving each trip in separate files."},{"lineNumber":202,"author":{"gitId":"ivanderjmw"},"content":"3. Loading only the user\u0027s most recently edited trip on start-up. This is set as the *default trip* which will be set as the *current trip* during runtime."},{"lineNumber":203,"author":{"gitId":"ivanderjmw"},"content":"4. It is only possible to work on one `Trip` at a single point in time."},{"lineNumber":204,"author":{"gitId":"ivanderjmw"},"content":"5. The commands `new trip` and `load trip` will change the *current trip*."},{"lineNumber":205,"author":{"gitId":"ivanderjmw"},"content":"6. Current trips are automatically saved after each command execution."},{"lineNumber":206,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":207,"author":{"gitId":"ivanderjmw"},"content":"The format of `trippie.txt` is as follows:"},{"lineNumber":208,"author":{"gitId":"ivanderjmw"},"content":"```"},{"lineNumber":209,"author":{"gitId":"ivanderjmw"},"content":"DEFAULT \u003ctrip_index\u003e"},{"lineNumber":210,"author":{"gitId":"ivanderjmw"},"content":"\u003ctrip_index - 1\u003e,\u003ctrip_name\u003e,\u003ctrip_date (dd-mm-yyyy)\u003e,\u003ctrip_max_day\u003e"},{"lineNumber":211,"author":{"gitId":"ivanderjmw"},"content":"1,Amazing Bali,03-04-2021,3"},{"lineNumber":212,"author":{"gitId":"ivanderjmw"},"content":"2,Australia,01-01-2021,8"},{"lineNumber":213,"author":{"gitId":"ivanderjmw"},"content":"3,Wonderful Singapore,02-01-2021,9"},{"lineNumber":214,"author":{"gitId":"ivanderjmw"},"content":"```"},{"lineNumber":215,"author":{"gitId":"ivanderjmw"},"content":"Here the `trip_name` serves both as the Trip\u0027s name, and the file name, hence it should not contain invalid characters for file names, i.e. `\u003c\u003e:\"/\\|?*.` A sample directory structure containing 3 trips is as the following:"},{"lineNumber":216,"author":{"gitId":"ivanderjmw"},"content":"```"},{"lineNumber":217,"author":{"gitId":"ivanderjmw"},"content":"trippie_data"},{"lineNumber":218,"author":{"gitId":"ivanderjmw"},"content":"    ├── Amazing Bali.txt"},{"lineNumber":219,"author":{"gitId":"ivanderjmw"},"content":"    ├── Australia.txt"},{"lineNumber":220,"author":{"gitId":"ivanderjmw"},"content":"    ├── Wonderful Singapore.txt"},{"lineNumber":221,"author":{"gitId":"ivanderjmw"},"content":"    └── trippie.txt"},{"lineNumber":222,"author":{"gitId":"ivanderjmw"},"content":"```"},{"lineNumber":223,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":224,"author":{"gitId":"ivanderjmw"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":225,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":226,"author":{"gitId":"tengkianen"},"content":"\u003c!-- @@author tengkianen --\u003e"},{"lineNumber":227,"author":{"gitId":"tengkianen"},"content":"### 4.2 Sorting Place List (Kian En)"},{"lineNumber":228,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":229,"author":{"gitId":"tengkianen"},"content":"The way Trippie sorts its place list, regardless of the order the places are added by the user, is through **bubble sort**. The sorting algorithm is called every time a new place is added by the user. "},{"lineNumber":230,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":231,"author":{"gitId":"tengkianen"},"content":"When listing either places, Trippie will sort them based on both *Day* and *Time*. Hence, there is a need to use a **stable** sorting algorithm. Bubble sort is used for its simplicity and easy implementation. Furthermore, since this sorting algorithm is called every time a new place is added, the list will always be sorted, allowing the time complexity of the sorting algorithm to be **O(n)**."},{"lineNumber":232,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":233,"author":{"gitId":"tengkianen"},"content":"Likewise, when sorting expenses, Trippie will sort them based on *Day*."},{"lineNumber":234,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":235,"author":{"gitId":"tengkianen"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":236,"author":{"gitId":"ShawnTanzc"},"content":"\u003c!-- @@author ShawnTanzc --\u003e"},{"lineNumber":237,"author":{"gitId":"ShawnTanzc"},"content":"### 4.3 Budget and Expenses (Shawn)"},{"lineNumber":238,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":239,"author":{"gitId":"ShawnTanzc"},"content":"Trippie provides travellers an easy and convenient way to track expenses while constantly ensuring that the budget has not been exceeded. Below is the class diagram."},{"lineNumber":240,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":241,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":242,"author":{"gitId":"ShawnTanzc"},"content":"![Expenses UML Diagram](https://i.imgur.com/z8EE8CS.jpg)"},{"lineNumber":243,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":244,"author":{"gitId":"ShawnTanzc"},"content":"\u003ccenter\u003e\u003ci\u003eFigure 7: Expenses Classes\u003c/i\u003e\u003c/center\u003e"},{"lineNumber":245,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":246,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":247,"author":{"gitId":"ShawnTanzc"},"content":"The `NewTripCommand` receives `currencyAbbreviation`, `budgetValue` and `ForExValue` from the inputs and stores it within the current `Trip` object. `ExpenseList` array object which consists of `Expense` object utilized the relevant objects stored in `Trip`. This allows `AddExpenseCommand`, `DeleteExpenseCommand` and `ListExpenseCommand` to access the data and edit or list them respectively."},{"lineNumber":248,"author":{"gitId":"ShawnTanzc"},"content":"`AddExpenseCommand` consist of `ExpenseComparator` which implements `Comparator\u003cExpense\u003e`. The `ExpenseComparator` sorts the variables in a blackbox by \u003cb\u003ecomparing\u003c/b\u003e two objects at a time."},{"lineNumber":249,"author":{"gitId":"ShawnTanzc"},"content":"`ListExpenseCommand` further access the `currencyAbbreviation` and `ForExValue` objects to print out both local and foreign currency based on the input provided."},{"lineNumber":250,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":251,"author":{"gitId":"ShawnTanzc"},"content":"A sample output can be seen as follows:"},{"lineNumber":252,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":253,"author":{"gitId":"ShawnTanzc"},"content":"Total budget: 300.00 MYR (200.00 SGD)"},{"lineNumber":254,"author":{"gitId":"ShawnTanzc"},"content":"Expense List:"},{"lineNumber":255,"author":{"gitId":"ShawnTanzc"},"content":"[1] Day 1: bubble tea - 8.00"},{"lineNumber":256,"author":{"gitId":"ShawnTanzc"},"content":"[2] Day 2: hotel room - 200.00"},{"lineNumber":257,"author":{"gitId":"ShawnTanzc"},"content":"Your current total spending is 208.00 MYR (138.67 SGD)"},{"lineNumber":258,"author":{"gitId":"ShawnTanzc"},"content":"Your current remaining budget is 92.00 MYR (61.33 SGD)"},{"lineNumber":259,"author":{"gitId":"ShawnTanzc"},"content":"You are still spending within your budget."},{"lineNumber":260,"author":{"gitId":"ShawnTanzc"},"content":"[\u003d\u003d\u003d\u003d\u003d\u003d\u003d---] 69.3%"},{"lineNumber":261,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":262,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":263,"author":{"gitId":"ShawnTanzc"},"content":"### 4.4 Foreign Exchange Converter (Shawn)"},{"lineNumber":264,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":265,"author":{"gitId":"ShawnTanzc"},"content":"Trippie provide travellers with a quicker alternative to convert any amount into local or foreign currency. Below is its class diagram."},{"lineNumber":266,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":267,"author":{"gitId":"ShawnTanzc"},"content":"![Currency UML Diagram](https://i.imgur.com/CIvc6nq.jpg)"},{"lineNumber":268,"author":{"gitId":"ShawnTanzc"},"content":"\u003ccenter\u003e\u003ci\u003eFigure 8: Currency Classes\u003c/i\u003e\u003c/center\u003e"},{"lineNumber":269,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":270,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":271,"author":{"gitId":"ShawnTanzc"},"content":"Similar to [4.3 Budget and Expenses](#43-budget-and-expenses-shawn), `currencyAbbreviation`, `budgetValue` and `forExValue` are retrievable from `Trip` object."},{"lineNumber":272,"author":{"gitId":"ShawnTanzc"},"content":"`Currency` object composes of an **enumeration** `CurrencyType` object. This provides **clarity** since it consists of only `LOCAL` and `FOREIGN` constants."},{"lineNumber":273,"author":{"gitId":"ShawnTanzc"},"content":"`CalculateCurrencyCommand` retrieve data and convert the input amount according to the input choice."},{"lineNumber":274,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":275,"author":{"gitId":"ShawnTanzc"},"content":"Here\u0027s an example of the conversion based on the relevant data and inputs."},{"lineNumber":276,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":277,"author":{"gitId":"ShawnTanzc"},"content":"Processing... Please Wait."},{"lineNumber":278,"author":{"gitId":"ShawnTanzc"},"content":"That amount in your local currency is 13.33 SGD."},{"lineNumber":279,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":280,"author":{"gitId":"ShawnTanzc"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":281,"author":{"gitId":"weishuangtan"},"content":"\u003c!-- @@author weishuangtan --\u003e"},{"lineNumber":282,"author":{"gitId":"weishuangtan"},"content":"### 4.5 Import and Export Files (Wei Shuang)"},{"lineNumber":283,"author":{"gitId":"weishuangtan"},"content":"Trippie aims to let its users save and view their files in a reader-friendly format, which is why the import and export files feature is implemented. This feature is designed for users to view their trips via a **text file** anywhere and anytime during their trip conveniently."},{"lineNumber":284,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":285,"author":{"gitId":"weishuangtan"},"content":"Each trip will be saved individually into their respective text files, and each file will contain the trip\u0027s `ExpenseList` and `PlaceList`. This information is portrayed in a **reader-friendly format** for users to read the text files easily during their trip."},{"lineNumber":286,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":287,"author":{"gitId":"weishuangtan"},"content":"Here is an example of a saved trip in text file:"},{"lineNumber":288,"author":{"gitId":"weishuangtan"},"content":"```"},{"lineNumber":289,"author":{"gitId":"weishuangtan"},"content":"This file shows your saved trips under Trippie!"},{"lineNumber":290,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":291,"author":{"gitId":"weishuangtan"},"content":"Here is your itinerary! Enjoy your trip :)"},{"lineNumber":292,"author":{"gitId":"weishuangtan"},"content":"Day | Start Time | End Time | Place"},{"lineNumber":293,"author":{"gitId":"weishuangtan"},"content":"1 | 1400 | 1700 | Shopping at Johor Bahru City Square"},{"lineNumber":294,"author":{"gitId":"weishuangtan"},"content":"1 | 2000 | 2200 | Check-in hotel"},{"lineNumber":295,"author":{"gitId":"weishuangtan"},"content":"2 | 0900 | 1200 | Dinosaurs Alive Water Theme Park"},{"lineNumber":296,"author":{"gitId":"weishuangtan"},"content":"2 | 1800 | 2000 | Dinner at Cafe BLD"},{"lineNumber":297,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":298,"author":{"gitId":"weishuangtan"},"content":"These are your expenses!"},{"lineNumber":299,"author":{"gitId":"weishuangtan"},"content":"Day | Item | Cost"},{"lineNumber":300,"author":{"gitId":"weishuangtan"},"content":"1 | Hand Bag | $60.00"},{"lineNumber":301,"author":{"gitId":"weishuangtan"},"content":"2 | Tickets | $75.00"},{"lineNumber":302,"author":{"gitId":"weishuangtan"},"content":"2 | Buffet Dinner | $70.00"},{"lineNumber":303,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":304,"author":{"gitId":"weishuangtan"},"content":"Total budget: $1000.00"},{"lineNumber":305,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":306,"author":{"gitId":"weishuangtan"},"content":"Forex Abbreviation: MYR"},{"lineNumber":307,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":308,"author":{"gitId":"weishuangtan"},"content":"Forex Rate: 3.0"},{"lineNumber":309,"author":{"gitId":"weishuangtan"},"content":"```"},{"lineNumber":310,"author":{"gitId":"weishuangtan"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":311,"author":{"gitId":"ShawnTanzc"},"content":"## 5.0 Appendix: Requirements"},{"lineNumber":312,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":313,"author":{"gitId":"tengkianen"},"content":"\u003c!-- @@author tengkianen --\u003e"},{"lineNumber":314,"author":{"gitId":"tengkianen"},"content":"### 5.1 Product scope (Kian En)"},{"lineNumber":315,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":316,"author":{"gitId":"tengkianen"},"content":"The following sections display Trippie\u0027s potential target user profile and its value proposition."},{"lineNumber":317,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":318,"author":{"gitId":"tengkianen"},"content":"#### 5.1.0 Target user profile"},{"lineNumber":319,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":320,"author":{"gitId":"tengkianen"},"content":"Here are 4 factors for our targeted user profile"},{"lineNumber":321,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":322,"author":{"gitId":"tengkianen"},"content":"- Students who love to travel."},{"lineNumber":323,"author":{"gitId":"tengkianen"},"content":"- Students going on exchange trips e.g. Student Exchange Program (SEP), NUS Overseas College (NOC)."},{"lineNumber":324,"author":{"gitId":"tengkianen"},"content":"- Students who like to challenge themselves to plan for their own trips."},{"lineNumber":325,"author":{"gitId":"tengkianen"},"content":"- Students who seek convenience in tracking their expenses under the same planning application."},{"lineNumber":326,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":327,"author":{"gitId":"tengkianen"},"content":"#### 5.1.1 Value proposition"},{"lineNumber":328,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":329,"author":{"gitId":"tengkianen"},"content":"It allows users to plan multiple trips in a one-stop platform before and during the trip. It provides user with a "},{"lineNumber":330,"author":{"gitId":"tengkianen"},"content":"convenient method of tracking expenditure while not spending past their budget. Lastly, it also allows user to quickly convert "},{"lineNumber":331,"author":{"gitId":"tengkianen"},"content":"any amount from local to foreign currency, vice versa. "},{"lineNumber":332,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":333,"author":{"gitId":"tengkianen"},"content":"### 5.2 User Stories (Kian En)"},{"lineNumber":334,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":335,"author":{"gitId":"tengkianen"},"content":"This table demonstrates a list of user stories relevant to Trippie."},{"lineNumber":336,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":337,"author":{"gitId":"tengkianen"},"content":"|Version| As a ... | I want ... | So that I can ...|"},{"lineNumber":338,"author":{"gitId":"tengkianen"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":339,"author":{"gitId":"tengkianen"},"content":"|v1.0|Student event planner|A good organiser|Update details of the trips conveniently|"},{"lineNumber":340,"author":{"gitId":"tengkianen"},"content":"|v1.0|Student who loves travelling with friends|To easily plan my group trip and share it with my friends|Plan our trips together by being able to seek their advice easily|"},{"lineNumber":341,"author":{"gitId":"tengkianen"},"content":"|v1.0|Student who is unfamiliar with complex travel planners|To have a simple platform that is easy to use|Efficiently plan out my itinerary|"},{"lineNumber":342,"author":{"gitId":"tengkianen"},"content":"|v1.0|Studious student|To have my trips automatically saved|Not worry about my trips getting lost if I focus on something else|"},{"lineNumber":343,"author":{"gitId":"tengkianen"},"content":"|v1.0|Student who likes to plan as I travel|To update my trips daily|use them again in the future|"},{"lineNumber":344,"author":{"gitId":"tengkianen"},"content":"|v1.0|Student who wants to plan trips online|To take note of any links and/or online references to certain accommodations, places, or restaurants|Open them later|"},{"lineNumber":345,"author":{"gitId":"tengkianen"},"content":"|v1.0|Student in a student exchange planning committee|To note down some tourist attraction places in Singapore|Bring the exchange students around during orientation|"},{"lineNumber":346,"author":{"gitId":"tengkianen"},"content":"|v1.0|Student who likes to keep notes on places I travel before|To note down my fresh experiences while on travel trips|Open and look back at it anytime|"},{"lineNumber":347,"author":{"gitId":"tengkianen"},"content":"|v1.0|Student who is always on-the-go|To input my spending in a very quick manner|Input my spending without a hassle|"},{"lineNumber":348,"author":{"gitId":"tengkianen"},"content":"|v2.0|Student traveling to a foreign country for the first time|To record cultural differences and some other travel notes before traveling there|Access them quickly in that country to avoid any misunderstandings|"},{"lineNumber":349,"author":{"gitId":"tengkianen"},"content":"|v2.0|Student unsure on which country to visit for exchange | To plan various trips before looking at them individually | Make an informed decision which country I\u0027m most interested in for exchange|"},{"lineNumber":350,"author":{"gitId":"tengkianen"},"content":"|v2.0|Student who is not very good at managing expenses|To be reminded when my spending are going to exceed my initial budget|Reduce my spending if required|"},{"lineNumber":351,"author":{"gitId":"tengkianen"},"content":"|v2.0|Student who plans trip ahead of time|To be able to edit whatever has been planned easily|Improve my itinerary easily|"},{"lineNumber":352,"author":{"gitId":"tengkianen"},"content":"|v2.0|Student who is interested in many overseas opportunities|To create ane edit multiple trips simultaneously|Plan multiple trips ahead at a time|"},{"lineNumber":353,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":354,"author":{"gitId":"tengkianen"},"content":"### 5.3 Non-Functional Requirements (Kian En)"},{"lineNumber":355,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":356,"author":{"gitId":"tengkianen"},"content":"| Requirement Type | Description |"},{"lineNumber":357,"author":{"gitId":"tengkianen"},"content":"|------------------|-------------|"},{"lineNumber":358,"author":{"gitId":"tengkianen"},"content":"|Constraint|Single user product|"},{"lineNumber":359,"author":{"gitId":"tengkianen"},"content":"|Performance|Software should not be dependent on a remote server|"},{"lineNumber":360,"author":{"gitId":"tengkianen"},"content":"|Performance|Software should not exceed 100Mb for JAR file and 15MB per PDF file|"},{"lineNumber":361,"author":{"gitId":"tengkianen"},"content":"|Quality|Users should prefer CLI/Typing|"},{"lineNumber":362,"author":{"gitId":"tengkianen"},"content":"|Technical|Must have Java 11 installed|"},{"lineNumber":363,"author":{"gitId":"tengkianen"},"content":"|Technical|No DBMS, all data to be stored locally|"},{"lineNumber":364,"author":{"gitId":"tengkianen"},"content":"|Technical|Data stored must be in human-editable files|"},{"lineNumber":365,"author":{"gitId":"tengkianen"},"content":"|Technical|Programme should be platform independent|"},{"lineNumber":366,"author":{"gitId":"tengkianen"},"content":"|Technical|Programme should work without an installer|"},{"lineNumber":367,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":368,"author":{"gitId":"tengkianen"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":369,"author":{"gitId":"tengkianen"},"content":"### 5.4 Glossary"},{"lineNumber":370,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":371,"author":{"gitId":"ivanderjmw"},"content":"* *CLI* - Command Line Interface"},{"lineNumber":372,"author":{"gitId":"ivanderjmw"},"content":"* *IntelliJ* - A Java IDE developed by Jetbrains"},{"lineNumber":373,"author":{"gitId":"ivanderjmw"},"content":"* *JUnit* - Java Unit Testing Framework"},{"lineNumber":374,"author":{"gitId":"ivanderjmw"},"content":"* *Java* - A programming language"},{"lineNumber":375,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":376,"author":{"gitId":"tengkianen"},"content":"## 6.0 Appendix: Instructions for Manual Testing (Shawn)"},{"lineNumber":377,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":378,"author":{"gitId":"ivanderjmw"},"content":"Given below are the instructions to test the app manually."},{"lineNumber":379,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":380,"author":{"gitId":"felixhalim"},"content":"\u003c!-- @@author felixhalim --\u003e"},{"lineNumber":381,"author":{"gitId":"felixhalim"},"content":"### 6.1 Launch and Shutdown (Felix)"},{"lineNumber":382,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":383,"author":{"gitId":"felixhalim"},"content":"1. Initial Launch"},{"lineNumber":384,"author":{"gitId":"felixhalim"},"content":"   1. Verify that you have Java 11 or above installed in your computer by running `java --version`."},{"lineNumber":385,"author":{"gitId":"felixhalim"},"content":"   2. Download the latest `trippie.jar` from [here](https://github.com/AY2021S1-CS2113T-W11-2/tp/releases/tag/v2.1)."},{"lineNumber":386,"author":{"gitId":"felixhalim"},"content":"   3. Copy the file to a folder where you want to run it from."},{"lineNumber":387,"author":{"gitId":"felixhalim"},"content":"   4. Using a command line tool, navigate to the path of `trippie.jar`, by entering `cd path/to/file`"},{"lineNumber":388,"author":{"gitId":"felixhalim"},"content":"       * If your operating system is Windows, use Command Prompt."},{"lineNumber":389,"author":{"gitId":"felixhalim"},"content":"       * If your operating system is MacOS, use Terminal."},{"lineNumber":390,"author":{"gitId":"felixhalim"},"content":"   6. Enter `java -jar trippie.jar` in your command line tool and press enter."},{"lineNumber":391,"author":{"gitId":"felixhalim"},"content":"   7. If the setup is correct, you should see a welcome message. Then, it is now ready to go."},{"lineNumber":392,"author":{"gitId":"felixhalim"},"content":"   8. Create your first trip by entering `new trip` to the command line. Then, enter your trip name, start date, exchange rate, currency, and budget."},{"lineNumber":393,"author":{"gitId":"felixhalim"},"content":"   9. Add your first place using `add`. Then buy your first item with `buy`."},{"lineNumber":394,"author":{"gitId":"felixhalim"},"content":"   10. Try listing your places by entering `list /p` and your expenses with `list /e`."},{"lineNumber":395,"author":{"gitId":"felixhalim"},"content":"2. Shutdown"},{"lineNumber":396,"author":{"gitId":"felixhalim"},"content":"   1. `exit` to exit Trippie."},{"lineNumber":397,"author":{"gitId":"felixhalim"},"content":"   2. Your Trippie files will be automatically saved in ./trippie_data!"},{"lineNumber":398,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":399,"author":{"gitId":"felixhalim"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":400,"author":{"gitId":"ShawnTanzc"},"content":"\u003c!-- @@author ShawnTanzc --\u003e"},{"lineNumber":401,"author":{"gitId":"ShawnTanzc"},"content":"### 6.2 Step by Step Guide (Shawn)"},{"lineNumber":402,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":403,"author":{"gitId":"ShawnTanzc"},"content":"Given below are the Step by Step Guide to use Trippie."},{"lineNumber":404,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":405,"author":{"gitId":"ShawnTanzc"},"content":"#### Creating a new trip"},{"lineNumber":406,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":407,"author":{"gitId":"ShawnTanzc"},"content":"1. Creates a new trip and sets it as the current trip."},{"lineNumber":408,"author":{"gitId":"ShawnTanzc"},"content":"* Test Case:  Enter the command `new trip`. Trippie will prompt you to enter the trip name. Try inputting an invalid file name, like `A trip of 01/01`. "},{"lineNumber":409,"author":{"gitId":"ShawnTanzc"},"content":"* Expected: Trippie will ask you to re-enter the name."},{"lineNumber":410,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":411,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":412,"author":{"gitId":"ShawnTanzc"},"content":"Enter your new trip\u0027s name:A trip of 01/01"},{"lineNumber":413,"author":{"gitId":"ShawnTanzc"},"content":"New trip should not contain invalid characters like \u003c\u003e:\"/\\|?*"},{"lineNumber":414,"author":{"gitId":"ShawnTanzc"},"content":"Enter your new trip\u0027s name:"},{"lineNumber":415,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":416,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":417,"author":{"gitId":"ShawnTanzc"},"content":"* Test Case: Trippie will prompt you to enter another trip name. Try inputting a valid file name, like `test`."},{"lineNumber":418,"author":{"gitId":"ShawnTanzc"},"content":"* Expected: Trippie will ask you for your start date, foreign exchange rate, abbreviation and budget as follows:"},{"lineNumber":419,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":420,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":421,"author":{"gitId":"ShawnTanzc"},"content":"Enter your new trip\u0027s name:test"},{"lineNumber":422,"author":{"gitId":"ShawnTanzc"},"content":"Enter your new trip\u0027s start date (dd-mm-yyyy):01-01-2011"},{"lineNumber":423,"author":{"gitId":"ShawnTanzc"},"content":"Enter the foreign exchange rate:3.0"},{"lineNumber":424,"author":{"gitId":"ShawnTanzc"},"content":"Enter the foreign currency abbreviation (eg. MYR):THA"},{"lineNumber":425,"author":{"gitId":"ShawnTanzc"},"content":"Enter your budget for the trip (in SGD):150"},{"lineNumber":426,"author":{"gitId":"ShawnTanzc"},"content":"Added the trip 1 test 01-01-2011"},{"lineNumber":427,"author":{"gitId":"ShawnTanzc"},"content":"Current trip is set to \u0027test\u0027."},{"lineNumber":428,"author":{"gitId":"ShawnTanzc"},"content":"``` "},{"lineNumber":429,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":430,"author":{"gitId":"ShawnTanzc"},"content":"#### Loading an existing trip"},{"lineNumber":431,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":432,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Create a new trip. Enter the command `load trip`. Trippie will prompt you to enter a trip index. Enter correspondingly."},{"lineNumber":433,"author":{"gitId":"ShawnTanzc"},"content":"* Expected: "},{"lineNumber":434,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":435,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":436,"author":{"gitId":"ShawnTanzc"},"content":"Here are your existing trips."},{"lineNumber":437,"author":{"gitId":"ShawnTanzc"},"content":"1. test [No places or expenses added yet]"},{"lineNumber":438,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":439,"author":{"gitId":"ShawnTanzc"},"content":"Which one do you want to load? Enter the index:1"},{"lineNumber":440,"author":{"gitId":"ShawnTanzc"},"content":"Current trip is set to \u0027test\u0027."},{"lineNumber":441,"author":{"gitId":"ShawnTanzc"},"content":"Reading the Trippie files now..."},{"lineNumber":442,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":443,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":444,"author":{"gitId":"ShawnTanzc"},"content":"#### Editing an existing trip"},{"lineNumber":445,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":446,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Enter the command `edit trip`. Trippie will prompt you to enter a trip index.  Enter correspondingly and edit whichever relevant information."},{"lineNumber":447,"author":{"gitId":"ShawnTanzc"},"content":"* Expected: Trippie will ask you for your start date, foreign exchange rate, abbreviation and budget as follows (Leave blank if you do not want to change): "},{"lineNumber":448,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":449,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":450,"author":{"gitId":"ShawnTanzc"},"content":"Which one do you want to edit? Enter the index:1"},{"lineNumber":451,"author":{"gitId":"ShawnTanzc"},"content":"Current trip is set to \u0027test\u0027."},{"lineNumber":452,"author":{"gitId":"ShawnTanzc"},"content":"Reading the Trippie files now..."},{"lineNumber":453,"author":{"gitId":"ShawnTanzc"},"content":"Leave the field empty if you do not want to change the specified detail."},{"lineNumber":454,"author":{"gitId":"ShawnTanzc"},"content":"Enter edited name, [old: test]:old"},{"lineNumber":455,"author":{"gitId":"ShawnTanzc"},"content":"Enter your new trip\u0027s start date (dd-mm-yyyy) [old:01-01-2011]:01-01-2012"},{"lineNumber":456,"author":{"gitId":"ShawnTanzc"},"content":"Enter the foreign exchange rate [old:3.0]:4.0"},{"lineNumber":457,"author":{"gitId":"ShawnTanzc"},"content":"Enter the foreign currency abbreviation (eg. MYR) [old: THA]:TAH"},{"lineNumber":458,"author":{"gitId":"ShawnTanzc"},"content":"Enter your budget for the trip (in SGD) [old:200.0]:200"},{"lineNumber":459,"author":{"gitId":"ShawnTanzc"},"content":"Edited the trip 1 old 01-01-2012"},{"lineNumber":460,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":461,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":462,"author":{"gitId":"ShawnTanzc"},"content":"#### Deleting trip"},{"lineNumber":463,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":464,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Enter the command `delete trip`. Trippie will prompt you to enter a trip index. Enter correspondingly."},{"lineNumber":465,"author":{"gitId":"ShawnTanzc"},"content":"* Expected: "},{"lineNumber":466,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":467,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":468,"author":{"gitId":"ShawnTanzc"},"content":"Here are your existing trips."},{"lineNumber":469,"author":{"gitId":"ShawnTanzc"},"content":"1. old [No places or expenses added yet]"},{"lineNumber":470,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":471,"author":{"gitId":"ShawnTanzc"},"content":"Which one do you want to edit? Enter the index:1"},{"lineNumber":472,"author":{"gitId":"ShawnTanzc"},"content":"Current trip is set to \u0027old\u0027."},{"lineNumber":473,"author":{"gitId":"ShawnTanzc"},"content":"Reading the Trippie files now..."},{"lineNumber":474,"author":{"gitId":"ShawnTanzc"},"content":"Are you sure you want to permanently delete \u0027old\u0027? [Y/N]:Y"},{"lineNumber":475,"author":{"gitId":"ShawnTanzc"},"content":"Deleted trip old."},{"lineNumber":476,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":477,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":478,"author":{"gitId":"ShawnTanzc"},"content":"#### Viewing help"},{"lineNumber":479,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":480,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Enter the command `help`."},{"lineNumber":481,"author":{"gitId":"ShawnTanzc"},"content":"* Expected: Trippie will show you a table of commands with examples."},{"lineNumber":482,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":483,"author":{"gitId":"ShawnTanzc"},"content":"#### Adding a place"},{"lineNumber":484,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":485,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Key in `add /n test place /d 3 /t 0000 to 0100` into the CLI."},{"lineNumber":486,"author":{"gitId":"ShawnTanzc"},"content":"* Expected:"},{"lineNumber":487,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":488,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":489,"author":{"gitId":"ShawnTanzc"},"content":"Got it. I\u0027ve added this place:"},{"lineNumber":490,"author":{"gitId":"ShawnTanzc"},"content":"0000 - 0100 test place"},{"lineNumber":491,"author":{"gitId":"ShawnTanzc"},"content":"Now you have 1 place in the list."},{"lineNumber":492,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":493,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":494,"author":{"gitId":"ShawnTanzc"},"content":"#### Listing all places"},{"lineNumber":495,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":496,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Enter the command `list /p`. Trippie will then list out the places that you have added into the trip."},{"lineNumber":497,"author":{"gitId":"ShawnTanzc"},"content":"* Expected:"},{"lineNumber":498,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":499,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":500,"author":{"gitId":"ShawnTanzc"},"content":"DAY 3: (2011-01-03)"},{"lineNumber":501,"author":{"gitId":"ShawnTanzc"},"content":"[1] 0000 - 0100 test place"},{"lineNumber":502,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":503,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":504,"author":{"gitId":"ShawnTanzc"},"content":"#### Searching places with keyword"},{"lineNumber":505,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":506,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Enter the command `search test` to find places that consist of the `test` keyword."},{"lineNumber":507,"author":{"gitId":"ShawnTanzc"},"content":"* Expected: "},{"lineNumber":508,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":509,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":510,"author":{"gitId":"ShawnTanzc"},"content":"Here is your search result:"},{"lineNumber":511,"author":{"gitId":"ShawnTanzc"},"content":"1.0000 - 0100 test place on DAY 3"},{"lineNumber":512,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":513,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":514,"author":{"gitId":"ShawnTanzc"},"content":"#### Deleting place"},{"lineNumber":515,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":516,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Enter the command `delete /p 1`. Trippie will then delete the place in the first index of the `Place List`."},{"lineNumber":517,"author":{"gitId":"ShawnTanzc"},"content":"* Expected:"},{"lineNumber":518,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":519,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":520,"author":{"gitId":"ShawnTanzc"},"content":"Noted. I\u0027ve removed this place from the place list."},{"lineNumber":521,"author":{"gitId":"ShawnTanzc"},"content":"0000 - 0100 test place"},{"lineNumber":522,"author":{"gitId":"ShawnTanzc"},"content":"Now you have 0 place in the list."},{"lineNumber":523,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":524,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":525,"author":{"gitId":"ShawnTanzc"},"content":"#### Editing budget"},{"lineNumber":526,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":527,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Enter `budget 1000`."},{"lineNumber":528,"author":{"gitId":"ShawnTanzc"},"content":"* Expected: Trippie will set your budget to 1000."},{"lineNumber":529,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":530,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":531,"author":{"gitId":"ShawnTanzc"},"content":"_________________________________________________________________________"},{"lineNumber":532,"author":{"gitId":"ShawnTanzc"},"content":"Successfully set your total budget to 1000.00"},{"lineNumber":533,"author":{"gitId":"ShawnTanzc"},"content":"_________________________________________________________________________"},{"lineNumber":534,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":535,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":536,"author":{"gitId":"ShawnTanzc"},"content":"#### Adding an expense"},{"lineNumber":537,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":538,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Key in `buy /n item test /d 2 /c 300` into the CLI."},{"lineNumber":539,"author":{"gitId":"ShawnTanzc"},"content":"* Expected:"},{"lineNumber":540,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":541,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":542,"author":{"gitId":"ShawnTanzc"},"content":"Got it! I\u0027ve added the following item: Day 2: item test - 300.00 THA"},{"lineNumber":543,"author":{"gitId":"ShawnTanzc"},"content":"Now you have 1 item in the list."},{"lineNumber":544,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":545,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":546,"author":{"gitId":"ShawnTanzc"},"content":"#### Listing all expenses"},{"lineNumber":547,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":548,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Enter the command `list /e`. Trippie will then list out the expenditure list of all the items bought."},{"lineNumber":549,"author":{"gitId":"ShawnTanzc"},"content":"* Expected:"},{"lineNumber":550,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":551,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":552,"author":{"gitId":"ShawnTanzc"},"content":"Total budget: 600.00 THA (200.00 SGD)"},{"lineNumber":553,"author":{"gitId":"ShawnTanzc"},"content":"Expense List:"},{"lineNumber":554,"author":{"gitId":"ShawnTanzc"},"content":"[1] Day 2: item test - 300.00 THA"},{"lineNumber":555,"author":{"gitId":"ShawnTanzc"},"content":"Your current total spending is 300.00 THA (100.00 SGD)"},{"lineNumber":556,"author":{"gitId":"ShawnTanzc"},"content":"Your current remaining budget is 300.00 THA (100.00 SGD)"},{"lineNumber":557,"author":{"gitId":"ShawnTanzc"},"content":"You are still spending within your budget."},{"lineNumber":558,"author":{"gitId":"ShawnTanzc"},"content":"[\u003d\u003d\u003d\u003d\u003d-----] 50.0%"},{"lineNumber":559,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":560,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":561,"author":{"gitId":"ShawnTanzc"},"content":"#### Deleting expense"},{"lineNumber":562,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":563,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Enter the command `delete /e 1`.  Trippie will then delete the place in the first index of the `Expense List`."},{"lineNumber":564,"author":{"gitId":"ShawnTanzc"},"content":"* Expected:"},{"lineNumber":565,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":566,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":567,"author":{"gitId":"ShawnTanzc"},"content":"Noted. I\u0027ve removed this item from the expenditure list."},{"lineNumber":568,"author":{"gitId":"ShawnTanzc"},"content":"Day 2: item test - 300.00 THA"},{"lineNumber":569,"author":{"gitId":"ShawnTanzc"},"content":"Now you have 0 item in the list."},{"lineNumber":570,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":571,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":572,"author":{"gitId":"ShawnTanzc"},"content":"#### Converting currency"},{"lineNumber":573,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":574,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Enter the command `convert /toFOR 250`. Trippie will then convert the local currency amount to foreign currency."},{"lineNumber":575,"author":{"gitId":"ShawnTanzc"},"content":"* Expected:"},{"lineNumber":576,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":577,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":578,"author":{"gitId":"ShawnTanzc"},"content":"Processing... Please Wait."},{"lineNumber":579,"author":{"gitId":"ShawnTanzc"},"content":"That amount in your foreign currency is 750.00 THA."},{"lineNumber":580,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":581,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":582,"author":{"gitId":"ShawnTanzc"},"content":"#### Exiting Trippie"},{"lineNumber":583,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":584,"author":{"gitId":"ShawnTanzc"},"content":"* Test case: Enter the command `exit`. Trippie will exit and automatically save all the data."},{"lineNumber":585,"author":{"gitId":"ShawnTanzc"},"content":"* Expected:"},{"lineNumber":586,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":587,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":588,"author":{"gitId":"ShawnTanzc"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":589,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":590,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":591,"author":{"gitId":"ShawnTanzc"},"content":"[Back to the top](#table-of-content)"},{"lineNumber":592,"author":{"gitId":"ShawnTanzc"},"content":"\u003c!-- @@author--\u003e"}],"authorContributionMap":{"ShawnTanzc":256,"felixhalim":67,"tengkianen":115,"-":11,"ivanderjmw":80,"weishuangtan":63}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felixhalim"},"content":"# Trippie"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"felixhalim"},"content":"![Trippie Logo](https://i.imgur.com/jSwGL7O.png)"},{"lineNumber":4,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":5,"author":{"gitId":"felixhalim"},"content":"Trippie is a command-line app to plan any of your upcoming trips. It is tailored to match the needs of student travellers. Whether you are planning for your summer holiday, or a leisure trip on your student exchange program, Trippie got you covered!"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Useful links:"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)"}],"authorContributionMap":{"felixhalim":4,"-":6}},{"path":"docs/TestingGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ShawnTanzc"},"content":"# Testing Guide"},{"lineNumber":2,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"![Trippie Logo](https://i.imgur.com/jSwGL7O.png)"},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":"\u003c!-- @@author ShawnTanzc --\u003e"},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":"## Table of Content"},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":"* [1.0 Introduction](#10-Introduction)"},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":"* [2.0 Running tests](#20-Running-tests)"},{"lineNumber":9,"author":{"gitId":"ShawnTanzc"},"content":"* [3.0 Types of tests](#30-Types-of-tests)"},{"lineNumber":10,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":11,"author":{"gitId":"ShawnTanzc"},"content":"## 1.0 Introduction"},{"lineNumber":12,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":13,"author":{"gitId":"ShawnTanzc"},"content":"The following content entails a list of tests to aid you in testing the application."},{"lineNumber":14,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":15,"author":{"gitId":"ShawnTanzc"},"content":"## 2.0 Running tests"},{"lineNumber":16,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":17,"author":{"gitId":"ShawnTanzc"},"content":"There are 2 methods to run tests on the Trippie programme."},{"lineNumber":18,"author":{"gitId":"ShawnTanzc"},"content":"- Method 1: Using IntelliJ JUnit test runner"},{"lineNumber":19,"author":{"gitId":"ShawnTanzc"},"content":"    - To run all test, right-click on the `src/test/java` folder and choose  `Run \u0027Test in \u0027tp.test\u0027\u0027`."},{"lineNumber":20,"author":{"gitId":"ShawnTanzc"},"content":"    - To run a subset of tests, you can right-click on a test package, test class, or a single test and select `Run \u003cTEST NAME\u003e`"},{"lineNumber":21,"author":{"gitId":"ShawnTanzc"},"content":"- Method 2: Using Gradle"},{"lineNumber":22,"author":{"gitId":"ShawnTanzc"},"content":"    - `gradlew clean test` for Windows"},{"lineNumber":23,"author":{"gitId":"ShawnTanzc"},"content":"    - `./gradlew clean test` for Mac and Linux"},{"lineNumber":24,"author":{"gitId":"ShawnTanzc"},"content":"- Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle."},{"lineNumber":25,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":26,"author":{"gitId":"ShawnTanzc"},"content":"## 3.0 Types of tests"},{"lineNumber":27,"author":{"gitId":"ShawnTanzc"},"content":"This project has three types of tests:"},{"lineNumber":28,"author":{"gitId":"ShawnTanzc"},"content":"1. Unit tests targeting the lowest level methods/classes."},{"lineNumber":29,"author":{"gitId":"ShawnTanzc"},"content":"eg. `src.test.java.seedu.trippie.command.CalculateCurrencyCommandTest`."},{"lineNumber":30,"author":{"gitId":"ShawnTanzc"},"content":"2. Integration testing that are checking the integration of multiple code units (those code units are assumed to be working)."},{"lineNumber":31,"author":{"gitId":"ShawnTanzc"},"content":"eg. `src.test.java.seedu.trippie.command.ListExpenseCommandTest`."},{"lineNumber":32,"author":{"gitId":"ShawnTanzc"},"content":"3. Hybrids of unit and integration tests. These test are checking multiple code units as well as how they are connected together."},{"lineNumber":33,"author":{"gitId":"ShawnTanzc"},"content":"eg. `src.test.java.seedu.trippie.command.DeleteExpenseCommandTest`."},{"lineNumber":34,"author":{"gitId":"ShawnTanzc"},"content":"\u003c!-- @@author--\u003e"}],"authorContributionMap":{"ShawnTanzc":34}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felixhalim"},"content":"\u003clink rel\u003d\"stylesheet\" href\u003d\"trippie.css\"\u003e"},{"lineNumber":2,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"felixhalim"},"content":"![Trippie Logo](https://i.imgur.com/jSwGL7O.png)"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"felixhalim"},"content":"\u003c!-- @@author felixhalim --\u003e"},{"lineNumber":8,"author":{"gitId":"felixhalim"},"content":"## Table of Contents (Felix)"},{"lineNumber":9,"author":{"gitId":"felixhalim"},"content":"Below is a list of contents that is included in this document."},{"lineNumber":10,"author":{"gitId":"felixhalim"},"content":"* [1.0 Introduction](#10-introduction-shawn-tan)"},{"lineNumber":11,"author":{"gitId":"felixhalim"},"content":"* [2.0 About this document](#20-about-this-document-felix)"},{"lineNumber":12,"author":{"gitId":"felixhalim"},"content":"* [3.0 How to use](#30-how-to-use-ivander)"},{"lineNumber":13,"author":{"gitId":"felixhalim"},"content":"* [4.0 Quick Start](#40-quick-start-ivander)"},{"lineNumber":14,"author":{"gitId":"felixhalim"},"content":"* [5.0 Features](#50-features-shawn-tan)"},{"lineNumber":15,"author":{"gitId":"felixhalim"},"content":"    * [5.1 Creating a new trip: **`new trip`**](#51-creating-a-new-trip-new-trip-ivander)"},{"lineNumber":16,"author":{"gitId":"felixhalim"},"content":"    * [5.2 Loading an existing trip: **`load trip`**](#52-loading-an-existing-trip-load-trip-ivander)"},{"lineNumber":17,"author":{"gitId":"felixhalim"},"content":"    * [5.3 Editing a trip: **`edit trip`**](#53-editing-a-trip-edit-trip-ivander)"},{"lineNumber":18,"author":{"gitId":"felixhalim"},"content":"    * [5.4 Deleting a trip: **`delete trip`**](#54-deleting-a-trip-delete-trip-ivander)"},{"lineNumber":19,"author":{"gitId":"felixhalim"},"content":"    * [5.5 Viewing help: **`help`**](#55-viewing-help-help-felix)"},{"lineNumber":20,"author":{"gitId":"felixhalim"},"content":"    * [5.6 Adding a place: **`add`**](#56-adding-a-place-add-felix)"},{"lineNumber":21,"author":{"gitId":"felixhalim"},"content":"    * [5.7 Listing all places: **`list /p`**](#57-listing-all-places-list-p-felix)"},{"lineNumber":22,"author":{"gitId":"felixhalim"},"content":"    * [5.8 Searching for place: **`search`**](#58-searching-for-place-search-wei-shuang)"},{"lineNumber":23,"author":{"gitId":"felixhalim"},"content":"    * [5.9 Deleting place: **`delete /p`**](#59-deleting-place-delete-p-wei-shuang)"},{"lineNumber":24,"author":{"gitId":"felixhalim"},"content":"    * [5.10 Editing budget: **`budget`**](#510-editing-budget-budget-wei-shuang)"},{"lineNumber":25,"author":{"gitId":"felixhalim"},"content":"    * [5.11 Adding an expense: **`buy`**](#511-adding-an-expense-buy-shawn-tan)"},{"lineNumber":26,"author":{"gitId":"felixhalim"},"content":"    * [5.12 Listing all expenses: **`list /e`**](#512-listing-all-expenses-list-e-shawn-tan)"},{"lineNumber":27,"author":{"gitId":"felixhalim"},"content":"    * [5.13 Deleting an expense: **`delete /e`**](#513-deleting-an-expense-delete-e-shawn-tan)"},{"lineNumber":28,"author":{"gitId":"felixhalim"},"content":"    * [5.14 Converting Currency: **`convert /to`**](#514-convert-currency-convert-to-kian-en)"},{"lineNumber":29,"author":{"gitId":"felixhalim"},"content":"        * [5.14.1 Convert to Local Currency (SGD): **`convert /toSGD`**](#5141-convert-to-local-currency-sgd)"},{"lineNumber":30,"author":{"gitId":"felixhalim"},"content":"        * [5.14.2 Convert to Foreign Currency (FOR): **`convert /toFROM`**](#5142-convert-to-foreign-currency-for)"},{"lineNumber":31,"author":{"gitId":"felixhalim"},"content":"    * [5.15 Exiting the Trippie: **`exit`**](#515-exiting-the-trippie-exit-kian-en)"},{"lineNumber":32,"author":{"gitId":"felixhalim"},"content":"    * [5.16 Saving the data](#516-saving-the-data-kian-en)"},{"lineNumber":33,"author":{"gitId":"felixhalim"},"content":"* [6.0 FAQ](#60-faq-kian-en)"},{"lineNumber":34,"author":{"gitId":"felixhalim"},"content":"* [7.0 Command Summary](#70-command-summary-wei-shuang)"},{"lineNumber":35,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":36,"author":{"gitId":"felixhalim"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":37,"author":{"gitId":"ShawnTanzc"},"content":"\u003c!-- @@author ShawnTanzc --\u003e"},{"lineNumber":38,"author":{"gitId":"ShawnTanzc"},"content":"## 1.0 Introduction (Shawn Tan)"},{"lineNumber":39,"author":{"gitId":"ShawnTanzc"},"content":"Trippie is a command-line app to plan any of your upcoming trips. It is tailored to match the needs of student travellers. Whether you are planning for your summer holiday, or a leisure trip on your student exchange program, Trippie got you covered!"},{"lineNumber":40,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":41,"author":{"gitId":"ShawnTanzc"},"content":"![Screenshot of Trippie](https://i.imgur.com/29TB8E8.png)"},{"lineNumber":42,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":43,"author":{"gitId":"ShawnTanzc"},"content":"_A screenshot of Trippie\u0027s command line interface_"},{"lineNumber":44,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":45,"author":{"gitId":"ShawnTanzc"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":46,"author":{"gitId":"felixhalim"},"content":"\u003c!-- @@author felixhalim --\u003e"},{"lineNumber":47,"author":{"gitId":"felixhalim"},"content":"## 2.0 About this document (Felix)"},{"lineNumber":48,"author":{"gitId":"felixhalim"},"content":"This section helps you in using the various features available in Trippie."},{"lineNumber":49,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":50,"author":{"gitId":"felixhalim"},"content":"Note the following symbols and formatting used in this document:"},{"lineNumber":51,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":52,"author":{"gitId":"felixhalim"},"content":"\u003cdiv class\u003d\"info box\" markdown\u003d\"1\"\u003e"},{"lineNumber":53,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":54,"author":{"gitId":"felixhalim"},"content":"ℹ️ This box indicates important information for you to take note of."},{"lineNumber":55,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":56,"author":{"gitId":"felixhalim"},"content":"\u003c/div\u003e"},{"lineNumber":57,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":58,"author":{"gitId":"felixhalim"},"content":"\u003cdiv class\u003d\"warning box\" markdown\u003d\"1\"\u003e"},{"lineNumber":59,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":60,"author":{"gitId":"felixhalim"},"content":"⚠️ This box indicates notable warnings that you should be aware of."},{"lineNumber":61,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":62,"author":{"gitId":"felixhalim"},"content":"\u003c/div\u003e"},{"lineNumber":63,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":64,"author":{"gitId":"felixhalim"},"content":"`command` : This grey highlight shows command line input or output"},{"lineNumber":65,"author":{"gitId":"felixhalim"},"content":"```"},{"lineNumber":66,"author":{"gitId":"felixhalim"},"content":"This block style shows the command line output of Trippie"},{"lineNumber":67,"author":{"gitId":"felixhalim"},"content":"```"},{"lineNumber":68,"author":{"gitId":"felixhalim"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":69,"author":{"gitId":"ivanderjmw"},"content":"\u003c!-- @@author ivanderjmw --\u003e"},{"lineNumber":70,"author":{"gitId":"ivanderjmw"},"content":"## 3.0 How to use (Ivander)"},{"lineNumber":71,"author":{"gitId":"ivanderjmw"},"content":"Begin with the [Quick Start](#40-quick-start-ivander) section if it is your first time using Trippie. All the commands are listed out in the table of contents. To find out the details on each command, just click and follow the links. Please check the [FAQ](#60-faq-kian-en) section for frequently encountered problems."},{"lineNumber":72,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":73,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":74,"author":{"gitId":"ivanderjmw"},"content":"## 4.0 Quick Start (Ivander)"},{"lineNumber":75,"author":{"gitId":"ivanderjmw"},"content":"Written below are the steps to be taken to set up the application:"},{"lineNumber":76,"author":{"gitId":"ivanderjmw"},"content":"1. Verify that you have Java 11 or above installed in your computer by running `java --version`."},{"lineNumber":77,"author":{"gitId":"ivanderjmw"},"content":"2. Download the latest `trippie.jar` from [here](https://github.com/AY2021S1-CS2113T-W11-2/tp/releases/tag/v2.1)."},{"lineNumber":78,"author":{"gitId":"ivanderjmw"},"content":"3. Copy the file to a folder where you want to run it from."},{"lineNumber":79,"author":{"gitId":"ivanderjmw"},"content":"4. Using a command line tool, navigate to the path of `trippie.jar`, by entering `cd path/to/file`"},{"lineNumber":80,"author":{"gitId":"ivanderjmw"},"content":"    * If your operating system is Windows, use Command Prompt."},{"lineNumber":81,"author":{"gitId":"ivanderjmw"},"content":"    * If your operating system is MacOS, use Terminal."},{"lineNumber":82,"author":{"gitId":"ivanderjmw"},"content":"6. Enter `java -jar trippie.jar` in your command line tool and press enter."},{"lineNumber":83,"author":{"gitId":"ivanderjmw"},"content":"7. If the setup is correct, you should see a welcome message. Then, it is now ready to go."},{"lineNumber":84,"author":{"gitId":"ivanderjmw"},"content":"8. Create your first trip by entering [`new trip`](#51-creating-a-new-trip-new-trip-ivander) to the command line. Then, enter your trip name, start date, exchange rate, currency, and budget."},{"lineNumber":85,"author":{"gitId":"ivanderjmw"},"content":"9. Add your first place using [`add`](#56-adding-a-place-add-felix). Then buy your first item with [`buy`](#511-adding-an-expense-buy-shawn-tan)."},{"lineNumber":86,"author":{"gitId":"ivanderjmw"},"content":"10. Try listing your places by entering `list /p` and your expenses with `list /e`."},{"lineNumber":87,"author":{"gitId":"ivanderjmw"},"content":"11. `exit` and check your folder to check your Trippie files!"},{"lineNumber":88,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":89,"author":{"gitId":"ivanderjmw"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":90,"author":{"gitId":"ShawnTanzc"},"content":"\u003c!-- @@author ShawnTanzc --\u003e"},{"lineNumber":91,"author":{"gitId":"ShawnTanzc"},"content":"## 5.0 Features (Shawn Tan)"},{"lineNumber":92,"author":{"gitId":"ShawnTanzc"},"content":"Written below are the various features available in Trippie."},{"lineNumber":93,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":94,"author":{"gitId":"ShawnTanzc"},"content":"\u003cdiv class\u003d\"info box\" markdown\u003d\"1\"\u003e"},{"lineNumber":95,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":96,"author":{"gitId":"ShawnTanzc"},"content":"ℹ️ **Notes on command format:**"},{"lineNumber":97,"author":{"gitId":"ShawnTanzc"},"content":"* The **`bolded syntax`** represents the key command."},{"lineNumber":98,"author":{"gitId":"ShawnTanzc"},"content":"* Words in `CAPITAL LETTERS` are arguments that you need to supply. "},{"lineNumber":99,"author":{"gitId":"ShawnTanzc"},"content":"    * e.g. **`add`**`/n PLACE_NAME /d DAY /t TIME`"},{"lineNumber":100,"author":{"gitId":"ShawnTanzc"},"content":"    * `PLACE_NAME`, `DAY`, `TIME` are arguments needed accordingly."},{"lineNumber":101,"author":{"gitId":"ShawnTanzc"},"content":"* Items in `[square brackets]` are optional. "},{"lineNumber":102,"author":{"gitId":"ShawnTanzc"},"content":"    * e.g. **`list`**`/p [/d DAY]`"},{"lineNumber":103,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":104,"author":{"gitId":"ShawnTanzc"},"content":"\u003c/div\u003e"},{"lineNumber":105,"author":{"gitId":"ShawnTanzc"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":106,"author":{"gitId":"ivanderjmw"},"content":"\u003c!-- @@author ivanderjmw --\u003e"},{"lineNumber":107,"author":{"gitId":"ivanderjmw"},"content":"### 5.1 Creating a new trip: `new trip` (Ivander)"},{"lineNumber":108,"author":{"gitId":"ivanderjmw"},"content":"Creates a new trip. You will be prompted to enter some details (i.e. name, start date, exchange rate, and budget) after entering this command. Trippie allows you to organize multiple trips, thus you can use this command to create many trips conveniently."},{"lineNumber":109,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":110,"author":{"gitId":"ivanderjmw"},"content":"Format: **`new trip`**"},{"lineNumber":111,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":112,"author":{"gitId":"ivanderjmw"},"content":"Example: **`new trip`**"},{"lineNumber":113,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":114,"author":{"gitId":"ivanderjmw"},"content":"\u003cbr/\u003e"},{"lineNumber":115,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":116,"author":{"gitId":"ivanderjmw"},"content":"Expected Output:"},{"lineNumber":117,"author":{"gitId":"ivanderjmw"},"content":"```"},{"lineNumber":118,"author":{"gitId":"ivanderjmw"},"content":"Enter your new trip\u0027s name: Summer Exchange Peru"},{"lineNumber":119,"author":{"gitId":"ivanderjmw"},"content":"Enter your new trip\u0027s start date (dd-mm-yyyy):12-12-2020"},{"lineNumber":120,"author":{"gitId":"ivanderjmw"},"content":"Enter the foreign exchange rate:2.65"},{"lineNumber":121,"author":{"gitId":"ivanderjmw"},"content":"Enter the foreign currency abbreviation (eg. MYR): SOL"},{"lineNumber":122,"author":{"gitId":"ivanderjmw"},"content":"Enter your budget for the trip (in SGD):500"},{"lineNumber":123,"author":{"gitId":"ivanderjmw"},"content":"Added the trip 4  Summer Exchange Peru 12-12-2020"},{"lineNumber":124,"author":{"gitId":"ivanderjmw"},"content":"```"},{"lineNumber":125,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":126,"author":{"gitId":"ivanderjmw"},"content":"\u003cdiv class\u003d\"warning box\" markdown\u003d\"1\"\u003e"},{"lineNumber":127,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":128,"author":{"gitId":"ivanderjmw"},"content":"⚠️ **Warning** "},{"lineNumber":129,"author":{"gitId":"ivanderjmw"},"content":"* Enter your trip name without slashes i.e. \"\\\\\" or \"/\"."},{"lineNumber":130,"author":{"gitId":"ivanderjmw"},"content":"* Input your start date with the given format."},{"lineNumber":131,"author":{"gitId":"ivanderjmw"},"content":"* Currency abbreviation should only be 3 characters."},{"lineNumber":132,"author":{"gitId":"ivanderjmw"},"content":"* Budget is accurate only to 2 decimal places."},{"lineNumber":133,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":134,"author":{"gitId":"ivanderjmw"},"content":"\u003c/div\u003e"},{"lineNumber":135,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":136,"author":{"gitId":"ivanderjmw"},"content":"---"},{"lineNumber":137,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":138,"author":{"gitId":"ivanderjmw"},"content":"### 5.2 Loading an existing trip: `load trip` (Ivander)"},{"lineNumber":139,"author":{"gitId":"ivanderjmw"},"content":"Loads a specific trip from the list of saved trips in `trippie_data`. Trippie will prompt you to enter the index of your preferred trip and sets it as the current trip. Before entering this command, Trippie will automatically load your last opened trip."},{"lineNumber":140,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":141,"author":{"gitId":"ivanderjmw"},"content":"Format: **`load trip`**"},{"lineNumber":142,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":143,"author":{"gitId":"ivanderjmw"},"content":"Example: **`load trip`**"},{"lineNumber":144,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":145,"author":{"gitId":"ivanderjmw"},"content":"\u003cbr/\u003e"},{"lineNumber":146,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":147,"author":{"gitId":"ivanderjmw"},"content":"Expected output:"},{"lineNumber":148,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":149,"author":{"gitId":"ivanderjmw"},"content":"```"},{"lineNumber":150,"author":{"gitId":"ivanderjmw"},"content":"Here are your existing trips."},{"lineNumber":151,"author":{"gitId":"ivanderjmw"},"content":"1. Chigago Trip [1 Day]"},{"lineNumber":152,"author":{"gitId":"ivanderjmw"},"content":"2. Jakarta Festival [3 Days]"},{"lineNumber":153,"author":{"gitId":"ivanderjmw"},"content":"3. Wonderful Singapore [5 Days]"},{"lineNumber":154,"author":{"gitId":"ivanderjmw"},"content":"4. Malaysia KL [6 Days]"},{"lineNumber":155,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":156,"author":{"gitId":"ivanderjmw"},"content":"Which one do you want to load? Enter the index:3"},{"lineNumber":157,"author":{"gitId":"ivanderjmw"},"content":"I found a file in your directory!"},{"lineNumber":158,"author":{"gitId":"ivanderjmw"},"content":"Setting up the file now..."},{"lineNumber":159,"author":{"gitId":"ivanderjmw"},"content":"```"},{"lineNumber":160,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":161,"author":{"gitId":"ivanderjmw"},"content":"\u003cdiv class\u003d\"warning box\" markdown\u003d\"1\"\u003e"},{"lineNumber":162,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":163,"author":{"gitId":"ivanderjmw"},"content":"⚠️ **Warning** "},{"lineNumber":164,"author":{"gitId":"ivanderjmw"},"content":"* You need to enter a valid trip index!"},{"lineNumber":165,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":166,"author":{"gitId":"ivanderjmw"},"content":"\u003c/div\u003e"},{"lineNumber":167,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":168,"author":{"gitId":"ivanderjmw"},"content":"---"},{"lineNumber":169,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":170,"author":{"gitId":"ivanderjmw"},"content":"### 5.3 Editing a trip: `edit trip` (Ivander)"},{"lineNumber":171,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":172,"author":{"gitId":"ivanderjmw"},"content":"Want to change the name of your trip? Or maybe you want to update your trip start date. We got you covered with this `edit trip` command. "},{"lineNumber":173,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":174,"author":{"gitId":"ivanderjmw"},"content":"Enter the command then specify which trip you want to edit by index. Then fill in the new values of the trip attributes, or leave it blank to not change it."},{"lineNumber":175,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":176,"author":{"gitId":"ivanderjmw"},"content":"Trip attributes are: trip name, trip start date, foreign exchange rate, foreign currency abbreviation, budget."},{"lineNumber":177,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":178,"author":{"gitId":"ivanderjmw"},"content":"Format: **`edit trip`**"},{"lineNumber":179,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":180,"author":{"gitId":"ivanderjmw"},"content":"Example: **`edit trip`**"},{"lineNumber":181,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":182,"author":{"gitId":"ivanderjmw"},"content":"\u003cbr/\u003e"},{"lineNumber":183,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":184,"author":{"gitId":"ivanderjmw"},"content":"Expected output:"},{"lineNumber":185,"author":{"gitId":"ivanderjmw"},"content":"```"},{"lineNumber":186,"author":{"gitId":"ivanderjmw"},"content":"Here are your existing trips."},{"lineNumber":187,"author":{"gitId":"ivanderjmw"},"content":"1. Once too you [2 Days]"},{"lineNumber":188,"author":{"gitId":"ivanderjmw"},"content":"2. Vibrant Singapore [No places or expenses added yet]"},{"lineNumber":189,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":190,"author":{"gitId":"ivanderjmw"},"content":"Which one do you want to edit? Enter the index:2"},{"lineNumber":191,"author":{"gitId":"ivanderjmw"},"content":"Current trip is set to \u0027Vibrant Singapore\u0027."},{"lineNumber":192,"author":{"gitId":"ivanderjmw"},"content":"Reading the Trippie files now..."},{"lineNumber":193,"author":{"gitId":"ivanderjmw"},"content":"Leave the field empty if you do not want to change the specified detail."},{"lineNumber":194,"author":{"gitId":"ivanderjmw"},"content":"Enter edited name, [old: Vibrant Singapore]:"},{"lineNumber":195,"author":{"gitId":"ivanderjmw"},"content":"Enter your new trip\u0027s start date (dd-mm-yyyy) [old:30-12-2020]:28-12-2020"},{"lineNumber":196,"author":{"gitId":"ivanderjmw"},"content":"Enter the foreign exchange rate [old:1.0]:1.01"},{"lineNumber":197,"author":{"gitId":"ivanderjmw"},"content":"Enter the foreign currency abbreviation (eg. MYR) [old: SGD]:"},{"lineNumber":198,"author":{"gitId":"ivanderjmw"},"content":"Enter your budget for the trip (in SGD) [old:900.0]:1000"},{"lineNumber":199,"author":{"gitId":"ivanderjmw"},"content":"Edited the trip 2 Vibrant Singapore 28-12-2020"},{"lineNumber":200,"author":{"gitId":"ivanderjmw"},"content":"```"},{"lineNumber":201,"author":{"gitId":"ivanderjmw"},"content":"---"},{"lineNumber":202,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":203,"author":{"gitId":"ivanderjmw"},"content":"### 5.4 Deleting a trip: `delete trip` (Ivander)"},{"lineNumber":204,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":205,"author":{"gitId":"ivanderjmw"},"content":"Deletes a specific trip from the list of saved trip in `trippie_data`. Trippie will prompt you to enter the index of your preferred trip."},{"lineNumber":206,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":207,"author":{"gitId":"ivanderjmw"},"content":"Prompts user confirmation by entering *Y* (Yes) or *N* (No) before deleting the trip. If yes, then the trip will be permanently deleted (including the txt file)."},{"lineNumber":208,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":209,"author":{"gitId":"ivanderjmw"},"content":"Format: **`delete trip`**"},{"lineNumber":210,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":211,"author":{"gitId":"ivanderjmw"},"content":"Example: **`delete trip`**"},{"lineNumber":212,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":213,"author":{"gitId":"ivanderjmw"},"content":"\u003cbr/\u003e"},{"lineNumber":214,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":215,"author":{"gitId":"ivanderjmw"},"content":"Expected output:"},{"lineNumber":216,"author":{"gitId":"ivanderjmw"},"content":"```"},{"lineNumber":217,"author":{"gitId":"ivanderjmw"},"content":"Here are your existing trips."},{"lineNumber":218,"author":{"gitId":"ivanderjmw"},"content":"1. Once too you [2 Days]"},{"lineNumber":219,"author":{"gitId":"ivanderjmw"},"content":"2. Vibrant Singapore [6 Days]"},{"lineNumber":220,"author":{"gitId":"ivanderjmw"},"content":"3. Unused trip [1 Day]"},{"lineNumber":221,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":222,"author":{"gitId":"ivanderjmw"},"content":"Which one do you want to edit? Enter the index:3"},{"lineNumber":223,"author":{"gitId":"ivanderjmw"},"content":"Current trip is set to \u0027Some test\u0027."},{"lineNumber":224,"author":{"gitId":"ivanderjmw"},"content":"Reading the Trippie files now..."},{"lineNumber":225,"author":{"gitId":"ivanderjmw"},"content":"Are you sure you want to permanently delete \u0027Unused trip\u0027? [Y/N]:y"},{"lineNumber":226,"author":{"gitId":"ivanderjmw"},"content":"Deleted trip Unused trip."},{"lineNumber":227,"author":{"gitId":"ivanderjmw"},"content":"```"},{"lineNumber":228,"author":{"gitId":"ivanderjmw"},"content":"---"},{"lineNumber":229,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":230,"author":{"gitId":"ivanderjmw"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":231,"author":{"gitId":"felixhalim"},"content":"\u003c!-- @@author felixhalim --\u003e"},{"lineNumber":232,"author":{"gitId":"felixhalim"},"content":"### 5.5 Viewing help: `help` (Felix)"},{"lineNumber":233,"author":{"gitId":"felixhalim"},"content":"Shows a concise list of commands available. Think of this as a cheatsheet. If you are new to Trippie, you can take a look of what and how you can utilize each commands via `help`."},{"lineNumber":234,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":235,"author":{"gitId":"felixhalim"},"content":"Format: **`help`**"},{"lineNumber":236,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":237,"author":{"gitId":"felixhalim"},"content":"Example: **`help`**"},{"lineNumber":238,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":239,"author":{"gitId":"felixhalim"},"content":"\u003cbr/\u003e"},{"lineNumber":240,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":241,"author":{"gitId":"felixhalim"},"content":"Expected output:"},{"lineNumber":242,"author":{"gitId":"felixhalim"},"content":"```"},{"lineNumber":243,"author":{"gitId":"felixhalim"},"content":"[new trip] |   Creates a new trip. You will be prompted to enter some details"},{"lineNumber":244,"author":{"gitId":"felixhalim"},"content":"           |   Format: new trip"},{"lineNumber":245,"author":{"gitId":"felixhalim"},"content":"___________|______________________________________________________________"},{"lineNumber":246,"author":{"gitId":"felixhalim"},"content":"[load trip]|   Loads a specific trip from the saved list"},{"lineNumber":247,"author":{"gitId":"felixhalim"},"content":"           |   Format: load trip"},{"lineNumber":248,"author":{"gitId":"felixhalim"},"content":"___________|______________________________________________________________"},{"lineNumber":249,"author":{"gitId":"felixhalim"},"content":"[edit trip]|   Edits a specific trip from the saved list"},{"lineNumber":250,"author":{"gitId":"felixhalim"},"content":"           |   Format: edit trip"},{"lineNumber":251,"author":{"gitId":"felixhalim"},"content":"___________|______________________________________________________________"},{"lineNumber":252,"author":{"gitId":"felixhalim"},"content":"...        |   ..."},{"lineNumber":253,"author":{"gitId":"felixhalim"},"content":"...        |   ..."},{"lineNumber":254,"author":{"gitId":"felixhalim"},"content":"...        |   ..."},{"lineNumber":255,"author":{"gitId":"felixhalim"},"content":"```"},{"lineNumber":256,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":257,"author":{"gitId":"felixhalim"},"content":"---"},{"lineNumber":258,"author":{"gitId":"felixhalim"},"content":"### 5.6 Adding a place: `add` (Felix)"},{"lineNumber":259,"author":{"gitId":"felixhalim"},"content":"Adds a place to your trip. In the example below, we\u0027re adding \"Dinner at Marina Bay Sands\" as the `PLACE_NAME`, for `DAY` 2, from 1800 to 2000 as the `TIME`."},{"lineNumber":260,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":261,"author":{"gitId":"felixhalim"},"content":"Format: **`add`**`/n PLACE_NAME /d DAY /t TIME`"},{"lineNumber":262,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":263,"author":{"gitId":"felixhalim"},"content":"* `PLACE_NAME` is the label of the place."},{"lineNumber":264,"author":{"gitId":"felixhalim"},"content":"* `DAY` indicates which day you want to visit the place."},{"lineNumber":265,"author":{"gitId":"felixhalim"},"content":"* `TIME` indicates the time in the 24-hour format. Separate starting time and ending time with `to`."},{"lineNumber":266,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":267,"author":{"gitId":"felixhalim"},"content":"Example: **`add`**`/n Dinner at Marina Bay Sands /d 2 /t 1800 to 2000`"},{"lineNumber":268,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":269,"author":{"gitId":"felixhalim"},"content":"\u003cbr/\u003e"},{"lineNumber":270,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":271,"author":{"gitId":"felixhalim"},"content":"Expected output:"},{"lineNumber":272,"author":{"gitId":"felixhalim"},"content":"```"},{"lineNumber":273,"author":{"gitId":"felixhalim"},"content":"Got it. I\u0027ve added this place:"},{"lineNumber":274,"author":{"gitId":"felixhalim"},"content":"1800 - 2000 Dinner at Marina Bay "},{"lineNumber":275,"author":{"gitId":"felixhalim"},"content":"Now you have 1 place in the list."},{"lineNumber":276,"author":{"gitId":"felixhalim"},"content":"```"},{"lineNumber":277,"author":{"gitId":"felixhalim"},"content":"\u003cdiv class\u003d\"warning box\" markdown\u003d\"1\"\u003e"},{"lineNumber":278,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":279,"author":{"gitId":"felixhalim"},"content":"⚠️ **Warning** "},{"lineNumber":280,"author":{"gitId":"felixhalim"},"content":"* The tags should be in the correct order."},{"lineNumber":281,"author":{"gitId":"felixhalim"},"content":"* Use a 24-hour format for time."},{"lineNumber":282,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":283,"author":{"gitId":"felixhalim"},"content":"\u003c/div\u003e"},{"lineNumber":284,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":285,"author":{"gitId":"felixhalim"},"content":"---"},{"lineNumber":286,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":287,"author":{"gitId":"felixhalim"},"content":"### 5.7 Listing all places: `list /p` (Felix)"},{"lineNumber":288,"author":{"gitId":"felixhalim"},"content":"Displays all places in a timetable format. If you specify a `DAY`, only places on the specified day will be displayed. In the example below, we are viewing the full timetable for the trip."},{"lineNumber":289,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":290,"author":{"gitId":"felixhalim"},"content":"Format: **`list /p`**`[/d DAY]`"},{"lineNumber":291,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":292,"author":{"gitId":"felixhalim"},"content":"* `DAY` indicates the specific day which timetable should display."},{"lineNumber":293,"author":{"gitId":"felixhalim"},"content":"* If `[/d DAY]` is not specified, displays the full timetable."},{"lineNumber":294,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":295,"author":{"gitId":"felixhalim"},"content":"Example: **`list /p`**"},{"lineNumber":296,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":297,"author":{"gitId":"felixhalim"},"content":"\u003cbr/\u003e"},{"lineNumber":298,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":299,"author":{"gitId":"felixhalim"},"content":"Expected output:"},{"lineNumber":300,"author":{"gitId":"felixhalim"},"content":"```"},{"lineNumber":301,"author":{"gitId":"felixhalim"},"content":"DAY 2: (2020-10-21)"},{"lineNumber":302,"author":{"gitId":"felixhalim"},"content":"[1] 1800 - 2000 Dinner at Marina Bay Sands"},{"lineNumber":303,"author":{"gitId":"felixhalim"},"content":"```"},{"lineNumber":304,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":305,"author":{"gitId":"felixhalim"},"content":"Example: **`list /p /d 2`**"},{"lineNumber":306,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":307,"author":{"gitId":"felixhalim"},"content":"\u003cbr/\u003e"},{"lineNumber":308,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":309,"author":{"gitId":"felixhalim"},"content":"Expected output:"},{"lineNumber":310,"author":{"gitId":"felixhalim"},"content":"```"},{"lineNumber":311,"author":{"gitId":"felixhalim"},"content":"DAY 2: (2020-10-21)"},{"lineNumber":312,"author":{"gitId":"felixhalim"},"content":"1800 - 2000 Dinner at Marina Bay Sands"},{"lineNumber":313,"author":{"gitId":"felixhalim"},"content":"```"},{"lineNumber":314,"author":{"gitId":"felixhalim"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":315,"author":{"gitId":"felixhalim"},"content":"---"},{"lineNumber":316,"author":{"gitId":"weishuangtan"},"content":"\u003c!-- @@author weishuangtan --\u003e"},{"lineNumber":317,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":318,"author":{"gitId":"weishuangtan"},"content":"### 5.8 Searching for place: `search` (Wei Shuang)"},{"lineNumber":319,"author":{"gitId":"weishuangtan"},"content":"Displays all places that includes the search keyword. In the example below, we are searching for the `KEYWORD` \u0027Dinner\u0027."},{"lineNumber":320,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":321,"author":{"gitId":"weishuangtan"},"content":"Format: **`search`**`KEYWORD`"},{"lineNumber":322,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":323,"author":{"gitId":"weishuangtan"},"content":"Example: **`search`**`Dinner`"},{"lineNumber":324,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":325,"author":{"gitId":"weishuangtan"},"content":"\u003cbr/\u003e"},{"lineNumber":326,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":327,"author":{"gitId":"weishuangtan"},"content":"Expected output:"},{"lineNumber":328,"author":{"gitId":"weishuangtan"},"content":"```"},{"lineNumber":329,"author":{"gitId":"weishuangtan"},"content":"Here is your search result:"},{"lineNumber":330,"author":{"gitId":"weishuangtan"},"content":"1.1800 - 2000 Dinner at Marina Bay Sands on DAY 2"},{"lineNumber":331,"author":{"gitId":"weishuangtan"},"content":"```"},{"lineNumber":332,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":333,"author":{"gitId":"weishuangtan"},"content":"---"},{"lineNumber":334,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":335,"author":{"gitId":"weishuangtan"},"content":"### 5.9 Deleting place: `delete /p` (Wei Shuang)"},{"lineNumber":336,"author":{"gitId":"weishuangtan"},"content":"Deletes the specified place from the list. In the example below, we are deleting \"Dinner at Marina Bay Sands\" which has the `PLACE_INDEX` of 1."},{"lineNumber":337,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":338,"author":{"gitId":"weishuangtan"},"content":"Format: **`delete /p`**`PLACE_INDEX`"},{"lineNumber":339,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":340,"author":{"gitId":"weishuangtan"},"content":"* `PLACE_INDEX` refers to the index of the place that you want to delete."},{"lineNumber":341,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":342,"author":{"gitId":"weishuangtan"},"content":"Example: **`delete /p`**`1`"},{"lineNumber":343,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":344,"author":{"gitId":"weishuangtan"},"content":"\u003cbr/\u003e"},{"lineNumber":345,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":346,"author":{"gitId":"weishuangtan"},"content":"Expected output:"},{"lineNumber":347,"author":{"gitId":"weishuangtan"},"content":"```"},{"lineNumber":348,"author":{"gitId":"weishuangtan"},"content":"Noted. I\u0027ve removed this place from the place list."},{"lineNumber":349,"author":{"gitId":"weishuangtan"},"content":"1800 - 2000 Dinner at Marina Bay Sands"},{"lineNumber":350,"author":{"gitId":"weishuangtan"},"content":"Now you have 0 place in the list."},{"lineNumber":351,"author":{"gitId":"weishuangtan"},"content":"```"},{"lineNumber":352,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":353,"author":{"gitId":"weishuangtan"},"content":"\u003cdiv class\u003d\"warning box\" markdown\u003d\"1\"\u003e"},{"lineNumber":354,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":355,"author":{"gitId":"weishuangtan"},"content":"⚠️ **Warning** "},{"lineNumber":356,"author":{"gitId":"weishuangtan"},"content":"* Refer to the index from `list /p` to delete. Enter a valid place index."},{"lineNumber":357,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":358,"author":{"gitId":"weishuangtan"},"content":"\u003c/div\u003e"},{"lineNumber":359,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":360,"author":{"gitId":"weishuangtan"},"content":"---"},{"lineNumber":361,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":362,"author":{"gitId":"weishuangtan"},"content":"### 5.10 Editing budget: `budget` (Wei Shuang)"},{"lineNumber":363,"author":{"gitId":"weishuangtan"},"content":"Edits a budget to keep track of in expenditure list. The budget is stored in the local currency SGD. In the example below, we are setting the total budget to SGD100."},{"lineNumber":364,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":365,"author":{"gitId":"weishuangtan"},"content":"Format: **`budget`**`AMOUNT`"},{"lineNumber":366,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":367,"author":{"gitId":"weishuangtan"},"content":"* `AMOUNT` indicates your planned budget to spend for the trip, in SGD."},{"lineNumber":368,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":369,"author":{"gitId":"weishuangtan"},"content":"Example: **`budget`**`100`"},{"lineNumber":370,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":371,"author":{"gitId":"weishuangtan"},"content":"\u003cbr/\u003e"},{"lineNumber":372,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":373,"author":{"gitId":"weishuangtan"},"content":"Expected output:"},{"lineNumber":374,"author":{"gitId":"weishuangtan"},"content":"```"},{"lineNumber":375,"author":{"gitId":"weishuangtan"},"content":"Successfully set your total budget to 100.00"},{"lineNumber":376,"author":{"gitId":"weishuangtan"},"content":"```"},{"lineNumber":377,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":378,"author":{"gitId":"weishuangtan"},"content":"\u003cdiv class\u003d\"warning box\" markdown\u003d\"1\"\u003e"},{"lineNumber":379,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":380,"author":{"gitId":"weishuangtan"},"content":"⚠️ **Warning** "},{"lineNumber":381,"author":{"gitId":"weishuangtan"},"content":"* Watch out when shrinking your budget."},{"lineNumber":382,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":383,"author":{"gitId":"weishuangtan"},"content":"\u003c/div\u003e"},{"lineNumber":384,"author":{"gitId":"weishuangtan"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":385,"author":{"gitId":"felixhalim"},"content":"---"},{"lineNumber":386,"author":{"gitId":"ShawnTanzc"},"content":"\u003c!-- @@author ShawnTanzc --\u003e"},{"lineNumber":387,"author":{"gitId":"ShawnTanzc"},"content":"### 5.11 Adding an expense: `buy` (Shawn Tan)"},{"lineNumber":388,"author":{"gitId":"ShawnTanzc"},"content":"Adds an item and its final cost in foreign currency into the current trip\u0027s expense list. In the example below, we are adding an expense \"R\u0026B Brown Sugar\" as `ITEM_NAME`, which has the `FINAL_COST` of $3.00, on `DAY` 2."},{"lineNumber":389,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":390,"author":{"gitId":"ShawnTanzc"},"content":"Format: **`buy`**`/n ITEM_NAME /d DAY /c FINAL_COST`"},{"lineNumber":391,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":392,"author":{"gitId":"ShawnTanzc"},"content":"* `ITEM_NAME` is the label of the item."},{"lineNumber":393,"author":{"gitId":"ShawnTanzc"},"content":"* `FINAL_COST` indicates the cost of the item you purchased."},{"lineNumber":394,"author":{"gitId":"ShawnTanzc"},"content":"* `DAY` indicates the specific day when you bought the item."},{"lineNumber":395,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":396,"author":{"gitId":"ShawnTanzc"},"content":"Example: **`buy`**`/n R\u0026B Brown Sugar /d 2 /c 3.00`"},{"lineNumber":397,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":398,"author":{"gitId":"ShawnTanzc"},"content":"\u003cbr/\u003e"},{"lineNumber":399,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":400,"author":{"gitId":"ShawnTanzc"},"content":"Expected output:"},{"lineNumber":401,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":402,"author":{"gitId":"ShawnTanzc"},"content":"Got it! I\u0027ve added the following item: Day 2: R\u0026B Brown Sugar - $3.00"},{"lineNumber":403,"author":{"gitId":"ShawnTanzc"},"content":"Now you have 1 item in the list."},{"lineNumber":404,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":405,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":406,"author":{"gitId":"ShawnTanzc"},"content":"---"},{"lineNumber":407,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":408,"author":{"gitId":"ShawnTanzc"},"content":"### 5.12 Listing all expenses: `list /e` (Shawn Tan)"},{"lineNumber":409,"author":{"gitId":"ShawnTanzc"},"content":"Displays all the items bought in the expenditure list and reminds you on your budget limit."},{"lineNumber":410,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":411,"author":{"gitId":"ShawnTanzc"},"content":"Format: **`list /e`**"},{"lineNumber":412,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":413,"author":{"gitId":"ShawnTanzc"},"content":"Example: **`list /e`**"},{"lineNumber":414,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":415,"author":{"gitId":"ShawnTanzc"},"content":"\u003cbr/\u003e"},{"lineNumber":416,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":417,"author":{"gitId":"ShawnTanzc"},"content":"Expected output:"},{"lineNumber":418,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":419,"author":{"gitId":"ShawnTanzc"},"content":"Total budget: 1325.00 SOL (500.00 SGD)"},{"lineNumber":420,"author":{"gitId":"ShawnTanzc"},"content":"Expense List:"},{"lineNumber":421,"author":{"gitId":"ShawnTanzc"},"content":"[1] Day 2: R\u0026B Brown Sugar - 3.00 SOL"},{"lineNumber":422,"author":{"gitId":"ShawnTanzc"},"content":"Your current total spending is 3.00 SOL (1.13 SGD)"},{"lineNumber":423,"author":{"gitId":"ShawnTanzc"},"content":"Your current remaining budget is 1322.00 SOL (498.87 SGD)"},{"lineNumber":424,"author":{"gitId":"ShawnTanzc"},"content":"You are still spending within your budget."},{"lineNumber":425,"author":{"gitId":"ShawnTanzc"},"content":"[----------] 0.2%"},{"lineNumber":426,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":427,"author":{"gitId":"ShawnTanzc"},"content":"\u003cdiv class\u003d\"warning box\" markdown\u003d\"1\"\u003e"},{"lineNumber":428,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":429,"author":{"gitId":"ShawnTanzc"},"content":"⚠️ **Warning** "},{"lineNumber":430,"author":{"gitId":"ShawnTanzc"},"content":"* If you were to buy an item which exceeds the total budget, Trippie will send a warning message and recommend you to increase your budget limit."},{"lineNumber":431,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":432,"author":{"gitId":"ShawnTanzc"},"content":"\u003c/div\u003e"},{"lineNumber":433,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":434,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":435,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":436,"author":{"gitId":"ShawnTanzc"},"content":"Expected output:"},{"lineNumber":437,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":438,"author":{"gitId":"ShawnTanzc"},"content":"Total budget: 141680.00 SWE (5600.00 SGD)"},{"lineNumber":439,"author":{"gitId":"ShawnTanzc"},"content":"Expense List:"},{"lineNumber":440,"author":{"gitId":"ShawnTanzc"},"content":"[1] Day 1: glassware - 8000.00 SWE"},{"lineNumber":441,"author":{"gitId":"ShawnTanzc"},"content":"[2] Day 1: jersey - 19900.50 SWE"},{"lineNumber":442,"author":{"gitId":"ShawnTanzc"},"content":"[3] Day 1: tissue - 2.00 SWE"},{"lineNumber":443,"author":{"gitId":"ShawnTanzc"},"content":"[4] Day 2: picture - 200.00 SWE"},{"lineNumber":444,"author":{"gitId":"ShawnTanzc"},"content":"[5] Day 3: clothes - 2000.00 SWE"},{"lineNumber":445,"author":{"gitId":"ShawnTanzc"},"content":"[6] Day 5: house - 120000.00 SWE"},{"lineNumber":446,"author":{"gitId":"ShawnTanzc"},"content":"Your current total spending is $150102.50 SWE (5932.91 SGD)"},{"lineNumber":447,"author":{"gitId":"ShawnTanzc"},"content":"WARNING! You have exceeded your initial budget."},{"lineNumber":448,"author":{"gitId":"ShawnTanzc"},"content":"Recommended action: Increase budget limit."},{"lineNumber":449,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":450,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":451,"author":{"gitId":"ShawnTanzc"},"content":"---"},{"lineNumber":452,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":453,"author":{"gitId":"ShawnTanzc"},"content":"### 5.13 Deleting an expense: `delete /e` (Shawn Tan)"},{"lineNumber":454,"author":{"gitId":"ShawnTanzc"},"content":"Deletes the specified place from the list. In the example below, we are removing \"R\u0026B Brown Sugar\", which has the `PLACE_INDEX` of 1."},{"lineNumber":455,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":456,"author":{"gitId":"ShawnTanzc"},"content":"Format: **`delete /e`**`EXPENSE_INDEX`"},{"lineNumber":457,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":458,"author":{"gitId":"ShawnTanzc"},"content":"* `EXPENSE_INDEX` refers to the index of the expense based on the list that you want to delete."},{"lineNumber":459,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":460,"author":{"gitId":"ShawnTanzc"},"content":"Example: **`delete /e`**`1`"},{"lineNumber":461,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":462,"author":{"gitId":"ShawnTanzc"},"content":"\u003cbr/\u003e"},{"lineNumber":463,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":464,"author":{"gitId":"ShawnTanzc"},"content":"Expected output:"},{"lineNumber":465,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":466,"author":{"gitId":"ShawnTanzc"},"content":"Noted. I\u0027ve removed this item from the expenditure list."},{"lineNumber":467,"author":{"gitId":"ShawnTanzc"},"content":"Day 2: R\u0026B Brown Sugar - 3.00 SOL"},{"lineNumber":468,"author":{"gitId":"ShawnTanzc"},"content":"Now you have 0 item in the list."},{"lineNumber":469,"author":{"gitId":"ShawnTanzc"},"content":"```"},{"lineNumber":470,"author":{"gitId":"ShawnTanzc"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":471,"author":{"gitId":"felixhalim"},"content":"---"},{"lineNumber":472,"author":{"gitId":"tengkianen"},"content":"\u003c!-- @@author tengkianen --\u003e"},{"lineNumber":473,"author":{"gitId":"tengkianen"},"content":"### 5.14 Convert currency: `convert /to` (Kian En)"},{"lineNumber":474,"author":{"gitId":"tengkianen"},"content":"Converts an amount to the requested currency. The requested currency can either be in SGD, or the foreign currency specified when creating the trip."},{"lineNumber":475,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":476,"author":{"gitId":"tengkianen"},"content":"#### 5.14.1 Convert to Local Currency (SGD)"},{"lineNumber":477,"author":{"gitId":"tengkianen"},"content":"Converts an amount from foreign currency (FOR) to local currency (SGD)."},{"lineNumber":478,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":479,"author":{"gitId":"tengkianen"},"content":"Format: **`convert /toSGD`**`AMOUNT`"},{"lineNumber":480,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":481,"author":{"gitId":"tengkianen"},"content":"* `AMOUNT` refers to the amount to be converted into the preferred currency."},{"lineNumber":482,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":483,"author":{"gitId":"tengkianen"},"content":"Example: **`convert /toSGD`**`500`"},{"lineNumber":484,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":485,"author":{"gitId":"tengkianen"},"content":"\u003cbr/\u003e"},{"lineNumber":486,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":487,"author":{"gitId":"tengkianen"},"content":"Expected output:"},{"lineNumber":488,"author":{"gitId":"tengkianen"},"content":"```"},{"lineNumber":489,"author":{"gitId":"tengkianen"},"content":"Processing... Please Wait."},{"lineNumber":490,"author":{"gitId":"tengkianen"},"content":"That amount in your local currency is 188.68 SGD."},{"lineNumber":491,"author":{"gitId":"tengkianen"},"content":"```"},{"lineNumber":492,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":493,"author":{"gitId":"tengkianen"},"content":"#### 5.14.2 Convert to Foreign Currency (FOR)"},{"lineNumber":494,"author":{"gitId":"tengkianen"},"content":"Converts an amount from local currency (SGD) to foreign currency (FOR)."},{"lineNumber":495,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":496,"author":{"gitId":"tengkianen"},"content":"Format: **`convert /toFOR`**`AMOUNT`"},{"lineNumber":497,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":498,"author":{"gitId":"tengkianen"},"content":"* `AMOUNT` refers to the amount to be converted into the preferred currency."},{"lineNumber":499,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":500,"author":{"gitId":"tengkianen"},"content":"Example: **`convert /toFOR`**`500`"},{"lineNumber":501,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":502,"author":{"gitId":"tengkianen"},"content":"\u003cbr/\u003e"},{"lineNumber":503,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":504,"author":{"gitId":"tengkianen"},"content":"Expected output:"},{"lineNumber":505,"author":{"gitId":"tengkianen"},"content":"```"},{"lineNumber":506,"author":{"gitId":"tengkianen"},"content":"Processing... Please Wait."},{"lineNumber":507,"author":{"gitId":"tengkianen"},"content":"That amount in your foreign currency is 1325.00 SOL."},{"lineNumber":508,"author":{"gitId":"tengkianen"},"content":"```"},{"lineNumber":509,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":510,"author":{"gitId":"tengkianen"},"content":"---"},{"lineNumber":511,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":512,"author":{"gitId":"tengkianen"},"content":"### 5.15 Exiting the Trippie: `exit` (Kian En)"},{"lineNumber":513,"author":{"gitId":"tengkianen"},"content":"Exits the program and auto-saves."},{"lineNumber":514,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":515,"author":{"gitId":"tengkianen"},"content":"Format: **`exit`**"},{"lineNumber":516,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":517,"author":{"gitId":"tengkianen"},"content":"Example: **`exit`**"},{"lineNumber":518,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":519,"author":{"gitId":"tengkianen"},"content":"\u003cbr/\u003e"},{"lineNumber":520,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":521,"author":{"gitId":"tengkianen"},"content":"Expected output:"},{"lineNumber":522,"author":{"gitId":"tengkianen"},"content":"```"},{"lineNumber":523,"author":{"gitId":"tengkianen"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":524,"author":{"gitId":"tengkianen"},"content":"```"},{"lineNumber":525,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":526,"author":{"gitId":"tengkianen"},"content":"---"},{"lineNumber":527,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":528,"author":{"gitId":"tengkianen"},"content":"### 5.16 Saving the data: (Kian En)"},{"lineNumber":529,"author":{"gitId":"tengkianen"},"content":"Saves Trippie\u0027s data in a folder named `trippie_data` automatically. This folder will be created in the same location as your `trippie.jar`."},{"lineNumber":530,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":531,"author":{"gitId":"tengkianen"},"content":"---"},{"lineNumber":532,"author":{"gitId":"tengkianen"},"content":"## 6.0 FAQ (Kian En)"},{"lineNumber":533,"author":{"gitId":"tengkianen"},"content":"Below are some Frequently Asked Questions you might have:"},{"lineNumber":534,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":535,"author":{"gitId":"tengkianen"},"content":"**Q:** Will I be able to view my trips after exiting Trippie?"},{"lineNumber":536,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":537,"author":{"gitId":"tengkianen"},"content":"**A:** Yes, Trippie is able to automatically save your trips for your viewing every time."},{"lineNumber":538,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":539,"author":{"gitId":"tengkianen"},"content":"**Q:** Can I transfer my old Trippie files to another computer?"},{"lineNumber":540,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":541,"author":{"gitId":"tengkianen"},"content":"**A:** Yes, you can copy the `trippie_data` folder to your new computer before running Trippie there."},{"lineNumber":542,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":543,"author":{"gitId":"tengkianen"},"content":"**Q:** Does Trippie need Internet?"},{"lineNumber":544,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":545,"author":{"gitId":"tengkianen"},"content":"**A:** No, Trippie is fully offline."},{"lineNumber":546,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":547,"author":{"gitId":"tengkianen"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":548,"author":{"gitId":"weishuangtan"},"content":"\u003c!-- @@author weishuangtan --\u003e"},{"lineNumber":549,"author":{"gitId":"weishuangtan"},"content":"## 7.0 Command Summary (Wei Shuang)"},{"lineNumber":550,"author":{"gitId":"weishuangtan"},"content":"Below is a summary of all trippie commands. You can check this section if you need a quick reference."},{"lineNumber":551,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":552,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":553,"author":{"gitId":"weishuangtan"},"content":"**Action** | **Format, Examples**"},{"lineNumber":554,"author":{"gitId":"weishuangtan"},"content":"------------ | -------------"},{"lineNumber":555,"author":{"gitId":"weishuangtan"},"content":"**`new trip`**|`new trip`"},{"lineNumber":556,"author":{"gitId":"weishuangtan"},"content":"**`load trip`**|`load trip`"},{"lineNumber":557,"author":{"gitId":"weishuangtan"},"content":"**`edit trip`**|`edit trip`"},{"lineNumber":558,"author":{"gitId":"weishuangtan"},"content":"**`delete trip`**|`delete trip`"},{"lineNumber":559,"author":{"gitId":"weishuangtan"},"content":"**`help`**|`help`"},{"lineNumber":560,"author":{"gitId":"weishuangtan"},"content":"**`add`**|`add /n PLACE_NAME /d DAY /t TIME`\u003cbr\u003ee.g., `add /n Dinner at Marina Bay Sands /d 2 /t 1800 to 2000`"},{"lineNumber":561,"author":{"gitId":"weishuangtan"},"content":"**`list /p`**|`list /p [/d DAY]` \u003cbr\u003ee.g., `list /p`"},{"lineNumber":562,"author":{"gitId":"weishuangtan"},"content":"**`search`**|`search KEYWORD` \u003cbr\u003ee.g., `search Dinner`"},{"lineNumber":563,"author":{"gitId":"weishuangtan"},"content":"**`delete /p`**|`delete /p PLACE_INDEX` \u003cbr\u003ee.g., `delete 1`"},{"lineNumber":564,"author":{"gitId":"weishuangtan"},"content":"**`budget`**|`budget AMOUNT`\u003cbr\u003ee.g., `budget 100`"},{"lineNumber":565,"author":{"gitId":"weishuangtan"},"content":"**`buy`**|`buy /n ITEM_NAME /d DAY /c FINAL_COST` \u003cbr\u003ee.g., `buy /n R\u0026B Brown Sugar /d 2 /c 3.00`"},{"lineNumber":566,"author":{"gitId":"weishuangtan"},"content":"**`list /e`**|`list /e`"},{"lineNumber":567,"author":{"gitId":"weishuangtan"},"content":"**`delete /e`**|`delete /p EXPENSE_INDEX` \u003cbr\u003ee.g., `delete 1`"},{"lineNumber":568,"author":{"gitId":"weishuangtan"},"content":"**`convert /to`**|`convert /toCURRENCY AMOUNT` \u003cbr\u003ee.g., `convert /toSGD 500`\u003cbr\u003e`convert /toFOR 500`"},{"lineNumber":569,"author":{"gitId":"weishuangtan"},"content":"**`exit`**|`exit`"},{"lineNumber":570,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":571,"author":{"gitId":"weishuangtan"},"content":"\u003c!-- @@author--\u003e"}],"authorContributionMap":{"ShawnTanzc":110,"felixhalim":143,"tengkianen":76,"-":3,"ivanderjmw":146,"weishuangtan":93}},{"path":"docs/team/felixhalim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felixhalim"},"content":"# Felix\u0027s Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":3,"author":{"gitId":"felixhalim"},"content":"## Project: Trippie "},{"lineNumber":4,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":5,"author":{"gitId":"felixhalim"},"content":"Trippie is a command-line desktop application used for planning trips, tracking expenses and converting exchange rates."},{"lineNumber":6,"author":{"gitId":"felixhalim"},"content":"It is specifically catered for the needs of student travellers. It allows multiple trip plans and is designed for quick"},{"lineNumber":7,"author":{"gitId":"felixhalim"},"content":"and efficient inputs."},{"lineNumber":8,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":9,"author":{"gitId":"felixhalim"},"content":"### Summary of Contributions"},{"lineNumber":10,"author":{"gitId":"felixhalim"},"content":"Given below are a list of my contribution to the project."},{"lineNumber":11,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":12,"author":{"gitId":"felixhalim"},"content":"- **New Feature**: Implemented add place command."},{"lineNumber":13,"author":{"gitId":"felixhalim"},"content":"    - What it does: This allows user to add places to the trip."},{"lineNumber":14,"author":{"gitId":"felixhalim"},"content":"    - Justification: This feature is a core feature which impacts the overall functionality of the application."},{"lineNumber":15,"author":{"gitId":"felixhalim"},"content":"    "},{"lineNumber":16,"author":{"gitId":"felixhalim"},"content":"- **New Feature**: Implemented delete place command."},{"lineNumber":17,"author":{"gitId":"felixhalim"},"content":"    - What it does: This allows users to delete existing place from the trip."},{"lineNumber":18,"author":{"gitId":"felixhalim"},"content":"    - Justification: This feature is essential to increase usability and convenience for the user."},{"lineNumber":19,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":20,"author":{"gitId":"felixhalim"},"content":"- **New Feature**: Implemented exit command."},{"lineNumber":21,"author":{"gitId":"felixhalim"},"content":"    - What it does: This allows users to quit the application."},{"lineNumber":22,"author":{"gitId":"felixhalim"},"content":"    - Justification: This feature is a must-have to ensure the smoothness of user navigation flow in the application."},{"lineNumber":23,"author":{"gitId":"felixhalim"},"content":"    "},{"lineNumber":24,"author":{"gitId":"felixhalim"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dfelix\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dfelixhalim\u0026tabRepo\u003dAY2021S1-CS2113T-W11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":25,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":26,"author":{"gitId":"felixhalim"},"content":"- **Project management**: "},{"lineNumber":27,"author":{"gitId":"felixhalim"},"content":"    - Managed and organised issues into `Trippie` project on GitHub."},{"lineNumber":28,"author":{"gitId":"felixhalim"},"content":"    - Managed and assigned issues for `V2.0` on GitHub."},{"lineNumber":29,"author":{"gitId":"felixhalim"},"content":"    - Managed project flow with Github Projects Kanban."},{"lineNumber":30,"author":{"gitId":"felixhalim"},"content":"    "},{"lineNumber":31,"author":{"gitId":"felixhalim"},"content":"- **Enhancement Implementation**:"},{"lineNumber":32,"author":{"gitId":"felixhalim"},"content":"    - Enhanced list trip command such that it is able to display timetable/list which might have a day that consist of no event (e.g. Day 1 -\u003e Day 2 -\u003e Day 4 -\u003e Day 8)"},{"lineNumber":33,"author":{"gitId":"felixhalim"},"content":"    - Enhanced search place command such that the user input is case-insensitive."},{"lineNumber":34,"author":{"gitId":"felixhalim"},"content":"    - Enhanced the error handling mechanism for delete expense command."},{"lineNumber":35,"author":{"gitId":"felixhalim"},"content":"    "},{"lineNumber":36,"author":{"gitId":"felixhalim"},"content":"- **Contributions to documentation**: "},{"lineNumber":37,"author":{"gitId":"felixhalim"},"content":"  * User Guide:"},{"lineNumber":38,"author":{"gitId":"felixhalim"},"content":"    - Added the About this document section [here](https://github.com/AY2021S1-CS2113T-W11-2/tp/blob/master/docs/UserGuide.md#20-about-this-document-felix)."},{"lineNumber":39,"author":{"gitId":"felixhalim"},"content":"    - Designed and implemented the basic structure which acts as backbone of the user guide."},{"lineNumber":40,"author":{"gitId":"felixhalim"},"content":"    - Ensured the functionality of Table of Contents to increase navigability."},{"lineNumber":41,"author":{"gitId":"felixhalim"},"content":"    - Added places guide, includes `add`, `list /p` [here](https://github.com/AY2021S1-CS2113T-W11-2/tp/blob/master/docs/UserGuide.md#20-about-this-document-felix)."},{"lineNumber":42,"author":{"gitId":"felixhalim"},"content":"    - Added `help` guide [here](https://github.com/AY2021S1-CS2113T-W11-2/tp/blob/master/docs/UserGuide.md#20-about-this-document-felix)."},{"lineNumber":43,"author":{"gitId":"felixhalim"},"content":"    - Implemented the custom CSS of warning and information box."},{"lineNumber":44,"author":{"gitId":"felixhalim"},"content":"  * JavaDoc:"},{"lineNumber":45,"author":{"gitId":"felixhalim"},"content":"    - Added JavaDoc for the following classes and its methods:"},{"lineNumber":46,"author":{"gitId":"felixhalim"},"content":"        - Commands: `AddPlaceCommand`, `DeletePlaceCommand`, `ExitCommand`."},{"lineNumber":47,"author":{"gitId":"felixhalim"},"content":"        - Data: `PlaceList`, `Place`"},{"lineNumber":48,"author":{"gitId":"felixhalim"},"content":"    "},{"lineNumber":49,"author":{"gitId":"felixhalim"},"content":"- **Contributions to the DG**:"},{"lineNumber":50,"author":{"gitId":"felixhalim"},"content":"    - Added class diagrams created using *Miro*."},{"lineNumber":51,"author":{"gitId":"felixhalim"},"content":"    - Added Launch and Shutdown section. [d2c15aa](https://github.com/AY2021S1-CS2113T-W11-2/tp/commit/d2c15aad33d5e5bb6420e529c399e4954c1f3b85)"},{"lineNumber":52,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":53,"author":{"gitId":"felixhalim"},"content":"- **Review contributions**:"},{"lineNumber":54,"author":{"gitId":"felixhalim"},"content":"    - PR reviewed (with non-trivial review comments): [#12](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/12), [#20](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/20), [#27](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/27), [#29](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/29), [#51](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/51)"},{"lineNumber":55,"author":{"gitId":"felixhalim"},"content":"    "}],"authorContributionMap":{"felixhalim":55}},{"path":"docs/team/ivanderjmw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"# Ivander\u0027s Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"## Project: Trippie "},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"Trippie is a command-line desktop application used for planning trips, tracking expenses and converting exchange rates."},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":"It is specifically catered for the needs of student travellers. It allows multiple trip plans and is designed for quick"},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":"and efficient inputs."},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":"### Summary of Contributions"},{"lineNumber":11,"author":{"gitId":"ivanderjmw"},"content":"Given below are a list of my contribution to the project."},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":13,"author":{"gitId":"ivanderjmw"},"content":"- **New Feature**: Added ability for users to have multiple trips."},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"    - What it does: It allows user to manage multiple trips at once."},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":"    - Justification: This feature will allow someone to plan out multiple trips, and keep everything in the same software."},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":"        They can switch between the different trips easily."},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"    "},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":"- **New Feature**: Designed and implemented storage system for multiple trips."},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"    - What it does: It allows user to store each of their trips in a separate file, all referred from one master file. "},{"lineNumber":20,"author":{"gitId":"ivanderjmw"},"content":"    - Justification: Trippie does not need to load all files at once, therefore saving RAM. "},{"lineNumber":21,"author":{"gitId":"ivanderjmw"},"content":"    - Highlight: Edited trips are saved and organized automatically, user does not need to do worry about file management."},{"lineNumber":22,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":23,"author":{"gitId":"ivanderjmw"},"content":"- **New Feature**: Implemented the new trip and edit trip command."},{"lineNumber":24,"author":{"gitId":"ivanderjmw"},"content":"    - What it does: Allows users to create a new trip or edit an existing trip."},{"lineNumber":25,"author":{"gitId":"ivanderjmw"},"content":"    - Justification: These features are essential to ease users in managing their trips."},{"lineNumber":26,"author":{"gitId":"ivanderjmw"},"content":"    - Highlight: These features are conversational and prompts the user interactively."},{"lineNumber":27,"author":{"gitId":"ivanderjmw"},"content":"    "},{"lineNumber":28,"author":{"gitId":"ivanderjmw"},"content":"- **New Feature**: Implemented delete trip command."},{"lineNumber":29,"author":{"gitId":"ivanderjmw"},"content":"    - What it does: Deletes a trip permanently from local storage."},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"    - Justification: An important feature if someone wants to remove a trip that is un used."},{"lineNumber":31,"author":{"gitId":"ivanderjmw"},"content":"    - Highlight: It is a tricky implementation, in a case that the trip file also needs to be deleted along with its reference in the master file."},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"    "},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dW11\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003divanderjmw\u0026tabRepo\u003dAY2021S1-CS2113T-W11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":"- **Project management**: "},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":"    - Managed and organised issues into `Trippie` project on GitHub."},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":"    - Managed and assigned issues for `V2.1` on GitHub."},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":"    - Managed project flow with Github Projects."},{"lineNumber":39,"author":{"gitId":"ivanderjmw"},"content":"    - Making sure all the CI tests are working properly and up-to-date."},{"lineNumber":40,"author":{"gitId":"ivanderjmw"},"content":"    "},{"lineNumber":41,"author":{"gitId":"ivanderjmw"},"content":"- **Enhancement Implementation**:"},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":"    - Smoothened the user experience when opening Trippie."},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":"    - Enhanced the gradle checks to deal with storage file creations."},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":"- **Contributions to documentation**:"},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":"  * User Guide:"},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":"    - Added quick start guide [here](https://ay2021s1-cs2113t-w11-2.github.io/tp/UserGuide.html#30-how-to-use-ivander)."},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"    - Added trip commands guide, includes `new trip`, `edit trip`, `delete trip` [here](https://ay2021s1-cs2113t-w11-2.github.io/tp/UserGuide.html#51-creating-a-new-trip-new-trip-ivander)."},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"    - Contributed to warning and information blocks in the user guide."},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"  * JavaDoc:"},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"    - Added JavaDoc for the following classes and its methods:"},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":"        - Commands: `DeleteTripCommand`, `EditTripCommand`, `LoadTripCommand`, `NewTripCommand`."},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":"        - Data: `TrippieData`, `Trip`"},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":"    "},{"lineNumber":55,"author":{"gitId":"ivanderjmw"},"content":"- **Contributions to the DG**:"},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":"    - Added UML sequence diagrams created using *PlantUML*."},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":"    - Wrote detailed description for the implementation of *TrippieData*."},{"lineNumber":58,"author":{"gitId":"ivanderjmw"},"content":"    - Added use cases. [#63](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/63)"},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":60,"author":{"gitId":"ivanderjmw"},"content":"- **Review contributions**:"},{"lineNumber":61,"author":{"gitId":"ivanderjmw"},"content":"    - PR reviewed (with non-trivial review comments): [#29](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/29), [#70](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/70)"}],"authorContributionMap":{"ivanderjmw":61}},{"path":"docs/team/shawntanzc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ShawnTanzc"},"content":"# Shawn Tan\u0027s Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"## Project: Trippie "},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":"Trippie is a command-line desktop application used for planning trips, tracking expenses and converting exchange rates."},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":"It is specifically catered for the needs of student travellers. It allows multiple trip plans and is designed for quick"},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":"and efficient inputs."},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":9,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":10,"author":{"gitId":"ShawnTanzc"},"content":"### Summary of Contributions"},{"lineNumber":11,"author":{"gitId":"ShawnTanzc"},"content":"Given below are a list of my contribution to the project."},{"lineNumber":12,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":13,"author":{"gitId":"ShawnTanzc"},"content":"- **New Feature**: Added the ability to add new items into the expense list."},{"lineNumber":14,"author":{"gitId":"ShawnTanzc"},"content":"    - What it does: It allows user to add new purchases in foreign currency into a list by entering the item name, cost "},{"lineNumber":15,"author":{"gitId":"ShawnTanzc"},"content":"    and day it was bought."},{"lineNumber":16,"author":{"gitId":"ShawnTanzc"},"content":"    - Justification: This feature sets up the key expense function of our application. It requires the minimal "},{"lineNumber":17,"author":{"gitId":"ShawnTanzc"},"content":"    information and allows efficient inclusion of data. When user purchase item during their trip, the cost they look "},{"lineNumber":18,"author":{"gitId":"ShawnTanzc"},"content":"    in foreign currency, therefore inputs are in foreign currency as well. "},{"lineNumber":19,"author":{"gitId":"ShawnTanzc"},"content":"    "},{"lineNumber":20,"author":{"gitId":"ShawnTanzc"},"content":"- **New Feature**: Added the ability to delete existing items from the expense list."},{"lineNumber":21,"author":{"gitId":"ShawnTanzc"},"content":"    - What it does: It allows user to remove an existing item of their choice from the expense list."},{"lineNumber":22,"author":{"gitId":"ShawnTanzc"},"content":"    - Justification: This feature offers users with a guilt-free flexibility when they key in their expenses. In the "},{"lineNumber":23,"author":{"gitId":"ShawnTanzc"},"content":"    case of an incorrect input, this feature allows user to erase the input."},{"lineNumber":24,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":25,"author":{"gitId":"ShawnTanzc"},"content":"- **New Feature**: Added the ability to display the existing items in the expense list."},{"lineNumber":26,"author":{"gitId":"ShawnTanzc"},"content":"    - What it does: This feature displays user\u0027s pre-assigned budget, expense list, total spending, amount remaining "},{"lineNumber":27,"author":{"gitId":"ShawnTanzc"},"content":"    and percentage spent."},{"lineNumber":28,"author":{"gitId":"ShawnTanzc"},"content":"    - Justification: This feature executes Trippie\u0027s main aim to track user\u0027s spending and reminds user to keep within "},{"lineNumber":29,"author":{"gitId":"ShawnTanzc"},"content":"    their budget. "},{"lineNumber":30,"author":{"gitId":"ShawnTanzc"},"content":"    - Highlight: The list of items are sorted by days for easy referencing. This feature displays all amounts in both "},{"lineNumber":31,"author":{"gitId":"ShawnTanzc"},"content":"    foreign and local currency. A percentage bar of amount spent offers quick insights for user to gauge their spending."},{"lineNumber":32,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":33,"author":{"gitId":"ShawnTanzc"},"content":"- **New Feature**: Added the ability to convert any amount from local to foreign currency or vice versa."},{"lineNumber":34,"author":{"gitId":"ShawnTanzc"},"content":"    - What it does: This feature allows simple on-the-go conversion from either local to foreign or foreign back to "},{"lineNumber":35,"author":{"gitId":"ShawnTanzc"},"content":"    local currency."},{"lineNumber":36,"author":{"gitId":"ShawnTanzc"},"content":"    - Justification: This feature is especially efficient when travelling as it quickly converts amount inputted using "},{"lineNumber":37,"author":{"gitId":"ShawnTanzc"},"content":"    the available exchange rate. It also compliments well with the adding of expenses function if the user is unsure of "},{"lineNumber":38,"author":{"gitId":"ShawnTanzc"},"content":"    an item\u0027s amount in foreign currency."},{"lineNumber":39,"author":{"gitId":"ShawnTanzc"},"content":"    "},{"lineNumber":40,"author":{"gitId":"ShawnTanzc"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dShawnTanzc\u0026tabRepo\u003dAY2021S1-CS2113T-W11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code)"},{"lineNumber":41,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":42,"author":{"gitId":"ShawnTanzc"},"content":"- **Project management**: "},{"lineNumber":43,"author":{"gitId":"ShawnTanzc"},"content":"    - Managed and organised issues into `Trippie` project on GitHub."},{"lineNumber":44,"author":{"gitId":"ShawnTanzc"},"content":"    - Managed and assigned issues for `V2.1` on GitHub."},{"lineNumber":45,"author":{"gitId":"ShawnTanzc"},"content":"    "},{"lineNumber":46,"author":{"gitId":"ShawnTanzc"},"content":"- **Enhancement Implementation**:"},{"lineNumber":47,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":48,"author":{"gitId":"ShawnTanzc"},"content":"- **Contributions to documentation**:"},{"lineNumber":49,"author":{"gitId":"ShawnTanzc"},"content":"  * User Guide:"},{"lineNumber":50,"author":{"gitId":"ShawnTanzc"},"content":"    - Added introduction of Trippie."},{"lineNumber":51,"author":{"gitId":"ShawnTanzc"},"content":"    - Added documentations for the features `buy`, `list /e` and `delete /e` [#46](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/46/files) [#55](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/55/files)"},{"lineNumber":52,"author":{"gitId":"ShawnTanzc"},"content":"    - Did cosmetic tweaks on `convert /to` feature to enhance readability [#55](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/55/files)"},{"lineNumber":53,"author":{"gitId":"ShawnTanzc"},"content":"  * JavaDoc:"},{"lineNumber":54,"author":{"gitId":"ShawnTanzc"},"content":"    - Added documentations for JavaDoc for the following classes and its methods `AddExpenseCommand`, `CalculateCurrencyCommand`, `DeleteExpenseCommand`, `ListExpenseCommand`, `Currency`, `CurrencyType`, `Expense` and `ExpenseList` [#112](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/112)"},{"lineNumber":55,"author":{"gitId":"ShawnTanzc"},"content":"    "},{"lineNumber":56,"author":{"gitId":"ShawnTanzc"},"content":"- **Contributions to the DG**:"},{"lineNumber":57,"author":{"gitId":"ShawnTanzc"},"content":"    - Added UML diagrams and full-scale description for `Budget and Expenses` and `Foreign Exchange Calculator` implementations [#80](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/80/files)"},{"lineNumber":58,"author":{"gitId":"ShawnTanzc"},"content":"    - Added full details of tests in `Testing Guide` [#80](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/80/files)"},{"lineNumber":59,"author":{"gitId":"ShawnTanzc"},"content":"    - Added some description and expected outcome in `Step by step Guide`"},{"lineNumber":60,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":61,"author":{"gitId":"ShawnTanzc"},"content":"- **Review contributions**:"},{"lineNumber":62,"author":{"gitId":"ShawnTanzc"},"content":"    - PR reviewed (with non-trivial review comments): [#27](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/27) [#36](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/36) [#38](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/38) [#46](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/46)"},{"lineNumber":63,"author":{"gitId":"ShawnTanzc"},"content":"    - Reported bugs and suggestions for other teams in the class: (Examples: [1](https://github.com/AY2021S1-CS2113T-T09-4/tp/issues/199) [2](https://github.com/nus-cs2113-AY2021S1/tp/pull/62/files#diff-1a95edf069a4136e9cb71bee758b0dc86996f6051f0d438ec2c424557de7160b))"},{"lineNumber":64,"author":{"gitId":"ShawnTanzc"},"content":""}],"authorContributionMap":{"ShawnTanzc":64}},{"path":"docs/team/tengkianen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"# Teng Kian En\u0027s Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"tengkianen"},"content":"## Project: Trippie "},{"lineNumber":4,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":5,"author":{"gitId":"tengkianen"},"content":"Trippie is a command-line interface desktop application used for planning trips, tracking expenses and converting exchange rates."},{"lineNumber":6,"author":{"gitId":"tengkianen"},"content":"It is specifically catered for the needs of student travellers. It allows multiple trip plans and is designed for quick"},{"lineNumber":7,"author":{"gitId":"tengkianen"},"content":"and efficient inputs. It also saves your changes automatically when you exit the application."},{"lineNumber":8,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":9,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":10,"author":{"gitId":"tengkianen"},"content":"### Summary of Contributions"},{"lineNumber":11,"author":{"gitId":"tengkianen"},"content":"Given below are a list of my contribution to the project."},{"lineNumber":12,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":13,"author":{"gitId":"tengkianen"},"content":"- **New Feature**: Added the ability to list places in the place list."},{"lineNumber":14,"author":{"gitId":"tengkianen"},"content":"    - What it does: It allows user to see all places/events that has been added into the place list in a sorted manner."},{"lineNumber":15,"author":{"gitId":"tengkianen"},"content":"     User can choose to view all places/events or user can filter by the places in a specific day."},{"lineNumber":16,"author":{"gitId":"tengkianen"},"content":"    - Justification: This feature sets up the key list function of our application. "},{"lineNumber":17,"author":{"gitId":"tengkianen"},"content":"    - Highlight: Even if the user enters the places/events in a disorderly manner, this function still sorts the places "},{"lineNumber":18,"author":{"gitId":"tengkianen"},"content":"    according to day and time for user to view it in an organized manner."},{"lineNumber":19,"author":{"gitId":"tengkianen"},"content":"    "},{"lineNumber":20,"author":{"gitId":"tengkianen"},"content":"- **New Feature**: Added the ability to search a keyword in the place list."},{"lineNumber":21,"author":{"gitId":"tengkianen"},"content":"    - What it does: It allows user to use a keyword to search through the place list and returns the matches."},{"lineNumber":22,"author":{"gitId":"tengkianen"},"content":"    - Justification: This feature offers users a quick way to find certain places/events that they have already added."},{"lineNumber":23,"author":{"gitId":"tengkianen"},"content":"     This allows the user to confirm specific places he/she had planned and refer to them easily."},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":25,"author":{"gitId":"tengkianen"},"content":"- **New Feature**: Added the ability to create a new trip entirely."},{"lineNumber":26,"author":{"gitId":"tengkianen"},"content":"    - What it does: This feature allows user to easily create a new trip and prompts the user to enter key information "},{"lineNumber":27,"author":{"gitId":"tengkianen"},"content":"    regarding the new trip (e.g. name of trip and start date of trip)."},{"lineNumber":28,"author":{"gitId":"tengkianen"},"content":"    - Justification: This feature is extremely easy to understand as unlike the other functions in the application, it "},{"lineNumber":29,"author":{"gitId":"tengkianen"},"content":"    successively prompts the user to enter key information of the trip itself. Hence, there is no need to remember to "},{"lineNumber":30,"author":{"gitId":"tengkianen"},"content":"    a whole list of commands in this case. It is done for this commmand as there are a lot of information to be parsed"},{"lineNumber":31,"author":{"gitId":"tengkianen"},"content":"    at this stage."},{"lineNumber":32,"author":{"gitId":"tengkianen"},"content":"    "},{"lineNumber":33,"author":{"gitId":"tengkianen"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dtengkianen\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003divanderjmw\u0026tabRepo\u003dAY2021S1-CS2113T-W11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":34,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":35,"author":{"gitId":"tengkianen"},"content":"- **Project management**: "},{"lineNumber":36,"author":{"gitId":"tengkianen"},"content":"    - Managed and organised issues into `Trippie` project on GitHub."},{"lineNumber":37,"author":{"gitId":"tengkianen"},"content":"    - Managed and assigned issues for `V2.1` on GitHub."},{"lineNumber":38,"author":{"gitId":"tengkianen"},"content":"    "},{"lineNumber":39,"author":{"gitId":"tengkianen"},"content":"- **Contributions to documentation**:"},{"lineNumber":40,"author":{"gitId":"tengkianen"},"content":"  * User Guide:"},{"lineNumber":41,"author":{"gitId":"tengkianen"},"content":"    - Added documentations for the features `convert /to`, `exit`, saving the data, and FAQ "},{"lineNumber":42,"author":{"gitId":"tengkianen"},"content":"  * Developer Guide:"},{"lineNumber":43,"author":{"gitId":"tengkianen"},"content":"    - Added `Introduction to Trippie`, `Setting up the project in your computer`, `Design and Implementation` and `Architecture` [#59](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/59/files)"},{"lineNumber":44,"author":{"gitId":"tengkianen"},"content":"    - Described `Sorting Place List` within `Implementation`."},{"lineNumber":45,"author":{"gitId":"tengkianen"},"content":"    - Finished up on the `Appendix: Requirements`."},{"lineNumber":46,"author":{"gitId":"tengkianen"},"content":"    "},{"lineNumber":47,"author":{"gitId":"tengkianen"},"content":"- **Contributions to the DG**:"},{"lineNumber":48,"author":{"gitId":"tengkianen"},"content":"    - Fixed Table of Content [#132](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/132)"},{"lineNumber":49,"author":{"gitId":"tengkianen"},"content":"    - Did general content styling on the DG"},{"lineNumber":50,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":51,"author":{"gitId":"tengkianen"},"content":"- **Review contributions**:"},{"lineNumber":52,"author":{"gitId":"tengkianen"},"content":"    - PR reviewed (with non-trivial review comments): [#58](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/58) [#63](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/63) [#117](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/117)"}],"authorContributionMap":{"tengkianen":52}},{"path":"docs/team/weishuangtan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weishuangtan"},"content":"# Wei Shuang\u0027s Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":3,"author":{"gitId":"weishuangtan"},"content":"## Project: Trippie "},{"lineNumber":4,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":5,"author":{"gitId":"weishuangtan"},"content":"Trippie is a command-line desktop application used for planning trips, tracking expenses and converting exchange rates."},{"lineNumber":6,"author":{"gitId":"weishuangtan"},"content":"It is specifically catered for the needs of student travellers. It allows multiple trip plans and is designed for quick"},{"lineNumber":7,"author":{"gitId":"weishuangtan"},"content":"and efficient inputs."},{"lineNumber":8,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":9,"author":{"gitId":"weishuangtan"},"content":"### Summary of Contributions"},{"lineNumber":10,"author":{"gitId":"weishuangtan"},"content":"Given below are a list of my contribution to the project."},{"lineNumber":11,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":12,"author":{"gitId":"weishuangtan"},"content":"- **New feature**: Added the ability for users to save their trips."},{"lineNumber":13,"author":{"gitId":"weishuangtan"},"content":"    - What it does: It allows users to store and edit their trips in a text file."},{"lineNumber":14,"author":{"gitId":"weishuangtan"},"content":"    - Justification: This feature enables users to save their trips after every edit made to their trips, and to "},{"lineNumber":15,"author":{"gitId":"weishuangtan"},"content":"    continue editing even after exiting Trippie."},{"lineNumber":16,"author":{"gitId":"weishuangtan"},"content":"    - Highlights: The output of trips into the text file is done in a reader-friendly manner, allowing users to view"},{"lineNumber":17,"author":{"gitId":"weishuangtan"},"content":"    the details of the trips in one go."},{"lineNumber":18,"author":{"gitId":"weishuangtan"},"content":"- **New feature**: Added the ability to print a help list for users."},{"lineNumber":19,"author":{"gitId":"weishuangtan"},"content":"    - What it does: It prints a list of commands available for usage in Trippie."},{"lineNumber":20,"author":{"gitId":"weishuangtan"},"content":"    - Justification: Due to the large number of functions available in Trippie, this help functions allows users to"},{"lineNumber":21,"author":{"gitId":"weishuangtan"},"content":"    refer and a convenient way to view all the commands available."},{"lineNumber":22,"author":{"gitId":"weishuangtan"},"content":"    - Highlights: The help command is printed in a table format for easier reading."},{"lineNumber":23,"author":{"gitId":"weishuangtan"},"content":"    "},{"lineNumber":24,"author":{"gitId":"weishuangtan"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dweishuangtan\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":25,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":26,"author":{"gitId":"weishuangtan"},"content":"- **Project management:**"},{"lineNumber":27,"author":{"gitId":"weishuangtan"},"content":"    - Managed and organised issues into `Trippie` project on GitHub."},{"lineNumber":28,"author":{"gitId":"weishuangtan"},"content":"    - Managed and assigned issues for `v2.1` on GitHub."},{"lineNumber":29,"author":{"gitId":"weishuangtan"},"content":"    - Managed release `v1.0` on GitHub."},{"lineNumber":30,"author":{"gitId":"weishuangtan"},"content":"    "},{"lineNumber":31,"author":{"gitId":"weishuangtan"},"content":"- **Enhancements to existing features:**"},{"lineNumber":32,"author":{"gitId":"weishuangtan"},"content":"    - Implemented TrippieException class for error handling mechanisms. [#36](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/36)"},{"lineNumber":33,"author":{"gitId":"weishuangtan"},"content":"    - Enhanced the error handling mechanism for `v1.0` features related to expenses with TrippieInvalidArgumentException"},{"lineNumber":34,"author":{"gitId":"weishuangtan"},"content":"    and TrippieIllegalCommandException [#36](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/36)"},{"lineNumber":35,"author":{"gitId":"weishuangtan"},"content":"    - Enhanced the error handling for new trip and load trip commands. [#82](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/82)"},{"lineNumber":36,"author":{"gitId":"weishuangtan"},"content":"    - Wrote additional tests for existing features to increase coverage at initial phase [#66](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/66)"},{"lineNumber":37,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":38,"author":{"gitId":"weishuangtan"},"content":"- **Contributions to documentation:**"},{"lineNumber":39,"author":{"gitId":"weishuangtan"},"content":"    - User Guide:"},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":"        - Added documentations for the features `search`, `delete /p` and `budget` [here](https://ay2021s1-cs2113t-w11-2.github.io/tp/UserGuide#58-searching-for-place-search-wei-shuang)"},{"lineNumber":41,"author":{"gitId":"weishuangtan"},"content":"        - Added the Command Summary section [here](https://ay2021s1-cs2113t-w11-2.github.io/tp/UserGuide#70-command-summary-wei-shuang)"},{"lineNumber":42,"author":{"gitId":"weishuangtan"},"content":"    - JavaDoc:"},{"lineNumber":43,"author":{"gitId":"weishuangtan"},"content":"        - Added documentations for JavaDoc for the following classes and its methods: [#148](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/148)"},{"lineNumber":44,"author":{"gitId":"weishuangtan"},"content":"            - Commands: `AddExpenseCommand`, `DeleteExpenseCommand`, `BudgetCommand`, `HelpCommand`."},{"lineNumber":45,"author":{"gitId":"weishuangtan"},"content":"            - Data: `Expense`"},{"lineNumber":46,"author":{"gitId":"weishuangtan"},"content":"            "},{"lineNumber":47,"author":{"gitId":"weishuangtan"},"content":"- **Contributions to the DG:**"},{"lineNumber":48,"author":{"gitId":"weishuangtan"},"content":"    - Added full-scale descriptions for `Parser`, `Command` and `Exceptions` under Design, and `Import and Export "},{"lineNumber":49,"author":{"gitId":"weishuangtan"},"content":"    Files`."},{"lineNumber":50,"author":{"gitId":"weishuangtan"},"content":"    - Added class diagrams created using *Miro*."},{"lineNumber":51,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":52,"author":{"gitId":"weishuangtan"},"content":"- **Review contributions:**"},{"lineNumber":53,"author":{"gitId":"weishuangtan"},"content":"    - PR reviewed (with non-trivial review comments): [#111](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/111) [#147](https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/147)"}],"authorContributionMap":{"weishuangtan":53}},{"path":"src/main/java/seedu/trippie/ExpenseComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShawnTanzc"},"content":"package seedu.trippie;"},{"lineNumber":2,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.data.Expense;"},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":"import java.util.Comparator;"},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":"public class ExpenseComparator implements Comparator\u003cExpense\u003e {"},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"ShawnTanzc"},"content":"    public int compare(Expense a, Expense b) {"},{"lineNumber":10,"author":{"gitId":"ShawnTanzc"},"content":"        return a.getExpenseDayBought() - b.getExpenseDayBought();"},{"lineNumber":11,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ShawnTanzc"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":12}},{"path":"src/main/java/seedu/trippie/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"package seedu.trippie;"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.AddExpenseCommand;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.AddPlaceCommand;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.BudgetCommand;"},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.command.CalculateCurrencyCommand;"},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.Command;"},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.command.DeleteExpenseCommand;"},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.DeletePlaceCommand;"},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.DeleteTripCommand;"},{"lineNumber":11,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.EditTripCommand;"},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.ExitCommand;"},{"lineNumber":13,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.HelpCommand;"},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.ListExpenseCommand;"},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.ListPlacesCommand;"},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.LoadTripCommand;"},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.NewTripCommand;"},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.SearchCommand;"},{"lineNumber":19,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.exception.TrippieIllegalCommandException;"},{"lineNumber":20,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":21,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":22,"author":{"gitId":"ShawnTanzc"},"content":"public class Parser {"},{"lineNumber":23,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":24,"author":{"gitId":"weishuangtan"},"content":"    private static final String ERROR_MESSAGE \u003d \"Invalid Command! Type \\\"help\\\" to view the commands available!\";"},{"lineNumber":25,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":26,"author":{"gitId":"tengkianen"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"tengkianen"},"content":"     * Parses user input before calling specified command."},{"lineNumber":28,"author":{"gitId":"tengkianen"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"tengkianen"},"content":"     * @param userInput Command input by the user."},{"lineNumber":30,"author":{"gitId":"tengkianen"},"content":"     * @return different methods depending on command input by user."},{"lineNumber":31,"author":{"gitId":"tengkianen"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"    public static Command parse(String userInput) {"},{"lineNumber":33,"author":{"gitId":"ShawnTanzc"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"weishuangtan"},"content":"            if (userInput.trim().equals(\"exit\")) {"},{"lineNumber":35,"author":{"gitId":"felixhalim"},"content":"                return new ExitCommand();"},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":"            } else if (userInput.startsWith(\"buy\")) {"},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":"                return new AddExpenseCommand(userInput);"},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":"            } else if (userInput.startsWith(\"delete /e\")) {"},{"lineNumber":39,"author":{"gitId":"ShawnTanzc"},"content":"                return new DeleteExpenseCommand(userInput);"},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":"            } else if (userInput.trim().equals(\"list /e\")) {"},{"lineNumber":41,"author":{"gitId":"ivanderjmw"},"content":"                return new ListExpenseCommand();"},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":"            } else if (userInput.startsWith(\"budget\")) {"},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":"                return new BudgetCommand(userInput);"},{"lineNumber":44,"author":{"gitId":"ShawnTanzc"},"content":"            } else if (userInput.startsWith(\"convert /to\")) {"},{"lineNumber":45,"author":{"gitId":"ShawnTanzc"},"content":"                return new CalculateCurrencyCommand(userInput);"},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":"            } else if (userInput.startsWith(\"add \")) {"},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":"                return new AddPlaceCommand(userInput);"},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"            } else if (userInput.startsWith(\"delete /p\")) {"},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"                return new DeletePlaceCommand(userInput);"},{"lineNumber":50,"author":{"gitId":"weishuangtan"},"content":"            } else if (userInput.trim().equals(\"help\")) {"},{"lineNumber":51,"author":{"gitId":"weishuangtan"},"content":"                return new HelpCommand();"},{"lineNumber":52,"author":{"gitId":"ShawnTanzc"},"content":"            } else if (userInput.startsWith(\"list /p\")) {"},{"lineNumber":53,"author":{"gitId":"ShawnTanzc"},"content":"                return new ListPlacesCommand(userInput);"},{"lineNumber":54,"author":{"gitId":"tengkianen"},"content":"            } else if (userInput.startsWith(\"search\")) {"},{"lineNumber":55,"author":{"gitId":"tengkianen"},"content":"                return new SearchCommand(userInput);"},{"lineNumber":56,"author":{"gitId":"weishuangtan"},"content":"            } else if (userInput.trim().equals(\"new trip\")) {"},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":"                return new NewTripCommand();"},{"lineNumber":58,"author":{"gitId":"weishuangtan"},"content":"            } else if (userInput.trim().equals(\"load trip\")) {"},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":"                return new LoadTripCommand();"},{"lineNumber":60,"author":{"gitId":"ShawnTanzc"},"content":"            } else if (userInput.trim().equals(\"edit trip\")) {"},{"lineNumber":61,"author":{"gitId":"ivanderjmw"},"content":"                return new EditTripCommand();"},{"lineNumber":62,"author":{"gitId":"ShawnTanzc"},"content":"            } else if (userInput.trim().equals(\"delete trip\")) {"},{"lineNumber":63,"author":{"gitId":"ivanderjmw"},"content":"                return new DeleteTripCommand();"},{"lineNumber":64,"author":{"gitId":"felixhalim"},"content":"            } else {"},{"lineNumber":65,"author":{"gitId":"weishuangtan"},"content":"                throw new TrippieIllegalCommandException(ERROR_MESSAGE);"},{"lineNumber":66,"author":{"gitId":"ShawnTanzc"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"weishuangtan"},"content":"        } catch (TrippieIllegalCommandException | TrippieInvalidArgumentException e) {"},{"lineNumber":68,"author":{"gitId":"weishuangtan"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":69,"author":{"gitId":"tengkianen"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"tengkianen"},"content":"        return null;"},{"lineNumber":71,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"tengkianen"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":12,"felixhalim":3,"tengkianen":16,"ivanderjmw":29,"weishuangtan":12}},{"path":"src/main/java/seedu/trippie/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"package seedu.trippie;"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.Expense;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.ExpenseList;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.Place;"},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.PlaceList;"},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":11,"author":{"gitId":"weishuangtan"},"content":"import java.io.File;"},{"lineNumber":12,"author":{"gitId":"weishuangtan"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"weishuangtan"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"import java.io.RandomAccessFile;"},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":"import java.nio.file.Files;"},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":"import java.nio.file.Path;"},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"import java.nio.file.Paths;"},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":"import java.text.ParseException;"},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":20,"author":{"gitId":"ivanderjmw"},"content":"import java.util.ArrayList;"},{"lineNumber":21,"author":{"gitId":"weishuangtan"},"content":"import java.util.List;"},{"lineNumber":22,"author":{"gitId":"weishuangtan"},"content":"import java.util.Scanner;"},{"lineNumber":23,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":"public class Storage {"},{"lineNumber":25,"author":{"gitId":"ivanderjmw"},"content":"    public static final String MASTER_DIRECTORY \u003d \"trippie_data\";"},{"lineNumber":26,"author":{"gitId":"ivanderjmw"},"content":"    public static final String MASTER_FILE_NAME \u003d \"trippie.txt\";"},{"lineNumber":27,"author":{"gitId":"ivanderjmw"},"content":"    public static final String MASTER_FILE_PATH \u003d MASTER_DIRECTORY + File.separator + MASTER_FILE_NAME;"},{"lineNumber":28,"author":{"gitId":"ivanderjmw"},"content":"    public static final String FILE_EXTENSION \u003d \".txt\";"},{"lineNumber":29,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"ShawnTanzc"},"content":"     * Setups a master file from a tripList. Crates the directories and loads the masterFile onto tripList."},{"lineNumber":32,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":"     * @param trippieData a tripList object that would be updated."},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":"    public void setupMasterFile(TrippieData trippieData) {"},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":"            File file \u003d new File(MASTER_FILE_PATH);"},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":"            Scanner readFile \u003d getOrCreateFileScanner(file);"},{"lineNumber":39,"author":{"gitId":"ivanderjmw"},"content":"            loadMasterFile(readFile, trippieData);"},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":41,"author":{"gitId":"ivanderjmw"},"content":"            if (trippieData.getTripListSize() \u003e 0) {"},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":"                trippieData.setCurrentTripFromIndex(trippieData.getCurrentTrip().getIndex());"},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":"                trippieData.loadCurrentTripFromFile();"},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":"            readFile.close();"},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":"        } catch (TrippieException e) {"},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(\"Could not load master file\");"},{"lineNumber":50,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":"     * Gets a scanner for the corresponding file."},{"lineNumber":55,"author":{"gitId":"ivanderjmw"},"content":"     * Creates a file if the corresponding file does not exist."},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":"     * @param file A file to get the scanner from"},{"lineNumber":58,"author":{"gitId":"ivanderjmw"},"content":"     * @return Scanner from file."},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"ivanderjmw"},"content":"    public Scanner getOrCreateFileScanner(File file) {"},{"lineNumber":61,"author":{"gitId":"weishuangtan"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"ivanderjmw"},"content":"            // Code referenced from"},{"lineNumber":63,"author":{"gitId":"ivanderjmw"},"content":"            // https://stackoverflow.com/questions/2833853/create-whole-path-automatically-when-writing-to-a-new-file"},{"lineNumber":64,"author":{"gitId":"ivanderjmw"},"content":"            Files.createDirectories(Path.of(file.getPath()).getParent());"},{"lineNumber":65,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":66,"author":{"gitId":"weishuangtan"},"content":"            if (file.createNewFile()) {"},{"lineNumber":67,"author":{"gitId":"weishuangtan"},"content":"                System.out.println(\"I can\u0027t find a file in your directory :(\");"},{"lineNumber":68,"author":{"gitId":"felixhalim"},"content":"                System.out.println(\"I created a new \" + file.getName() + \" file for you!\");"},{"lineNumber":69,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":70,"author":{"gitId":"weishuangtan"},"content":"            } else if (!file.createNewFile()) {"},{"lineNumber":71,"author":{"gitId":"ivanderjmw"},"content":"                System.out.println(\"Reading the Trippie files now...\");"},{"lineNumber":72,"author":{"gitId":"weishuangtan"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":74,"author":{"gitId":"weishuangtan"},"content":"            return new Scanner(file);"},{"lineNumber":75,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":76,"author":{"gitId":"weishuangtan"},"content":"        } catch (IOException e) {"},{"lineNumber":77,"author":{"gitId":"weishuangtan"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":78,"author":{"gitId":"weishuangtan"},"content":"            e.printStackTrace();"},{"lineNumber":79,"author":{"gitId":"weishuangtan"},"content":"            return null;"},{"lineNumber":80,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":83,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"ivanderjmw"},"content":"     * This method saves a tripList object to a single master txt file."},{"lineNumber":85,"author":{"gitId":"ivanderjmw"},"content":"     * Each line in the master file stores a trip in the following format:"},{"lineNumber":86,"author":{"gitId":"ivanderjmw"},"content":"     * TRIP_INDEX,TRIP_NAME,TRIP_DATE"},{"lineNumber":87,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"ivanderjmw"},"content":"     * @param trippieData The tripList object to be saved."},{"lineNumber":89,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"ivanderjmw"},"content":"    public void saveMasterFile(TrippieData trippieData) {"},{"lineNumber":91,"author":{"gitId":"ivanderjmw"},"content":"        FileWriter fileWriter \u003d null;"},{"lineNumber":92,"author":{"gitId":"ivanderjmw"},"content":"        try {"},{"lineNumber":93,"author":{"gitId":"ivanderjmw"},"content":"            fileWriter \u003d new FileWriter(MASTER_FILE_PATH);"},{"lineNumber":94,"author":{"gitId":"ivanderjmw"},"content":"        } catch (IOException e) {"},{"lineNumber":95,"author":{"gitId":"ivanderjmw"},"content":"            e.printStackTrace();"},{"lineNumber":96,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":98,"author":{"gitId":"ivanderjmw"},"content":"        FileWriter finalFileWriter \u003d fileWriter;"},{"lineNumber":99,"author":{"gitId":"ivanderjmw"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":100,"author":{"gitId":"ivanderjmw"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"ivanderjmw"},"content":"            if (trippieData.getCurrentTrip() !\u003d null) {"},{"lineNumber":102,"author":{"gitId":"ivanderjmw"},"content":"                assert trippieData.getTripListSize() \u003e 0;"},{"lineNumber":103,"author":{"gitId":"ivanderjmw"},"content":"                finalFileWriter.write("},{"lineNumber":104,"author":{"gitId":"ivanderjmw"},"content":"                        String.format(\"DEFAULT %d\\n\", trippieData.getCurrentTrip().getIndex())"},{"lineNumber":105,"author":{"gitId":"ivanderjmw"},"content":"                );"},{"lineNumber":106,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":108,"author":{"gitId":"ivanderjmw"},"content":"            trippieData.getTripList().stream().forEach(trip -\u003e {"},{"lineNumber":109,"author":{"gitId":"ivanderjmw"},"content":"                try {"},{"lineNumber":110,"author":{"gitId":"ivanderjmw"},"content":"                    finalFileWriter.write("},{"lineNumber":111,"author":{"gitId":"ivanderjmw"},"content":"                            trip.getIndex() + \",\""},{"lineNumber":112,"author":{"gitId":"ivanderjmw"},"content":"                                    + trip.getName() + \",\""},{"lineNumber":113,"author":{"gitId":"ivanderjmw"},"content":"                                    + df.format(trip.getStartDate()) + \",\""},{"lineNumber":114,"author":{"gitId":"ivanderjmw"},"content":"                                    + trip.getMaxDay() + \"\\n\""},{"lineNumber":115,"author":{"gitId":"ivanderjmw"},"content":"                    );"},{"lineNumber":116,"author":{"gitId":"ivanderjmw"},"content":"                } catch (IOException e) {"},{"lineNumber":117,"author":{"gitId":"ShawnTanzc"},"content":"                    System.out.println(\"Error occurred when saving Master File.\");"},{"lineNumber":118,"author":{"gitId":"ivanderjmw"},"content":"                    e.printStackTrace();"},{"lineNumber":119,"author":{"gitId":"ivanderjmw"},"content":"                }"},{"lineNumber":120,"author":{"gitId":"ivanderjmw"},"content":"            });"},{"lineNumber":121,"author":{"gitId":"ivanderjmw"},"content":"        } catch (IOException e) {"},{"lineNumber":122,"author":{"gitId":"ShawnTanzc"},"content":"            System.out.println(\"Error occurred when saving Master File.\");"},{"lineNumber":123,"author":{"gitId":"ivanderjmw"},"content":"            e.printStackTrace();"},{"lineNumber":124,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":126,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":127,"author":{"gitId":"ivanderjmw"},"content":"        try {"},{"lineNumber":128,"author":{"gitId":"weishuangtan"},"content":"            fileWriter.close();"},{"lineNumber":129,"author":{"gitId":"ivanderjmw"},"content":"        } catch (IOException e) {"},{"lineNumber":130,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(\"Encountered a problem when closing file.\");"},{"lineNumber":131,"author":{"gitId":"ivanderjmw"},"content":"            e.printStackTrace();"},{"lineNumber":132,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":135,"author":{"gitId":"ivanderjmw"},"content":"    public void saveTrip(Trip trip) throws IOException {"},{"lineNumber":136,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":137,"author":{"gitId":"ivanderjmw"},"content":"        if (trip \u003d\u003d null) {"},{"lineNumber":138,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(\"Failed to save trip\");"},{"lineNumber":139,"author":{"gitId":"ivanderjmw"},"content":"            return;"},{"lineNumber":140,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":142,"author":{"gitId":"ivanderjmw"},"content":"        assert trip !\u003d null;"},{"lineNumber":143,"author":{"gitId":"ivanderjmw"},"content":"        String path \u003d MASTER_DIRECTORY + File.separator + trip.getName() + FILE_EXTENSION;"},{"lineNumber":144,"author":{"gitId":"ivanderjmw"},"content":"        FileWriter fileWriter \u003d new FileWriter(path);"},{"lineNumber":145,"author":{"gitId":"ivanderjmw"},"content":"        fileWriter.write("},{"lineNumber":146,"author":{"gitId":"ivanderjmw"},"content":"                \"This file shows your saved trips under Trippie!\""},{"lineNumber":147,"author":{"gitId":"ivanderjmw"},"content":"                        + System.lineSeparator()"},{"lineNumber":148,"author":{"gitId":"ivanderjmw"},"content":"                        + System.lineSeparator()"},{"lineNumber":149,"author":{"gitId":"ivanderjmw"},"content":"        );"},{"lineNumber":150,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":151,"author":{"gitId":"ivanderjmw"},"content":"        assert trip.getExpenseListObject() !\u003d null;"},{"lineNumber":152,"author":{"gitId":"ivanderjmw"},"content":"        assert trip.getPlaceListObject() !\u003d null;"},{"lineNumber":153,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":154,"author":{"gitId":"ivanderjmw"},"content":"        savePlaceList(fileWriter, trip.getPlaceListObject());"},{"lineNumber":155,"author":{"gitId":"ivanderjmw"},"content":"        saveExpenseList(fileWriter, trip.getExpenseListObject());"},{"lineNumber":156,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":157,"author":{"gitId":"weishuangtan"},"content":"        fileWriter.close();"},{"lineNumber":158,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":160,"author":{"gitId":"ivanderjmw"},"content":"    private void saveExpenseList(FileWriter fileWriter, ExpenseList expenseList) throws IOException {"},{"lineNumber":161,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":162,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":163,"author":{"gitId":"ivanderjmw"},"content":"        if (expenseList.getExpenseList().size() \u003d\u003d 0) {"},{"lineNumber":164,"author":{"gitId":"weishuangtan"},"content":"            fileWriter.write(\"There is currently nothing in your Expense list.\");"},{"lineNumber":165,"author":{"gitId":"weishuangtan"},"content":"        } else {"},{"lineNumber":166,"author":{"gitId":"weishuangtan"},"content":"            fileWriter.write(\"These are your expenses!\" + System.lineSeparator());"},{"lineNumber":167,"author":{"gitId":"weishuangtan"},"content":"            fileWriter.write(\"Day | Item | Cost\" + System.lineSeparator());"},{"lineNumber":168,"author":{"gitId":"ivanderjmw"},"content":"            for (Expense expense : expenseList.getExpenseList()) {"},{"lineNumber":169,"author":{"gitId":"weishuangtan"},"content":"                fileWriter.write(expense.getExpenseDayBought() + \" | \" + expense.getExpenseName()"},{"lineNumber":170,"author":{"gitId":"weishuangtan"},"content":"                        + \" | $\" + expense.getExpenseCost() + System.lineSeparator());"},{"lineNumber":171,"author":{"gitId":"weishuangtan"},"content":"            }"},{"lineNumber":172,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":174,"author":{"gitId":"ShawnTanzc"},"content":"        Float budget \u003d expenseList.getBudgetValue();"},{"lineNumber":175,"author":{"gitId":"ShawnTanzc"},"content":"        if (budget !\u003d null) {"},{"lineNumber":176,"author":{"gitId":"ShawnTanzc"},"content":"            fileWriter.write(System.lineSeparator() + \"Total budget: $\" + String.format(\"%.2f\", budget)"},{"lineNumber":177,"author":{"gitId":"weishuangtan"},"content":"                    + System.lineSeparator());"},{"lineNumber":178,"author":{"gitId":"weishuangtan"},"content":"        } else {"},{"lineNumber":179,"author":{"gitId":"weishuangtan"},"content":"            fileWriter.write(System.lineSeparator() + \"Total budget has not been set\" + System.lineSeparator());"},{"lineNumber":180,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":182,"author":{"gitId":"ShawnTanzc"},"content":"        String currencyAbbreviation \u003d expenseList.getCurrencyAbbreviation();"},{"lineNumber":183,"author":{"gitId":"ShawnTanzc"},"content":"        if (currencyAbbreviation !\u003d null) {"},{"lineNumber":184,"author":{"gitId":"ShawnTanzc"},"content":"            fileWriter.write(System.lineSeparator() + \"Forex Abbreviation: \" + currencyAbbreviation"},{"lineNumber":185,"author":{"gitId":"ShawnTanzc"},"content":"                    + System.lineSeparator());"},{"lineNumber":186,"author":{"gitId":"ShawnTanzc"},"content":"        } else {"},{"lineNumber":187,"author":{"gitId":"ShawnTanzc"},"content":"            fileWriter.write(System.lineSeparator()"},{"lineNumber":188,"author":{"gitId":"ShawnTanzc"},"content":"                    + \"ForEx abbreviation has not been set\" + System.lineSeparator());"},{"lineNumber":189,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":191,"author":{"gitId":"ShawnTanzc"},"content":"        Float forExValue \u003d expenseList.getForExValue();"},{"lineNumber":192,"author":{"gitId":"ShawnTanzc"},"content":"        if (forExValue !\u003d null) {"},{"lineNumber":193,"author":{"gitId":"ShawnTanzc"},"content":"            fileWriter.write(System.lineSeparator() + \"Forex Rate: \" + forExValue + System.lineSeparator());"},{"lineNumber":194,"author":{"gitId":"ShawnTanzc"},"content":"        } else {"},{"lineNumber":195,"author":{"gitId":"ShawnTanzc"},"content":"            fileWriter.write(System.lineSeparator() + \"Forex Rate has not been set\" + System.lineSeparator());"},{"lineNumber":196,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":199,"author":{"gitId":"ivanderjmw"},"content":"    private void savePlaceList(FileWriter fileWriter, PlaceList placeList) throws IOException {"},{"lineNumber":200,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":201,"author":{"gitId":"ivanderjmw"},"content":"        if (placeList.getPlaceList().size() \u003d\u003d 0) {"},{"lineNumber":202,"author":{"gitId":"weishuangtan"},"content":"            fileWriter.write(\"Please add your itinerary!\");"},{"lineNumber":203,"author":{"gitId":"weishuangtan"},"content":"        } else {"},{"lineNumber":204,"author":{"gitId":"weishuangtan"},"content":"            fileWriter.write(\"Here is your itinerary! Enjoy your trip :)\" + System.lineSeparator());"},{"lineNumber":205,"author":{"gitId":"weishuangtan"},"content":"            fileWriter.write(\"Day | Start Time | End Time | Place\" + System.lineSeparator());"},{"lineNumber":206,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":207,"author":{"gitId":"ivanderjmw"},"content":"            int maxDay \u003d placeList.getMaxDay();"},{"lineNumber":208,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":209,"author":{"gitId":"weishuangtan"},"content":"            for (int i \u003d 1; i \u003c\u003d maxDay; i++) {"},{"lineNumber":210,"author":{"gitId":"ivanderjmw"},"content":"                for (Place place : placeList.getPlaceList()) {"},{"lineNumber":211,"author":{"gitId":"weishuangtan"},"content":"                    if (place.getPlaceDay() \u003d\u003d i) {"},{"lineNumber":212,"author":{"gitId":"weishuangtan"},"content":"                        fileWriter.write(place.getPlaceDay() + \" | \""},{"lineNumber":213,"author":{"gitId":"weishuangtan"},"content":"                                + String.format(\"%04d\", place.getPlaceStartTime()) + \" | \""},{"lineNumber":214,"author":{"gitId":"weishuangtan"},"content":"                                + String.format(\"%04d\", place.getPlaceEndTime()) + \" | \""},{"lineNumber":215,"author":{"gitId":"weishuangtan"},"content":"                                + place.getPlaceName() + System.lineSeparator());"},{"lineNumber":216,"author":{"gitId":"weishuangtan"},"content":"                    }"},{"lineNumber":217,"author":{"gitId":"weishuangtan"},"content":"                }"},{"lineNumber":218,"author":{"gitId":"weishuangtan"},"content":"            }"},{"lineNumber":219,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":220,"author":{"gitId":"weishuangtan"},"content":"        fileWriter.write(System.lineSeparator());"},{"lineNumber":221,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":222,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":224,"author":{"gitId":"ivanderjmw"},"content":"    public Trip loadTripFromFile(Trip trip) {"},{"lineNumber":225,"author":{"gitId":"ivanderjmw"},"content":"        try {"},{"lineNumber":226,"author":{"gitId":"ivanderjmw"},"content":"            File file \u003d new File(MASTER_DIRECTORY + File.separator + trip.getName() + FILE_EXTENSION);"},{"lineNumber":227,"author":{"gitId":"ivanderjmw"},"content":"            Scanner fileScanner \u003d getOrCreateFileScanner(file);"},{"lineNumber":228,"author":{"gitId":"ivanderjmw"},"content":"            return loadTrip(fileScanner, trip);"},{"lineNumber":229,"author":{"gitId":"ivanderjmw"},"content":"        } catch (TrippieException e) {"},{"lineNumber":230,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":231,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(\"Could not load trip file\");"},{"lineNumber":232,"author":{"gitId":"ivanderjmw"},"content":"            return null;"},{"lineNumber":233,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":236,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":237,"author":{"gitId":"ivanderjmw"},"content":"     * Finds a corresponding trip file, and either gets or create the File."},{"lineNumber":238,"author":{"gitId":"ivanderjmw"},"content":"     * Loads the content of the file to the trip object"},{"lineNumber":239,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":240,"author":{"gitId":"ivanderjmw"},"content":"     * @param fileScanner The scanner for the trip file"},{"lineNumber":241,"author":{"gitId":"ivanderjmw"},"content":"     * @param trip A trip object to search for"},{"lineNumber":242,"author":{"gitId":"ivanderjmw"},"content":"     * @return A trip from the file contents"},{"lineNumber":243,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":244,"author":{"gitId":"ivanderjmw"},"content":"    public Trip loadTrip(Scanner fileScanner, Trip trip) throws TrippieException {"},{"lineNumber":245,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":246,"author":{"gitId":"ivanderjmw"},"content":"        Trip newTrip \u003d new Trip(trip.getIndex(), trip.getName(), trip.getStartDate());"},{"lineNumber":247,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":248,"author":{"gitId":"ivanderjmw"},"content":"        List\u003cPlace\u003e places \u003d newTrip.getPlaceListObject().getPlaceList();"},{"lineNumber":249,"author":{"gitId":"ivanderjmw"},"content":"        List\u003cExpense\u003e expenses \u003d newTrip.getExpenseListObject().getExpenseList();"},{"lineNumber":250,"author":{"gitId":"ivanderjmw"},"content":"        while (fileScanner.hasNext()) {"},{"lineNumber":251,"author":{"gitId":"ivanderjmw"},"content":"            String line \u003d fileScanner.nextLine();"},{"lineNumber":252,"author":{"gitId":"weishuangtan"},"content":"            if (line.contains(\"Day | Start Time | End Time | Place\")) {"},{"lineNumber":253,"author":{"gitId":"weishuangtan"},"content":"                String input;"},{"lineNumber":254,"author":{"gitId":"ivanderjmw"},"content":"                input \u003d fileScanner.nextLine();"},{"lineNumber":255,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":256,"author":{"gitId":"weishuangtan"},"content":"                do {"},{"lineNumber":257,"author":{"gitId":"weishuangtan"},"content":"                    String[] placeParameters \u003d input.split(\" \\\\| \");"},{"lineNumber":258,"author":{"gitId":"ivanderjmw"},"content":"                    places.add(new Place("},{"lineNumber":259,"author":{"gitId":"ivanderjmw"},"content":"                            placeParameters[3],"},{"lineNumber":260,"author":{"gitId":"ivanderjmw"},"content":"                            Integer.parseInt(placeParameters[0]),"},{"lineNumber":261,"author":{"gitId":"ivanderjmw"},"content":"                            Integer.parseInt(placeParameters[1]),"},{"lineNumber":262,"author":{"gitId":"ivanderjmw"},"content":"                            Integer.parseInt(placeParameters[2]))"},{"lineNumber":263,"author":{"gitId":"ivanderjmw"},"content":"                    );"},{"lineNumber":264,"author":{"gitId":"ivanderjmw"},"content":"                    input \u003d fileScanner.nextLine();"},{"lineNumber":265,"author":{"gitId":"weishuangtan"},"content":"                } while (!input.equals(\"\"));"},{"lineNumber":266,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":267,"author":{"gitId":"weishuangtan"},"content":"            } else if (line.contains(\"Day | Item | Cost\")) {"},{"lineNumber":268,"author":{"gitId":"weishuangtan"},"content":"                String input;"},{"lineNumber":269,"author":{"gitId":"ivanderjmw"},"content":"                input \u003d fileScanner.nextLine();"},{"lineNumber":270,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":271,"author":{"gitId":"weishuangtan"},"content":"                do {"},{"lineNumber":272,"author":{"gitId":"weishuangtan"},"content":"                    String[] expenseParameters \u003d input.split(\" \\\\| \");"},{"lineNumber":273,"author":{"gitId":"ivanderjmw"},"content":"                    expenses.add(new Expense("},{"lineNumber":274,"author":{"gitId":"ivanderjmw"},"content":"                            expenseParameters[1],"},{"lineNumber":275,"author":{"gitId":"ivanderjmw"},"content":"                            Float.parseFloat(expenseParameters[2].substring(1)),"},{"lineNumber":276,"author":{"gitId":"ivanderjmw"},"content":"                            Integer.parseInt(expenseParameters[0]))"},{"lineNumber":277,"author":{"gitId":"ivanderjmw"},"content":"                    );"},{"lineNumber":278,"author":{"gitId":"ivanderjmw"},"content":"                    input \u003d fileScanner.nextLine();"},{"lineNumber":279,"author":{"gitId":"weishuangtan"},"content":"                } while (!input.equals(\"\"));"},{"lineNumber":280,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":281,"author":{"gitId":"weishuangtan"},"content":"            } else if (line.contains(\"Total budget: $\")) {"},{"lineNumber":282,"author":{"gitId":"ivanderjmw"},"content":"                newTrip.getExpenseListObject().setBudgetValue(extractBudgetValue(line));"},{"lineNumber":283,"author":{"gitId":"ShawnTanzc"},"content":"            } else if (line.contains(\"Forex Abbreviation: \")) {"},{"lineNumber":284,"author":{"gitId":"ShawnTanzc"},"content":"                newTrip.getExpenseListObject().setCurrencyAbbreviation(extractCurrencyAbbreviation(line));"},{"lineNumber":285,"author":{"gitId":"ShawnTanzc"},"content":"            } else if (line.contains(\"Forex Rate: \")) {"},{"lineNumber":286,"author":{"gitId":"ShawnTanzc"},"content":"                newTrip.getExpenseListObject().setForExValue(extractForExValue(line));"},{"lineNumber":287,"author":{"gitId":"weishuangtan"},"content":"            }"},{"lineNumber":288,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":289,"author":{"gitId":"ShawnTanzc"},"content":"        newTrip.getExpenseListObject().setExpenseList(expenses);"},{"lineNumber":290,"author":{"gitId":"ShawnTanzc"},"content":"        newTrip.getPlaceListObject().setPlaceList(places);"},{"lineNumber":291,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":292,"author":{"gitId":"ivanderjmw"},"content":"        fileScanner.close();"},{"lineNumber":293,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":294,"author":{"gitId":"ivanderjmw"},"content":"        return newTrip;"},{"lineNumber":295,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":296,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":297,"author":{"gitId":"ivanderjmw"},"content":"    private Float extractBudgetValue(String userInput) throws NullPointerException, NumberFormatException {"},{"lineNumber":298,"author":{"gitId":"ShawnTanzc"},"content":"        String budgetValueString \u003d userInput.replace(\"Total budget: $\", \"\").trim();"},{"lineNumber":299,"author":{"gitId":"ShawnTanzc"},"content":"        return Float.parseFloat(budgetValueString);"},{"lineNumber":300,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":302,"author":{"gitId":"ShawnTanzc"},"content":"    private String extractCurrencyAbbreviation(String userInput) throws NullPointerException {"},{"lineNumber":303,"author":{"gitId":"ShawnTanzc"},"content":"        return userInput.replace(\"Forex Abbreviation: \", \"\").trim();"},{"lineNumber":304,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":305,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":306,"author":{"gitId":"ShawnTanzc"},"content":"    private Float extractForExValue(String userInput) {"},{"lineNumber":307,"author":{"gitId":"ShawnTanzc"},"content":"        String forExString \u003d userInput.replace(\"Forex Rate: \", \"\").trim();"},{"lineNumber":308,"author":{"gitId":"ShawnTanzc"},"content":"        return Float.parseFloat(forExString);"},{"lineNumber":309,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":310,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":311,"author":{"gitId":"ivanderjmw"},"content":"    public void loadMasterFile(Scanner readFile, TrippieData trippieData) throws TrippieException {"},{"lineNumber":312,"author":{"gitId":"ivanderjmw"},"content":"        assert trippieData !\u003d null;"},{"lineNumber":313,"author":{"gitId":"ivanderjmw"},"content":"        assert readFile !\u003d null;"},{"lineNumber":314,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":315,"author":{"gitId":"ivanderjmw"},"content":"        List\u003cTrip\u003e parsedTripList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":316,"author":{"gitId":"ivanderjmw"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":317,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":318,"author":{"gitId":"ivanderjmw"},"content":"        while (readFile.hasNext()) {"},{"lineNumber":319,"author":{"gitId":"ivanderjmw"},"content":"            String line \u003d readFile.nextLine();"},{"lineNumber":320,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":321,"author":{"gitId":"ivanderjmw"},"content":"            // Parse default parameter"},{"lineNumber":322,"author":{"gitId":"ivanderjmw"},"content":"            if (line.startsWith(\"DEFAULT\")) {"},{"lineNumber":323,"author":{"gitId":"ivanderjmw"},"content":"                trippieData.setDefaultTripIndex("},{"lineNumber":324,"author":{"gitId":"ivanderjmw"},"content":"                        Integer.parseInt(line.replace(\"DEFAULT\", \"\").trim())"},{"lineNumber":325,"author":{"gitId":"ivanderjmw"},"content":"                );"},{"lineNumber":326,"author":{"gitId":"ivanderjmw"},"content":"                continue;"},{"lineNumber":327,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":328,"author":{"gitId":"ivanderjmw"},"content":"            String[] parameters \u003d line.split(\",\");"},{"lineNumber":329,"author":{"gitId":"ivanderjmw"},"content":"            assert parameters.length \u003d\u003d 4;"},{"lineNumber":330,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":331,"author":{"gitId":"ivanderjmw"},"content":"            try {"},{"lineNumber":332,"author":{"gitId":"ivanderjmw"},"content":"                parsedTripList.add("},{"lineNumber":333,"author":{"gitId":"ivanderjmw"},"content":"                        new Trip("},{"lineNumber":334,"author":{"gitId":"ivanderjmw"},"content":"                                Integer.parseInt(parameters[0]),"},{"lineNumber":335,"author":{"gitId":"ivanderjmw"},"content":"                                parameters[1],"},{"lineNumber":336,"author":{"gitId":"ivanderjmw"},"content":"                                df.parse(parameters[2]),"},{"lineNumber":337,"author":{"gitId":"ivanderjmw"},"content":"                                Integer.parseInt(parameters[3])"},{"lineNumber":338,"author":{"gitId":"ivanderjmw"},"content":"                        )"},{"lineNumber":339,"author":{"gitId":"ivanderjmw"},"content":"                );"},{"lineNumber":340,"author":{"gitId":"ivanderjmw"},"content":"            } catch (ParseException e) {"},{"lineNumber":341,"author":{"gitId":"ivanderjmw"},"content":"                e.printStackTrace();"},{"lineNumber":342,"author":{"gitId":"ivanderjmw"},"content":"                throw new TrippieException(\"Master file corrupted.\");"},{"lineNumber":343,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":344,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":345,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":346,"author":{"gitId":"ivanderjmw"},"content":"        trippieData.setTripList(parsedTripList);"},{"lineNumber":347,"author":{"gitId":"ivanderjmw"},"content":"        if (trippieData.getTripListSize() \u003e 0) {"},{"lineNumber":348,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(\"Found these trips in your computer \\n\" + trippieData.list());"},{"lineNumber":349,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":350,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":351,"author":{"gitId":"ivanderjmw"},"content":"        readFile.close();"},{"lineNumber":352,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":354,"author":{"gitId":"ivanderjmw"},"content":"    public void deleteTripFile(String tripName) {"},{"lineNumber":355,"author":{"gitId":"ivanderjmw"},"content":"        String tripFilePath \u003d MASTER_DIRECTORY + File.separator + tripName + FILE_EXTENSION;"},{"lineNumber":356,"author":{"gitId":"ivanderjmw"},"content":"        boolean success \u003d true;"},{"lineNumber":357,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":358,"author":{"gitId":"ivanderjmw"},"content":"        try {"},{"lineNumber":359,"author":{"gitId":"ivanderjmw"},"content":"            // Retrieved from stackoverflow"},{"lineNumber":360,"author":{"gitId":"ivanderjmw"},"content":"            // https://stackoverflow.com/questions/13685592/java-cannot-delete-file-on-windows"},{"lineNumber":361,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":362,"author":{"gitId":"ivanderjmw"},"content":"            File tripFile \u003d new File(tripFilePath);"},{"lineNumber":363,"author":{"gitId":"ivanderjmw"},"content":"            RandomAccessFile raf \u003d new RandomAccessFile(tripFile, \"rw\");"},{"lineNumber":364,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":365,"author":{"gitId":"ivanderjmw"},"content":"            raf.close();"},{"lineNumber":366,"author":{"gitId":"ivanderjmw"},"content":"            Files.delete(Paths.get(tripFilePath));"},{"lineNumber":367,"author":{"gitId":"ivanderjmw"},"content":"        } catch (IOException e) {"},{"lineNumber":368,"author":{"gitId":"ivanderjmw"},"content":"            success \u003d false;"},{"lineNumber":369,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":370,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":371,"author":{"gitId":"ivanderjmw"},"content":"        if (!success) {"},{"lineNumber":372,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(\"An error occurred while deleting the trip.\");"},{"lineNumber":373,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":374,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":375,"author":{"gitId":"tengkianen"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":38,"felixhalim":1,"tengkianen":4,"ivanderjmw":241,"weishuangtan":91}},{"path":"src/main/java/seedu/trippie/Trippie.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.trippie;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.command.Command;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.ExitCommand;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.command.NewTripCommand;"},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"weishuangtan"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Trippie {"},{"lineNumber":11,"author":{"gitId":"tengkianen"},"content":"    private final Ui ui;"},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":"    private TrippieData trippieData;"},{"lineNumber":13,"author":{"gitId":"weishuangtan"},"content":"    private final Storage storage;"},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"    private boolean isFirstRun;"},{"lineNumber":15,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":16,"author":{"gitId":"weishuangtan"},"content":"    public Trippie() {"},{"lineNumber":17,"author":{"gitId":"tengkianen"},"content":"        ui \u003d new Ui();"},{"lineNumber":18,"author":{"gitId":"weishuangtan"},"content":"        storage \u003d new Storage();"},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"        trippieData \u003d new TrippieData(storage);"},{"lineNumber":20,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":23,"author":{"gitId":"weishuangtan"},"content":"        new Trippie().run();"},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"weishuangtan"},"content":"    public void run() {"},{"lineNumber":27,"author":{"gitId":"tengkianen"},"content":"        ui.greetUser();"},{"lineNumber":28,"author":{"gitId":"ivanderjmw"},"content":"        storage.setupMasterFile(trippieData);"},{"lineNumber":29,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"        boolean isExit \u003d false;"},{"lineNumber":31,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"        while (!isExit) {"},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":"            Command c;"},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":"            if (trippieData.isTripListEmpty()) {"},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":"                c \u003d promptNewTripCommand();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":39,"author":{"gitId":"ivanderjmw"},"content":"                c \u003d parseCommand();"},{"lineNumber":40,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":"            isExit \u003d executeCommand(c);"},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":"            if (trippieData.getCurrentTrip() !\u003d null) {"},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":"                try {"},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":"                    // here current Trip should not output index out of bounds exception."},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":"                    storage.saveTrip(trippieData.getCurrentTrip());"},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"                    trippieData.getCurrentTrip().updateMaxDay();"},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"                } catch (IOException e) {"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"                    e.printStackTrace();"},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":"            storage.saveMasterFile(trippieData);"},{"lineNumber":55,"author":{"gitId":"ShawnTanzc"},"content":"            ui.printLine();"},{"lineNumber":56,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":"    private Command parseCommand() {"},{"lineNumber":60,"author":{"gitId":"ivanderjmw"},"content":"        String fullCommand \u003d ui.readCommand();"},{"lineNumber":61,"author":{"gitId":"ivanderjmw"},"content":"        ui.printLine();"},{"lineNumber":62,"author":{"gitId":"ivanderjmw"},"content":"        return Parser.parse(fullCommand);"},{"lineNumber":63,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":65,"author":{"gitId":"ivanderjmw"},"content":"    private boolean executeCommand(Command c) {"},{"lineNumber":66,"author":{"gitId":"ivanderjmw"},"content":"        if (c !\u003d null) {"},{"lineNumber":67,"author":{"gitId":"ivanderjmw"},"content":"            c.execute(ui, trippieData);"},{"lineNumber":68,"author":{"gitId":"ivanderjmw"},"content":"            return c.isExit();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"ivanderjmw"},"content":"        return false;"},{"lineNumber":71,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":73,"author":{"gitId":"ivanderjmw"},"content":"    private Command promptNewTripCommand() {"},{"lineNumber":74,"author":{"gitId":"ivanderjmw"},"content":"        Command c;"},{"lineNumber":75,"author":{"gitId":"ivanderjmw"},"content":"        do {"},{"lineNumber":76,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(\"Please create a new trip first by entering the command \u0027new trip\u0027!\");"},{"lineNumber":77,"author":{"gitId":"ivanderjmw"},"content":"            c \u003d parseCommand();"},{"lineNumber":78,"author":{"gitId":"ivanderjmw"},"content":"            if (c !\u003d null \u0026\u0026 c.isExit()) {"},{"lineNumber":79,"author":{"gitId":"ivanderjmw"},"content":"                break;"},{"lineNumber":80,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"ivanderjmw"},"content":"        } while (!(c instanceof NewTripCommand));"},{"lineNumber":82,"author":{"gitId":"ivanderjmw"},"content":"        return c;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":4,"tengkianen":6,"-":13,"ivanderjmw":55,"weishuangtan":6}},{"path":"src/main/java/seedu/trippie/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"package seedu.trippie;"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":5,"author":{"gitId":"tengkianen"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":"    Scanner in \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":9,"author":{"gitId":"tengkianen"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"tengkianen"},"content":"     * Prints message when startup."},{"lineNumber":11,"author":{"gitId":"tengkianen"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"ShawnTanzc"},"content":"    public void greetUser() {"},{"lineNumber":13,"author":{"gitId":"ShawnTanzc"},"content":"        printLogo();"},{"lineNumber":14,"author":{"gitId":"ShawnTanzc"},"content":"        printLine();"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"tengkianen"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"tengkianen"},"content":"     * Prints message when program is closed."},{"lineNumber":19,"author":{"gitId":"tengkianen"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"felixhalim"},"content":"    public void showFarewells() {"},{"lineNumber":21,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":25,"author":{"gitId":"ShawnTanzc"},"content":"    private void printLogo() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String logo \u003d \"  _            _   ____   ____   _            __T___T__   \\n\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"                + \" _| |_   ____ |_| | __ \\\\ | __ \\\\ |_|   ____   /         \\\\ \\n\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"                + \"|_   _| /  __\\\\ _  | |_| || |_| | _   / __ \\\\ | |_|   |_| |  \\n\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"  | | _ | |   | | |  __/ |  __/ | | | |__|_||    ___    |\\n\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"  | |/ || |   | | | |    | |    | | | \\\\____  \\\\  \\\\WWW/  /\\n\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"   \\\\__/ |_|   |_| |_|    |_|    |_|  \\\\____/   \\\\_______/\\n\";"},{"lineNumber":32,"author":{"gitId":"weishuangtan"},"content":"        System.out.println(\"Welcome to\\n\" + logo"},{"lineNumber":33,"author":{"gitId":"weishuangtan"},"content":"                + \"\\n\\t\\t\\t\\t\\t\\t\\t\" + \"Travel made easy\");"},{"lineNumber":34,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":36,"author":{"gitId":"ShawnTanzc"},"content":"    public void printLine() {"},{"lineNumber":37,"author":{"gitId":"weishuangtan"},"content":"        System.out.println(\"_________________________________________________________________________\");"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":40,"author":{"gitId":"tengkianen"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"tengkianen"},"content":"     * Takes in user input for parsing."},{"lineNumber":42,"author":{"gitId":"tengkianen"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"tengkianen"},"content":"     * @return String for parsing."},{"lineNumber":44,"author":{"gitId":"tengkianen"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"ShawnTanzc"},"content":"    public String readCommand() {"},{"lineNumber":46,"author":{"gitId":"ShawnTanzc"},"content":"        System.out.print(\"\u003e\u003e \");"},{"lineNumber":47,"author":{"gitId":"ShawnTanzc"},"content":"        return in.nextLine();"},{"lineNumber":48,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"    public String getLine() {"},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"        return in.nextLine();"},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":15,"felixhalim":2,"tengkianen":17,"-":13,"ivanderjmw":4,"weishuangtan":3}},{"path":"src/main/java/seedu/trippie/command/AddExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShawnTanzc"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.ExpenseComparator;"},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.Ui;"},{"lineNumber":5,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.data.Expense;"},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":7,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":9,"author":{"gitId":"ShawnTanzc"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":11,"author":{"gitId":"ShawnTanzc"},"content":"public class AddExpenseCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":13,"author":{"gitId":"weishuangtan"},"content":"    private static final String FORMAT_ERROR_MESSAGE \u003d \"Incorrect format for [buy] command! Please try the following:\\n\""},{"lineNumber":14,"author":{"gitId":"ShawnTanzc"},"content":"            + \"Format: buy /n ITEM_NAME /d DAY_NUMBER /c FINAL_COST\\n\""},{"lineNumber":15,"author":{"gitId":"ShawnTanzc"},"content":"            + \"Example: buy /n R\u0026B Brown Sugar  /d 2 /c 3.00\";"},{"lineNumber":16,"author":{"gitId":"weishuangtan"},"content":"    private static final String PARAMETER_ERROR_MESSAGE \u003d \"Please check that your FINAL_COST and DAY_NUMBER parameters\""},{"lineNumber":17,"author":{"gitId":"weishuangtan"},"content":"            + \" are in \\nnumerical form.\";"},{"lineNumber":18,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String NEGATIVE_COST_MESSAGE \u003d \"Trippie doesn\u0027t know how to deal with negative cost.\";"},{"lineNumber":19,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String NEGATIVE_DAY_MESSAGE \u003d \"Trippie doesn\u0027t know how to deal with negative days.\";"},{"lineNumber":20,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":21,"author":{"gitId":"ShawnTanzc"},"content":"    private final String expenseName;"},{"lineNumber":22,"author":{"gitId":"weishuangtan"},"content":"    private final Float expenseCost;"},{"lineNumber":23,"author":{"gitId":"weishuangtan"},"content":"    private final int expenseDayBought;"},{"lineNumber":24,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":25,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"ShawnTanzc"},"content":"     * Takes in the add input command from the user."},{"lineNumber":27,"author":{"gitId":"ShawnTanzc"},"content":"     * Identifies and set the item name, item cost and day bought into expenseName, expenseCost and expenseDayBought"},{"lineNumber":28,"author":{"gitId":"ShawnTanzc"},"content":"     * respectively."},{"lineNumber":29,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"ShawnTanzc"},"content":"     * @param userInput Command input by the user"},{"lineNumber":31,"author":{"gitId":"ShawnTanzc"},"content":"     * @throws TrippieInvalidArgumentException if input has incorrect format, cost and days has incorrect parameters."},{"lineNumber":32,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"weishuangtan"},"content":"    public AddExpenseCommand(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":34,"author":{"gitId":"weishuangtan"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"ShawnTanzc"},"content":"            this.expenseName \u003d extractExpenseName(userInput);"},{"lineNumber":36,"author":{"gitId":"ShawnTanzc"},"content":"            this.expenseCost \u003d extractExpenseCost(userInput);"},{"lineNumber":37,"author":{"gitId":"ShawnTanzc"},"content":"            this.expenseDayBought \u003d extractDayBought(userInput);"},{"lineNumber":38,"author":{"gitId":"weishuangtan"},"content":"            char[] characters \u003d userInput.toCharArray();"},{"lineNumber":39,"author":{"gitId":"weishuangtan"},"content":"            if (characters[3] !\u003d \u0027 \u0027) {"},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":"                throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":41,"author":{"gitId":"weishuangtan"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"weishuangtan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":43,"author":{"gitId":"weishuangtan"},"content":"            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":44,"author":{"gitId":"weishuangtan"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":45,"author":{"gitId":"weishuangtan"},"content":"            throw new TrippieInvalidArgumentException(PARAMETER_ERROR_MESSAGE);"},{"lineNumber":46,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":49,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"ShawnTanzc"},"content":"     * Extracts the item name from the command inputted by the user."},{"lineNumber":51,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"ShawnTanzc"},"content":"     * @param userInput Command input by the user."},{"lineNumber":53,"author":{"gitId":"ShawnTanzc"},"content":"     * @return Input with only the item name."},{"lineNumber":54,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"ShawnTanzc"},"content":"    public String extractExpenseName(String userInput) {"},{"lineNumber":56,"author":{"gitId":"tengkianen"},"content":"        String inputWithoutCostAndDay \u003d userInput.split(\" /d \")[0];"},{"lineNumber":57,"author":{"gitId":"tengkianen"},"content":"        return inputWithoutCostAndDay.split(\" /n \")[1];"},{"lineNumber":58,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":60,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"ShawnTanzc"},"content":"     * Extracts the item cost from the command inputted by the user."},{"lineNumber":62,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"ShawnTanzc"},"content":"     * @param userInput Command input by the user."},{"lineNumber":64,"author":{"gitId":"ShawnTanzc"},"content":"     * @return Input with only the item cost."},{"lineNumber":65,"author":{"gitId":"ShawnTanzc"},"content":"     * @throws TrippieInvalidArgumentException if negative cost is inputted in the command."},{"lineNumber":66,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"ShawnTanzc"},"content":"    public Float extractExpenseCost(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":68,"author":{"gitId":"tengkianen"},"content":"        String onlyCost \u003d userInput.split(\" /c \")[1];"},{"lineNumber":69,"author":{"gitId":"tengkianen"},"content":"        if (onlyCost.contains(\"$\")) {"},{"lineNumber":70,"author":{"gitId":"tengkianen"},"content":"            onlyCost \u003d onlyCost.replace(\"$\", \"\");"},{"lineNumber":71,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"tengkianen"},"content":"        if (Float.parseFloat(onlyCost) \u003c 0) {"},{"lineNumber":73,"author":{"gitId":"ShawnTanzc"},"content":"            throw new TrippieInvalidArgumentException(NEGATIVE_COST_MESSAGE);"},{"lineNumber":74,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"tengkianen"},"content":"        return Float.parseFloat(onlyCost);"},{"lineNumber":76,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":78,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"ShawnTanzc"},"content":"     * Extracts the day item was bought from the command inputted by the user."},{"lineNumber":80,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"ShawnTanzc"},"content":"     * @param userInput Command input by the user."},{"lineNumber":82,"author":{"gitId":"ShawnTanzc"},"content":"     * @return Input with only the day bought."},{"lineNumber":83,"author":{"gitId":"ShawnTanzc"},"content":"     * @throws TrippieInvalidArgumentException if negative day is inputted in the command."},{"lineNumber":84,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"ShawnTanzc"},"content":"    public int extractDayBought(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":86,"author":{"gitId":"tengkianen"},"content":"        String inputWithoutCost \u003d userInput.split(\" /c \")[0];"},{"lineNumber":87,"author":{"gitId":"tengkianen"},"content":"        String onlyDay \u003d inputWithoutCost.split(\" /d \")[1];"},{"lineNumber":88,"author":{"gitId":"ShawnTanzc"},"content":"        if (Integer.parseInt(onlyDay) \u003c\u003d 0) {"},{"lineNumber":89,"author":{"gitId":"ShawnTanzc"},"content":"            throw new TrippieInvalidArgumentException(NEGATIVE_DAY_MESSAGE);"},{"lineNumber":90,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"weishuangtan"},"content":"        return Integer.parseInt(onlyDay);"},{"lineNumber":92,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":94,"author":{"gitId":"ShawnTanzc"},"content":"    @Override"},{"lineNumber":95,"author":{"gitId":"ShawnTanzc"},"content":"    public boolean isExit() {"},{"lineNumber":96,"author":{"gitId":"ShawnTanzc"},"content":"        return false;"},{"lineNumber":97,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":99,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"ShawnTanzc"},"content":"     * Prints out successful add item message and add item from the expenseList."},{"lineNumber":101,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"ShawnTanzc"},"content":"     * @param ui User Interface of the program."},{"lineNumber":103,"author":{"gitId":"ShawnTanzc"},"content":"     * @param trippieData The current trip expenseList that would updated."},{"lineNumber":104,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"ShawnTanzc"},"content":"    @Override"},{"lineNumber":106,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":107,"author":{"gitId":"ivanderjmw"},"content":"        List\u003cExpense\u003e expenses \u003d trippieData.getCurrentTrip().getExpenseListObject().getExpenseList();"},{"lineNumber":108,"author":{"gitId":"ShawnTanzc"},"content":"        String currencyAbbreviation \u003d trippieData.getCurrentTrip().getExpenseListObject().getCurrencyAbbreviation();"},{"lineNumber":109,"author":{"gitId":"felixhalim"},"content":"        Expense expenseEntry \u003d new Expense(expenseName, expenseCost, expenseDayBought);"},{"lineNumber":110,"author":{"gitId":"ShawnTanzc"},"content":"        expenses.add(expenseEntry);"},{"lineNumber":111,"author":{"gitId":"weishuangtan"},"content":"        if (expenses.size() \u003e 1) {"},{"lineNumber":112,"author":{"gitId":"weishuangtan"},"content":"            sortExpenseList(expenses);"},{"lineNumber":113,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"ShawnTanzc"},"content":"        System.out.println(\"Got it! I\u0027ve added the following item: \" + expenseEntry.toString()"},{"lineNumber":115,"author":{"gitId":"ShawnTanzc"},"content":"                + \" \" + currencyAbbreviation);"},{"lineNumber":116,"author":{"gitId":"felixhalim"},"content":"        System.out.printf(\"Now you have %d %s in the list.%n\", expenses.size(), expenses.size() \u003e 1 ? \"items\" : \"item\");"},{"lineNumber":117,"author":{"gitId":"ivanderjmw"},"content":"        trippieData.getCurrentTrip().getExpenseListObject().setExpenseList(expenses);"},{"lineNumber":118,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":120,"author":{"gitId":"weishuangtan"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"weishuangtan"},"content":"     * Sorts the expenseList everytime new expense is added."},{"lineNumber":122,"author":{"gitId":"weishuangtan"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"weishuangtan"},"content":"     * @param expenseList list of expenses to be sorted."},{"lineNumber":124,"author":{"gitId":"weishuangtan"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"weishuangtan"},"content":"    public void sortExpenseList(List\u003cExpense\u003e expenseList) {"},{"lineNumber":126,"author":{"gitId":"ShawnTanzc"},"content":"        expenseList.sort(new ExpenseComparator());"},{"lineNumber":127,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"ShawnTanzc"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":84,"felixhalim":3,"tengkianen":9,"ivanderjmw":4,"weishuangtan":28}},{"path":"src/main/java/seedu/trippie/command/AddPlaceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.data.Place;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":6,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":7,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":8,"author":{"gitId":"felixhalim"},"content":"import java.util.Collections;"},{"lineNumber":9,"author":{"gitId":"felixhalim"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":11,"author":{"gitId":"felixhalim"},"content":"public class AddPlaceCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":13,"author":{"gitId":"felixhalim"},"content":"    private static final String FORMAT_ERROR_MESSAGE \u003d \"Incorrect format for [add] command! Please try the following:\\n\""},{"lineNumber":14,"author":{"gitId":"felixhalim"},"content":"            + \"Format: add /n PLACE_NAME /d DAY /t TIME\\n\""},{"lineNumber":15,"author":{"gitId":"felixhalim"},"content":"            + \"Example: add /n Dinner at Marina Bay Sands /d 2 /t 1800 to 2000\";"},{"lineNumber":16,"author":{"gitId":"weishuangtan"},"content":"    private static final String PARAMETER_ERROR_MESSAGE \u003d \"Please check that your parameter(s) are in proper form.\";"},{"lineNumber":17,"author":{"gitId":"felixhalim"},"content":"    private static final String TIME_ERROR_MESSAGE \u003d \"Please check that your TIME parameters are in the correct \""},{"lineNumber":18,"author":{"gitId":"felixhalim"},"content":"            + \"24-hours format\";"},{"lineNumber":19,"author":{"gitId":"felixhalim"},"content":"    private static final String TIME_TRAVELLER_ERROR_MESSAGE \u003d \"Are you a time traveller? Your END TIME should \""},{"lineNumber":20,"author":{"gitId":"felixhalim"},"content":"            + \"end after START TIME\";"},{"lineNumber":21,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String NEGATIVE_DAY_MESSAGE \u003d \"Trippie doesn\u0027t know how to deal with negative days.\";"},{"lineNumber":22,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":23,"author":{"gitId":"felixhalim"},"content":"    private final String name;"},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":"    private final int day;"},{"lineNumber":25,"author":{"gitId":"tengkianen"},"content":"    private final int start;"},{"lineNumber":26,"author":{"gitId":"tengkianen"},"content":"    private final int end;"},{"lineNumber":27,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":28,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"felixhalim"},"content":"     * Adds the place to the list of places to be visited."},{"lineNumber":30,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"felixhalim"},"content":"     * @param userInput Command inputted by the user."},{"lineNumber":32,"author":{"gitId":"felixhalim"},"content":"     * @throws TrippieInvalidArgumentException If index is not found and if input has incorrect format."},{"lineNumber":33,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"felixhalim"},"content":"    public AddPlaceCommand(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":35,"author":{"gitId":"felixhalim"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"felixhalim"},"content":"            this.name \u003d extractName(userInput);"},{"lineNumber":37,"author":{"gitId":"felixhalim"},"content":"            this.day \u003d extractDay(userInput);"},{"lineNumber":38,"author":{"gitId":"tengkianen"},"content":"            this.start \u003d extractStartTime(userInput);"},{"lineNumber":39,"author":{"gitId":"tengkianen"},"content":"            this.end \u003d extractEndTime(userInput);"},{"lineNumber":40,"author":{"gitId":"felixhalim"},"content":"            char[] characters \u003d userInput.toCharArray();"},{"lineNumber":41,"author":{"gitId":"felixhalim"},"content":"            if (characters[3] !\u003d \u0027 \u0027) {"},{"lineNumber":42,"author":{"gitId":"felixhalim"},"content":"                throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":43,"author":{"gitId":"felixhalim"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"felixhalim"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":45,"author":{"gitId":"felixhalim"},"content":"            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":46,"author":{"gitId":"felixhalim"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":47,"author":{"gitId":"felixhalim"},"content":"            throw new TrippieInvalidArgumentException(PARAMETER_ERROR_MESSAGE);"},{"lineNumber":48,"author":{"gitId":"felixhalim"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":51,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"felixhalim"},"content":"     * Extracts the name of the place."},{"lineNumber":53,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"felixhalim"},"content":"     * @param userInput Command input by the user."},{"lineNumber":55,"author":{"gitId":"felixhalim"},"content":"     * @return String of the place name."},{"lineNumber":56,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"felixhalim"},"content":"    public String extractName(String userInput) {"},{"lineNumber":58,"author":{"gitId":"ShawnTanzc"},"content":"        String inputWithoutDay \u003d userInput.split(\" /d \")[0];"},{"lineNumber":59,"author":{"gitId":"ShawnTanzc"},"content":"        return inputWithoutDay.split(\" /n \")[1];"},{"lineNumber":60,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":62,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"felixhalim"},"content":"     * Extracts the day the place is going to be visited."},{"lineNumber":64,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"felixhalim"},"content":"     * @param userInput Command input by the user."},{"lineNumber":66,"author":{"gitId":"felixhalim"},"content":"     * @return Integer of the day."},{"lineNumber":67,"author":{"gitId":"felixhalim"},"content":"     * @throws TrippieInvalidArgumentException if negative day is inputted in the command."},{"lineNumber":68,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"ShawnTanzc"},"content":"    public int extractDay(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":70,"author":{"gitId":"ShawnTanzc"},"content":"        String inputWithoutTime \u003d userInput.split(\" /t \")[0];"},{"lineNumber":71,"author":{"gitId":"ShawnTanzc"},"content":"        String day \u003d inputWithoutTime.split(\" /d \")[1];"},{"lineNumber":72,"author":{"gitId":"ShawnTanzc"},"content":"        if (Integer.parseInt(day.trim()) \u003c\u003d 0) {"},{"lineNumber":73,"author":{"gitId":"ShawnTanzc"},"content":"            throw new TrippieInvalidArgumentException(NEGATIVE_DAY_MESSAGE);"},{"lineNumber":74,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"tengkianen"},"content":"        return Integer.parseInt(day.trim());"},{"lineNumber":76,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":78,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"felixhalim"},"content":"     * Extracts the starting time of the place visit."},{"lineNumber":80,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"felixhalim"},"content":"     * @param userInput Command input by the user."},{"lineNumber":82,"author":{"gitId":"felixhalim"},"content":"     * @return Integer of the starting time."},{"lineNumber":83,"author":{"gitId":"felixhalim"},"content":"     * @throws TrippieInvalidArgumentException if the time format is wrong."},{"lineNumber":84,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"felixhalim"},"content":"    public int extractStartTime(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":86,"author":{"gitId":"felixhalim"},"content":"        return extractTime(userInput, true);"},{"lineNumber":87,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":89,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"felixhalim"},"content":"     * Extracts the starting/ending time of the place visit."},{"lineNumber":91,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"felixhalim"},"content":"     * @param userInput Command input by the user."},{"lineNumber":93,"author":{"gitId":"felixhalim"},"content":"     * @param isStart   Boolean to determine whether to return start/end time"},{"lineNumber":94,"author":{"gitId":"felixhalim"},"content":"     * @return Integer of the starting/ending time."},{"lineNumber":95,"author":{"gitId":"felixhalim"},"content":"     * @throws TrippieInvalidArgumentException if the time format is wrong."},{"lineNumber":96,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"felixhalim"},"content":"    private int extractTime(String userInput, boolean isStart) throws TrippieInvalidArgumentException {"},{"lineNumber":98,"author":{"gitId":"tengkianen"},"content":"        String time \u003d userInput.split(\" /t \")[1];"},{"lineNumber":99,"author":{"gitId":"felixhalim"},"content":"        String start \u003d time.split(\"to\")[0];"},{"lineNumber":100,"author":{"gitId":"tengkianen"},"content":"        String end \u003d time.split(\"to\")[1];"},{"lineNumber":101,"author":{"gitId":"felixhalim"},"content":"        int parsedTime;"},{"lineNumber":102,"author":{"gitId":"felixhalim"},"content":"        if (isStart) {"},{"lineNumber":103,"author":{"gitId":"felixhalim"},"content":"            parsedTime \u003d Integer.parseInt(start.trim());"},{"lineNumber":104,"author":{"gitId":"felixhalim"},"content":"        } else {"},{"lineNumber":105,"author":{"gitId":"felixhalim"},"content":"            parsedTime \u003d Integer.parseInt(end.trim());"},{"lineNumber":106,"author":{"gitId":"felixhalim"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"felixhalim"},"content":"        int hours \u003d parsedTime / 100;"},{"lineNumber":108,"author":{"gitId":"felixhalim"},"content":"        int minutes \u003d parsedTime % 100;"},{"lineNumber":109,"author":{"gitId":"felixhalim"},"content":"        if (minutes \u003e\u003d 60 || minutes \u003c 0 || hours \u003e\u003d 24 || hours \u003c 0) {"},{"lineNumber":110,"author":{"gitId":"felixhalim"},"content":"            throw new TrippieInvalidArgumentException(TIME_ERROR_MESSAGE);"},{"lineNumber":111,"author":{"gitId":"felixhalim"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"felixhalim"},"content":"        return parsedTime;"},{"lineNumber":113,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":115,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"felixhalim"},"content":"     * Extracts the ending time of the place visit."},{"lineNumber":117,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"felixhalim"},"content":"     * @param userInput Command input by the user."},{"lineNumber":119,"author":{"gitId":"felixhalim"},"content":"     * @return Integer of the starting time."},{"lineNumber":120,"author":{"gitId":"felixhalim"},"content":"     * @throws TrippieInvalidArgumentException if ending time is before start time or the time format is wrong."},{"lineNumber":121,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"felixhalim"},"content":"    public int extractEndTime(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":123,"author":{"gitId":"felixhalim"},"content":"        int endTime \u003d extractTime(userInput, false);"},{"lineNumber":124,"author":{"gitId":"felixhalim"},"content":"        if (endTime \u003c this.start) {"},{"lineNumber":125,"author":{"gitId":"felixhalim"},"content":"            throw new TrippieInvalidArgumentException(TIME_TRAVELLER_ERROR_MESSAGE);"},{"lineNumber":126,"author":{"gitId":"felixhalim"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"felixhalim"},"content":"        return endTime;"},{"lineNumber":128,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":130,"author":{"gitId":"felixhalim"},"content":"    @Override"},{"lineNumber":131,"author":{"gitId":"felixhalim"},"content":"    public boolean isExit() {"},{"lineNumber":132,"author":{"gitId":"felixhalim"},"content":"        return false;"},{"lineNumber":133,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":135,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"felixhalim"},"content":"     * Prints out successful add place message and add place to the placeList."},{"lineNumber":137,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":138,"author":{"gitId":"felixhalim"},"content":"     * @param ui          User Interface of the program."},{"lineNumber":139,"author":{"gitId":"felixhalim"},"content":"     * @param trippieData The current trip placeList that would updated."},{"lineNumber":140,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"felixhalim"},"content":"    @Override"},{"lineNumber":142,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":143,"author":{"gitId":"ivanderjmw"},"content":"        List\u003cPlace\u003e places \u003d trippieData.getCurrentTrip().getPlaceListObject().getPlaceList();"},{"lineNumber":144,"author":{"gitId":"ivanderjmw"},"content":"        Place newPlace \u003d new Place(name, day, start, end);"},{"lineNumber":145,"author":{"gitId":"ivanderjmw"},"content":"        places.add(newPlace);"},{"lineNumber":146,"author":{"gitId":"felixhalim"},"content":"        if (places.size() \u003e 1) {"},{"lineNumber":147,"author":{"gitId":"felixhalim"},"content":"            sortPlaceList(places);"},{"lineNumber":148,"author":{"gitId":"felixhalim"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"Got it. I\u0027ve added this place:\");"},{"lineNumber":150,"author":{"gitId":"ivanderjmw"},"content":"        System.out.println(newPlace);"},{"lineNumber":151,"author":{"gitId":"felixhalim"},"content":"        System.out.printf(\"Now you have %d %s in the list.%n\", places.size(), places.size() \u003e 1 ? \"places\" : \"place\");"},{"lineNumber":152,"author":{"gitId":"felixhalim"},"content":"        int placesSize \u003d places.size();"},{"lineNumber":153,"author":{"gitId":"felixhalim"},"content":"        assert placesSize \u003e 0 : \"placesSize should be greater than 0\";"},{"lineNumber":154,"author":{"gitId":"ivanderjmw"},"content":"        trippieData.getCurrentTrip().getPlaceListObject().setPlaceList(places);"},{"lineNumber":155,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":157,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"felixhalim"},"content":"     * Sorts the placeList everytime new place is added."},{"lineNumber":159,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":160,"author":{"gitId":"felixhalim"},"content":"     * @param sortedPlaces List of place to be sorted."},{"lineNumber":161,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"felixhalim"},"content":"    public void sortPlaceList(List\u003cPlace\u003e sortedPlaces) {"},{"lineNumber":163,"author":{"gitId":"ShawnTanzc"},"content":"        boolean isSwapped \u003d false;"},{"lineNumber":164,"author":{"gitId":"tengkianen"},"content":"        for (int i \u003d (sortedPlaces.size() - 1); i \u003e\u003d 0; i--) {"},{"lineNumber":165,"author":{"gitId":"tengkianen"},"content":"            for (int j \u003d i - 1; j \u003e\u003d 0; j--) {"},{"lineNumber":166,"author":{"gitId":"felixhalim"},"content":"                if (sortedPlaces.get(i).getPlaceDay() \u003d\u003d sortedPlaces.get(j).getPlaceDay()"},{"lineNumber":167,"author":{"gitId":"tengkianen"},"content":"                        \u0026\u0026 sortedPlaces.get(i).getPlaceStartTime() \u003c sortedPlaces.get(j).getPlaceStartTime()) {"},{"lineNumber":168,"author":{"gitId":"felixhalim"},"content":"                    Collections.swap(sortedPlaces, i, j);"},{"lineNumber":169,"author":{"gitId":"ShawnTanzc"},"content":"                    isSwapped \u003d true;"},{"lineNumber":170,"author":{"gitId":"tengkianen"},"content":"                } else if (sortedPlaces.get(i).getPlaceDay() \u003c sortedPlaces.get(j).getPlaceDay()) {"},{"lineNumber":171,"author":{"gitId":"felixhalim"},"content":"                    Collections.swap(sortedPlaces, i, j);"},{"lineNumber":172,"author":{"gitId":"ShawnTanzc"},"content":"                    isSwapped \u003d true;"},{"lineNumber":173,"author":{"gitId":"felixhalim"},"content":"                }"},{"lineNumber":174,"author":{"gitId":"felixhalim"},"content":"            }"},{"lineNumber":175,"author":{"gitId":"ShawnTanzc"},"content":"            if (!isSwapped) {"},{"lineNumber":176,"author":{"gitId":"tengkianen"},"content":"                break;"},{"lineNumber":177,"author":{"gitId":"tengkianen"},"content":"            }"},{"lineNumber":178,"author":{"gitId":"felixhalim"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"tengkianen"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":13,"felixhalim":140,"tengkianen":19,"ivanderjmw":7,"weishuangtan":1}},{"path":"src/main/java/seedu/trippie/command/BudgetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":5,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":"public class BudgetCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":9,"author":{"gitId":"weishuangtan"},"content":"    private static final String FORMAT_ERROR_MESSAGE \u003d \"Incorrect format for [budget] command! \""},{"lineNumber":10,"author":{"gitId":"weishuangtan"},"content":"            + \"Please try the following:\\nFormat: budget BUDGET\\nExample: budget 4000\";"},{"lineNumber":11,"author":{"gitId":"weishuangtan"},"content":"    private static final String PARAMETER_ERROR_MESSAGE \u003d \"Please check that the budget value is in numerical form.\";"},{"lineNumber":12,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String NEGATIVE_BUDGET_MESSAGE \u003d \"Trippie doesn\u0027t know how to deal with negative budget\";"},{"lineNumber":13,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"    private Float budgetValue;"},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":16,"author":{"gitId":"weishuangtan"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"weishuangtan"},"content":"     * Edits the budget allocated to the trip."},{"lineNumber":18,"author":{"gitId":"weishuangtan"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"weishuangtan"},"content":"     * @param userInput Command input by the user."},{"lineNumber":20,"author":{"gitId":"weishuangtan"},"content":"     * @throws TrippieInvalidArgumentException if input has formatting error, or budget is not a numerical value"},{"lineNumber":21,"author":{"gitId":"weishuangtan"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"weishuangtan"},"content":"    public BudgetCommand(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":23,"author":{"gitId":"ivanderjmw"},"content":"        this.budgetValue \u003d null;"},{"lineNumber":24,"author":{"gitId":"ivanderjmw"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"weishuangtan"},"content":"            char[] characters \u003d userInput.toCharArray();"},{"lineNumber":26,"author":{"gitId":"weishuangtan"},"content":"            if (characters[6] !\u003d \u0027 \u0027 | userInput.length() \u003d\u003d 7) {"},{"lineNumber":27,"author":{"gitId":"weishuangtan"},"content":"                throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":28,"author":{"gitId":"weishuangtan"},"content":"            } else {"},{"lineNumber":29,"author":{"gitId":"ivanderjmw"},"content":"                this.budgetValue \u003d extractBudgetValue(userInput);"},{"lineNumber":30,"author":{"gitId":"weishuangtan"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"weishuangtan"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException e) {"},{"lineNumber":32,"author":{"gitId":"weishuangtan"},"content":"            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":34,"author":{"gitId":"weishuangtan"},"content":"            throw new TrippieInvalidArgumentException(PARAMETER_ERROR_MESSAGE);"},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":38,"author":{"gitId":"weishuangtan"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"weishuangtan"},"content":"     * Extracts budget value from user\u0027s input."},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"weishuangtan"},"content":"     * @param userInput Command input by the user."},{"lineNumber":42,"author":{"gitId":"weishuangtan"},"content":"     * @return Budget value input by the user."},{"lineNumber":43,"author":{"gitId":"weishuangtan"},"content":"     * @throws TrippieInvalidArgumentException if the budget value is a negative value"},{"lineNumber":44,"author":{"gitId":"weishuangtan"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"ShawnTanzc"},"content":"    private Float extractBudgetValue(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":46,"author":{"gitId":"weishuangtan"},"content":"        String budgetValueString \u003d userInput.substring(7);"},{"lineNumber":47,"author":{"gitId":"ShawnTanzc"},"content":"        if (Float.parseFloat(budgetValueString) \u003c 0) {"},{"lineNumber":48,"author":{"gitId":"ShawnTanzc"},"content":"            throw new TrippieInvalidArgumentException(NEGATIVE_BUDGET_MESSAGE);"},{"lineNumber":49,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"        return Float.parseFloat(budgetValueString);"},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":"    public boolean isExit() {"},{"lineNumber":55,"author":{"gitId":"ivanderjmw"},"content":"        return false;"},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":58,"author":{"gitId":"weishuangtan"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"weishuangtan"},"content":"     * Changes the budget parameter attached to the expense list."},{"lineNumber":60,"author":{"gitId":"weishuangtan"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"weishuangtan"},"content":"     * @param ui User Interface of the program."},{"lineNumber":62,"author":{"gitId":"weishuangtan"},"content":"     * @param trippieData The current trip expenseList that will be updated."},{"lineNumber":63,"author":{"gitId":"weishuangtan"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"ivanderjmw"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":66,"author":{"gitId":"ivanderjmw"},"content":"        trippieData.getCurrentTrip().getExpenseListObject().setBudgetValue(budgetValue);"},{"lineNumber":67,"author":{"gitId":"weishuangtan"},"content":"        System.out.println(\"Successfully set your total budget to \" + String.format(\"%.2f\", budgetValue));"},{"lineNumber":68,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"ivanderjmw"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":5,"ivanderjmw":28,"weishuangtan":36}},{"path":"src/main/java/seedu/trippie/command/CalculateCurrencyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShawnTanzc"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":3,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.data.Currency;"},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.data.CurrencyType;"},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":9,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":10,"author":{"gitId":"ShawnTanzc"},"content":"public class CalculateCurrencyCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":12,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String FORMAT_ERROR_MESSAGE \u003d \"Incorrect format for [convert] command. \""},{"lineNumber":13,"author":{"gitId":"ShawnTanzc"},"content":"            + \"Please try the following:\\n\""},{"lineNumber":14,"author":{"gitId":"ShawnTanzc"},"content":"            + \"Format: convert /toSGD AMOUNT_IN_FOREIGN_CURRENCY\\n\""},{"lineNumber":15,"author":{"gitId":"ShawnTanzc"},"content":"            + \"Format: convert /toFOR AMOUNT_IN_SGD\\n\""},{"lineNumber":16,"author":{"gitId":"ShawnTanzc"},"content":"            + \"Example: convert /toSGD 500\\n\""},{"lineNumber":17,"author":{"gitId":"ShawnTanzc"},"content":"            + \"Example: convert /toFOR 500\";"},{"lineNumber":18,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String NEGATIVE_VALUE_MESSAGE \u003d \"Trippie doesn\u0027t know how to deal with negative values\";"},{"lineNumber":19,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":20,"author":{"gitId":"ShawnTanzc"},"content":"    private final CurrencyType currencyChoice;"},{"lineNumber":21,"author":{"gitId":"ShawnTanzc"},"content":"    private final Float currencyAmount;"},{"lineNumber":22,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":23,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"ShawnTanzc"},"content":"     * Takes in the convert input command from the user."},{"lineNumber":25,"author":{"gitId":"ShawnTanzc"},"content":"     * Identifies and set the choice of conversion (local or foreign) and the amount to be converted into"},{"lineNumber":26,"author":{"gitId":"ShawnTanzc"},"content":"     * currencyChoice and currencyAmount respectively."},{"lineNumber":27,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"ShawnTanzc"},"content":"     * @param userInput Command input by the user."},{"lineNumber":29,"author":{"gitId":"ShawnTanzc"},"content":"     * @throws TrippieInvalidArgumentException if input has incorrect format."},{"lineNumber":30,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"ShawnTanzc"},"content":"    public CalculateCurrencyCommand(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":32,"author":{"gitId":"ShawnTanzc"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"ShawnTanzc"},"content":"            this.currencyChoice \u003d extractCurrencyChoice(userInput);"},{"lineNumber":34,"author":{"gitId":"ShawnTanzc"},"content":"            this.currencyAmount \u003d extractCurrencyAmount(userInput);"},{"lineNumber":35,"author":{"gitId":"ShawnTanzc"},"content":"        } catch (TrippieInvalidArgumentException e) {"},{"lineNumber":36,"author":{"gitId":"ShawnTanzc"},"content":"            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":37,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":40,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"ShawnTanzc"},"content":"     * Extracts the choice of conversion from the command inputted by the user."},{"lineNumber":42,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"ShawnTanzc"},"content":"     * @param userInput Command input by the user."},{"lineNumber":44,"author":{"gitId":"ShawnTanzc"},"content":"     * @return Input with only the choice of currency to be converted."},{"lineNumber":45,"author":{"gitId":"ShawnTanzc"},"content":"     * @throws TrippieInvalidArgumentException if choice inputted by user has incorrect format"},{"lineNumber":46,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"ShawnTanzc"},"content":"    public CurrencyType extractCurrencyChoice(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":48,"author":{"gitId":"ShawnTanzc"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"ShawnTanzc"},"content":"            String withoutCommand \u003d userInput.split(\" /to\")[1];"},{"lineNumber":50,"author":{"gitId":"ShawnTanzc"},"content":"            String currencyChoice \u003d withoutCommand.split(\" \")[0];"},{"lineNumber":51,"author":{"gitId":"ShawnTanzc"},"content":"            CurrencyType currencyType;"},{"lineNumber":52,"author":{"gitId":"ShawnTanzc"},"content":"            if (currencyChoice.equals(\"SGD\")) {"},{"lineNumber":53,"author":{"gitId":"ShawnTanzc"},"content":"                currencyType \u003d CurrencyType.LOCAL;"},{"lineNumber":54,"author":{"gitId":"ShawnTanzc"},"content":"            } else if (currencyChoice.equals(\"FOR\")) {"},{"lineNumber":55,"author":{"gitId":"ShawnTanzc"},"content":"                currencyType \u003d CurrencyType.FOREIGN;"},{"lineNumber":56,"author":{"gitId":"ShawnTanzc"},"content":"            } else {"},{"lineNumber":57,"author":{"gitId":"ShawnTanzc"},"content":"                throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":58,"author":{"gitId":"ShawnTanzc"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"ShawnTanzc"},"content":"            return currencyType;"},{"lineNumber":60,"author":{"gitId":"ShawnTanzc"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":61,"author":{"gitId":"ShawnTanzc"},"content":"            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":62,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":65,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"ShawnTanzc"},"content":"     * Extract the amount to be converted from the command inputted by the user."},{"lineNumber":67,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"ShawnTanzc"},"content":"     * @param userInput Command input by the user."},{"lineNumber":69,"author":{"gitId":"ShawnTanzc"},"content":"     * @return Input without the currency amount"},{"lineNumber":70,"author":{"gitId":"ShawnTanzc"},"content":"     * @throws TrippieInvalidArgumentException if amount inputted is negative or has incorrect format"},{"lineNumber":71,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"ShawnTanzc"},"content":"    public Float extractCurrencyAmount(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":73,"author":{"gitId":"ShawnTanzc"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"ShawnTanzc"},"content":"            if (userInput.split(\" \")[2] \u003d\u003d null) { //account for missing input"},{"lineNumber":75,"author":{"gitId":"ShawnTanzc"},"content":"                throw new ArrayIndexOutOfBoundsException();"},{"lineNumber":76,"author":{"gitId":"ShawnTanzc"},"content":"            } else {"},{"lineNumber":77,"author":{"gitId":"ShawnTanzc"},"content":"                String inputWithoutChoice \u003d userInput.split(\" \")[2];"},{"lineNumber":78,"author":{"gitId":"ShawnTanzc"},"content":"                if (Float.parseFloat(inputWithoutChoice) \u003c 0) {"},{"lineNumber":79,"author":{"gitId":"ShawnTanzc"},"content":"                    throw new TrippieInvalidArgumentException(NEGATIVE_VALUE_MESSAGE);"},{"lineNumber":80,"author":{"gitId":"ShawnTanzc"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"ShawnTanzc"},"content":"                return Float.parseFloat(inputWithoutChoice);"},{"lineNumber":82,"author":{"gitId":"ShawnTanzc"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"ShawnTanzc"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":84,"author":{"gitId":"ShawnTanzc"},"content":"            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":85,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":88,"author":{"gitId":"ShawnTanzc"},"content":"    @Override"},{"lineNumber":89,"author":{"gitId":"ShawnTanzc"},"content":"    public boolean isExit() {"},{"lineNumber":90,"author":{"gitId":"ShawnTanzc"},"content":"        return false;"},{"lineNumber":91,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":93,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"ShawnTanzc"},"content":"     * Prints amount after conversion from either local to foreign or visa versa."},{"lineNumber":95,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"ShawnTanzc"},"content":"     * @param ui User Interface of the program."},{"lineNumber":97,"author":{"gitId":"ShawnTanzc"},"content":"     * @param trippieData Current trip currency foreign exchange rate and foreign currency abbreviation."},{"lineNumber":98,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"ShawnTanzc"},"content":"    @Override"},{"lineNumber":100,"author":{"gitId":"ShawnTanzc"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":101,"author":{"gitId":"ShawnTanzc"},"content":"        float exchangeRate \u003d trippieData.getCurrentTrip().getExpenseListObject().getForExValue();"},{"lineNumber":102,"author":{"gitId":"ShawnTanzc"},"content":"        String currencyAbbreviation \u003d trippieData.getCurrentTrip().getExpenseListObject().getCurrencyAbbreviation();"},{"lineNumber":103,"author":{"gitId":"ShawnTanzc"},"content":"        Currency currencyEntry \u003d new Currency(currencyChoice, currencyAmount);"},{"lineNumber":104,"author":{"gitId":"ShawnTanzc"},"content":"        float initialInputAmount \u003d currencyEntry.getCurrencyAmount();"},{"lineNumber":105,"author":{"gitId":"ShawnTanzc"},"content":"        float finalOutputAmount;"},{"lineNumber":106,"author":{"gitId":"ShawnTanzc"},"content":"        String finalOutputAbbreviation;"},{"lineNumber":107,"author":{"gitId":"ShawnTanzc"},"content":"        System.out.println(\"Processing... Please Wait.\");"},{"lineNumber":108,"author":{"gitId":"ShawnTanzc"},"content":"        if (currencyEntry.getCurrencyChoice().equals(\"local\")) {"},{"lineNumber":109,"author":{"gitId":"ShawnTanzc"},"content":"            finalOutputAmount \u003d initialInputAmount / exchangeRate;"},{"lineNumber":110,"author":{"gitId":"ShawnTanzc"},"content":"            finalOutputAbbreviation \u003d \"SGD\";"},{"lineNumber":111,"author":{"gitId":"ShawnTanzc"},"content":"        } else {"},{"lineNumber":112,"author":{"gitId":"ShawnTanzc"},"content":"            finalOutputAmount \u003d initialInputAmount * exchangeRate;"},{"lineNumber":113,"author":{"gitId":"ShawnTanzc"},"content":"            finalOutputAbbreviation \u003d currencyAbbreviation;"},{"lineNumber":114,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"ShawnTanzc"},"content":"        System.out.println(\"That amount in your \" + currencyEntry.getCurrencyChoice()"},{"lineNumber":116,"author":{"gitId":"ShawnTanzc"},"content":"                + \" currency is \" + String.format(\"%.2f \", finalOutputAmount)"},{"lineNumber":117,"author":{"gitId":"ShawnTanzc"},"content":"                + finalOutputAbbreviation + \".\");"},{"lineNumber":118,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"ShawnTanzc"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":118,"felixhalim":1}},{"path":"src/main/java/seedu/trippie/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":6,"author":{"gitId":"tengkianen"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tengkianen"},"content":" * Superclass for all the other commands."},{"lineNumber":8,"author":{"gitId":"tengkianen"},"content":" */"},{"lineNumber":9,"author":{"gitId":"ShawnTanzc"},"content":"public abstract class Command {"},{"lineNumber":10,"author":{"gitId":"ShawnTanzc"},"content":"    public abstract boolean isExit();"},{"lineNumber":11,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":"    public abstract void execute(Ui ui, TrippieData trippieData);"},{"lineNumber":13,"author":{"gitId":"tengkianen"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":4,"tengkianen":6,"ivanderjmw":2,"weishuangtan":1}},{"path":"src/main/java/seedu/trippie/command/DeleteExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.data.Expense;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":6,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":10,"author":{"gitId":"ShawnTanzc"},"content":"public class DeleteExpenseCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":12,"author":{"gitId":"felixhalim"},"content":"    private static final String FORMAT_ERROR_MESSAGE \u003d \"You typed in the incorrect format for [delete /e] command! \""},{"lineNumber":13,"author":{"gitId":"felixhalim"},"content":"            + \"Please try the following:\\nFormat: delete /e EXPENSE_INDEX\\nExample: delete /e 3\";"},{"lineNumber":14,"author":{"gitId":"weishuangtan"},"content":"    private static final String PARAMETER_ERROR_MESSAGE \u003d \"Please check that the index keyed in is a number.\";"},{"lineNumber":15,"author":{"gitId":"felixhalim"},"content":"    private static final String NULL_ERROR_MESSAGE \u003d \"Sorry I can\u0027t find the expense. Please enter a valid index.\";"},{"lineNumber":16,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":17,"author":{"gitId":"weishuangtan"},"content":"    private final int expenseIndex;"},{"lineNumber":18,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":19,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"ShawnTanzc"},"content":"     * Takes in the delete input command from the user."},{"lineNumber":21,"author":{"gitId":"ShawnTanzc"},"content":"     * Identifies and sets the index to be deleted in expenseIndex."},{"lineNumber":22,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"ShawnTanzc"},"content":"     * @param userInput Command inputted by the user."},{"lineNumber":24,"author":{"gitId":"ShawnTanzc"},"content":"     * @throws TrippieInvalidArgumentException If index is not found and if input has incorrect format."},{"lineNumber":25,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"ShawnTanzc"},"content":"    public DeleteExpenseCommand(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":27,"author":{"gitId":"ShawnTanzc"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"felixhalim"},"content":"            String index \u003d userInput.split(\" /e \")[1];"},{"lineNumber":29,"author":{"gitId":"felixhalim"},"content":"            expenseIndex \u003d Integer.parseInt(index) - 1;"},{"lineNumber":30,"author":{"gitId":"felixhalim"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":31,"author":{"gitId":"felixhalim"},"content":"            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":32,"author":{"gitId":"ShawnTanzc"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":33,"author":{"gitId":"weishuangtan"},"content":"            throw new TrippieInvalidArgumentException(PARAMETER_ERROR_MESSAGE);"},{"lineNumber":34,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":37,"author":{"gitId":"ShawnTanzc"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"ShawnTanzc"},"content":"    public boolean isExit() {"},{"lineNumber":39,"author":{"gitId":"ShawnTanzc"},"content":"        return false;"},{"lineNumber":40,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":42,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"ShawnTanzc"},"content":"     * Prints out successful delete item message and removes item from the expenseList."},{"lineNumber":44,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"ShawnTanzc"},"content":"     * @param ui User Interface of the program."},{"lineNumber":46,"author":{"gitId":"ShawnTanzc"},"content":"     * @param trippieData The current trip expenseList that would updated."},{"lineNumber":47,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"ShawnTanzc"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"        List\u003cExpense\u003e expenses \u003d trippieData.getCurrentTrip().getExpenseListObject().getExpenseList();"},{"lineNumber":51,"author":{"gitId":"ShawnTanzc"},"content":"        String currencyAbbreviation \u003d trippieData.getCurrentTrip().getExpenseListObject().getCurrencyAbbreviation();"},{"lineNumber":52,"author":{"gitId":"ShawnTanzc"},"content":"        if (expenseIndex \u003e\u003d 0 \u0026\u0026 expenseIndex \u003c expenses.size()) {"},{"lineNumber":53,"author":{"gitId":"ShawnTanzc"},"content":"            System.out.println(\"Noted. I\u0027ve removed this item from the expenditure list.\");"},{"lineNumber":54,"author":{"gitId":"ShawnTanzc"},"content":"            System.out.println(expenses.get(expenseIndex).toString() + \" \" + currencyAbbreviation);"},{"lineNumber":55,"author":{"gitId":"ShawnTanzc"},"content":"            expenses.remove(expenseIndex);"},{"lineNumber":56,"author":{"gitId":"felixhalim"},"content":"            System.out.printf(\"Now you have %d %s in the list.%n\", expenses.size(), expenses.size() \u003e 1 ? \"items\" :"},{"lineNumber":57,"author":{"gitId":"felixhalim"},"content":"                    \"item\");"},{"lineNumber":58,"author":{"gitId":"ShawnTanzc"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"weishuangtan"},"content":"            System.out.println(NULL_ERROR_MESSAGE);"},{"lineNumber":60,"author":{"gitId":"tengkianen"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"ivanderjmw"},"content":"        trippieData.getCurrentTrip().getExpenseListObject().setExpenseList(expenses);"},{"lineNumber":62,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"ShawnTanzc"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":40,"felixhalim":10,"tengkianen":3,"ivanderjmw":4,"weishuangtan":6}},{"path":"src/main/java/seedu/trippie/command/DeletePlaceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.data.Place;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":6,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":7,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":8,"author":{"gitId":"felixhalim"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":10,"author":{"gitId":"felixhalim"},"content":"public class DeletePlaceCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":12,"author":{"gitId":"felixhalim"},"content":"    private static final String FORMAT_ERROR_MESSAGE \u003d \"You typed in the incorrect format for [delete /p] command! \""},{"lineNumber":13,"author":{"gitId":"felixhalim"},"content":"            + \"Please try the following:\\nFormat: delete /p PLACE_INDEX\\nExample: delete /p 1\";"},{"lineNumber":14,"author":{"gitId":"felixhalim"},"content":"    private static final String PARAMETER_ERROR_MESSAGE \u003d \"Please check that the index keyed in is a number.\";"},{"lineNumber":15,"author":{"gitId":"felixhalim"},"content":"    private static final String NULL_ERROR_MESSAGE \u003d \"Sorry I can\u0027t find the place. Please enter a valid index.\";"},{"lineNumber":16,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":17,"author":{"gitId":"felixhalim"},"content":"    private final int placeIndex;"},{"lineNumber":18,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":19,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"felixhalim"},"content":"     * Deletes the place based on user input."},{"lineNumber":21,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"felixhalim"},"content":"     * @param userInput Command inputted by the user."},{"lineNumber":23,"author":{"gitId":"felixhalim"},"content":"     * @throws TrippieInvalidArgumentException If index is not found and if input has incorrect format."},{"lineNumber":24,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"felixhalim"},"content":"    public DeletePlaceCommand(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":26,"author":{"gitId":"felixhalim"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"felixhalim"},"content":"            String index \u003d userInput.split(\" /p \")[1];"},{"lineNumber":28,"author":{"gitId":"felixhalim"},"content":"            placeIndex \u003d Integer.parseInt(index) - 1;"},{"lineNumber":29,"author":{"gitId":"felixhalim"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":30,"author":{"gitId":"felixhalim"},"content":"            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":31,"author":{"gitId":"felixhalim"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":32,"author":{"gitId":"felixhalim"},"content":"            throw new TrippieInvalidArgumentException(PARAMETER_ERROR_MESSAGE);"},{"lineNumber":33,"author":{"gitId":"felixhalim"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":36,"author":{"gitId":"felixhalim"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"felixhalim"},"content":"    public boolean isExit() {"},{"lineNumber":38,"author":{"gitId":"felixhalim"},"content":"        return false;"},{"lineNumber":39,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":41,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"felixhalim"},"content":"     * Prints out successful delete place message and removes place from the placeList."},{"lineNumber":43,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"felixhalim"},"content":"     * @param ui          User Interface of the program."},{"lineNumber":45,"author":{"gitId":"felixhalim"},"content":"     * @param trippieData The current trip placeList that would updated."},{"lineNumber":46,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"felixhalim"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"        List\u003cPlace\u003e places \u003d trippieData.getCurrentTrip().getPlaceListObject().getPlaceList();"},{"lineNumber":50,"author":{"gitId":"felixhalim"},"content":"        if (placeIndex \u003e\u003d 0 \u0026\u0026 placeIndex \u003c places.size()) {"},{"lineNumber":51,"author":{"gitId":"felixhalim"},"content":"            System.out.println(\"Noted. I\u0027ve removed this place from the place list.\");"},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(places.get(placeIndex).toString());"},{"lineNumber":53,"author":{"gitId":"felixhalim"},"content":"            places.remove(placeIndex);"},{"lineNumber":54,"author":{"gitId":"felixhalim"},"content":"            System.out.printf(\"Now you have %d %s in the list.%n\", places.size(), places.size() \u003e 1 ? \"places\" :"},{"lineNumber":55,"author":{"gitId":"felixhalim"},"content":"                    \"place\");"},{"lineNumber":56,"author":{"gitId":"felixhalim"},"content":"        } else {"},{"lineNumber":57,"author":{"gitId":"felixhalim"},"content":"            System.out.println(NULL_ERROR_MESSAGE);"},{"lineNumber":58,"author":{"gitId":"felixhalim"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":"        trippieData.getCurrentTrip().getPlaceListObject().setPlaceList(places);"},{"lineNumber":60,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"tengkianen"},"content":"}"}],"authorContributionMap":{"felixhalim":53,"tengkianen":3,"ivanderjmw":5}},{"path":"src/main/java/seedu/trippie/command/DeleteTripCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":"public class DeleteTripCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"    public DeleteTripCommand() {"},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":11,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":13,"author":{"gitId":"ivanderjmw"},"content":"    public boolean isExit() {"},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"        return false;"},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":"     * Executes the DeleteTripCommand. Will prompt the user for input from Scanner.in."},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"ivanderjmw"},"content":"     * @param ui Ui to read user input"},{"lineNumber":21,"author":{"gitId":"ivanderjmw"},"content":"     * @param trippieData TrippieData object to store user data in runtime"},{"lineNumber":22,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":24,"author":{"gitId":"ivanderjmw"},"content":"        System.out.println(\"Here are your existing trips.\");"},{"lineNumber":25,"author":{"gitId":"ivanderjmw"},"content":"        System.out.println(trippieData.list());"},{"lineNumber":26,"author":{"gitId":"ivanderjmw"},"content":"        int index \u003d 0;"},{"lineNumber":27,"author":{"gitId":"ivanderjmw"},"content":"        do {"},{"lineNumber":28,"author":{"gitId":"ivanderjmw"},"content":"            try {"},{"lineNumber":29,"author":{"gitId":"ivanderjmw"},"content":"                System.out.print(\"Which one do you want to edit? Enter the index:\");"},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"                index \u003d Integer.parseInt(ui.getLine());"},{"lineNumber":31,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"                if (index \u003c\u003d 0) {"},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":"                    throw new IndexOutOfBoundsException();"},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":"                }"},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":"                trippieData.setCurrentTripFromIndex(index - 1);"},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":"                trippieData.loadCurrentTripFromFile();"},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":39,"author":{"gitId":"ivanderjmw"},"content":"                System.out.println(\"Please enter a valid trip number!\");"},{"lineNumber":40,"author":{"gitId":"ivanderjmw"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":41,"author":{"gitId":"ivanderjmw"},"content":"                index \u003d 0;"},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":"                System.out.println(\"Trip cannot be found! Please enter a valid trip number from the list.\");"},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":"        } while (index \u003d\u003d 0);"},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"        String tripName \u003d trippieData.getTripFromIndex(index - 1).getName();"},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"        Boolean confirmation \u003d null;"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"        do {"},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"            System.out.print(\"Are you sure you want to permanently delete \u0027\" + tripName + \"\u0027? [Y/N]:\");"},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":"            String input \u003d ui.getLine();"},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":55,"author":{"gitId":"ivanderjmw"},"content":"            if (input.toUpperCase().equals(\"Y\")) {"},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":"                confirmation \u003d true;"},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":"            } else if (input.toUpperCase().equals(\"N\")) {"},{"lineNumber":58,"author":{"gitId":"ivanderjmw"},"content":"                confirmation \u003d false;"},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":61,"author":{"gitId":"ivanderjmw"},"content":"        } while (confirmation \u003d\u003d null);"},{"lineNumber":62,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":63,"author":{"gitId":"ivanderjmw"},"content":"        if (confirmation) {"},{"lineNumber":64,"author":{"gitId":"ivanderjmw"},"content":"            Trip removedTrip \u003d trippieData.removeTripFromIndex(index - 1);"},{"lineNumber":65,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(\"Deleted trip \u0027\" + removedTrip.getName() + \"\u0027.\");"},{"lineNumber":66,"author":{"gitId":"ivanderjmw"},"content":"        } else {"},{"lineNumber":67,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(\"Cancelled trip deletion.\");"},{"lineNumber":68,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"ivanderjmw"},"content":"}"}],"authorContributionMap":{"ivanderjmw":70}},{"path":"src/main/java/seedu/trippie/command/EditTripCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":"import java.text.ParseException;"},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"import java.util.Date;"},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":"import java.util.regex.Pattern;"},{"lineNumber":11,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":"public class EditTripCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"    public EditTripCommand() {"},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"    public boolean isExit() {"},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":"        return false;"},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":21,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"ivanderjmw"},"content":"     * Executes the EditTripCommand. Will prompt the user for input from Scanner.in."},{"lineNumber":23,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"ivanderjmw"},"content":"     * @param ui Ui to read user input"},{"lineNumber":25,"author":{"gitId":"ivanderjmw"},"content":"     * @param trippieData TrippieData object to store user data in runtime"},{"lineNumber":26,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":28,"author":{"gitId":"ivanderjmw"},"content":"        System.out.println(\"Here are your existing trips.\");"},{"lineNumber":29,"author":{"gitId":"ivanderjmw"},"content":"        System.out.println(trippieData.list());"},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"        int index \u003d 0;"},{"lineNumber":31,"author":{"gitId":"ivanderjmw"},"content":"        do {"},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"            try {"},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":"                System.out.print(\"Which one do you want to edit? Enter the index:\");"},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":"                index \u003d Integer.parseInt(ui.getLine());"},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":"                if (index \u003c\u003d 0) {"},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":"                    throw new IndexOutOfBoundsException();"},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":"                }"},{"lineNumber":39,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":40,"author":{"gitId":"ivanderjmw"},"content":"                trippieData.setCurrentTripFromIndex(index - 1);"},{"lineNumber":41,"author":{"gitId":"ivanderjmw"},"content":"                trippieData.loadCurrentTripFromFile();"},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":"                System.out.println(\"Please enter a valid trip number!\");"},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":"                index \u003d 0;"},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":"                System.out.println(\"Trip cannot be found! Please enter a valid trip number from the list.\");"},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"        } while (index \u003d\u003d 0);"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"        // Can enter empty to not change"},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":"        System.out.println(\"Leave the field empty if you do not want to change the specified detail.\");"},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":"        // Get trip name"},{"lineNumber":55,"author":{"gitId":"ivanderjmw"},"content":"        String name;"},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":"        String currentName \u003d trippieData.getCurrentTrip().getName();"},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":"        assert currentName !\u003d null;"},{"lineNumber":58,"author":{"gitId":"ivanderjmw"},"content":"        do {"},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":"            System.out.print(\"Enter edited name, [old: \" + currentName + \"]:\");"},{"lineNumber":60,"author":{"gitId":"ivanderjmw"},"content":"            name \u003d ui.getLine();"},{"lineNumber":61,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":62,"author":{"gitId":"ivanderjmw"},"content":"            if (name.isBlank()) {"},{"lineNumber":63,"author":{"gitId":"ivanderjmw"},"content":"                name \u003d currentName;"},{"lineNumber":64,"author":{"gitId":"ivanderjmw"},"content":"            } else if (!isFilenameValid(name)) {"},{"lineNumber":65,"author":{"gitId":"ivanderjmw"},"content":"                System.out.println(\"New trip should not contain invalid characters like \u003c\u003e:\\\"/\\\\|?*\");"},{"lineNumber":66,"author":{"gitId":"ivanderjmw"},"content":"                name \u003d null;"},{"lineNumber":67,"author":{"gitId":"ivanderjmw"},"content":"            } else if (name.length() \u003d\u003d 0) {"},{"lineNumber":68,"author":{"gitId":"ivanderjmw"},"content":"                System.out.println(\"Trip name should not be empty!\");"},{"lineNumber":69,"author":{"gitId":"ivanderjmw"},"content":"                name \u003d null;"},{"lineNumber":70,"author":{"gitId":"ivanderjmw"},"content":"            } else if (trippieData.doesTripNameExist(name)) {"},{"lineNumber":71,"author":{"gitId":"ivanderjmw"},"content":"                System.out.println(\"A trip with that name already exists!\");"},{"lineNumber":72,"author":{"gitId":"ivanderjmw"},"content":"                name \u003d null;"},{"lineNumber":73,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"ivanderjmw"},"content":"        } while (name \u003d\u003d null);"},{"lineNumber":75,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":76,"author":{"gitId":"ivanderjmw"},"content":"        // Get start date"},{"lineNumber":77,"author":{"gitId":"ivanderjmw"},"content":"        Date startDate;"},{"lineNumber":78,"author":{"gitId":"ivanderjmw"},"content":"        Date currentStartDate \u003d trippieData.getCurrentTrip().getStartDate();"},{"lineNumber":79,"author":{"gitId":"ivanderjmw"},"content":"        assert currentStartDate !\u003d null;"},{"lineNumber":80,"author":{"gitId":"ivanderjmw"},"content":"        do {"},{"lineNumber":81,"author":{"gitId":"ivanderjmw"},"content":"            SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":82,"author":{"gitId":"ivanderjmw"},"content":"            System.out.print(\"Enter your new trip\u0027s start date (dd-mm-yyyy)\""},{"lineNumber":83,"author":{"gitId":"ivanderjmw"},"content":"                    + \" [old:\" + df.format(currentStartDate) + \"]:\");"},{"lineNumber":84,"author":{"gitId":"ivanderjmw"},"content":"            Date tempStartDate \u003d null;"},{"lineNumber":85,"author":{"gitId":"ivanderjmw"},"content":"            try {"},{"lineNumber":86,"author":{"gitId":"ivanderjmw"},"content":"                String input \u003d ui.getLine();"},{"lineNumber":87,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":88,"author":{"gitId":"ivanderjmw"},"content":"                if (input.isBlank()) {"},{"lineNumber":89,"author":{"gitId":"ivanderjmw"},"content":"                    tempStartDate \u003d currentStartDate;"},{"lineNumber":90,"author":{"gitId":"ivanderjmw"},"content":"                } else {"},{"lineNumber":91,"author":{"gitId":"ivanderjmw"},"content":"                    if (input.matches(\"^(0[1-9]|[12][0-9]|3[01])[-](0[1-9]|1[012])[-][1-9]\\\\d\\\\d\\\\d$\")) {"},{"lineNumber":92,"author":{"gitId":"ivanderjmw"},"content":"                        tempStartDate \u003d df.parse(input);"},{"lineNumber":93,"author":{"gitId":"ivanderjmw"},"content":"                    } else {"},{"lineNumber":94,"author":{"gitId":"ivanderjmw"},"content":"                        throw new ParseException(\"Invalid format\", 0);"},{"lineNumber":95,"author":{"gitId":"ivanderjmw"},"content":"                    }"},{"lineNumber":96,"author":{"gitId":"ivanderjmw"},"content":"                }"},{"lineNumber":97,"author":{"gitId":"ivanderjmw"},"content":"            } catch (ParseException e) {"},{"lineNumber":98,"author":{"gitId":"ivanderjmw"},"content":"                System.out.println(\"Give a valid date!\");"},{"lineNumber":99,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"ivanderjmw"},"content":"            startDate \u003d tempStartDate;"},{"lineNumber":101,"author":{"gitId":"ivanderjmw"},"content":"        } while (startDate \u003d\u003d null);"},{"lineNumber":102,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":103,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":104,"author":{"gitId":"ivanderjmw"},"content":"        // Get foreign exchange rate"},{"lineNumber":105,"author":{"gitId":"ivanderjmw"},"content":"        Float forEx \u003d null;"},{"lineNumber":106,"author":{"gitId":"ivanderjmw"},"content":"        Float currentForEx \u003d trippieData.getCurrentTrip().getExpenseListObject().getForExValue();"},{"lineNumber":107,"author":{"gitId":"ivanderjmw"},"content":"        assert currentForEx !\u003d null;"},{"lineNumber":108,"author":{"gitId":"ivanderjmw"},"content":"        do {"},{"lineNumber":109,"author":{"gitId":"ivanderjmw"},"content":"            System.out.print(\"Enter the foreign exchange rate [old:\" + currentForEx + \"]:\");"},{"lineNumber":110,"author":{"gitId":"ivanderjmw"},"content":"            try {"},{"lineNumber":111,"author":{"gitId":"ivanderjmw"},"content":"                String input \u003d ui.getLine();"},{"lineNumber":112,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":113,"author":{"gitId":"ivanderjmw"},"content":"                if (input.isBlank()) {"},{"lineNumber":114,"author":{"gitId":"ivanderjmw"},"content":"                    forEx \u003d currentForEx;"},{"lineNumber":115,"author":{"gitId":"ivanderjmw"},"content":"                } else {"},{"lineNumber":116,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":117,"author":{"gitId":"ivanderjmw"},"content":"                    forEx \u003d Float.parseFloat(input);"},{"lineNumber":118,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":119,"author":{"gitId":"ivanderjmw"},"content":"                    if (forEx \u003c\u003d 0) {"},{"lineNumber":120,"author":{"gitId":"ivanderjmw"},"content":"                        System.out.println(\"Foreign exchange rate should be positive!\");"},{"lineNumber":121,"author":{"gitId":"ivanderjmw"},"content":"                        forEx \u003d null;"},{"lineNumber":122,"author":{"gitId":"ivanderjmw"},"content":"                    }"},{"lineNumber":123,"author":{"gitId":"ivanderjmw"},"content":"                }"},{"lineNumber":124,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":125,"author":{"gitId":"ivanderjmw"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":126,"author":{"gitId":"ivanderjmw"},"content":"                System.out.println(\"Give a valid exchange rate (in decimals)!\");"},{"lineNumber":127,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"ivanderjmw"},"content":"        } while (forEx \u003d\u003d null);"},{"lineNumber":129,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":130,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":131,"author":{"gitId":"ivanderjmw"},"content":"        // Get currency abbreviation"},{"lineNumber":132,"author":{"gitId":"ivanderjmw"},"content":"        String currencyAbbreviation;"},{"lineNumber":133,"author":{"gitId":"ivanderjmw"},"content":"        String currentCurrencyAbbreviation \u003d trippieData.getCurrentTrip()"},{"lineNumber":134,"author":{"gitId":"ivanderjmw"},"content":"                .getExpenseListObject().getCurrencyAbbreviation();"},{"lineNumber":135,"author":{"gitId":"ivanderjmw"},"content":"        assert currentCurrencyAbbreviation !\u003d null;"},{"lineNumber":136,"author":{"gitId":"ivanderjmw"},"content":"        do {"},{"lineNumber":137,"author":{"gitId":"ivanderjmw"},"content":"            System.out.print(\"Enter the foreign currency abbreviation (eg. MYR) [old: \""},{"lineNumber":138,"author":{"gitId":"ivanderjmw"},"content":"                    + currentCurrencyAbbreviation + \"]:\");"},{"lineNumber":139,"author":{"gitId":"ivanderjmw"},"content":"            currencyAbbreviation \u003d ui.getLine();"},{"lineNumber":140,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":141,"author":{"gitId":"ivanderjmw"},"content":"            if (currencyAbbreviation.isBlank()) {"},{"lineNumber":142,"author":{"gitId":"ivanderjmw"},"content":"                currencyAbbreviation \u003d currentCurrencyAbbreviation;"},{"lineNumber":143,"author":{"gitId":"ivanderjmw"},"content":"            } else if (!isCurrencyAbbreviationFormat(currencyAbbreviation)) {"},{"lineNumber":144,"author":{"gitId":"ivanderjmw"},"content":"                currencyAbbreviation \u003d null;"},{"lineNumber":145,"author":{"gitId":"ivanderjmw"},"content":"                System.out.println(\"Currency abbreviations should be 3-letter alphabetical codes in upper cases!\");"},{"lineNumber":146,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"ivanderjmw"},"content":"        } while (currencyAbbreviation \u003d\u003d null);"},{"lineNumber":148,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":149,"author":{"gitId":"ivanderjmw"},"content":"        // Get budget"},{"lineNumber":150,"author":{"gitId":"ivanderjmw"},"content":"        Float budget \u003d null;"},{"lineNumber":151,"author":{"gitId":"ivanderjmw"},"content":"        Float currentBudget \u003d trippieData.getCurrentTrip().getExpenseListObject().getBudgetValue();"},{"lineNumber":152,"author":{"gitId":"ivanderjmw"},"content":"        assert currentBudget !\u003d null;"},{"lineNumber":153,"author":{"gitId":"ivanderjmw"},"content":"        do {"},{"lineNumber":154,"author":{"gitId":"ivanderjmw"},"content":"            try {"},{"lineNumber":155,"author":{"gitId":"ivanderjmw"},"content":"                System.out.print(\"Enter your budget for the trip (in SGD) [old:\" + currentBudget + \"]:\");"},{"lineNumber":156,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":157,"author":{"gitId":"ivanderjmw"},"content":"                String input \u003d ui.getLine();"},{"lineNumber":158,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":159,"author":{"gitId":"ivanderjmw"},"content":"                if (input.isBlank()) {"},{"lineNumber":160,"author":{"gitId":"ivanderjmw"},"content":"                    budget \u003d currentBudget;"},{"lineNumber":161,"author":{"gitId":"ivanderjmw"},"content":"                } else {"},{"lineNumber":162,"author":{"gitId":"ivanderjmw"},"content":"                    budget \u003d Float.parseFloat(input);"},{"lineNumber":163,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":164,"author":{"gitId":"ivanderjmw"},"content":"                    if (budget \u003c\u003d 0) {"},{"lineNumber":165,"author":{"gitId":"ivanderjmw"},"content":"                        System.out.println(\"Budget should be positive!\");"},{"lineNumber":166,"author":{"gitId":"ivanderjmw"},"content":"                        budget \u003d null;"},{"lineNumber":167,"author":{"gitId":"ivanderjmw"},"content":"                    }"},{"lineNumber":168,"author":{"gitId":"ivanderjmw"},"content":"                }"},{"lineNumber":169,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":170,"author":{"gitId":"ivanderjmw"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":171,"author":{"gitId":"ivanderjmw"},"content":"                System.out.println(\"Give a valid budget value (in decimals)!\");"},{"lineNumber":172,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":173,"author":{"gitId":"ivanderjmw"},"content":"        } while (budget \u003d\u003d null);"},{"lineNumber":174,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":175,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":176,"author":{"gitId":"ivanderjmw"},"content":"        Trip editedTrip \u003d trippieData.getCurrentTrip();"},{"lineNumber":177,"author":{"gitId":"ivanderjmw"},"content":"        final String oldName \u003d editedTrip.getName();"},{"lineNumber":178,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":179,"author":{"gitId":"ivanderjmw"},"content":"        editedTrip.setName(name);"},{"lineNumber":180,"author":{"gitId":"ivanderjmw"},"content":"        editedTrip.setStartDate(startDate);"},{"lineNumber":181,"author":{"gitId":"ivanderjmw"},"content":"        editedTrip.getExpenseListObject().setForExValue(forEx);"},{"lineNumber":182,"author":{"gitId":"ivanderjmw"},"content":"        editedTrip.getExpenseListObject().setCurrencyAbbreviation(currencyAbbreviation);"},{"lineNumber":183,"author":{"gitId":"ivanderjmw"},"content":"        editedTrip.getExpenseListObject().setBudgetValue(budget);"},{"lineNumber":184,"author":{"gitId":"ivanderjmw"},"content":"        trippieData.removeTripFile(oldName);"},{"lineNumber":185,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":186,"author":{"gitId":"ivanderjmw"},"content":"        System.out.println(\"Edited the trip \" + editedTrip.toString());"},{"lineNumber":187,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":188,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":190,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":191,"author":{"gitId":"ivanderjmw"},"content":"     * Checks the currency abbreviation format, whether or not it complies with the standard format."},{"lineNumber":192,"author":{"gitId":"ivanderjmw"},"content":"     * Standard format consists of 3 letter max and is all caps without digits."},{"lineNumber":193,"author":{"gitId":"ivanderjmw"},"content":"     * @param input the string to be checked."},{"lineNumber":194,"author":{"gitId":"ivanderjmw"},"content":"     * @return false if currency format is not valid."},{"lineNumber":195,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":196,"author":{"gitId":"ivanderjmw"},"content":"    private boolean isCurrencyAbbreviationFormat(String input) {"},{"lineNumber":197,"author":{"gitId":"ivanderjmw"},"content":"        if (input.length() \u003e 3 | input.length() \u003d\u003d 0) {"},{"lineNumber":198,"author":{"gitId":"ivanderjmw"},"content":"            return false;"},{"lineNumber":199,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":201,"author":{"gitId":"ivanderjmw"},"content":"        char[] characters \u003d input.toCharArray();"},{"lineNumber":202,"author":{"gitId":"ivanderjmw"},"content":"        for (char character : characters) {"},{"lineNumber":203,"author":{"gitId":"ivanderjmw"},"content":"            if (Character.isDigit(character) | Character.isLowerCase(character)) {"},{"lineNumber":204,"author":{"gitId":"ivanderjmw"},"content":"                return false;"},{"lineNumber":205,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":206,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"ivanderjmw"},"content":"        return true;"},{"lineNumber":208,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":209,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":210,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":211,"author":{"gitId":"ivanderjmw"},"content":"     * Checks if a fileName is valid."},{"lineNumber":212,"author":{"gitId":"ivanderjmw"},"content":"     * @param fileName the filename to be checked"},{"lineNumber":213,"author":{"gitId":"ivanderjmw"},"content":"     * @return true if file name is valid, else false"},{"lineNumber":214,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":215,"author":{"gitId":"ivanderjmw"},"content":"    private boolean isFilenameValid(String fileName) {"},{"lineNumber":216,"author":{"gitId":"ivanderjmw"},"content":"        // Implemented with reference to"},{"lineNumber":217,"author":{"gitId":"ivanderjmw"},"content":"        // https://www.rgagnon.com/javadetails/java-check-if-a-filename-is-valid.html"},{"lineNumber":218,"author":{"gitId":"ivanderjmw"},"content":"        Pattern p \u003d Pattern.compile(\"[\u003c\u003e:\\\"/\\\\\\\\|?*]\");"},{"lineNumber":219,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":220,"author":{"gitId":"ivanderjmw"},"content":"        return !p.matcher(fileName).find();"},{"lineNumber":221,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":223,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":224,"author":{"gitId":"ivanderjmw"},"content":"}"}],"authorContributionMap":{"ivanderjmw":224}},{"path":"src/main/java/seedu/trippie/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felixhalim"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":3,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":5,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":6,"author":{"gitId":"felixhalim"},"content":"public class ExitCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"felixhalim"},"content":"    public ExitCommand() {"},{"lineNumber":8,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":9,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":11,"author":{"gitId":"felixhalim"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"felixhalim"},"content":"    public boolean isExit() {"},{"lineNumber":13,"author":{"gitId":"felixhalim"},"content":"        return true;"},{"lineNumber":14,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":16,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"felixhalim"},"content":"     * Shows the farewell message."},{"lineNumber":18,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"felixhalim"},"content":"     * @param ui          Ui to read user input"},{"lineNumber":20,"author":{"gitId":"felixhalim"},"content":"     * @param trippieData TrippieData object to store user data in runtime"},{"lineNumber":21,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"felixhalim"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":24,"author":{"gitId":"felixhalim"},"content":"        ui.showFarewells();"},{"lineNumber":25,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"felixhalim"},"content":"}"}],"authorContributionMap":{"felixhalim":24,"ivanderjmw":2}},{"path":"src/main/java/seedu/trippie/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":5,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":6,"author":{"gitId":"weishuangtan"},"content":"public class HelpCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"weishuangtan"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"weishuangtan"},"content":"    public boolean isExit() {"},{"lineNumber":9,"author":{"gitId":"weishuangtan"},"content":"        return false;"},{"lineNumber":10,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":12,"author":{"gitId":"weishuangtan"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"weishuangtan"},"content":"     * Prints a list of commands available in Trippie."},{"lineNumber":14,"author":{"gitId":"weishuangtan"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"weishuangtan"},"content":"     * @param ui User interface of the program."},{"lineNumber":16,"author":{"gitId":"weishuangtan"},"content":"     * @param trippieData The current trip to fetch data from."},{"lineNumber":17,"author":{"gitId":"weishuangtan"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"weishuangtan"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":20,"author":{"gitId":"weishuangtan"},"content":"        System.out.println(\"Welcome to Trippie! A one-stop app to plan any of your upcoming trips!\");"},{"lineNumber":21,"author":{"gitId":"weishuangtan"},"content":"        System.out.println(\"Here is a list of commands which you can use to navigate your way\\nthrough Trippie!\\n\");"},{"lineNumber":22,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"[new trip] |   Creates a new trip. You will be prompted to enter some details\");"},{"lineNumber":23,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"           |   Format: new trip\");"},{"lineNumber":24,"author":{"gitId":"felixhalim"},"content":"        printBorder();"},{"lineNumber":25,"author":{"gitId":"tengkianen"},"content":"        System.out.println(\"[load trip]|   Loads a specific trip from the saved list\");"},{"lineNumber":26,"author":{"gitId":"tengkianen"},"content":"        System.out.println(\"           |   Format: load trip\");"},{"lineNumber":27,"author":{"gitId":"tengkianen"},"content":"        printBorder();"},{"lineNumber":28,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"[edit trip]|   Edits a specific trip from the saved list\");"},{"lineNumber":29,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"           |   Format: edit trip\");"},{"lineNumber":30,"author":{"gitId":"felixhalim"},"content":"        printBorder();"},{"lineNumber":31,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"[delete    |   Deletes a specific trip from the saved list\");"},{"lineNumber":32,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"trip]      |   Format: delete trip\");"},{"lineNumber":33,"author":{"gitId":"felixhalim"},"content":"        printBorder();"},{"lineNumber":34,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"[help]     |   Shows a concise list of commands available\");"},{"lineNumber":35,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"           |   Format: help\");"},{"lineNumber":36,"author":{"gitId":"felixhalim"},"content":"        printBorder();"},{"lineNumber":37,"author":{"gitId":"weishuangtan"},"content":"        System.out.println(\"[add]      |   Adds a place to your trip\");"},{"lineNumber":38,"author":{"gitId":"weishuangtan"},"content":"        System.out.println(\"           |   Format: add /n PLACE_NAME /d DAY /t TIME\");"},{"lineNumber":39,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"           |   Example: add /n Dinner at Marina Bay Sands /d 2 /t 1800 to 2000\");"},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":"        printBorder();"},{"lineNumber":41,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"[list]     |   Displays all places in a timetable format\");"},{"lineNumber":42,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"(places)   |   Format: list /p [/d DAY]\");"},{"lineNumber":43,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"           |   list /p /d 2\");"},{"lineNumber":44,"author":{"gitId":"weishuangtan"},"content":"        printBorder();"},{"lineNumber":45,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"[search]   |   Displays all places that includes the search keyword\");"},{"lineNumber":46,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"(places)   |   Format: search KEYWORD\");"},{"lineNumber":47,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"           |   search Dinner\");"},{"lineNumber":48,"author":{"gitId":"weishuangtan"},"content":"        printBorder();"},{"lineNumber":49,"author":{"gitId":"weishuangtan"},"content":"        System.out.println(\"[delete]   |   Deletes the specified place from the list\");"},{"lineNumber":50,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"(place)    |   Format: delete /p PLACE_INDEX\");"},{"lineNumber":51,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"           |   Example: delete /p 1\");"},{"lineNumber":52,"author":{"gitId":"weishuangtan"},"content":"        printBorder();"},{"lineNumber":53,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"[budget]   |   Edits a budget to keep track of in expenditure list\");"},{"lineNumber":54,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"           |   Format: budget AMOUNT\");"},{"lineNumber":55,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"           |   Example: budget 100\");"},{"lineNumber":56,"author":{"gitId":"weishuangtan"},"content":"        printBorder();"},{"lineNumber":57,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"[buy]      |   Adds an item with its final cost into an expenditure list\");"},{"lineNumber":58,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"           |   Format: buy /n ITEM_NAME /d DAY_NUMBER /c FINAL_COST\");"},{"lineNumber":59,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"           |   Example: buy /n R\u0026B Brown Sugar /d 2 /c 3.00\");"},{"lineNumber":60,"author":{"gitId":"weishuangtan"},"content":"        printBorder();"},{"lineNumber":61,"author":{"gitId":"weishuangtan"},"content":"        System.out.println(\"[list]     |   Displays all the items bought in the expenditure list\");"},{"lineNumber":62,"author":{"gitId":"weishuangtan"},"content":"        System.out.println(\"(expenses) |   Format: list /e\");"},{"lineNumber":63,"author":{"gitId":"tengkianen"},"content":"        printBorder();"},{"lineNumber":64,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"[delete]   |   Deletes the specified place from the list\");"},{"lineNumber":65,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"(expense)  |   Format: delete /e EXPENSE_INDEX\");"},{"lineNumber":66,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"           |   Example: delete /e 1\");"},{"lineNumber":67,"author":{"gitId":"felixhalim"},"content":"        printBorder();"},{"lineNumber":68,"author":{"gitId":"tengkianen"},"content":"        System.out.println(\"[convert   |   Converts an amount to the requested currency\");"},{"lineNumber":69,"author":{"gitId":"tengkianen"},"content":"        System.out.println(\"/to]       |   Format: convert /toSGD AMOUNT\");"},{"lineNumber":70,"author":{"gitId":"tengkianen"},"content":"        System.out.println(\"           |   Format: convert /toSGD 500\");"},{"lineNumber":71,"author":{"gitId":"tengkianen"},"content":"        System.out.println(\"           |   Format: convert /toFOR AMOUNT\");"},{"lineNumber":72,"author":{"gitId":"tengkianen"},"content":"        System.out.println(\"           |   Format: convert /toFOR 500\");"},{"lineNumber":73,"author":{"gitId":"tengkianen"},"content":"        printBorder();"},{"lineNumber":74,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"[exit]     |   Exit the program and auto-saves\");"},{"lineNumber":75,"author":{"gitId":"felixhalim"},"content":"        System.out.println(\"           |   Format: exit\");"},{"lineNumber":76,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":78,"author":{"gitId":"weishuangtan"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"weishuangtan"},"content":"     * Prints a border between each row when printing list of commands."},{"lineNumber":80,"author":{"gitId":"weishuangtan"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"weishuangtan"},"content":"    public void printBorder() {"},{"lineNumber":82,"author":{"gitId":"tengkianen"},"content":"        System.out.println(\"___________|______________________________________________________________\");"},{"lineNumber":83,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"tengkianen"},"content":"}"}],"authorContributionMap":{"felixhalim":33,"tengkianen":14,"ivanderjmw":2,"weishuangtan":35}},{"path":"src/main/java/seedu/trippie/command/ListExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.data.Expense;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":6,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.exception.TrippieExceedBudgetException;"},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":"public class ListExpenseCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":12,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String EXCEED_BUDGET_MESSAGE \u003d \"WARNING! You have exceeded your initial budget.\\n\""},{"lineNumber":13,"author":{"gitId":"ShawnTanzc"},"content":"            + \"Recommended action: Increase budget limit.\";"},{"lineNumber":14,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String LIST_IS_EMPTY_MESSAGE \u003d \"There is currently nothing in your Expense list.\";"},{"lineNumber":15,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":16,"author":{"gitId":"ShawnTanzc"},"content":"    private static final int BAR_SIZE \u003d 10;"},{"lineNumber":17,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String SYMBOL_START_BOUNDARY \u003d \"[\";"},{"lineNumber":18,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String SYMBOL_SPEND \u003d \"\u003d\";"},{"lineNumber":19,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String SYMBOL_REMAINING \u003d \"-\";"},{"lineNumber":20,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String SYMBOL_END_BOUNDARY \u003d \"]\";"},{"lineNumber":21,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":22,"author":{"gitId":"ivanderjmw"},"content":"    public ListExpenseCommand() {"},{"lineNumber":23,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":25,"author":{"gitId":"ShawnTanzc"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"ShawnTanzc"},"content":"    public boolean isExit() {"},{"lineNumber":27,"author":{"gitId":"ShawnTanzc"},"content":"        return false;"},{"lineNumber":28,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":30,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"ShawnTanzc"},"content":"     * Prints out expense list summary which includes total budget, list of items bought, total spending, remaining"},{"lineNumber":32,"author":{"gitId":"ShawnTanzc"},"content":"     * budget and percentage spent bar."},{"lineNumber":33,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"ShawnTanzc"},"content":"     * @param ui User Interface of the program"},{"lineNumber":35,"author":{"gitId":"ShawnTanzc"},"content":"     * @param trippieData The current trip expenseList that would updated."},{"lineNumber":36,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"ShawnTanzc"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":39,"author":{"gitId":"ivanderjmw"},"content":"        List\u003cExpense\u003e expenses \u003d trippieData.getCurrentTrip().getExpenseListObject().getExpenseList();"},{"lineNumber":40,"author":{"gitId":"ShawnTanzc"},"content":"        Float exchangeRate \u003d trippieData.getCurrentTrip().getExpenseListObject().getForExValue();"},{"lineNumber":41,"author":{"gitId":"ShawnTanzc"},"content":"        String currencyAbbreviation \u003d trippieData.getCurrentTrip().getExpenseListObject().getCurrencyAbbreviation();"},{"lineNumber":42,"author":{"gitId":"ShawnTanzc"},"content":"        float budget \u003d trippieData.getCurrentTrip().getExpenseListObject().getBudgetValue() * exchangeRate;"},{"lineNumber":43,"author":{"gitId":"ShawnTanzc"},"content":"        System.out.println(\"Total budget: \" + String.format(\"%.2f \", budget) + currencyAbbreviation"},{"lineNumber":44,"author":{"gitId":"ShawnTanzc"},"content":"                + \" (\" + String.format(\"%.2f\", budget / exchangeRate) + \" SGD)\");"},{"lineNumber":45,"author":{"gitId":"ShawnTanzc"},"content":"        if (expenses.isEmpty()) {"},{"lineNumber":46,"author":{"gitId":"ShawnTanzc"},"content":"            System.out.println(LIST_IS_EMPTY_MESSAGE);"},{"lineNumber":47,"author":{"gitId":"ShawnTanzc"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"ShawnTanzc"},"content":"            int listIndex \u003d 1;"},{"lineNumber":49,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(\"Expense List:\");"},{"lineNumber":51,"author":{"gitId":"ShawnTanzc"},"content":"            for (Expense expense : expenses) {"},{"lineNumber":52,"author":{"gitId":"ShawnTanzc"},"content":"                System.out.println(\"[\" + listIndex + \"] \" + expense.toString() + \" \" + currencyAbbreviation);"},{"lineNumber":53,"author":{"gitId":"ShawnTanzc"},"content":"                listIndex++;"},{"lineNumber":54,"author":{"gitId":"ShawnTanzc"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"ShawnTanzc"},"content":"            float totalSpending \u003d trippieData.getCurrentTrip().getExpenseListObject().getTotalExpenses();"},{"lineNumber":56,"author":{"gitId":"ShawnTanzc"},"content":"            System.out.println(\"Your current total spending is \""},{"lineNumber":57,"author":{"gitId":"ShawnTanzc"},"content":"                    + String.format(\"%.2f \", totalSpending) + currencyAbbreviation"},{"lineNumber":58,"author":{"gitId":"ShawnTanzc"},"content":"                    + \" (\" + String.format(\"%.2f\", totalSpending / exchangeRate) + \" SGD)\");"},{"lineNumber":59,"author":{"gitId":"ShawnTanzc"},"content":"            try {"},{"lineNumber":60,"author":{"gitId":"ShawnTanzc"},"content":"                float remainingBudget \u003d budget - totalSpending;"},{"lineNumber":61,"author":{"gitId":"ShawnTanzc"},"content":"                displayRemainingBudget(remainingBudget, exchangeRate, currencyAbbreviation);"},{"lineNumber":62,"author":{"gitId":"ShawnTanzc"},"content":"                createBudgetPercentageBar(totalSpending, budget);"},{"lineNumber":63,"author":{"gitId":"ShawnTanzc"},"content":"            } catch (TrippieExceedBudgetException e) {"},{"lineNumber":64,"author":{"gitId":"ShawnTanzc"},"content":"                System.out.println(EXCEED_BUDGET_MESSAGE);"},{"lineNumber":65,"author":{"gitId":"ShawnTanzc"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":69,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"ShawnTanzc"},"content":"     * Displays remaining budget in both foreign and local currency if there are any left."},{"lineNumber":71,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"ShawnTanzc"},"content":"     * @param remainingBudget Remaining amount leftover from budget after spending."},{"lineNumber":73,"author":{"gitId":"ShawnTanzc"},"content":"     * @param exchangeRate Exchange rate for foreign currency."},{"lineNumber":74,"author":{"gitId":"ShawnTanzc"},"content":"     * @param currencyAbbreviation Foreign currency abbreviation."},{"lineNumber":75,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"ShawnTanzc"},"content":"    private void displayRemainingBudget(float remainingBudget, float exchangeRate, String currencyAbbreviation) {"},{"lineNumber":77,"author":{"gitId":"ShawnTanzc"},"content":"        if (remainingBudget \u003c 0) {"},{"lineNumber":78,"author":{"gitId":"ShawnTanzc"},"content":"            System.out.print(\"\");"},{"lineNumber":79,"author":{"gitId":"ShawnTanzc"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"ShawnTanzc"},"content":"            System.out.println(\"Your current remaining budget is \""},{"lineNumber":81,"author":{"gitId":"ShawnTanzc"},"content":"                    + String.format(\"%.2f \", remainingBudget) + currencyAbbreviation"},{"lineNumber":82,"author":{"gitId":"ShawnTanzc"},"content":"                    + \" (\" + String.format(\"%.2f\", remainingBudget / exchangeRate) + \" SGD)\");"},{"lineNumber":83,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":86,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"ShawnTanzc"},"content":"     * Compares spending with budget to print respectively messages"},{"lineNumber":88,"author":{"gitId":"ShawnTanzc"},"content":"     * Prints a budget percentage bar that put spending with reference to initial budget."},{"lineNumber":89,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"ShawnTanzc"},"content":"     * @param spent The amount spent by user."},{"lineNumber":91,"author":{"gitId":"ShawnTanzc"},"content":"     * @param budget The budget initially set by user."},{"lineNumber":92,"author":{"gitId":"ShawnTanzc"},"content":"     * @throws TrippieExceedBudgetException If amount spent is more than the budget set."},{"lineNumber":93,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"ShawnTanzc"},"content":"    public static void createBudgetPercentageBar(float spent, float budget) throws TrippieExceedBudgetException {"},{"lineNumber":95,"author":{"gitId":"ShawnTanzc"},"content":"        if (spent \u003d\u003d budget) {"},{"lineNumber":96,"author":{"gitId":"ShawnTanzc"},"content":"            System.out.println(\"You have spent finish your budget.\");"},{"lineNumber":97,"author":{"gitId":"ShawnTanzc"},"content":"        } else if (spent \u003e budget) {"},{"lineNumber":98,"author":{"gitId":"ShawnTanzc"},"content":"            throw new TrippieExceedBudgetException(EXCEED_BUDGET_MESSAGE);"},{"lineNumber":99,"author":{"gitId":"ShawnTanzc"},"content":"        } else {"},{"lineNumber":100,"author":{"gitId":"ShawnTanzc"},"content":"            System.out.println(\"You are still spending within your budget.\");"},{"lineNumber":101,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"ShawnTanzc"},"content":"        float spentPercentage \u003d (100 * spent) / budget;"},{"lineNumber":103,"author":{"gitId":"ShawnTanzc"},"content":"        float spentLength \u003d BAR_SIZE * spentPercentage / 100;"},{"lineNumber":104,"author":{"gitId":"ShawnTanzc"},"content":"        StringBuilder bar \u003d new StringBuilder(SYMBOL_START_BOUNDARY);"},{"lineNumber":105,"author":{"gitId":"ShawnTanzc"},"content":"        for (int i \u003d 0; i \u003c BAR_SIZE; i++) {"},{"lineNumber":106,"author":{"gitId":"ShawnTanzc"},"content":"            if (i \u003c (int)spentLength) {"},{"lineNumber":107,"author":{"gitId":"ShawnTanzc"},"content":"                bar.append(SYMBOL_SPEND);"},{"lineNumber":108,"author":{"gitId":"ShawnTanzc"},"content":"            } else {"},{"lineNumber":109,"author":{"gitId":"ShawnTanzc"},"content":"                bar.append(SYMBOL_REMAINING);"},{"lineNumber":110,"author":{"gitId":"ShawnTanzc"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"ShawnTanzc"},"content":"        bar.append(SYMBOL_END_BOUNDARY);"},{"lineNumber":113,"author":{"gitId":"ShawnTanzc"},"content":"        System.out.println(bar + \" \""},{"lineNumber":114,"author":{"gitId":"ShawnTanzc"},"content":"                + String.format(\"%.1f\", spentPercentage) + \"%\");"},{"lineNumber":115,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":117,"author":{"gitId":"tengkianen"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":104,"felixhalim":2,"tengkianen":3,"ivanderjmw":6,"weishuangtan":2}},{"path":"src/main/java/seedu/trippie/command/ListPlacesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.data.Place;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":6,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":7,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":8,"author":{"gitId":"tengkianen"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":9,"author":{"gitId":"tengkianen"},"content":"import java.util.Calendar;"},{"lineNumber":10,"author":{"gitId":"tengkianen"},"content":"import java.util.Date;"},{"lineNumber":11,"author":{"gitId":"felixhalim"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":13,"author":{"gitId":"tengkianen"},"content":"public class ListPlacesCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":15,"author":{"gitId":"tengkianen"},"content":"    private static final String FORMAT_ERROR_MESSAGE \u003d \"You typed in the incorrect format for [list /p] command! \""},{"lineNumber":16,"author":{"gitId":"tengkianen"},"content":"            + \"Please try the following:\\nFormat:\\nlist /p\\nlist /p /d DAY_INDEX\";"},{"lineNumber":17,"author":{"gitId":"tengkianen"},"content":"    private static final String PARAMETER_ERROR_MESSAGE \u003d \"Please check that the index keyed in is a number.\";"},{"lineNumber":18,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":19,"author":{"gitId":"tengkianen"},"content":"    private final int specifiedDay;"},{"lineNumber":20,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":21,"author":{"gitId":"tengkianen"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"tengkianen"},"content":"     * Takes in list command from the user."},{"lineNumber":23,"author":{"gitId":"tengkianen"},"content":"     * Initializes the specified day to be used in execute() method."},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"tengkianen"},"content":"     * @param userInput Command input by the user."},{"lineNumber":26,"author":{"gitId":"tengkianen"},"content":"     * @throws TrippieInvalidArgumentException if input has formatting error, or specified day has incorrect parameters."},{"lineNumber":27,"author":{"gitId":"tengkianen"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tengkianen"},"content":"    public ListPlacesCommand(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":29,"author":{"gitId":"tengkianen"},"content":"        specifiedDay \u003d getSpecifiedDay(userInput);"},{"lineNumber":30,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":32,"author":{"gitId":"tengkianen"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tengkianen"},"content":"     * Parses specified day to display in the list, if any."},{"lineNumber":34,"author":{"gitId":"tengkianen"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"tengkianen"},"content":"     * @param userInput Command input by user."},{"lineNumber":36,"author":{"gitId":"tengkianen"},"content":"     * @return Specific day that user request to display, if any."},{"lineNumber":37,"author":{"gitId":"tengkianen"},"content":"     * @throws TrippieInvalidArgumentException if input has formatting error, or specified day has incorrect parameters."},{"lineNumber":38,"author":{"gitId":"tengkianen"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"tengkianen"},"content":"    public int getSpecifiedDay(String userInput) throws TrippieInvalidArgumentException {"},{"lineNumber":40,"author":{"gitId":"tengkianen"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"tengkianen"},"content":"            String[] specificDay \u003d userInput.split(\"/p\");"},{"lineNumber":42,"author":{"gitId":"tengkianen"},"content":"            if (specificDay.length \u003d\u003d 1) {"},{"lineNumber":43,"author":{"gitId":"tengkianen"},"content":"                return -1;"},{"lineNumber":44,"author":{"gitId":"tengkianen"},"content":"            } else {"},{"lineNumber":45,"author":{"gitId":"tengkianen"},"content":"                String[] finalDay \u003d specificDay[1].split(\"/d\");"},{"lineNumber":46,"author":{"gitId":"tengkianen"},"content":"                return Integer.parseInt(finalDay[1].trim());"},{"lineNumber":47,"author":{"gitId":"tengkianen"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"tengkianen"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":49,"author":{"gitId":"tengkianen"},"content":"            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":50,"author":{"gitId":"tengkianen"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":51,"author":{"gitId":"tengkianen"},"content":"            throw new TrippieInvalidArgumentException(PARAMETER_ERROR_MESSAGE);"},{"lineNumber":52,"author":{"gitId":"tengkianen"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":55,"author":{"gitId":"tengkianen"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"tengkianen"},"content":"    public boolean isExit() {"},{"lineNumber":57,"author":{"gitId":"tengkianen"},"content":"        return false;"},{"lineNumber":58,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":60,"author":{"gitId":"tengkianen"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"tengkianen"},"content":"     * Prints out list of place added by user for all days, unless specified otherwise."},{"lineNumber":62,"author":{"gitId":"tengkianen"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"tengkianen"},"content":"     * @param ui User interface of the program."},{"lineNumber":64,"author":{"gitId":"tengkianen"},"content":"     * @param trippieData The current trip placeList to fetch data from."},{"lineNumber":65,"author":{"gitId":"tengkianen"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":67,"author":{"gitId":"ivanderjmw"},"content":"        List\u003cPlace\u003e places \u003d trippieData.getCurrentTrip().getPlaceListObject().getPlaceList();"},{"lineNumber":68,"author":{"gitId":"tengkianen"},"content":"        Date date \u003d trippieData.getCurrentTrip().getStartDate();"},{"lineNumber":69,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":70,"author":{"gitId":"tengkianen"},"content":"        if (places.size() \u003d\u003d 0) {"},{"lineNumber":71,"author":{"gitId":"felixhalim"},"content":"            System.out.println(\"There is currently nothing in your place list. Why not add one?\");"},{"lineNumber":72,"author":{"gitId":"weishuangtan"},"content":"        } else if (specifiedDay \u003d\u003d -1) {"},{"lineNumber":73,"author":{"gitId":"felixhalim"},"content":"            int listIndex \u003d 1;"},{"lineNumber":74,"author":{"gitId":"felixhalim"},"content":"            int dayPointer \u003d places.get(0).getPlaceDay();"},{"lineNumber":75,"author":{"gitId":"felixhalim"},"content":"            String currentDate \u003d addDays(date, dayPointer - 1);"},{"lineNumber":76,"author":{"gitId":"felixhalim"},"content":"            System.out.println(\"DAY \" + dayPointer + \": (\" + currentDate + \")\");"},{"lineNumber":77,"author":{"gitId":"felixhalim"},"content":"            for (Place place : places) {"},{"lineNumber":78,"author":{"gitId":"felixhalim"},"content":"                if (dayPointer !\u003d place.getPlaceDay()) {"},{"lineNumber":79,"author":{"gitId":"felixhalim"},"content":"                    dayPointer \u003d place.getPlaceDay();"},{"lineNumber":80,"author":{"gitId":"felixhalim"},"content":"                    currentDate \u003d addDays(date, dayPointer - 1);"},{"lineNumber":81,"author":{"gitId":"felixhalim"},"content":"                    System.out.println(\"DAY \" + dayPointer + \": (\" + currentDate + \")\");"},{"lineNumber":82,"author":{"gitId":"tengkianen"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"felixhalim"},"content":"                System.out.println(\"[\" + listIndex + \"] \" + place.toString());"},{"lineNumber":84,"author":{"gitId":"felixhalim"},"content":"                listIndex++;"},{"lineNumber":85,"author":{"gitId":"tengkianen"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"tengkianen"},"content":"        } else {"},{"lineNumber":87,"author":{"gitId":"tengkianen"},"content":"            String currentDate \u003d addDays(date, specifiedDay - 1);"},{"lineNumber":88,"author":{"gitId":"tengkianen"},"content":"            System.out.println(\"DAY \" + specifiedDay + \": (\" + currentDate + \")\");"},{"lineNumber":89,"author":{"gitId":"tengkianen"},"content":"            for (Place place : places) {"},{"lineNumber":90,"author":{"gitId":"tengkianen"},"content":"                if (place.getPlaceDay() \u003d\u003d specifiedDay) {"},{"lineNumber":91,"author":{"gitId":"ivanderjmw"},"content":"                    System.out.println(place.toString());"},{"lineNumber":92,"author":{"gitId":"tengkianen"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"tengkianen"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"tengkianen"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"ivanderjmw"},"content":"        trippieData.getCurrentTrip().getPlaceListObject().setPlaceList(places);"},{"lineNumber":96,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":98,"author":{"gitId":"tengkianen"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"tengkianen"},"content":"     * Add days to start of trip date."},{"lineNumber":100,"author":{"gitId":"tengkianen"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"tengkianen"},"content":"     * @param date Initial start date."},{"lineNumber":102,"author":{"gitId":"tengkianen"},"content":"     * @param day Number of days to add."},{"lineNumber":103,"author":{"gitId":"tengkianen"},"content":"     * @return Final date after addition."},{"lineNumber":104,"author":{"gitId":"tengkianen"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"tengkianen"},"content":"    public String addDays(Date date, int day) {"},{"lineNumber":106,"author":{"gitId":"tengkianen"},"content":"        Calendar cal \u003d Calendar.getInstance();"},{"lineNumber":107,"author":{"gitId":"tengkianen"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"},{"lineNumber":108,"author":{"gitId":"tengkianen"},"content":"        cal.setTime(date);"},{"lineNumber":109,"author":{"gitId":"tengkianen"},"content":"        cal.add(Calendar.DATE, day);"},{"lineNumber":110,"author":{"gitId":"tengkianen"},"content":"        return sdf.format(cal.getTime());"},{"lineNumber":111,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":113,"author":{"gitId":"tengkianen"},"content":"}"}],"authorContributionMap":{"felixhalim":14,"tengkianen":92,"ivanderjmw":5,"weishuangtan":2}},{"path":"src/main/java/seedu/trippie/command/LoadTripCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":"public class LoadTripCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":"    public LoadTripCommand() {"},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":11,"author":{"gitId":"ivanderjmw"},"content":"    public boolean isExit() {"},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":"        return false;"},{"lineNumber":13,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":"     * Executes the LoadTripCommand. Will prompt the user for input from Scanner.in."},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":"     * @param ui Ui to read user input"},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"     * @param trippieData TrippieData object to store user data in runtime"},{"lineNumber":20,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":22,"author":{"gitId":"ivanderjmw"},"content":"        System.out.println(\"Here are your existing trips.\");"},{"lineNumber":23,"author":{"gitId":"ivanderjmw"},"content":"        System.out.println(trippieData.list());"},{"lineNumber":24,"author":{"gitId":"weishuangtan"},"content":"        int index \u003d 0;"},{"lineNumber":25,"author":{"gitId":"weishuangtan"},"content":"        do {"},{"lineNumber":26,"author":{"gitId":"weishuangtan"},"content":"            try {"},{"lineNumber":27,"author":{"gitId":"ivanderjmw"},"content":"                System.out.print(\"Which one do you want to load? Enter the index:\");"},{"lineNumber":28,"author":{"gitId":"weishuangtan"},"content":"                index \u003d Integer.parseInt(ui.getLine());"},{"lineNumber":29,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"                if (index \u003c\u003d 0) {"},{"lineNumber":31,"author":{"gitId":"ivanderjmw"},"content":"                    throw new IndexOutOfBoundsException();"},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"                }"},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":"                trippieData.setCurrentTripFromIndex(index - 1);"},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":"                trippieData.loadCurrentTripFromFile();"},{"lineNumber":36,"author":{"gitId":"weishuangtan"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":37,"author":{"gitId":"weishuangtan"},"content":"                System.out.println(\"Please enter a valid trip number!\");"},{"lineNumber":38,"author":{"gitId":"weishuangtan"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":39,"author":{"gitId":"weishuangtan"},"content":"                index \u003d 0;"},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":"                System.out.println(\"Trip cannot be found! Please enter a valid trip number from the list.\");"},{"lineNumber":41,"author":{"gitId":"weishuangtan"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":43,"author":{"gitId":"weishuangtan"},"content":"        } while (index \u003d\u003d 0);"},{"lineNumber":44,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":45,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":"}"}],"authorContributionMap":{"ivanderjmw":33,"weishuangtan":14}},{"path":"src/main/java/seedu/trippie/command/NewTripCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":"import java.text.ParseException;"},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":"import java.util.Date;"},{"lineNumber":11,"author":{"gitId":"ivanderjmw"},"content":"import java.util.regex.Pattern;"},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":13,"author":{"gitId":"ivanderjmw"},"content":"public class NewTripCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":"     * Creates a new trip command."},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":"    public NewTripCommand() {"},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":21,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"ivanderjmw"},"content":"     * Does not exit."},{"lineNumber":23,"author":{"gitId":"ivanderjmw"},"content":"     * @return false"},{"lineNumber":24,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"ivanderjmw"},"content":"    public boolean isExit() {"},{"lineNumber":26,"author":{"gitId":"ivanderjmw"},"content":"        return false;"},{"lineNumber":27,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":29,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"     * Executes the NewTripCommand. Will prompt the user for responses from Scanner.in."},{"lineNumber":31,"author":{"gitId":"ivanderjmw"},"content":"     * @param ui Ui object to read user inputs"},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"     * @param trippieData TrippieData object that stores user\u0027s data in runtime."},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":"            // Get trip name"},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":"            String name;"},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":"            do {"},{"lineNumber":39,"author":{"gitId":"ivanderjmw"},"content":"                System.out.print(\"Enter your new trip\u0027s name:\");"},{"lineNumber":40,"author":{"gitId":"ivanderjmw"},"content":"                name \u003d ui.getLine();"},{"lineNumber":41,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":"                if (!isFilenameValid(name)) {"},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":"                    System.out.println(\"New trip should not contain invalid characters like \u003c\u003e:\\\"/\\\\|?*\");"},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":"                    name \u003d null;"},{"lineNumber":45,"author":{"gitId":"weishuangtan"},"content":"                } else if (name.length() \u003d\u003d 0) {"},{"lineNumber":46,"author":{"gitId":"weishuangtan"},"content":"                    System.out.println(\"Trip name should not be empty!\");"},{"lineNumber":47,"author":{"gitId":"weishuangtan"},"content":"                    name \u003d null;"},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"                } else if (trippieData.doesTripNameExist(name)) {"},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"                    System.out.println(\"A trip with that name already exists!\");"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"                    name \u003d null;"},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":"            } while (name \u003d\u003d null);"},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":"            // Get start date"},{"lineNumber":55,"author":{"gitId":"ivanderjmw"},"content":"            Date startDate;"},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":"            do {"},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":"                System.out.print(\"Enter your new trip\u0027s start date (dd-mm-yyyy):\");"},{"lineNumber":58,"author":{"gitId":"ivanderjmw"},"content":"                SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":"                Date tempStartDate \u003d null;"},{"lineNumber":60,"author":{"gitId":"ivanderjmw"},"content":"                try {"},{"lineNumber":61,"author":{"gitId":"ivanderjmw"},"content":"                    String input \u003d ui.getLine();"},{"lineNumber":62,"author":{"gitId":"ivanderjmw"},"content":"                    if (!input.matches(\"^(0[1-9]|[12][0-9]|3[01])[-](0[1-9]|1[012])[-][1-9]\\\\d\\\\d\\\\d$\")) {"},{"lineNumber":63,"author":{"gitId":"ivanderjmw"},"content":"                        throw new ParseException(\"Invalid format\", 0);"},{"lineNumber":64,"author":{"gitId":"ivanderjmw"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"ivanderjmw"},"content":"                    tempStartDate \u003d df.parse(input);"},{"lineNumber":66,"author":{"gitId":"ivanderjmw"},"content":"                } catch (ParseException e) {"},{"lineNumber":67,"author":{"gitId":"ivanderjmw"},"content":"                    System.out.println(\"Give a valid date!\");"},{"lineNumber":68,"author":{"gitId":"ivanderjmw"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"ivanderjmw"},"content":"                startDate \u003d tempStartDate;"},{"lineNumber":70,"author":{"gitId":"ivanderjmw"},"content":"            } while (startDate \u003d\u003d null);"},{"lineNumber":71,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":72,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":73,"author":{"gitId":"ivanderjmw"},"content":"            // Get foreign exchange rate"},{"lineNumber":74,"author":{"gitId":"ivanderjmw"},"content":"            Float forEx \u003d null;"},{"lineNumber":75,"author":{"gitId":"ivanderjmw"},"content":"            do {"},{"lineNumber":76,"author":{"gitId":"tengkianen"},"content":"                System.out.print(\"Enter the foreign exchange rate:\");"},{"lineNumber":77,"author":{"gitId":"ivanderjmw"},"content":"                try {"},{"lineNumber":78,"author":{"gitId":"ivanderjmw"},"content":"                    forEx \u003d Float.parseFloat(ui.getLine());"},{"lineNumber":79,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":80,"author":{"gitId":"ivanderjmw"},"content":"                    if (forEx \u003c\u003d 0) {"},{"lineNumber":81,"author":{"gitId":"ivanderjmw"},"content":"                        System.out.println(\"Foreign exchange rate should be positive!\");"},{"lineNumber":82,"author":{"gitId":"ivanderjmw"},"content":"                        forEx \u003d null;"},{"lineNumber":83,"author":{"gitId":"ivanderjmw"},"content":"                    }"},{"lineNumber":84,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":85,"author":{"gitId":"ivanderjmw"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":86,"author":{"gitId":"ivanderjmw"},"content":"                    System.out.println(\"Give a valid exchange rate (in decimals)!\");"},{"lineNumber":87,"author":{"gitId":"ivanderjmw"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"ivanderjmw"},"content":"            } while (forEx \u003d\u003d null);"},{"lineNumber":89,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":90,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":91,"author":{"gitId":"ivanderjmw"},"content":"            // Get currency abbreviation"},{"lineNumber":92,"author":{"gitId":"ivanderjmw"},"content":"            String currencyAbbreviation;"},{"lineNumber":93,"author":{"gitId":"ivanderjmw"},"content":"            do {"},{"lineNumber":94,"author":{"gitId":"ShawnTanzc"},"content":"                System.out.print(\"Enter the foreign currency abbreviation (eg. MYR):\");"},{"lineNumber":95,"author":{"gitId":"ivanderjmw"},"content":"                currencyAbbreviation \u003d ui.getLine();"},{"lineNumber":96,"author":{"gitId":"weishuangtan"},"content":"                if (!isCurrencyAbbreviationFormat(currencyAbbreviation)) {"},{"lineNumber":97,"author":{"gitId":"weishuangtan"},"content":"                    currencyAbbreviation \u003d null;"},{"lineNumber":98,"author":{"gitId":"weishuangtan"},"content":"                    System.out.println(\"Currency abbreviations should be 3-letter alphabetical codes in upper cases!\");"},{"lineNumber":99,"author":{"gitId":"weishuangtan"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"ivanderjmw"},"content":"            } while (currencyAbbreviation \u003d\u003d null);"},{"lineNumber":101,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":102,"author":{"gitId":"ivanderjmw"},"content":"            // Get budget"},{"lineNumber":103,"author":{"gitId":"ivanderjmw"},"content":"            Float budget \u003d null;"},{"lineNumber":104,"author":{"gitId":"ivanderjmw"},"content":"            do {"},{"lineNumber":105,"author":{"gitId":"ivanderjmw"},"content":"                try {"},{"lineNumber":106,"author":{"gitId":"ShawnTanzc"},"content":"                    System.out.print(\"Enter your budget for the trip (in SGD):\");"},{"lineNumber":107,"author":{"gitId":"ivanderjmw"},"content":"                    budget \u003d Float.parseFloat(ui.getLine());"},{"lineNumber":108,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":109,"author":{"gitId":"ivanderjmw"},"content":"                    if (budget \u003c\u003d 0) {"},{"lineNumber":110,"author":{"gitId":"ivanderjmw"},"content":"                        System.out.println(\"Budget should be positive!\");"},{"lineNumber":111,"author":{"gitId":"ivanderjmw"},"content":"                        budget \u003d null;"},{"lineNumber":112,"author":{"gitId":"ivanderjmw"},"content":"                    }"},{"lineNumber":113,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":114,"author":{"gitId":"ivanderjmw"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":115,"author":{"gitId":"ivanderjmw"},"content":"                    System.out.println(\"Give a valid budget value (in decimals)!\");"},{"lineNumber":116,"author":{"gitId":"ivanderjmw"},"content":"                }"},{"lineNumber":117,"author":{"gitId":"ivanderjmw"},"content":"            } while (budget \u003d\u003d null);"},{"lineNumber":118,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":119,"author":{"gitId":"ivanderjmw"},"content":"            // Get index"},{"lineNumber":120,"author":{"gitId":"ivanderjmw"},"content":"            int index \u003d trippieData.getTripListSize();"},{"lineNumber":121,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":122,"author":{"gitId":"ivanderjmw"},"content":"            Trip newTrip \u003d new Trip(index, name, startDate);"},{"lineNumber":123,"author":{"gitId":"ShawnTanzc"},"content":"            newTrip.getExpenseListObject().setForExValue(forEx);"},{"lineNumber":124,"author":{"gitId":"ShawnTanzc"},"content":"            newTrip.getExpenseListObject().setCurrencyAbbreviation(currencyAbbreviation);"},{"lineNumber":125,"author":{"gitId":"tengkianen"},"content":"            newTrip.getExpenseListObject().setBudgetValue(budget);"},{"lineNumber":126,"author":{"gitId":"ivanderjmw"},"content":"            trippieData.addTrip(newTrip);"},{"lineNumber":127,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":128,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(\"Added the trip \" + newTrip.toString());"},{"lineNumber":129,"author":{"gitId":"ivanderjmw"},"content":"            trippieData.setCurrentTripFromIndex(index);"},{"lineNumber":130,"author":{"gitId":"ivanderjmw"},"content":"        } catch (TrippieException e) {"},{"lineNumber":131,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":132,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(\"Failed to create new trip.\");"},{"lineNumber":133,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":136,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"ivanderjmw"},"content":"     * Checks the currency abbreviation format, whether or not it complies with the standard format."},{"lineNumber":138,"author":{"gitId":"ivanderjmw"},"content":"     * Standard format consists of 3 letter max and is all caps without digits."},{"lineNumber":139,"author":{"gitId":"ivanderjmw"},"content":"     * @param input the string to be checked."},{"lineNumber":140,"author":{"gitId":"ivanderjmw"},"content":"     * @return false if currency format is not valid."},{"lineNumber":141,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"ivanderjmw"},"content":"    private boolean isCurrencyAbbreviationFormat(String input) {"},{"lineNumber":143,"author":{"gitId":"weishuangtan"},"content":"        if (input.length() \u003e 3 | input.length() \u003d\u003d 0) {"},{"lineNumber":144,"author":{"gitId":"weishuangtan"},"content":"            return false;"},{"lineNumber":145,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":147,"author":{"gitId":"weishuangtan"},"content":"        char[] characters \u003d input.toCharArray();"},{"lineNumber":148,"author":{"gitId":"weishuangtan"},"content":"        for (char character : characters) {"},{"lineNumber":149,"author":{"gitId":"weishuangtan"},"content":"            if (Character.isDigit(character) | Character.isLowerCase(character)) {"},{"lineNumber":150,"author":{"gitId":"weishuangtan"},"content":"                return false;"},{"lineNumber":151,"author":{"gitId":"weishuangtan"},"content":"            }"},{"lineNumber":152,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"weishuangtan"},"content":"        return true;"},{"lineNumber":154,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":156,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"ivanderjmw"},"content":"     * Checks if a fileName is valid."},{"lineNumber":158,"author":{"gitId":"ivanderjmw"},"content":"     * @param fileName the filename to be checked"},{"lineNumber":159,"author":{"gitId":"ivanderjmw"},"content":"     * @return true if file name is valid, else false"},{"lineNumber":160,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":161,"author":{"gitId":"ivanderjmw"},"content":"    private boolean isFilenameValid(String fileName) {"},{"lineNumber":162,"author":{"gitId":"ivanderjmw"},"content":"        // Implemented with reference to"},{"lineNumber":163,"author":{"gitId":"ivanderjmw"},"content":"        // https://www.rgagnon.com/javadetails/java-check-if-a-filename-is-valid.html"},{"lineNumber":164,"author":{"gitId":"ivanderjmw"},"content":"        Pattern p \u003d Pattern.compile(\"[\u003c\u003e:\\\"/\\\\\\\\|?*]\");"},{"lineNumber":165,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":166,"author":{"gitId":"ivanderjmw"},"content":"        return !p.matcher(fileName).find();"},{"lineNumber":167,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"ivanderjmw"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":5,"tengkianen":4,"ivanderjmw":138,"weishuangtan":21}},{"path":"src/main/java/seedu/trippie/command/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.Ui;"},{"lineNumber":4,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.data.Place;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":6,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":7,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":8,"author":{"gitId":"tengkianen"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":10,"author":{"gitId":"tengkianen"},"content":"public class SearchCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":12,"author":{"gitId":"tengkianen"},"content":"    private static final String FORMAT_ERROR_MESSAGE \u003d \"You typed in the incorrect format for [search KEYWORD] command!\""},{"lineNumber":13,"author":{"gitId":"tengkianen"},"content":"            + \" Please try the following:\\nFormat: search KEYWORD\\nExample: search disneyland\";"},{"lineNumber":14,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":15,"author":{"gitId":"tengkianen"},"content":"    private final String keyword;"},{"lineNumber":16,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":17,"author":{"gitId":"tengkianen"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"tengkianen"},"content":"     * Parses user input to initialize specified keyword."},{"lineNumber":19,"author":{"gitId":"tengkianen"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"tengkianen"},"content":"     * @param command Command input by the user."},{"lineNumber":21,"author":{"gitId":"tengkianen"},"content":"     * @throws TrippieInvalidArgumentException if user inputs command with formatting issues."},{"lineNumber":22,"author":{"gitId":"tengkianen"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"tengkianen"},"content":"    public SearchCommand(String command) throws TrippieInvalidArgumentException {"},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":"        String parsedResponse;"},{"lineNumber":25,"author":{"gitId":"tengkianen"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"tengkianen"},"content":"            parsedResponse \u003d command.split(\" \", 2)[1];"},{"lineNumber":27,"author":{"gitId":"tengkianen"},"content":"            this.keyword \u003d parsedResponse;"},{"lineNumber":28,"author":{"gitId":"tengkianen"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":29,"author":{"gitId":"tengkianen"},"content":"            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"},{"lineNumber":30,"author":{"gitId":"tengkianen"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":33,"author":{"gitId":"tengkianen"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"tengkianen"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"tengkianen"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":38,"author":{"gitId":"tengkianen"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"tengkianen"},"content":"     * Prints out search result."},{"lineNumber":40,"author":{"gitId":"tengkianen"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"tengkianen"},"content":"     * @param ui User interface of the program."},{"lineNumber":42,"author":{"gitId":"tengkianen"},"content":"     * @param trippieData The current trip placeList to fetch data from."},{"lineNumber":43,"author":{"gitId":"tengkianen"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":"    public void execute(Ui ui, TrippieData trippieData) {"},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":"        List\u003cPlace\u003e list \u003d trippieData.getCurrentTrip().getPlaceListObject().getPlaceList();"},{"lineNumber":46,"author":{"gitId":"tengkianen"},"content":"        int size \u003d list.size();"},{"lineNumber":47,"author":{"gitId":"tengkianen"},"content":"        if (size \u003d\u003d 0) {"},{"lineNumber":48,"author":{"gitId":"felixhalim"},"content":"            System.out.println(\"There is currently nothing in your place list. Why not add one?\");"},{"lineNumber":49,"author":{"gitId":"tengkianen"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"tengkianen"},"content":"            System.out.printf(\"Here is your search result:%n\");"},{"lineNumber":51,"author":{"gitId":"tengkianen"},"content":"            int startingNumber \u003d 1;"},{"lineNumber":52,"author":{"gitId":"felixhalim"},"content":"            for (Place place : list) {"},{"lineNumber":53,"author":{"gitId":"felixhalim"},"content":"                if (place.toString().toLowerCase().contains(keyword.toLowerCase())) {"},{"lineNumber":54,"author":{"gitId":"felixhalim"},"content":"                    System.out.println(startingNumber + \".\" + place.toString() + \" on DAY \" + place.getPlaceDay());"},{"lineNumber":55,"author":{"gitId":"tengkianen"},"content":"                    startingNumber++;"},{"lineNumber":56,"author":{"gitId":"tengkianen"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"tengkianen"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"tengkianen"},"content":"            if (startingNumber \u003d\u003d 1) {"},{"lineNumber":59,"author":{"gitId":"felixhalim"},"content":"                System.out.println(\"Sorry I can\u0027t find any place with the keyword \\\"\" + keyword + \"\\\"\");"},{"lineNumber":60,"author":{"gitId":"tengkianen"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"tengkianen"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"tengkianen"},"content":"}"}],"authorContributionMap":{"felixhalim":6,"tengkianen":54,"ivanderjmw":3}},{"path":"src/main/java/seedu/trippie/data/Currency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShawnTanzc"},"content":"package seedu.trippie.data;"},{"lineNumber":2,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":" * Represents currency object to be converted into the requested currency."},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":" * Stores the choice of currency to be converted to and the amount."},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":" */"},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":"public class Currency {"},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":"    private final CurrencyType currencyChoice;"},{"lineNumber":9,"author":{"gitId":"ShawnTanzc"},"content":"    private final Float currencyAmount;"},{"lineNumber":10,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":11,"author":{"gitId":"ShawnTanzc"},"content":"    public Currency(CurrencyType currencyChoice, Float currencyAmount) {"},{"lineNumber":12,"author":{"gitId":"ShawnTanzc"},"content":"        this.currencyChoice \u003d currencyChoice;"},{"lineNumber":13,"author":{"gitId":"ShawnTanzc"},"content":"        this.currencyAmount \u003d currencyAmount;"},{"lineNumber":14,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":16,"author":{"gitId":"ShawnTanzc"},"content":"    public String getCurrencyChoice() {"},{"lineNumber":17,"author":{"gitId":"ShawnTanzc"},"content":"        String currencyChosen;"},{"lineNumber":18,"author":{"gitId":"ShawnTanzc"},"content":"        if (currencyChoice \u003d\u003d CurrencyType.LOCAL) {"},{"lineNumber":19,"author":{"gitId":"ShawnTanzc"},"content":"            currencyChosen \u003d \"local\";"},{"lineNumber":20,"author":{"gitId":"ShawnTanzc"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"ShawnTanzc"},"content":"            currencyChosen \u003d \"foreign\";"},{"lineNumber":22,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"ShawnTanzc"},"content":"        return currencyChosen;"},{"lineNumber":24,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":26,"author":{"gitId":"ShawnTanzc"},"content":"    public Float getCurrencyAmount() {"},{"lineNumber":27,"author":{"gitId":"ShawnTanzc"},"content":"        return currencyAmount;"},{"lineNumber":28,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ShawnTanzc"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":29}},{"path":"src/main/java/seedu/trippie/data/CurrencyType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShawnTanzc"},"content":"package seedu.trippie.data;"},{"lineNumber":2,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":" * Represents an enumeration of choice of currency, either local or foreign to be converted to."},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":"public enum CurrencyType {"},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":"    LOCAL, FOREIGN;"},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":8}},{"path":"src/main/java/seedu/trippie/data/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie.data;"},{"lineNumber":2,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":" * Represents the individual expenses made by the user."},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":" * Stores the name of the item, its cost and the day it is bought."},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":" */"},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":"public class Expense {"},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":"    private final String expenseName;"},{"lineNumber":9,"author":{"gitId":"weishuangtan"},"content":"    private final Float expenseCost;"},{"lineNumber":10,"author":{"gitId":"weishuangtan"},"content":"    private final int expenseDayBought;"},{"lineNumber":11,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":12,"author":{"gitId":"weishuangtan"},"content":"    public Expense(String expenseName, Float expenseCost, int expenseDayBought) {"},{"lineNumber":13,"author":{"gitId":"ShawnTanzc"},"content":"        this.expenseName \u003d expenseName;"},{"lineNumber":14,"author":{"gitId":"ShawnTanzc"},"content":"        this.expenseCost \u003d expenseCost;"},{"lineNumber":15,"author":{"gitId":"ShawnTanzc"},"content":"        this.expenseDayBought \u003d expenseDayBought;"},{"lineNumber":16,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":18,"author":{"gitId":"weishuangtan"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"weishuangtan"},"content":"     * Returns the name of the expense."},{"lineNumber":20,"author":{"gitId":"weishuangtan"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"weishuangtan"},"content":"     * @return String corresponding to the name of the expense."},{"lineNumber":22,"author":{"gitId":"weishuangtan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"ShawnTanzc"},"content":"    public String getExpenseName() {"},{"lineNumber":24,"author":{"gitId":"ShawnTanzc"},"content":"        return expenseName;"},{"lineNumber":25,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":27,"author":{"gitId":"weishuangtan"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"weishuangtan"},"content":"     * Returns the expense cost of the item bought."},{"lineNumber":29,"author":{"gitId":"weishuangtan"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"weishuangtan"},"content":"     * @return Float corresponding to the expense cost."},{"lineNumber":31,"author":{"gitId":"weishuangtan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"weishuangtan"},"content":"    public Float getExpenseCost() {"},{"lineNumber":33,"author":{"gitId":"ShawnTanzc"},"content":"        return expenseCost;"},{"lineNumber":34,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":36,"author":{"gitId":"weishuangtan"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"weishuangtan"},"content":"     * Returns the day which the item was bought on."},{"lineNumber":38,"author":{"gitId":"weishuangtan"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"weishuangtan"},"content":"     * @return Integer of day."},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"weishuangtan"},"content":"    public int getExpenseDayBought() {"},{"lineNumber":42,"author":{"gitId":"ShawnTanzc"},"content":"        return expenseDayBought;"},{"lineNumber":43,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":45,"author":{"gitId":"weishuangtan"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"weishuangtan"},"content":"     * Returns a full description of the item bought."},{"lineNumber":47,"author":{"gitId":"weishuangtan"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"weishuangtan"},"content":"     * @return String of description."},{"lineNumber":49,"author":{"gitId":"weishuangtan"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"ShawnTanzc"},"content":"        return \"Day \" + getExpenseDayBought() + \": \" + getExpenseName() + \" - \""},{"lineNumber":53,"author":{"gitId":"weishuangtan"},"content":"                + String.format(\"%.2f\",getExpenseCost());"},{"lineNumber":54,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":56,"author":{"gitId":"ShawnTanzc"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":26,"ivanderjmw":4,"weishuangtan":26}},{"path":"src/main/java/seedu/trippie/data/ExpenseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie.data;"},{"lineNumber":2,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":" * Represents the list of expenses stored in an array."},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":" * Stores the budget, foreign exchange rate and foreign currency abbreviation inputted by the user for the current trip."},{"lineNumber":9,"author":{"gitId":"ShawnTanzc"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ShawnTanzc"},"content":"public class ExpenseList {"},{"lineNumber":11,"author":{"gitId":"ShawnTanzc"},"content":"    private List\u003cExpense\u003e expenseList;"},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":"    private Float budgetValue;"},{"lineNumber":13,"author":{"gitId":"ShawnTanzc"},"content":"    private Float forExValue;"},{"lineNumber":14,"author":{"gitId":"ShawnTanzc"},"content":"    private String currencyAbbreviation;"},{"lineNumber":15,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":16,"author":{"gitId":"ShawnTanzc"},"content":"    public ExpenseList() {"},{"lineNumber":17,"author":{"gitId":"ShawnTanzc"},"content":"        expenseList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":20,"author":{"gitId":"ShawnTanzc"},"content":"    public ExpenseList(List\u003cExpense\u003e expenseList) {"},{"lineNumber":21,"author":{"gitId":"ShawnTanzc"},"content":"        this.expenseList \u003d new ArrayList\u003c\u003e(expenseList);"},{"lineNumber":22,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":24,"author":{"gitId":"ShawnTanzc"},"content":"    public List\u003cExpense\u003e getExpenseList() {"},{"lineNumber":25,"author":{"gitId":"ShawnTanzc"},"content":"        return expenseList;"},{"lineNumber":26,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":28,"author":{"gitId":"ShawnTanzc"},"content":"    public void setExpenseList(List\u003cExpense\u003e expenseList) {"},{"lineNumber":29,"author":{"gitId":"ShawnTanzc"},"content":"        this.expenseList \u003d new ArrayList\u003c\u003e(expenseList);"},{"lineNumber":30,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"    public Float getBudgetValue() {"},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":"        return budgetValue;"},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":36,"author":{"gitId":"ShawnTanzc"},"content":"    public Float getForExValue() {"},{"lineNumber":37,"author":{"gitId":"ShawnTanzc"},"content":"        return forExValue;"},{"lineNumber":38,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":40,"author":{"gitId":"ShawnTanzc"},"content":"    public String getCurrencyAbbreviation() {"},{"lineNumber":41,"author":{"gitId":"ShawnTanzc"},"content":"        return currencyAbbreviation;"},{"lineNumber":42,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":44,"author":{"gitId":"weishuangtan"},"content":"    public Float getTotalExpenses() {"},{"lineNumber":45,"author":{"gitId":"weishuangtan"},"content":"        float totalExpenses \u003d 0;"},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":"        for (Expense expense: expenseList) {"},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":"            totalExpenses +\u003d expense.getExpenseCost();"},{"lineNumber":48,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"weishuangtan"},"content":"        return totalExpenses;"},{"lineNumber":50,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":52,"author":{"gitId":"ShawnTanzc"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"ShawnTanzc"},"content":"     * Extract the latest day in which an item was bought."},{"lineNumber":54,"author":{"gitId":"ShawnTanzc"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"ShawnTanzc"},"content":"     * @return the max day to be displayed."},{"lineNumber":56,"author":{"gitId":"ShawnTanzc"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":"    public int getMaxDay() {"},{"lineNumber":58,"author":{"gitId":"ivanderjmw"},"content":"        if (expenseList.size() \u003d\u003d 0) {"},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":"            return 0;"},{"lineNumber":60,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"ivanderjmw"},"content":"        int maxDay \u003d 0;"},{"lineNumber":62,"author":{"gitId":"ivanderjmw"},"content":"        for (Expense expense: expenseList) {"},{"lineNumber":63,"author":{"gitId":"ivanderjmw"},"content":"            if (expense.getExpenseDayBought() \u003e maxDay) {"},{"lineNumber":64,"author":{"gitId":"ivanderjmw"},"content":"                maxDay \u003d expense.getExpenseDayBought();"},{"lineNumber":65,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"ivanderjmw"},"content":"        return maxDay;"},{"lineNumber":68,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":70,"author":{"gitId":"ivanderjmw"},"content":"    public void setBudgetValue(Float budgetValue) {"},{"lineNumber":71,"author":{"gitId":"ivanderjmw"},"content":"        this.budgetValue \u003d budgetValue;"},{"lineNumber":72,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":74,"author":{"gitId":"ShawnTanzc"},"content":"    public void setForExValue(Float forExValue) {"},{"lineNumber":75,"author":{"gitId":"ShawnTanzc"},"content":"        this.forExValue \u003d forExValue;"},{"lineNumber":76,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":78,"author":{"gitId":"ShawnTanzc"},"content":"    public void setCurrencyAbbreviation(String currencyAbbreviation) {"},{"lineNumber":79,"author":{"gitId":"ShawnTanzc"},"content":"        this.currencyAbbreviation \u003d currencyAbbreviation;"},{"lineNumber":80,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"ShawnTanzc"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":50,"ivanderjmw":25,"weishuangtan":6}},{"path":"src/main/java/seedu/trippie/data/Place.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie.data;"},{"lineNumber":2,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":3,"author":{"gitId":"felixhalim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"felixhalim"},"content":" * Represents the individual place visited by the user."},{"lineNumber":5,"author":{"gitId":"felixhalim"},"content":" * Stores the name of the place, its day and the starting and ending time."},{"lineNumber":6,"author":{"gitId":"felixhalim"},"content":" */"},{"lineNumber":7,"author":{"gitId":"felixhalim"},"content":"public class Place {"},{"lineNumber":8,"author":{"gitId":"felixhalim"},"content":"    private final String name;"},{"lineNumber":9,"author":{"gitId":"tengkianen"},"content":"    private final int day;"},{"lineNumber":10,"author":{"gitId":"tengkianen"},"content":"    private final int start;"},{"lineNumber":11,"author":{"gitId":"tengkianen"},"content":"    private final int end;"},{"lineNumber":12,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":13,"author":{"gitId":"tengkianen"},"content":"    public Place(String name, int day, int start, int end) {"},{"lineNumber":14,"author":{"gitId":"felixhalim"},"content":"        this.name \u003d name;"},{"lineNumber":15,"author":{"gitId":"felixhalim"},"content":"        this.day \u003d day;"},{"lineNumber":16,"author":{"gitId":"tengkianen"},"content":"        this.start \u003d start;"},{"lineNumber":17,"author":{"gitId":"tengkianen"},"content":"        this.end \u003d end;"},{"lineNumber":18,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":20,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"felixhalim"},"content":"     * Returns the name of the place."},{"lineNumber":22,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"felixhalim"},"content":"     * @return String corresponding to the name of the place."},{"lineNumber":24,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"felixhalim"},"content":"    public String getPlaceName() {"},{"lineNumber":26,"author":{"gitId":"felixhalim"},"content":"        return name;"},{"lineNumber":27,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":29,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"felixhalim"},"content":"     * Returns the day which the place is going to be visited."},{"lineNumber":31,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"felixhalim"},"content":"     * @return Integer of day."},{"lineNumber":33,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"tengkianen"},"content":"    public int getPlaceDay() {"},{"lineNumber":35,"author":{"gitId":"felixhalim"},"content":"        return day;"},{"lineNumber":36,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":38,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"felixhalim"},"content":"     * Returns the starting time of the place visit."},{"lineNumber":40,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"felixhalim"},"content":"     * @return Integer of starting time."},{"lineNumber":42,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"tengkianen"},"content":"    public int getPlaceStartTime() {"},{"lineNumber":44,"author":{"gitId":"tengkianen"},"content":"        return start;"},{"lineNumber":45,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":47,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"felixhalim"},"content":"     * Returns the ending time of the place visit."},{"lineNumber":49,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"felixhalim"},"content":"     * @return Integer of ending time."},{"lineNumber":51,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"tengkianen"},"content":"    public int getPlaceEndTime() {"},{"lineNumber":53,"author":{"gitId":"tengkianen"},"content":"        return end;"},{"lineNumber":54,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":"    public String toString() {"},{"lineNumber":58,"author":{"gitId":"tengkianen"},"content":"        return String.format(\"%04d\",getPlaceStartTime()) + \" - \" + String.format(\"%04d\", getPlaceEndTime())"},{"lineNumber":59,"author":{"gitId":"tengkianen"},"content":"                + \" \" + getPlaceName();"},{"lineNumber":60,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"felixhalim"},"content":"}"}],"authorContributionMap":{"felixhalim":43,"tengkianen":15,"ivanderjmw":3}},{"path":"src/main/java/seedu/trippie/data/PlaceList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie.data;"},{"lineNumber":2,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":3,"author":{"gitId":"felixhalim"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"felixhalim"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":6,"author":{"gitId":"felixhalim"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"felixhalim"},"content":" * Represents the list of places stored in a array-list."},{"lineNumber":8,"author":{"gitId":"felixhalim"},"content":" */"},{"lineNumber":9,"author":{"gitId":"felixhalim"},"content":"public class PlaceList {"},{"lineNumber":10,"author":{"gitId":"felixhalim"},"content":"    private List\u003cPlace\u003e placeList;"},{"lineNumber":11,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":12,"author":{"gitId":"felixhalim"},"content":"    public PlaceList() {"},{"lineNumber":13,"author":{"gitId":"ivanderjmw"},"content":"        this.placeList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":"    public PlaceList(List\u003cPlace\u003e placeList) {"},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"        this.placeList \u003d placeList;"},{"lineNumber":18,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":20,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"felixhalim"},"content":"     * Returns List of Place object stored in list."},{"lineNumber":22,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"felixhalim"},"content":"     * @return List of Place."},{"lineNumber":24,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"felixhalim"},"content":"    public List\u003cPlace\u003e getPlaceList() {"},{"lineNumber":26,"author":{"gitId":"felixhalim"},"content":"        return placeList;"},{"lineNumber":27,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":29,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"felixhalim"},"content":"     * Sets list to the List of Place object passed."},{"lineNumber":31,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"felixhalim"},"content":"     * @param placeList the current List of Place."},{"lineNumber":33,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"felixhalim"},"content":"    public void setPlaceList(List\u003cPlace\u003e placeList) {"},{"lineNumber":35,"author":{"gitId":"felixhalim"},"content":"        this.placeList \u003d new ArrayList\u003c\u003e(placeList);"},{"lineNumber":36,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":38,"author":{"gitId":"felixhalim"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"felixhalim"},"content":"     * Returns the maximum day of the place list."},{"lineNumber":40,"author":{"gitId":"felixhalim"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"felixhalim"},"content":"     * @return Integer of maximum day."},{"lineNumber":42,"author":{"gitId":"felixhalim"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":"    public int getMaxDay() {"},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":"        if (placeList.size() \u003d\u003d 0) {"},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":"            return 0;"},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":"        int maxDay \u003d 0;"},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"        for (Place place: placeList) {"},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"            if (place.getPlaceDay() \u003e maxDay) {"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"                maxDay \u003d place.getPlaceDay();"},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":"        return maxDay;"},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"felixhalim"},"content":"}"}],"authorContributionMap":{"felixhalim":36,"ivanderjmw":19}},{"path":"src/main/java/seedu/trippie/data/Trip.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie.data;"},{"lineNumber":2,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.Trippie;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":"import java.util.Date;"},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"public class Trip {"},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":"    private int index;"},{"lineNumber":11,"author":{"gitId":"ivanderjmw"},"content":"    private String name;"},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":"    private Date startDate;"},{"lineNumber":13,"author":{"gitId":"ivanderjmw"},"content":"    private ExpenseList expenseList;"},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"    private PlaceList placeList;"},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":"    private int maxDay;"},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"    protected void setIndex(int index) {"},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":"        this.index \u003d index;"},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":21,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"ivanderjmw"},"content":"     * A trip constructor that initializes both an empty expense list and an empty place list."},{"lineNumber":23,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"ivanderjmw"},"content":"    public Trip() {"},{"lineNumber":25,"author":{"gitId":"ivanderjmw"},"content":"        this.expenseList \u003d new ExpenseList();"},{"lineNumber":26,"author":{"gitId":"ivanderjmw"},"content":"        this.placeList \u003d new PlaceList();"},{"lineNumber":27,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":29,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"     * A trip constructor based on given parameters."},{"lineNumber":31,"author":{"gitId":"ivanderjmw"},"content":"     * @param index Given trip index"},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"     * @param name Given trip name"},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":"     * @param startDate Given trip startDate"},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":"     * @throws TrippieException A common Trippie exception"},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":"    public Trip(int index, String name, Date startDate) throws TrippieException {"},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":"        if (index \u003c 0) {"},{"lineNumber":39,"author":{"gitId":"ivanderjmw"},"content":"            throw new TrippieException(\"Index out of bounds\");"},{"lineNumber":40,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":"        if (name.isEmpty()) {"},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":"            throw new TrippieException(\"Trip name should not be empty\");"},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":"        this.index \u003d index;"},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"        this.name \u003d name;"},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"        this.expenseList \u003d new ExpenseList();"},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"        this.placeList \u003d new PlaceList();"},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"ivanderjmw"},"content":"     * Creates a trip."},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":"     * @param index trip index"},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":"     * @param name trip name"},{"lineNumber":58,"author":{"gitId":"ivanderjmw"},"content":"     * @param startDate start date in a Date object"},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":"     * @param maxDay max day of the trip"},{"lineNumber":60,"author":{"gitId":"ivanderjmw"},"content":"     * @throws TrippieException Fails to parse the inputs or index is out of bounds"},{"lineNumber":61,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"ivanderjmw"},"content":"    public Trip(int index, String name, Date startDate, int maxDay) throws TrippieException {"},{"lineNumber":63,"author":{"gitId":"ivanderjmw"},"content":"        this(index, name, startDate);"},{"lineNumber":64,"author":{"gitId":"ivanderjmw"},"content":"        this.maxDay \u003d maxDay;"},{"lineNumber":65,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":67,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"ivanderjmw"},"content":"     * Retrieves the expenseList object."},{"lineNumber":69,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"ivanderjmw"},"content":"     * @return ExpenseList object of this trip"},{"lineNumber":71,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"ivanderjmw"},"content":"    public ExpenseList getExpenseListObject() {"},{"lineNumber":73,"author":{"gitId":"ivanderjmw"},"content":"        return this.expenseList;"},{"lineNumber":74,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":76,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"ivanderjmw"},"content":"     * Retrieves the placeList object."},{"lineNumber":78,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"ivanderjmw"},"content":"     * @return PlaceList object of the trip"},{"lineNumber":80,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"ivanderjmw"},"content":"    public PlaceList getPlaceListObject() {"},{"lineNumber":82,"author":{"gitId":"ivanderjmw"},"content":"        return this.placeList;"},{"lineNumber":83,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":85,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"ivanderjmw"},"content":"     * Retrieves the index of the trip."},{"lineNumber":87,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"ivanderjmw"},"content":"     * @return index of the trip"},{"lineNumber":89,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"ivanderjmw"},"content":"    public int getIndex() {"},{"lineNumber":91,"author":{"gitId":"ivanderjmw"},"content":"        return index;"},{"lineNumber":92,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":94,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"ivanderjmw"},"content":"     * Retrieves the name of the trip."},{"lineNumber":96,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"ivanderjmw"},"content":"     * @return name of the trip"},{"lineNumber":98,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"ivanderjmw"},"content":"    public String getName() {"},{"lineNumber":100,"author":{"gitId":"ivanderjmw"},"content":"        return name;"},{"lineNumber":101,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":103,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"ivanderjmw"},"content":"     * Retrieves the start date of the trip."},{"lineNumber":105,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"ivanderjmw"},"content":"     * @return start date of the trip as a Date object"},{"lineNumber":107,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"ivanderjmw"},"content":"    public Date getStartDate() {"},{"lineNumber":109,"author":{"gitId":"ivanderjmw"},"content":"        return startDate;"},{"lineNumber":110,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":112,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"ivanderjmw"},"content":"     * Retrieves the max day of the trip."},{"lineNumber":114,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"ivanderjmw"},"content":"     * @return the max day of the trip"},{"lineNumber":116,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"ivanderjmw"},"content":"    public int getMaxDay() {"},{"lineNumber":118,"author":{"gitId":"ivanderjmw"},"content":"        return maxDay;"},{"lineNumber":119,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":121,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"ivanderjmw"},"content":"     * Changes the name of the trip."},{"lineNumber":123,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"ivanderjmw"},"content":"     * @param name new name of the trip"},{"lineNumber":125,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"ivanderjmw"},"content":"    public void setName(String name) {"},{"lineNumber":127,"author":{"gitId":"ivanderjmw"},"content":"        this.name \u003d name;"},{"lineNumber":128,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":130,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"ivanderjmw"},"content":"     * Changes the start date of the trip."},{"lineNumber":132,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":133,"author":{"gitId":"ivanderjmw"},"content":"     * @param startDate new start date of the trip"},{"lineNumber":134,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"ivanderjmw"},"content":"    public void setStartDate(Date startDate) {"},{"lineNumber":136,"author":{"gitId":"ivanderjmw"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":137,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":139,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"ivanderjmw"},"content":"     * Changes the expenseList object of the trip."},{"lineNumber":141,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":142,"author":{"gitId":"ivanderjmw"},"content":"     * @param expenseList new expenseList object of the trip"},{"lineNumber":143,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"ivanderjmw"},"content":"    public void setExpenseList(ExpenseList expenseList) {"},{"lineNumber":145,"author":{"gitId":"ivanderjmw"},"content":"        this.expenseList \u003d expenseList;"},{"lineNumber":146,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":148,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"ivanderjmw"},"content":"     * Changes the placeList object of the trip."},{"lineNumber":150,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":151,"author":{"gitId":"ivanderjmw"},"content":"     * @param placeList new placeList object of the trip"},{"lineNumber":152,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"ivanderjmw"},"content":"    public void setPlaceList(PlaceList placeList) {"},{"lineNumber":154,"author":{"gitId":"ivanderjmw"},"content":"        this.placeList \u003d placeList;"},{"lineNumber":155,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":157,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"ivanderjmw"},"content":"     * Updates maxDay of the trip based on the current placeList and expenseList."},{"lineNumber":159,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"ivanderjmw"},"content":"    public void updateMaxDay() {"},{"lineNumber":161,"author":{"gitId":"ivanderjmw"},"content":"        maxDay \u003d Integer.max(placeList.getMaxDay(), expenseList.getMaxDay());"},{"lineNumber":162,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":164,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"ivanderjmw"},"content":"     * Summarizes the trip into a string, with index, name, and startDate."},{"lineNumber":166,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":167,"author":{"gitId":"ivanderjmw"},"content":"     * @return a single line String"},{"lineNumber":168,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"ivanderjmw"},"content":"    public String toString() {"},{"lineNumber":170,"author":{"gitId":"ivanderjmw"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":171,"author":{"gitId":"ShawnTanzc"},"content":"        return index + 1 + \" \" + name + \" \" + df.format(startDate);"},{"lineNumber":172,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":174,"author":{"gitId":"ivanderjmw"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":1,"ivanderjmw":173}},{"path":"src/main/java/seedu/trippie/data/TrippieData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie.data;"},{"lineNumber":2,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.Storage;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":" * TrippieData class stores all of the user\u0027s data during runtime."},{"lineNumber":11,"author":{"gitId":"ivanderjmw"},"content":" */"},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":"public class TrippieData {"},{"lineNumber":13,"author":{"gitId":"ivanderjmw"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"    private int defaultTripIndex;"},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":"    private List\u003cTrip\u003e tripList;"},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":"    private Trip currentTrip \u003d null;"},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"     * Updates the trip indices (index) attribute contained inside tripList to match their index in the List."},{"lineNumber":20,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"ivanderjmw"},"content":"    private void updateTripIndices() {"},{"lineNumber":22,"author":{"gitId":"ivanderjmw"},"content":"        for (Trip t: tripList) {"},{"lineNumber":23,"author":{"gitId":"ivanderjmw"},"content":"            t.setIndex(tripList.indexOf(t));"},{"lineNumber":24,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":27,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"ivanderjmw"},"content":"     * Creates a new TrippieData object with an empty tripList."},{"lineNumber":29,"author":{"gitId":"ivanderjmw"},"content":"     * @param storage the storage object to be associated with this object."},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"ivanderjmw"},"content":"    public TrippieData(Storage storage) {"},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"        this.tripList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":"        this.storage \u003d storage;"},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":"     * Returns tripList."},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":"     * @return tripList A list of trips that the user has."},{"lineNumber":39,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"ivanderjmw"},"content":"    public List\u003cTrip\u003e getTripList() {"},{"lineNumber":41,"author":{"gitId":"ivanderjmw"},"content":"        return tripList;"},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":"     * Checks whether tripList is empty."},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":"     * @return true if tripList is empty."},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"    public boolean isTripListEmpty() {"},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"        return tripList.isEmpty();"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":"     * Adds a trip to tripList."},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":"     * @param trip a trip to be added. The index of inputted trip does not matter."},{"lineNumber":55,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":"    public void addTrip(Trip trip) {"},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":"        tripList.add(trip);"},{"lineNumber":58,"author":{"gitId":"ivanderjmw"},"content":"        updateTripIndices();"},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":61,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"ivanderjmw"},"content":"     * Retrieves the trip object with a specified index."},{"lineNumber":63,"author":{"gitId":"ivanderjmw"},"content":"     * @param index (0...N-1), where N is the number of trips inside tripList."},{"lineNumber":64,"author":{"gitId":"ivanderjmw"},"content":"     * @return trip object associated with the index."},{"lineNumber":65,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"ivanderjmw"},"content":"    public Trip getTripFromIndex(int index) {"},{"lineNumber":67,"author":{"gitId":"ivanderjmw"},"content":"        return tripList.get(index);"},{"lineNumber":68,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":70,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"ivanderjmw"},"content":"     * Removes the trip file associated with the specified trip name."},{"lineNumber":72,"author":{"gitId":"ivanderjmw"},"content":"     * The trip file will be removed permanently."},{"lineNumber":73,"author":{"gitId":"ivanderjmw"},"content":"     * The trip object is retained in tripList."},{"lineNumber":74,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"ivanderjmw"},"content":"     * @param name the trip name to be removed."},{"lineNumber":76,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"ivanderjmw"},"content":"    public void removeTripFile(String name) {"},{"lineNumber":78,"author":{"gitId":"ivanderjmw"},"content":"        storage.deleteTripFile(name);"},{"lineNumber":79,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":81,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"ivanderjmw"},"content":"     * Removes the trip and its trip file with the specified trip index."},{"lineNumber":83,"author":{"gitId":"ivanderjmw"},"content":"     * The trip file will be removed permanently."},{"lineNumber":84,"author":{"gitId":"ivanderjmw"},"content":"     * The trip object is removed from tripList."},{"lineNumber":85,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"ivanderjmw"},"content":"     * @param index index of the trip"},{"lineNumber":87,"author":{"gitId":"ivanderjmw"},"content":"     * @return the removed trip"},{"lineNumber":88,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"ivanderjmw"},"content":"    public Trip removeTripFromIndex(int index) {"},{"lineNumber":90,"author":{"gitId":"ivanderjmw"},"content":"        Trip t \u003d tripList.remove(index);"},{"lineNumber":91,"author":{"gitId":"ivanderjmw"},"content":"        storage.deleteTripFile(t.getName());"},{"lineNumber":92,"author":{"gitId":"ivanderjmw"},"content":"        updateTripIndices();"},{"lineNumber":93,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":94,"author":{"gitId":"ivanderjmw"},"content":"        if (this.getTripListSize() \u003e 0) {"},{"lineNumber":95,"author":{"gitId":"ivanderjmw"},"content":"            this.setCurrentTripFromIndex(this.getTripListSize() - 1);"},{"lineNumber":96,"author":{"gitId":"ivanderjmw"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"ivanderjmw"},"content":"            this.setCurrentTripFromIndex(-1);"},{"lineNumber":98,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":100,"author":{"gitId":"ivanderjmw"},"content":"        return t;"},{"lineNumber":101,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":103,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"ivanderjmw"},"content":"     * Gets the size of tripList."},{"lineNumber":105,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"ivanderjmw"},"content":"     * @return N, number of trips inside tripList."},{"lineNumber":107,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"ivanderjmw"},"content":"    public int getTripListSize() {"},{"lineNumber":109,"author":{"gitId":"ivanderjmw"},"content":"        return tripList.size();"},{"lineNumber":110,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":112,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"ivanderjmw"},"content":"     * Gets the current trip, checks the default trip if current trip has not been set yet."},{"lineNumber":114,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"ivanderjmw"},"content":"     * @return the current trip object."},{"lineNumber":116,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"ivanderjmw"},"content":"    public Trip getCurrentTrip() {"},{"lineNumber":118,"author":{"gitId":"ivanderjmw"},"content":"        if (this.currentTrip \u003d\u003d null) {"},{"lineNumber":119,"author":{"gitId":"ivanderjmw"},"content":"            try {"},{"lineNumber":120,"author":{"gitId":"ivanderjmw"},"content":"                this.currentTrip \u003d tripList.get(this.defaultTripIndex);"},{"lineNumber":121,"author":{"gitId":"ivanderjmw"},"content":"            } catch (IndexOutOfBoundsException | NullPointerException p) {"},{"lineNumber":122,"author":{"gitId":"ivanderjmw"},"content":"                return null;"},{"lineNumber":123,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"ivanderjmw"},"content":"        return this.currentTrip;"},{"lineNumber":126,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":128,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"ivanderjmw"},"content":"     * Sets the tripList based on an external List of Trips."},{"lineNumber":130,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":131,"author":{"gitId":"ivanderjmw"},"content":"     * @param tripList the new tripList value to replace the curreent one."},{"lineNumber":132,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"ivanderjmw"},"content":"    public void setTripList(List\u003cTrip\u003e tripList) {"},{"lineNumber":134,"author":{"gitId":"ivanderjmw"},"content":"        this.tripList \u003d new ArrayList\u003c\u003e(tripList);"},{"lineNumber":135,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":137,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"ivanderjmw"},"content":"     * set the default trip index to a specified index."},{"lineNumber":139,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"ivanderjmw"},"content":"     * @param index The new default trip index."},{"lineNumber":141,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"ivanderjmw"},"content":"    public void setDefaultTripIndex(int index) {"},{"lineNumber":143,"author":{"gitId":"ivanderjmw"},"content":"        this.defaultTripIndex \u003d index;"},{"lineNumber":144,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":146,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"ivanderjmw"},"content":"     * Sets the current trip index to the specified trip index."},{"lineNumber":148,"author":{"gitId":"ivanderjmw"},"content":"     * If index given is -1, then set current trip to null."},{"lineNumber":149,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":150,"author":{"gitId":"ivanderjmw"},"content":"     * @param index specified trip index to point to."},{"lineNumber":151,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"ivanderjmw"},"content":"    public void setCurrentTripFromIndex(int index) {"},{"lineNumber":153,"author":{"gitId":"ivanderjmw"},"content":"        if (index \u003d\u003d -1) {"},{"lineNumber":154,"author":{"gitId":"ivanderjmw"},"content":"            this.currentTrip \u003d null;"},{"lineNumber":155,"author":{"gitId":"ivanderjmw"},"content":"        } else {"},{"lineNumber":156,"author":{"gitId":"ivanderjmw"},"content":"            this.currentTrip \u003d this.tripList.get(index);"},{"lineNumber":157,"author":{"gitId":"ivanderjmw"},"content":"            System.out.println(\"Current trip is set to \u0027\" + this.currentTrip.getName() + \"\u0027.\");"},{"lineNumber":158,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":161,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":162,"author":{"gitId":"ivanderjmw"},"content":"     * Checks if an existing trip has exactly the same name with that of specified."},{"lineNumber":163,"author":{"gitId":"ivanderjmw"},"content":"     *"},{"lineNumber":164,"author":{"gitId":"ivanderjmw"},"content":"     * @param name The name to be checked."},{"lineNumber":165,"author":{"gitId":"ivanderjmw"},"content":"     * @return true if a trip exists with the specified name, else false."},{"lineNumber":166,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"ivanderjmw"},"content":"    public boolean doesTripNameExist(String name) {"},{"lineNumber":168,"author":{"gitId":"ivanderjmw"},"content":"        // Implemented with reference to"},{"lineNumber":169,"author":{"gitId":"ivanderjmw"},"content":"        // https://www.rgagnon.com/javadetails/java-check-if-a-filename-is-valid.html"},{"lineNumber":170,"author":{"gitId":"ivanderjmw"},"content":"        for (Trip trip: tripList) {"},{"lineNumber":171,"author":{"gitId":"ivanderjmw"},"content":"            if (trip.getName().equals(name)) {"},{"lineNumber":172,"author":{"gitId":"ivanderjmw"},"content":"                return true;"},{"lineNumber":173,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":174,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"ivanderjmw"},"content":"        return false;"},{"lineNumber":176,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":178,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":179,"author":{"gitId":"ivanderjmw"},"content":"     * Loads the currentTrip from storage files, provided it is not out of bounds."},{"lineNumber":180,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"ivanderjmw"},"content":"    public void loadCurrentTripFromFile() {"},{"lineNumber":182,"author":{"gitId":"ivanderjmw"},"content":"        if (currentTrip.getIndex() \u003c this.getTripListSize()) {"},{"lineNumber":183,"author":{"gitId":"ivanderjmw"},"content":"            Trip tempTrip \u003d storage.loadTripFromFile(currentTrip);"},{"lineNumber":184,"author":{"gitId":"ivanderjmw"},"content":"            assert tempTrip !\u003d null;"},{"lineNumber":185,"author":{"gitId":"ivanderjmw"},"content":"            currentTrip.setPlaceList(tempTrip.getPlaceListObject());"},{"lineNumber":186,"author":{"gitId":"ivanderjmw"},"content":"            currentTrip.setExpenseList(tempTrip.getExpenseListObject());"},{"lineNumber":187,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":190,"author":{"gitId":"ivanderjmw"},"content":"    /**"},{"lineNumber":191,"author":{"gitId":"ivanderjmw"},"content":"     * Lists all of the trips the user has."},{"lineNumber":192,"author":{"gitId":"ivanderjmw"},"content":"     * @return A multiline string of all trips."},{"lineNumber":193,"author":{"gitId":"ivanderjmw"},"content":"     */"},{"lineNumber":194,"author":{"gitId":"ivanderjmw"},"content":"    public String list() {"},{"lineNumber":195,"author":{"gitId":"ivanderjmw"},"content":"        String list \u003d \"\";"},{"lineNumber":196,"author":{"gitId":"ivanderjmw"},"content":"        for (Trip trip : tripList) {"},{"lineNumber":197,"author":{"gitId":"ivanderjmw"},"content":"            assert trip !\u003d null;"},{"lineNumber":198,"author":{"gitId":"ivanderjmw"},"content":"            int maxDay \u003d trip.getMaxDay();"},{"lineNumber":199,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":200,"author":{"gitId":"ivanderjmw"},"content":"            if (maxDay \u003d\u003d 0) {"},{"lineNumber":201,"author":{"gitId":"ivanderjmw"},"content":"                list \u003d list.concat("},{"lineNumber":202,"author":{"gitId":"ivanderjmw"},"content":"                        (trip.getIndex() + 1) + \". \" + trip.getName() + \" \" + \"[No places or expenses added yet]\" + \"\\n\""},{"lineNumber":203,"author":{"gitId":"ivanderjmw"},"content":"                );"},{"lineNumber":204,"author":{"gitId":"ivanderjmw"},"content":"            } else {"},{"lineNumber":205,"author":{"gitId":"ivanderjmw"},"content":"                boolean plural \u003d maxDay !\u003d 1;"},{"lineNumber":206,"author":{"gitId":"ivanderjmw"},"content":"                String dayWord \u003d plural ? \"Days\" : \"Day\";"},{"lineNumber":207,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":208,"author":{"gitId":"ivanderjmw"},"content":"                list \u003d list.concat("},{"lineNumber":209,"author":{"gitId":"ivanderjmw"},"content":"                        (trip.getIndex() + 1) + \". \" + trip.getName() + \" [\" + trip.getMaxDay() + \" \" + dayWord + \"]\\n\""},{"lineNumber":210,"author":{"gitId":"ivanderjmw"},"content":"                );"},{"lineNumber":211,"author":{"gitId":"ivanderjmw"},"content":"            }"},{"lineNumber":212,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":214,"author":{"gitId":"ivanderjmw"},"content":"        return list;"},{"lineNumber":215,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"ivanderjmw"},"content":"}"}],"authorContributionMap":{"ivanderjmw":216}},{"path":"src/main/java/seedu/trippie/exception/TrippieExceedBudgetException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShawnTanzc"},"content":"package seedu.trippie.exception;"},{"lineNumber":2,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"public class TrippieExceedBudgetException extends TrippieException {"},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":"    public TrippieExceedBudgetException(String message) {"},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":8}},{"path":"src/main/java/seedu/trippie/exception/TrippieException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weishuangtan"},"content":"package seedu.trippie.exception;"},{"lineNumber":2,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":3,"author":{"gitId":"weishuangtan"},"content":"public class TrippieException extends Exception {"},{"lineNumber":4,"author":{"gitId":"weishuangtan"},"content":"    public String message;"},{"lineNumber":5,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":6,"author":{"gitId":"weishuangtan"},"content":"    public TrippieException(String message) {"},{"lineNumber":7,"author":{"gitId":"weishuangtan"},"content":"        this.message \u003d message;"},{"lineNumber":8,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":10,"author":{"gitId":"weishuangtan"},"content":"    public String getMessage() {"},{"lineNumber":11,"author":{"gitId":"weishuangtan"},"content":"        return message;"},{"lineNumber":12,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"weishuangtan"},"content":"}"}],"authorContributionMap":{"weishuangtan":13}},{"path":"src/main/java/seedu/trippie/exception/TrippieIllegalCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weishuangtan"},"content":"package seedu.trippie.exception;"},{"lineNumber":2,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":3,"author":{"gitId":"weishuangtan"},"content":"public class TrippieIllegalCommandException extends TrippieException {"},{"lineNumber":4,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":5,"author":{"gitId":"weishuangtan"},"content":"    public TrippieIllegalCommandException(String message) {"},{"lineNumber":6,"author":{"gitId":"weishuangtan"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"weishuangtan"},"content":"}"}],"authorContributionMap":{"weishuangtan":8}},{"path":"src/main/java/seedu/trippie/exception/TrippieInvalidArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weishuangtan"},"content":"package seedu.trippie.exception;"},{"lineNumber":2,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":3,"author":{"gitId":"weishuangtan"},"content":"public class TrippieInvalidArgumentException extends TrippieException {"},{"lineNumber":4,"author":{"gitId":"weishuangtan"},"content":"    public TrippieInvalidArgumentException(String message) {"},{"lineNumber":5,"author":{"gitId":"weishuangtan"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"weishuangtan"},"content":"}"}],"authorContributionMap":{"weishuangtan":7}},{"path":"src/test/java/seedu/trippie/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weishuangtan"},"content":"package seedu.trippie;"},{"lineNumber":2,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":3,"author":{"gitId":"weishuangtan"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"weishuangtan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.command.AddExpenseCommand;"},{"lineNumber":6,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.command.AddPlaceCommand;"},{"lineNumber":7,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.command.BudgetCommand;"},{"lineNumber":8,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.command.CalculateCurrencyCommand;"},{"lineNumber":9,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.command.Command;"},{"lineNumber":10,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.command.DeleteExpenseCommand;"},{"lineNumber":11,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.command.DeletePlaceCommand;"},{"lineNumber":12,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.command.ExitCommand;"},{"lineNumber":13,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.command.HelpCommand;"},{"lineNumber":14,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.command.ListExpenseCommand;"},{"lineNumber":15,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.command.ListPlacesCommand;"},{"lineNumber":16,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.command.LoadTripCommand;"},{"lineNumber":17,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.command.NewTripCommand;"},{"lineNumber":18,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.command.SearchCommand;"},{"lineNumber":19,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":20,"author":{"gitId":"weishuangtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":21,"author":{"gitId":"weishuangtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":22,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":23,"author":{"gitId":"weishuangtan"},"content":"class ParserTest {"},{"lineNumber":24,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":25,"author":{"gitId":"weishuangtan"},"content":"    private Parser parser;"},{"lineNumber":26,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":27,"author":{"gitId":"weishuangtan"},"content":"    @BeforeEach"},{"lineNumber":28,"author":{"gitId":"weishuangtan"},"content":"    public void setUp() {"},{"lineNumber":29,"author":{"gitId":"weishuangtan"},"content":"        parser \u003d new Parser();"},{"lineNumber":30,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":32,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":33,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"weishuangtan"},"content":"    public void parse_exitCommand_parsedCorrectly() {"},{"lineNumber":35,"author":{"gitId":"weishuangtan"},"content":"        final String input \u003d \"exit\";"},{"lineNumber":36,"author":{"gitId":"weishuangtan"},"content":"        parseAndAssertCommandType(input, ExitCommand.class);"},{"lineNumber":37,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":39,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":"    public void parse_buyCommand_parsedCorrectly() {"},{"lineNumber":41,"author":{"gitId":"tengkianen"},"content":"        final String input \u003d \"buy /n ice-cream /d 2 /c 3.00\";"},{"lineNumber":42,"author":{"gitId":"weishuangtan"},"content":"        parseAndAssertCommandType(input, AddExpenseCommand.class);"},{"lineNumber":43,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":45,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"ShawnTanzc"},"content":"    public void parse_deleteExpenseCommand_parsedCorrectly() {"},{"lineNumber":47,"author":{"gitId":"weishuangtan"},"content":"        final String input \u003d \"delete /e 2\";"},{"lineNumber":48,"author":{"gitId":"ShawnTanzc"},"content":"        parseAndAssertCommandType(input, DeleteExpenseCommand.class);"},{"lineNumber":49,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":51,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"weishuangtan"},"content":"    public void parse_listExpensesCommand_parsedCorrectly() {"},{"lineNumber":53,"author":{"gitId":"weishuangtan"},"content":"        final String input \u003d \"list /e\";"},{"lineNumber":54,"author":{"gitId":"weishuangtan"},"content":"        parseAndAssertCommandType(input, ListExpenseCommand.class);"},{"lineNumber":55,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":57,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":58,"author":{"gitId":"weishuangtan"},"content":"    public void parse_budgetCommand_parsedCorrectly() {"},{"lineNumber":59,"author":{"gitId":"weishuangtan"},"content":"        final String input \u003d \"budget 1000\";"},{"lineNumber":60,"author":{"gitId":"weishuangtan"},"content":"        parseAndAssertCommandType(input, BudgetCommand.class);"},{"lineNumber":61,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":63,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"weishuangtan"},"content":"    public void parse_calculateCurrencyCommand_parsedCorrectly() {"},{"lineNumber":65,"author":{"gitId":"weishuangtan"},"content":"        final String input \u003d \"convert /toFOR 500\";"},{"lineNumber":66,"author":{"gitId":"weishuangtan"},"content":"        parseAndAssertCommandType(input, CalculateCurrencyCommand.class);"},{"lineNumber":67,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":69,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":70,"author":{"gitId":"weishuangtan"},"content":"    public void parse_addPlaceCommand_parsedCorrectly() {"},{"lineNumber":71,"author":{"gitId":"weishuangtan"},"content":"        final String input \u003d \"add /n Dinner at Marina Bay Sands /d 2 /t 1800 to 2000\";"},{"lineNumber":72,"author":{"gitId":"weishuangtan"},"content":"        parseAndAssertCommandType(input, AddPlaceCommand.class);"},{"lineNumber":73,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":75,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"weishuangtan"},"content":"    public void parse_deletePlaceCommand_parsedCorrectly() {"},{"lineNumber":77,"author":{"gitId":"weishuangtan"},"content":"        final String input \u003d \"delete /p 2\";"},{"lineNumber":78,"author":{"gitId":"weishuangtan"},"content":"        parseAndAssertCommandType(input, DeletePlaceCommand.class);"},{"lineNumber":79,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":81,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":82,"author":{"gitId":"weishuangtan"},"content":"    public void parse_helpCommand_parsedCorrectly() {"},{"lineNumber":83,"author":{"gitId":"weishuangtan"},"content":"        final String input \u003d \"help\";"},{"lineNumber":84,"author":{"gitId":"weishuangtan"},"content":"        parseAndAssertCommandType(input, HelpCommand.class);"},{"lineNumber":85,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":87,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":88,"author":{"gitId":"weishuangtan"},"content":"    public void parse_listPlacesCommand_parsedCorrectly() {"},{"lineNumber":89,"author":{"gitId":"weishuangtan"},"content":"        final String input \u003d \"list /p\";"},{"lineNumber":90,"author":{"gitId":"weishuangtan"},"content":"        parseAndAssertCommandType(input, ListPlacesCommand.class);"},{"lineNumber":91,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":93,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":94,"author":{"gitId":"weishuangtan"},"content":"    public void parse_searchCommand_parsedCorrectly() {"},{"lineNumber":95,"author":{"gitId":"weishuangtan"},"content":"        final String input \u003d \"search Marina\";"},{"lineNumber":96,"author":{"gitId":"weishuangtan"},"content":"        parseAndAssertCommandType(input, SearchCommand.class);"},{"lineNumber":97,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":99,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":100,"author":{"gitId":"weishuangtan"},"content":"    public void parse_newTripCommand_parsedCorrectly() {"},{"lineNumber":101,"author":{"gitId":"weishuangtan"},"content":"        final String input \u003d \"new trip\";"},{"lineNumber":102,"author":{"gitId":"weishuangtan"},"content":"        parseAndAssertCommandType(input, NewTripCommand.class);"},{"lineNumber":103,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":105,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":106,"author":{"gitId":"weishuangtan"},"content":"    public void parse_loadTripCommand_parsedCorrectly() {"},{"lineNumber":107,"author":{"gitId":"weishuangtan"},"content":"        final String input \u003d \"load trip\";"},{"lineNumber":108,"author":{"gitId":"weishuangtan"},"content":"        parseAndAssertCommandType(input, LoadTripCommand.class);"},{"lineNumber":109,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":111,"author":{"gitId":"weishuangtan"},"content":"    private \u003cT extends Command\u003e T parseAndAssertCommandType(String userInput, Class\u003cT\u003e expectedCommandClass) {"},{"lineNumber":112,"author":{"gitId":"weishuangtan"},"content":"        Command result \u003d parser.parse(userInput);"},{"lineNumber":113,"author":{"gitId":"weishuangtan"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));"},{"lineNumber":114,"author":{"gitId":"weishuangtan"},"content":"        if (expectedCommandClass !\u003d ExitCommand.class) {"},{"lineNumber":115,"author":{"gitId":"weishuangtan"},"content":"            assertFalse(result.isExit());"},{"lineNumber":116,"author":{"gitId":"weishuangtan"},"content":"        } else {"},{"lineNumber":117,"author":{"gitId":"weishuangtan"},"content":"            assertTrue(result.isExit());"},{"lineNumber":118,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"weishuangtan"},"content":"        return (T) result;"},{"lineNumber":120,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"weishuangtan"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":3,"tengkianen":1,"weishuangtan":117}},{"path":"src/test/java/seedu/trippie/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie;"},{"lineNumber":2,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.Place;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":11,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":"import java.text.ParseException;"},{"lineNumber":13,"author":{"gitId":"ivanderjmw"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"import java.util.Date;"},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"class StorageTest {"},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"    private Scanner createSampleMasterFile() {"},{"lineNumber":20,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":21,"author":{"gitId":"ivanderjmw"},"content":"        String sampleMasterFileText \u003d \"DEFAULT 6\\n\""},{"lineNumber":22,"author":{"gitId":"ivanderjmw"},"content":"               + \"0,Chigago run,01-01-2021,1\\n\""},{"lineNumber":23,"author":{"gitId":"ivanderjmw"},"content":"               + \"1,Jakarta Fest,01-02-2021,2\\n\""},{"lineNumber":24,"author":{"gitId":"ivanderjmw"},"content":"               + \"2,Malaysia,20-08-2021,3\\n\""},{"lineNumber":25,"author":{"gitId":"ivanderjmw"},"content":"               + \"3,Malaysia,20-02-2020,4\\n\""},{"lineNumber":26,"author":{"gitId":"ivanderjmw"},"content":"               + \"4,Australia,20-12-2020,5\\n\""},{"lineNumber":27,"author":{"gitId":"ivanderjmw"},"content":"               + \"5,America,20-11-2020,6\\n\""},{"lineNumber":28,"author":{"gitId":"ivanderjmw"},"content":"               + \"6,Africa,04-03-2021,7\\n\";"},{"lineNumber":29,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"        return new Scanner(sampleMasterFileText);"},{"lineNumber":31,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":"    private Scanner createSampleTripFile() {"},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":"        String sampleTripFileText \u003d \"This file shows your saved trips under Trippie!\\n\""},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":"                + \"\\n\""},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":"                + \"Here is your itinerary! Enjoy your trip :)\\n\""},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":"                + \"Day | Start Time | End Time | Place\\n\""},{"lineNumber":39,"author":{"gitId":"ivanderjmw"},"content":"                + \"2 | 0900 | 1000 | Penang\\n\""},{"lineNumber":40,"author":{"gitId":"ivanderjmw"},"content":"                + \"\\n\""},{"lineNumber":41,"author":{"gitId":"ivanderjmw"},"content":"                + \"There is currently nothing in your Expense list.\\n\""},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":"                + \"Total budget: $8000.00\\n\""},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":"                + \"\\n\""},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":"                + \"Forex Abbreviation: MYR\\n\""},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":"                + \"\\n\""},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":"                + \"Forex Rate: 0.33\";"},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"        return new Scanner(sampleTripFileText);"},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":"    public void loadMasterFile_sampleMasterFile_success() throws TrippieException {"},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":"        Scanner sc \u003d createSampleMasterFile();"},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":55,"author":{"gitId":"ivanderjmw"},"content":"        TrippieData data \u003d new TrippieData(storage);"},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":"        storage.loadMasterFile(sc, data);"},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":58,"author":{"gitId":"ivanderjmw"},"content":"        String expectedTripListString \u003d \"1. Chigago run [1 Day]\\n\""},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":"                + \"2. Jakarta Fest [2 Days]\\n\""},{"lineNumber":60,"author":{"gitId":"ivanderjmw"},"content":"                + \"3. Malaysia [3 Days]\\n\""},{"lineNumber":61,"author":{"gitId":"ivanderjmw"},"content":"                + \"4. Malaysia [4 Days]\\n\""},{"lineNumber":62,"author":{"gitId":"ivanderjmw"},"content":"                + \"5. Australia [5 Days]\\n\""},{"lineNumber":63,"author":{"gitId":"ivanderjmw"},"content":"                + \"6. America [6 Days]\\n\""},{"lineNumber":64,"author":{"gitId":"ivanderjmw"},"content":"                + \"7. Africa [7 Days]\\n\";"},{"lineNumber":65,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":66,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(expectedTripListString, data.list());"},{"lineNumber":67,"author":{"gitId":"ShawnTanzc"},"content":"        assertEquals(\"7 Africa 04-03-2021\", data.getCurrentTrip().toString());"},{"lineNumber":68,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(\"Malaysia\", data.getTripList().get(3).getName());"},{"lineNumber":69,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":71,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":72,"author":{"gitId":"ivanderjmw"},"content":"    public void loadTripFile_sampleTripFile_success() throws ParseException, TrippieException {"},{"lineNumber":73,"author":{"gitId":"ivanderjmw"},"content":"        Scanner sc \u003d createSampleTripFile();"},{"lineNumber":74,"author":{"gitId":"ivanderjmw"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":75,"author":{"gitId":"ivanderjmw"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":76,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":77,"author":{"gitId":"ivanderjmw"},"content":"        Date date \u003d df.parse(\"02-03-2030\");"},{"lineNumber":78,"author":{"gitId":"ivanderjmw"},"content":"        Trip trip \u003d storage.loadTrip(createSampleTripFile(), new Trip(1, \"Malaysia Trip\", date));"},{"lineNumber":79,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":80,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":81,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(trip.getName(), \"Malaysia Trip\");"},{"lineNumber":82,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(trip.getIndex(), 1);"},{"lineNumber":83,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(trip.getStartDate(), df.parse(\"02-03-2030\"));"},{"lineNumber":84,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":85,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(trip.getPlaceListObject().getPlaceList().size(), 1);"},{"lineNumber":86,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(trip.getPlaceListObject().getPlaceList().get(0).getPlaceName(), \"Penang\");"},{"lineNumber":87,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(trip.getExpenseListObject().getBudgetValue(), 8000.00, 0.002);"},{"lineNumber":88,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(trip.getExpenseListObject().getCurrencyAbbreviation(), \"MYR\");"},{"lineNumber":89,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(trip.getExpenseListObject().getForExValue(), 0.33, 0.002);"},{"lineNumber":90,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"ivanderjmw"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":1,"ivanderjmw":90}},{"path":"src/test/java/seedu/trippie/command/AddExpenseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weishuangtan"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":3,"author":{"gitId":"weishuangtan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.Storage;"},{"lineNumber":5,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.Ui;"},{"lineNumber":6,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.data.Expense;"},{"lineNumber":7,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":8,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":10,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":11,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":12,"author":{"gitId":"weishuangtan"},"content":"import java.text.ParseException;"},{"lineNumber":13,"author":{"gitId":"weishuangtan"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":14,"author":{"gitId":"weishuangtan"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":16,"author":{"gitId":"weishuangtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":17,"author":{"gitId":"weishuangtan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":18,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":19,"author":{"gitId":"weishuangtan"},"content":"class AddExpenseCommandTest {"},{"lineNumber":20,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":21,"author":{"gitId":"tengkianen"},"content":"    private final String[] validUserInputs \u003d {\"buy /n ice-cream /d 2 /c 3.00\", \"buy /n chicken rice /d 1 /c 5.00\","},{"lineNumber":22,"author":{"gitId":"tengkianen"},"content":"        \"buy /n pants /d 3 /c $30.00\"};"},{"lineNumber":23,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":"    private final String[] badUserInputs \u003d {\"buy /n /d /c\", \"buy /n ice-cream /d 2 /c three dollars\","},{"lineNumber":25,"author":{"gitId":"tengkianen"},"content":"        \"buy /n ice-cream /d two /c 3.00\", \"buy /n ice-cream /d /c\", \"buy /n /d 2 /c\","},{"lineNumber":26,"author":{"gitId":"tengkianen"},"content":"        \"buys /n ice-cream /d 2 /c 3.00\"};"},{"lineNumber":27,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":28,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"weishuangtan"},"content":"    void addExpenseCommand_invalidUserInput_throwsTrippieInvalidArgumentException() {"},{"lineNumber":30,"author":{"gitId":"weishuangtan"},"content":"        for (String badUserInput : badUserInputs) {"},{"lineNumber":31,"author":{"gitId":"weishuangtan"},"content":"            assertThrows(TrippieInvalidArgumentException.class, () -\u003e new AddExpenseCommand(badUserInput));"},{"lineNumber":32,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":35,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"weishuangtan"},"content":"    void addExpenseCommand_validUserInput_setsExpenseParameters() throws TrippieInvalidArgumentException {"},{"lineNumber":37,"author":{"gitId":"weishuangtan"},"content":"        String[] expenseNames \u003d {\"ice-cream\", \"chicken rice\", \"pants\"};"},{"lineNumber":38,"author":{"gitId":"weishuangtan"},"content":"        Float[] expenseCosts  \u003d {Float.parseFloat(\"3.00\"), Float.parseFloat(\"5.00\"),"},{"lineNumber":39,"author":{"gitId":"weishuangtan"},"content":"                Float.parseFloat(\"30.00\"),};"},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":"        int[] expenseDays \u003d {2,1,3};"},{"lineNumber":41,"author":{"gitId":"weishuangtan"},"content":"        for (int i \u003d 0; i \u003c validUserInputs.length; i++) {"},{"lineNumber":42,"author":{"gitId":"weishuangtan"},"content":"            AddExpenseCommand c \u003d new AddExpenseCommand(validUserInputs[i]);"},{"lineNumber":43,"author":{"gitId":"weishuangtan"},"content":"            assertEquals(expenseNames[i], c.extractExpenseName(validUserInputs[i]));"},{"lineNumber":44,"author":{"gitId":"weishuangtan"},"content":"            assertEquals(expenseCosts[i], c.extractExpenseCost(validUserInputs[i]));"},{"lineNumber":45,"author":{"gitId":"weishuangtan"},"content":"            assertEquals(expenseDays[i], c.extractDayBought(validUserInputs[i]));"},{"lineNumber":46,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":49,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"    void addExpenseCommand_validUserInput_parsedCorrectly() throws ParseException, TrippieException {"},{"lineNumber":51,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":52,"author":{"gitId":"weishuangtan"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":53,"author":{"gitId":"weishuangtan"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":54,"author":{"gitId":"weishuangtan"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":55,"author":{"gitId":"weishuangtan"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":56,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":57,"author":{"gitId":"weishuangtan"},"content":"        for (String validUserInput : validUserInputs) {"},{"lineNumber":58,"author":{"gitId":"weishuangtan"},"content":"            AddExpenseCommand c \u003d new AddExpenseCommand(validUserInput);"},{"lineNumber":59,"author":{"gitId":"weishuangtan"},"content":"            c.execute(ui,trippieData);"},{"lineNumber":60,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":62,"author":{"gitId":"weishuangtan"},"content":"        List\u003cExpense\u003e expenses \u003d trippieData.getCurrentTrip().getExpenseListObject().getExpenseList();"},{"lineNumber":63,"author":{"gitId":"weishuangtan"},"content":"        assertEquals(3,expenses.size());"},{"lineNumber":64,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":65,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":67,"author":{"gitId":"ivanderjmw"},"content":"    private void fileSetup(Storage storage, TrippieData trippieData) throws ParseException, TrippieException {"},{"lineNumber":68,"author":{"gitId":"weishuangtan"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":69,"author":{"gitId":"weishuangtan"},"content":"        Trip newTrip \u003d new Trip(trippieData.getTripList().size(), \"Singapore\", df.parse(\"11-11-2020\"));"},{"lineNumber":70,"author":{"gitId":"weishuangtan"},"content":"        newTrip.getExpenseListObject().setForExValue(Float.parseFloat(\"100\"));"},{"lineNumber":71,"author":{"gitId":"weishuangtan"},"content":"        newTrip.getExpenseListObject().setCurrencyAbbreviation(\"SGD\");"},{"lineNumber":72,"author":{"gitId":"weishuangtan"},"content":"        newTrip.getExpenseListObject().setBudgetValue(Float.parseFloat(\"1000\"));"},{"lineNumber":73,"author":{"gitId":"ShawnTanzc"},"content":"        int index \u003d trippieData.getTripList().size();"},{"lineNumber":74,"author":{"gitId":"weishuangtan"},"content":"        trippieData.getTripList().add(newTrip);"},{"lineNumber":75,"author":{"gitId":"ShawnTanzc"},"content":"        trippieData.setCurrentTripFromIndex(index);"},{"lineNumber":76,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":78,"author":{"gitId":"weishuangtan"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":4,"tengkianen":5,"ivanderjmw":3,"weishuangtan":66}},{"path":"src/test/java/seedu/trippie/command/AddPlaceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"felixhalim"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":3,"author":{"gitId":"felixhalim"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":5,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":6,"author":{"gitId":"felixhalim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"felixhalim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":8,"author":{"gitId":"felixhalim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":9,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":10,"author":{"gitId":"felixhalim"},"content":"class AddPlaceCommandTest {"},{"lineNumber":11,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":12,"author":{"gitId":"felixhalim"},"content":"    private final String[] goodUserInputs \u003d {"},{"lineNumber":13,"author":{"gitId":"felixhalim"},"content":"        \"add /n Marina Bay Sands /d 2 /t 1000 to 1200\","},{"lineNumber":14,"author":{"gitId":"felixhalim"},"content":"        \"add /n Changi Airport /d 1 /t 1900 to 2000\","},{"lineNumber":15,"author":{"gitId":"felixhalim"},"content":"        \"add /n Bugis Junction /d 3 /t 1100 to 1400\""},{"lineNumber":16,"author":{"gitId":"felixhalim"},"content":"    };"},{"lineNumber":17,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":18,"author":{"gitId":"felixhalim"},"content":"    private final String[] badUserInputs \u003d {"},{"lineNumber":19,"author":{"gitId":"felixhalim"},"content":"        \"add /n Marina Bay Sands /d 2 /t 1300 to 1200\","},{"lineNumber":20,"author":{"gitId":"felixhalim"},"content":"        \"add /n Changi Airport /d one /t 1900 to 2000\","},{"lineNumber":21,"author":{"gitId":"felixhalim"},"content":"        \"add /n Bugis /d 1 /t 2100 to 2000\","},{"lineNumber":22,"author":{"gitId":"felixhalim"},"content":"        \"add /n Clementi /d 4 /t 9999 to 0100\","},{"lineNumber":23,"author":{"gitId":"felixhalim"},"content":"        \"addx /n Haw Par Villa /d 3 /t 0100 to 0500\","},{"lineNumber":24,"author":{"gitId":"felixhalim"},"content":"        \"add /n Apple Park /d 3 /t 1300 1200\","},{"lineNumber":25,"author":{"gitId":"felixhalim"},"content":"        \"add /n\""},{"lineNumber":26,"author":{"gitId":"felixhalim"},"content":"    };"},{"lineNumber":27,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":28,"author":{"gitId":"felixhalim"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"felixhalim"},"content":"    void addPlaceCommand_validUserInput_setPlaceParameters() throws TrippieInvalidArgumentException {"},{"lineNumber":30,"author":{"gitId":"felixhalim"},"content":"        String[] placeNames \u003d {\"Marina Bay Sands\", \"Changi Airport\", \"Bugis Junction\"};"},{"lineNumber":31,"author":{"gitId":"felixhalim"},"content":"        int[] placeStartTimes \u003d {1000, 1900, 1100};"},{"lineNumber":32,"author":{"gitId":"felixhalim"},"content":"        int[] placeEndTimes \u003d {1200, 2000, 1400};"},{"lineNumber":33,"author":{"gitId":"felixhalim"},"content":"        int[] placeDays \u003d {2, 1, 3};"},{"lineNumber":34,"author":{"gitId":"felixhalim"},"content":"        for (int i \u003d 0; i \u003c goodUserInputs.length; i++) {"},{"lineNumber":35,"author":{"gitId":"felixhalim"},"content":"            AddPlaceCommand c \u003d new AddPlaceCommand(goodUserInputs[i]);"},{"lineNumber":36,"author":{"gitId":"felixhalim"},"content":"            assertEquals(placeNames[i], c.extractName(goodUserInputs[i]));"},{"lineNumber":37,"author":{"gitId":"felixhalim"},"content":"            assertEquals(placeStartTimes[i], c.extractStartTime(goodUserInputs[i]));"},{"lineNumber":38,"author":{"gitId":"felixhalim"},"content":"            assertEquals(placeEndTimes[i], c.extractEndTime(goodUserInputs[i]));"},{"lineNumber":39,"author":{"gitId":"felixhalim"},"content":"            assertEquals(placeDays[i], c.extractDay(goodUserInputs[i]));"},{"lineNumber":40,"author":{"gitId":"felixhalim"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":43,"author":{"gitId":"felixhalim"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"felixhalim"},"content":"    void addPlaceCommand_invalidUserInput_throwTrippieInvalidArgumentException() {"},{"lineNumber":45,"author":{"gitId":"felixhalim"},"content":"        for (String badUserInput : badUserInputs) {"},{"lineNumber":46,"author":{"gitId":"felixhalim"},"content":"            assertThrows(TrippieInvalidArgumentException.class, () -\u003e new AddPlaceCommand(badUserInput));"},{"lineNumber":47,"author":{"gitId":"felixhalim"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":50,"author":{"gitId":"felixhalim"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"felixhalim"},"content":"    void isExit_addPlaceCommandParsed_returnsFalse() throws TrippieInvalidArgumentException {"},{"lineNumber":52,"author":{"gitId":"felixhalim"},"content":"        String userInput \u003d \"add /n Marina Bay Sands /d 2 /t 1000 to 1200\";"},{"lineNumber":53,"author":{"gitId":"felixhalim"},"content":"        AddPlaceCommand c \u003d new AddPlaceCommand(userInput);"},{"lineNumber":54,"author":{"gitId":"felixhalim"},"content":"        assertFalse(c.isExit());"},{"lineNumber":55,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"felixhalim"},"content":"}"}],"authorContributionMap":{"felixhalim":56}},{"path":"src/test/java/seedu/trippie/command/BudgetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weishuangtan"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":3,"author":{"gitId":"weishuangtan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.Storage;"},{"lineNumber":5,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.Ui;"},{"lineNumber":6,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.data.Expense;"},{"lineNumber":7,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":8,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":10,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":11,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":12,"author":{"gitId":"weishuangtan"},"content":"import java.text.ParseException;"},{"lineNumber":13,"author":{"gitId":"weishuangtan"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":14,"author":{"gitId":"weishuangtan"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":16,"author":{"gitId":"weishuangtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":17,"author":{"gitId":"weishuangtan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":18,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":19,"author":{"gitId":"weishuangtan"},"content":"class BudgetCommandTest {"},{"lineNumber":20,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":21,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":22,"author":{"gitId":"weishuangtan"},"content":"    private final String[] badUserInputs \u003d {\"budgets 1000\", \"budget\", \"budget \", \"budget abc\"};"},{"lineNumber":23,"author":{"gitId":"weishuangtan"},"content":"    private final String[] validUserInputs \u003d {\"budget 1000\", \"budget 2000\", \"budget 3000\"};"},{"lineNumber":24,"author":{"gitId":"weishuangtan"},"content":"    private final String[] budgetValues \u003d {\"1000\", \"2000\", \"3000\"};"},{"lineNumber":25,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":26,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"weishuangtan"},"content":"    void budgetCommand_invalidUserInput_throwsTrippieInvalidArgumentException() {"},{"lineNumber":28,"author":{"gitId":"weishuangtan"},"content":"        for (String badUserInput : badUserInputs) {"},{"lineNumber":29,"author":{"gitId":"weishuangtan"},"content":"            assertThrows(TrippieInvalidArgumentException.class, () -\u003e new BudgetCommand(badUserInput));"},{"lineNumber":30,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":33,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":"    void budgetCommand_validUserInput_parsedCorrectly() throws TrippieException, ParseException {"},{"lineNumber":35,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":36,"author":{"gitId":"weishuangtan"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":37,"author":{"gitId":"weishuangtan"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":38,"author":{"gitId":"weishuangtan"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":39,"author":{"gitId":"weishuangtan"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":41,"author":{"gitId":"weishuangtan"},"content":"        for (int i \u003d 0; i \u003c validUserInputs.length; i++) {"},{"lineNumber":42,"author":{"gitId":"weishuangtan"},"content":"            BudgetCommand c \u003d new BudgetCommand(validUserInputs[i]);"},{"lineNumber":43,"author":{"gitId":"weishuangtan"},"content":"            c.execute(ui,trippieData);"},{"lineNumber":44,"author":{"gitId":"weishuangtan"},"content":"            assertEquals(Float.parseFloat(budgetValues[i]),trippieData.getCurrentTrip()"},{"lineNumber":45,"author":{"gitId":"weishuangtan"},"content":"                    .getExpenseListObject().getBudgetValue());"},{"lineNumber":46,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"    private void fileSetup(Storage storage, TrippieData trippieData) throws ParseException, TrippieException {"},{"lineNumber":50,"author":{"gitId":"weishuangtan"},"content":"        storage.setupMasterFile(trippieData);"},{"lineNumber":51,"author":{"gitId":"weishuangtan"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":52,"author":{"gitId":"weishuangtan"},"content":"        Trip newTrip \u003d new Trip(trippieData.getTripList().size(), \"Singapore\", df.parse(\"11-11-2020\"));"},{"lineNumber":53,"author":{"gitId":"weishuangtan"},"content":"        newTrip.getExpenseListObject().setForExValue(Float.parseFloat(\"100\"));"},{"lineNumber":54,"author":{"gitId":"weishuangtan"},"content":"        newTrip.getExpenseListObject().setCurrencyAbbreviation(\"SGD\");"},{"lineNumber":55,"author":{"gitId":"weishuangtan"},"content":"        newTrip.getExpenseListObject().setBudgetValue(Float.parseFloat(\"1000\"));"},{"lineNumber":56,"author":{"gitId":"weishuangtan"},"content":"        trippieData.getTripList().add(newTrip);"},{"lineNumber":57,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":59,"author":{"gitId":"weishuangtan"},"content":"}"}],"authorContributionMap":{"ivanderjmw":3,"weishuangtan":56}},{"path":"src/test/java/seedu/trippie/command/CalculateCurrencyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ShawnTanzc"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.Storage;"},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.Ui;"},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.data.CurrencyType;"},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":10,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":11,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":12,"author":{"gitId":"ShawnTanzc"},"content":"import java.text.ParseException;"},{"lineNumber":13,"author":{"gitId":"ShawnTanzc"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":14,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":15,"author":{"gitId":"ShawnTanzc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":16,"author":{"gitId":"ShawnTanzc"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":17,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":18,"author":{"gitId":"ShawnTanzc"},"content":"class CalculateCurrencyCommandTest {"},{"lineNumber":19,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":20,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String CURRENCY_CHOICE_TO_SGD \u003d \"convert /toSGD 5\";"},{"lineNumber":21,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String CURRENCY_CHOICE_TO_FOR \u003d \"convert /toFOR 5\";"},{"lineNumber":22,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String CURRENCY_AMOUNT \u003d \"convert /toSGD 500\";"},{"lineNumber":23,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String MISSING_CURRENCY_AMOUNT \u003d \"convert /toFOR\";"},{"lineNumber":24,"author":{"gitId":"ShawnTanzc"},"content":"    private final String[] validUserInputs \u003d {\"convert /toSGD 50\", \"convert /toFOR 60\"};"},{"lineNumber":25,"author":{"gitId":"ShawnTanzc"},"content":"    private final String[] badUserInputs \u003d {\"convert /toSDG 5\", \"convert /to\", \"convert /to 5\", \"convert /toSGD\"};"},{"lineNumber":26,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":27,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"ShawnTanzc"},"content":"    void calculateCurrencyCommand_invalidUserInput_throwsTrippieInvalidArgumentException() {"},{"lineNumber":29,"author":{"gitId":"ShawnTanzc"},"content":"        for (String badUserInput : badUserInputs) {"},{"lineNumber":30,"author":{"gitId":"ShawnTanzc"},"content":"            assertThrows(TrippieInvalidArgumentException.class, () -\u003e new CalculateCurrencyCommand(badUserInput));"},{"lineNumber":31,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":34,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"ShawnTanzc"},"content":"    void calculateCurrencyCommand_validUserInput_setCurrencyParameter() throws TrippieInvalidArgumentException {"},{"lineNumber":36,"author":{"gitId":"ShawnTanzc"},"content":"        CurrencyType[] currencyChoice \u003d {CurrencyType.LOCAL, CurrencyType.FOREIGN};"},{"lineNumber":37,"author":{"gitId":"ShawnTanzc"},"content":"        Float[] currencyAmount \u003d {50f, 60f};"},{"lineNumber":38,"author":{"gitId":"ShawnTanzc"},"content":"        for (int i \u003d 0; i \u003c validUserInputs.length; i++) {"},{"lineNumber":39,"author":{"gitId":"ShawnTanzc"},"content":"            CalculateCurrencyCommand c \u003d new CalculateCurrencyCommand(validUserInputs[i]);"},{"lineNumber":40,"author":{"gitId":"ShawnTanzc"},"content":"            assertEquals(currencyChoice[i], c.extractCurrencyChoice(validUserInputs[i]));"},{"lineNumber":41,"author":{"gitId":"ShawnTanzc"},"content":"            assertEquals(currencyAmount[i], c.extractCurrencyAmount(validUserInputs[i]));"},{"lineNumber":42,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":45,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"ShawnTanzc"},"content":"    void extractCurrencyChoice_currencyChoiceIsLocalEnum_Success() throws TrippieInvalidArgumentException {"},{"lineNumber":47,"author":{"gitId":"ShawnTanzc"},"content":"        CalculateCurrencyCommand c \u003d new CalculateCurrencyCommand(CURRENCY_CHOICE_TO_SGD);"},{"lineNumber":48,"author":{"gitId":"ShawnTanzc"},"content":"        assertEquals(c.extractCurrencyChoice(CURRENCY_CHOICE_TO_SGD), CurrencyType.LOCAL);"},{"lineNumber":49,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":51,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"ShawnTanzc"},"content":"    void extractCurrencyChoice_currencyChoiceIsForeignEnum_Success() throws TrippieInvalidArgumentException {"},{"lineNumber":53,"author":{"gitId":"ShawnTanzc"},"content":"        CalculateCurrencyCommand c \u003d new CalculateCurrencyCommand(CURRENCY_CHOICE_TO_FOR);"},{"lineNumber":54,"author":{"gitId":"ShawnTanzc"},"content":"        assertEquals(c.extractCurrencyChoice(CURRENCY_CHOICE_TO_FOR), CurrencyType.FOREIGN);"},{"lineNumber":55,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":57,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":58,"author":{"gitId":"ShawnTanzc"},"content":"    void extractCurrencyAmount_currencyChoiceIsExtracted_Success() throws TrippieInvalidArgumentException {"},{"lineNumber":59,"author":{"gitId":"ShawnTanzc"},"content":"        CalculateCurrencyCommand c \u003d new CalculateCurrencyCommand(CURRENCY_AMOUNT);"},{"lineNumber":60,"author":{"gitId":"ShawnTanzc"},"content":"        assertEquals(c.extractCurrencyAmount(CURRENCY_AMOUNT), 500);"},{"lineNumber":61,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":63,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"ShawnTanzc"},"content":"    void extractCurrencyAmount_missingAmountInput_throwArrayIndexOutOfBoundsException() {"},{"lineNumber":65,"author":{"gitId":"ShawnTanzc"},"content":"        assertThrows(TrippieInvalidArgumentException.class, () -\u003e"},{"lineNumber":66,"author":{"gitId":"ShawnTanzc"},"content":"                new CalculateCurrencyCommand(MISSING_CURRENCY_AMOUNT));"},{"lineNumber":67,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":69,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":70,"author":{"gitId":"ShawnTanzc"},"content":"    void calculateCurrencyCommand_validUserInput_parsedCorrectly()"},{"lineNumber":71,"author":{"gitId":"ivanderjmw"},"content":"            throws TrippieException, ParseException {"},{"lineNumber":72,"author":{"gitId":"ShawnTanzc"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":73,"author":{"gitId":"ShawnTanzc"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":74,"author":{"gitId":"ShawnTanzc"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":75,"author":{"gitId":"ShawnTanzc"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":76,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":77,"author":{"gitId":"ShawnTanzc"},"content":"        for (int i \u003d 0; i \u003c validUserInputs.length; i++) {"},{"lineNumber":78,"author":{"gitId":"ShawnTanzc"},"content":"            CalculateCurrencyCommand c \u003d new CalculateCurrencyCommand(validUserInputs[i]);"},{"lineNumber":79,"author":{"gitId":"ShawnTanzc"},"content":"            c.execute(ui, trippieData);"},{"lineNumber":80,"author":{"gitId":"ShawnTanzc"},"content":"            assertEquals(10f, trippieData.getCurrentTrip()"},{"lineNumber":81,"author":{"gitId":"ShawnTanzc"},"content":"                    .getExpenseListObject().getForExValue());"},{"lineNumber":82,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":85,"author":{"gitId":"ivanderjmw"},"content":"    private void fileSetup(Storage storage, TrippieData trippieData) throws ParseException, TrippieException {"},{"lineNumber":86,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":87,"author":{"gitId":"ShawnTanzc"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":88,"author":{"gitId":"ShawnTanzc"},"content":"        Trip newTrip \u003d new Trip(trippieData.getTripList().size(), \"Singapore\", df.parse(\"11-11-2020\"));"},{"lineNumber":89,"author":{"gitId":"ShawnTanzc"},"content":"        newTrip.getExpenseListObject().setForExValue(Float.parseFloat(\"10\"));"},{"lineNumber":90,"author":{"gitId":"ShawnTanzc"},"content":"        newTrip.getExpenseListObject().setCurrencyAbbreviation(\"SGD\");"},{"lineNumber":91,"author":{"gitId":"ShawnTanzc"},"content":"        newTrip.getExpenseListObject().setBudgetValue(Float.parseFloat(\"1000\"));"},{"lineNumber":92,"author":{"gitId":"ShawnTanzc"},"content":"        int index \u003d trippieData.getTripList().size();"},{"lineNumber":93,"author":{"gitId":"ShawnTanzc"},"content":"        trippieData.getTripList().add(newTrip);"},{"lineNumber":94,"author":{"gitId":"ShawnTanzc"},"content":"        trippieData.setCurrentTripFromIndex(index);"},{"lineNumber":95,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"ShawnTanzc"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":92,"ivanderjmw":4}},{"path":"src/test/java/seedu/trippie/command/DeleteExpenseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weishuangtan"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":3,"author":{"gitId":"weishuangtan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.Storage;"},{"lineNumber":5,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.Ui;"},{"lineNumber":6,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.data.Expense;"},{"lineNumber":7,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":8,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":10,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":11,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":12,"author":{"gitId":"weishuangtan"},"content":"import java.text.ParseException;"},{"lineNumber":13,"author":{"gitId":"weishuangtan"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":14,"author":{"gitId":"weishuangtan"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":16,"author":{"gitId":"weishuangtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":17,"author":{"gitId":"weishuangtan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":18,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":19,"author":{"gitId":"weishuangtan"},"content":"class DeleteExpenseCommandTest {"},{"lineNumber":20,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":21,"author":{"gitId":"tengkianen"},"content":"    private final String[] validAddUserInputs \u003d {\"buy /n ice-cream /d 2 /c 3.00\", \"buy /n chicken rice /d 1 /c 5.00\","},{"lineNumber":22,"author":{"gitId":"tengkianen"},"content":"        \"buy /n pants /d 3 /c $30.00\"};"},{"lineNumber":23,"author":{"gitId":"weishuangtan"},"content":"    private final String[] validDeleteUserInputs \u003d {\"delete /e 4\", \"delete /e 1\", \"delete /e 1\", \"delete /e 1\"};"},{"lineNumber":24,"author":{"gitId":"weishuangtan"},"content":"    private final String[] badUserInputs \u003d {\"delete /e\", \"delete /e three\", \"delete \", \"delete\"};"},{"lineNumber":25,"author":{"gitId":"weishuangtan"},"content":"    private final int[] expectedSize \u003d {3,2,1,0};"},{"lineNumber":26,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":27,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"weishuangtan"},"content":"    void deleteExpenseCommand_invalidUserInput_throwsTrippieInvalidArgumentException() {"},{"lineNumber":29,"author":{"gitId":"weishuangtan"},"content":"        for (String badUserInput : badUserInputs) {"},{"lineNumber":30,"author":{"gitId":"weishuangtan"},"content":"            assertThrows(TrippieInvalidArgumentException.class, () -\u003e new DeleteExpenseCommand(badUserInput));"},{"lineNumber":31,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":34,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"ShawnTanzc"},"content":"    void deleteExpenseCommand_validUserInput_parsedCorrectly() throws TrippieException, ParseException {"},{"lineNumber":36,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":37,"author":{"gitId":"weishuangtan"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":38,"author":{"gitId":"weishuangtan"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":39,"author":{"gitId":"weishuangtan"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":41,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":42,"author":{"gitId":"weishuangtan"},"content":"        for (String validAddUserInput : validAddUserInputs) {"},{"lineNumber":43,"author":{"gitId":"weishuangtan"},"content":"            AddExpenseCommand c \u003d new AddExpenseCommand(validAddUserInput);"},{"lineNumber":44,"author":{"gitId":"weishuangtan"},"content":"            c.execute(ui,trippieData);"},{"lineNumber":45,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":47,"author":{"gitId":"weishuangtan"},"content":"        for (int i \u003d 0; i \u003c validDeleteUserInputs.length; i++) {"},{"lineNumber":48,"author":{"gitId":"weishuangtan"},"content":"            DeleteExpenseCommand c \u003d new DeleteExpenseCommand(validDeleteUserInputs[i]);"},{"lineNumber":49,"author":{"gitId":"weishuangtan"},"content":"            c.execute(ui,trippieData);"},{"lineNumber":50,"author":{"gitId":"weishuangtan"},"content":"            List\u003cExpense\u003e expenses \u003d trippieData.getCurrentTrip().getExpenseListObject().getExpenseList();"},{"lineNumber":51,"author":{"gitId":"weishuangtan"},"content":"            assertEquals(expectedSize[i],expenses.size());"},{"lineNumber":52,"author":{"gitId":"weishuangtan"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":54,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":"    private void fileSetup(Storage storage, TrippieData trippieData) throws ParseException, TrippieException {"},{"lineNumber":57,"author":{"gitId":"weishuangtan"},"content":"        storage.setupMasterFile(trippieData);"},{"lineNumber":58,"author":{"gitId":"weishuangtan"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":59,"author":{"gitId":"weishuangtan"},"content":"        Trip newTrip \u003d new Trip(trippieData.getTripList().size(), \"Singapore\", df.parse(\"11-11-2020\"));"},{"lineNumber":60,"author":{"gitId":"weishuangtan"},"content":"        newTrip.getExpenseListObject().setForExValue(Float.parseFloat(\"100\"));"},{"lineNumber":61,"author":{"gitId":"weishuangtan"},"content":"        newTrip.getExpenseListObject().setCurrencyAbbreviation(\"SGD\");"},{"lineNumber":62,"author":{"gitId":"weishuangtan"},"content":"        newTrip.getExpenseListObject().setBudgetValue(Float.parseFloat(\"1000\"));"},{"lineNumber":63,"author":{"gitId":"weishuangtan"},"content":"        trippieData.getTripList().add(newTrip);"},{"lineNumber":64,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":65,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"weishuangtan"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":1,"tengkianen":2,"ivanderjmw":2,"weishuangtan":61}},{"path":"src/test/java/seedu/trippie/command/DeletePlaceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"felixhalim"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":3,"author":{"gitId":"felixhalim"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.Storage;"},{"lineNumber":5,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.Ui;"},{"lineNumber":6,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.data.Place;"},{"lineNumber":7,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":8,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":10,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":11,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":12,"author":{"gitId":"felixhalim"},"content":"import java.text.ParseException;"},{"lineNumber":13,"author":{"gitId":"felixhalim"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":14,"author":{"gitId":"felixhalim"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":16,"author":{"gitId":"felixhalim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":17,"author":{"gitId":"felixhalim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":18,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":19,"author":{"gitId":"felixhalim"},"content":"class DeletePlaceCommandTest {"},{"lineNumber":20,"author":{"gitId":"felixhalim"},"content":"    private final String[] validAddUserInputs \u003d {"},{"lineNumber":21,"author":{"gitId":"felixhalim"},"content":"        \"add /n Marina Bay Sands /d 2 /t 1000 to 1200\","},{"lineNumber":22,"author":{"gitId":"felixhalim"},"content":"        \"add /n Changi Airport /d 1 /t 1900 to 2000\","},{"lineNumber":23,"author":{"gitId":"felixhalim"},"content":"        \"add /n Bugis Junction /d 3 /t 1100 to 1400\""},{"lineNumber":24,"author":{"gitId":"felixhalim"},"content":"    };"},{"lineNumber":25,"author":{"gitId":"felixhalim"},"content":"    private final String[] validDeleteUserInputs \u003d {\"delete /p 3\", \"delete /p 2\", \"delete /p 1\"};"},{"lineNumber":26,"author":{"gitId":"felixhalim"},"content":"    private final String[] badUserInputs \u003d {\"delete /p\", \"delete /p one\", \"delete \"};"},{"lineNumber":27,"author":{"gitId":"felixhalim"},"content":"    private final int[] expectedSize \u003d {2, 1, 0};"},{"lineNumber":28,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":29,"author":{"gitId":"felixhalim"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"felixhalim"},"content":"    void deletePlaceCommand_invalidUserInput_throwsTrippieInvalidArgumentException() {"},{"lineNumber":31,"author":{"gitId":"felixhalim"},"content":"        for (String badUserInput : badUserInputs) {"},{"lineNumber":32,"author":{"gitId":"felixhalim"},"content":"            assertThrows(TrippieInvalidArgumentException.class, () -\u003e new DeletePlaceCommand(badUserInput));"},{"lineNumber":33,"author":{"gitId":"felixhalim"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":36,"author":{"gitId":"felixhalim"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":"    void deletePlaceCommand_validUserInput_parsedCorrectly() throws TrippieInvalidArgumentException, ParseException,"},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":"            TrippieException {"},{"lineNumber":39,"author":{"gitId":"felixhalim"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":40,"author":{"gitId":"felixhalim"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":41,"author":{"gitId":"felixhalim"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":42,"author":{"gitId":"felixhalim"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":43,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":44,"author":{"gitId":"felixhalim"},"content":"        for (String validAddUserInput : validAddUserInputs) {"},{"lineNumber":45,"author":{"gitId":"felixhalim"},"content":"            AddPlaceCommand c \u003d new AddPlaceCommand(validAddUserInput);"},{"lineNumber":46,"author":{"gitId":"felixhalim"},"content":"            c.execute(ui, trippieData);"},{"lineNumber":47,"author":{"gitId":"felixhalim"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":49,"author":{"gitId":"felixhalim"},"content":"        for (int i \u003d 0; i \u003c validDeleteUserInputs.length; i++) {"},{"lineNumber":50,"author":{"gitId":"felixhalim"},"content":"            DeletePlaceCommand c \u003d new DeletePlaceCommand(validDeleteUserInputs[i]);"},{"lineNumber":51,"author":{"gitId":"felixhalim"},"content":"            c.execute(ui, trippieData);"},{"lineNumber":52,"author":{"gitId":"felixhalim"},"content":"            List\u003cPlace\u003e places \u003d trippieData.getCurrentTrip().getPlaceListObject().getPlaceList();"},{"lineNumber":53,"author":{"gitId":"felixhalim"},"content":"            assertEquals(expectedSize[i], places.size());"},{"lineNumber":54,"author":{"gitId":"felixhalim"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":56,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":58,"author":{"gitId":"ivanderjmw"},"content":"    private void fileSetup(Storage storage, TrippieData trippieData) throws ParseException, TrippieException {"},{"lineNumber":59,"author":{"gitId":"felixhalim"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":60,"author":{"gitId":"felixhalim"},"content":"        Trip newTrip \u003d new Trip(trippieData.getTripList().size(), \"Singapore\", df.parse(\"11-11-2020\"));"},{"lineNumber":61,"author":{"gitId":"felixhalim"},"content":"        newTrip.getExpenseListObject().setForExValue(Float.parseFloat(\"100\"));"},{"lineNumber":62,"author":{"gitId":"felixhalim"},"content":"        newTrip.getExpenseListObject().setCurrencyAbbreviation(\"SGD\");"},{"lineNumber":63,"author":{"gitId":"felixhalim"},"content":"        newTrip.getExpenseListObject().setBudgetValue(Float.parseFloat(\"1000\"));"},{"lineNumber":64,"author":{"gitId":"felixhalim"},"content":"        trippieData.getTripList().add(newTrip);"},{"lineNumber":65,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":67,"author":{"gitId":"felixhalim"},"content":"}"}],"authorContributionMap":{"felixhalim":63,"ivanderjmw":4}},{"path":"src/test/java/seedu/trippie/command/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"felixhalim"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":3,"author":{"gitId":"felixhalim"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.Storage;"},{"lineNumber":5,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.Ui;"},{"lineNumber":6,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":7,"author":{"gitId":"felixhalim"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":9,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":10,"author":{"gitId":"felixhalim"},"content":"import java.text.ParseException;"},{"lineNumber":11,"author":{"gitId":"felixhalim"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":12,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":13,"author":{"gitId":"felixhalim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":14,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":15,"author":{"gitId":"felixhalim"},"content":"class ExitCommandTest {"},{"lineNumber":16,"author":{"gitId":"felixhalim"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"    void exitCommand_validUserInput_parsedCorrectly() throws ParseException, TrippieException {"},{"lineNumber":18,"author":{"gitId":"felixhalim"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":19,"author":{"gitId":"felixhalim"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":20,"author":{"gitId":"felixhalim"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":21,"author":{"gitId":"felixhalim"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":22,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":23,"author":{"gitId":"felixhalim"},"content":"        ExitCommand c \u003d new ExitCommand();"},{"lineNumber":24,"author":{"gitId":"felixhalim"},"content":"        c.execute(ui, trippieData);"},{"lineNumber":25,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":26,"author":{"gitId":"felixhalim"},"content":"        assertTrue(c.isExit());"},{"lineNumber":27,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"felixhalim"},"content":""},{"lineNumber":29,"author":{"gitId":"ivanderjmw"},"content":"    private void fileSetup(Storage storage, TrippieData trippieData) throws ParseException, TrippieException {"},{"lineNumber":30,"author":{"gitId":"felixhalim"},"content":"        storage.setupMasterFile(trippieData);"},{"lineNumber":31,"author":{"gitId":"felixhalim"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":32,"author":{"gitId":"felixhalim"},"content":"        Trip newTrip \u003d new Trip(trippieData.getTripList().size(), \"Singapore\", df.parse(\"11-11-2020\"));"},{"lineNumber":33,"author":{"gitId":"felixhalim"},"content":"        newTrip.getExpenseListObject().setForExValue(Float.parseFloat(\"100\"));"},{"lineNumber":34,"author":{"gitId":"felixhalim"},"content":"        newTrip.getExpenseListObject().setCurrencyAbbreviation(\"SGD\");"},{"lineNumber":35,"author":{"gitId":"felixhalim"},"content":"        newTrip.getExpenseListObject().setBudgetValue(Float.parseFloat(\"1000\"));"},{"lineNumber":36,"author":{"gitId":"felixhalim"},"content":"        trippieData.getTripList().add(newTrip);"},{"lineNumber":37,"author":{"gitId":"felixhalim"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"felixhalim"},"content":"}"}],"authorContributionMap":{"felixhalim":35,"ivanderjmw":3}},{"path":"src/test/java/seedu/trippie/command/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weishuangtan"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":3,"author":{"gitId":"weishuangtan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.Storage;"},{"lineNumber":5,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.Ui;"},{"lineNumber":6,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":7,"author":{"gitId":"weishuangtan"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":9,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":10,"author":{"gitId":"weishuangtan"},"content":"import java.text.ParseException;"},{"lineNumber":11,"author":{"gitId":"weishuangtan"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":12,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":13,"author":{"gitId":"weishuangtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":14,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":15,"author":{"gitId":"weishuangtan"},"content":"class HelpCommandTest {"},{"lineNumber":16,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":17,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":"    void helpCommand_validUserInput_parsedCorrectly() throws ParseException, TrippieException {"},{"lineNumber":19,"author":{"gitId":"weishuangtan"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"weishuangtan"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":21,"author":{"gitId":"weishuangtan"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":22,"author":{"gitId":"weishuangtan"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":23,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":24,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":25,"author":{"gitId":"weishuangtan"},"content":"        HelpCommand c \u003d new HelpCommand();"},{"lineNumber":26,"author":{"gitId":"weishuangtan"},"content":"        c.execute(ui,trippieData);"},{"lineNumber":27,"author":{"gitId":"weishuangtan"},"content":"        assertFalse(c.isExit());"},{"lineNumber":28,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"    private void fileSetup(Storage storage, TrippieData trippieData) throws ParseException, TrippieException {"},{"lineNumber":31,"author":{"gitId":"weishuangtan"},"content":"        storage.setupMasterFile(trippieData);"},{"lineNumber":32,"author":{"gitId":"weishuangtan"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":33,"author":{"gitId":"weishuangtan"},"content":"        Trip newTrip \u003d new Trip(trippieData.getTripList().size(), \"Singapore\", df.parse(\"11-11-2020\"));"},{"lineNumber":34,"author":{"gitId":"weishuangtan"},"content":"        newTrip.getExpenseListObject().setForExValue(Float.parseFloat(\"100\"));"},{"lineNumber":35,"author":{"gitId":"weishuangtan"},"content":"        newTrip.getExpenseListObject().setCurrencyAbbreviation(\"SGD\");"},{"lineNumber":36,"author":{"gitId":"weishuangtan"},"content":"        newTrip.getExpenseListObject().setBudgetValue(Float.parseFloat(\"1000\"));"},{"lineNumber":37,"author":{"gitId":"weishuangtan"},"content":"        trippieData.getTripList().add(newTrip);"},{"lineNumber":38,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"weishuangtan"},"content":"    void printBorder() {"},{"lineNumber":42,"author":{"gitId":"weishuangtan"},"content":""},{"lineNumber":43,"author":{"gitId":"weishuangtan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"weishuangtan"},"content":"}"}],"authorContributionMap":{"ivanderjmw":3,"weishuangtan":41}},{"path":"src/test/java/seedu/trippie/command/ListExpenseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ShawnTanzc"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.Storage;"},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.Ui;"},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":9,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":10,"author":{"gitId":"ShawnTanzc"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":11,"author":{"gitId":"ShawnTanzc"},"content":"import java.io.PrintStream;"},{"lineNumber":12,"author":{"gitId":"ShawnTanzc"},"content":"import java.text.ParseException;"},{"lineNumber":13,"author":{"gitId":"ShawnTanzc"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":14,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":15,"author":{"gitId":"ShawnTanzc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":16,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":17,"author":{"gitId":"ShawnTanzc"},"content":"class ListExpenseCommandTest {"},{"lineNumber":18,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":19,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String LIST_IS_EMPTY \u003d \"There is currently nothing in your Expense list.\";"},{"lineNumber":20,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String REMAINING_BUDGET_LEFT \u003d \"You are still spending within your budget.\";"},{"lineNumber":21,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String NO_BUDGET_LEFT \u003d \"You have spent finish your budget.\";"},{"lineNumber":22,"author":{"gitId":"ShawnTanzc"},"content":"    private static final String EXCEED_BUDGET \u003d \"WARNING! You have exceeded your initial budget.\\n\""},{"lineNumber":23,"author":{"gitId":"ShawnTanzc"},"content":"            + \"Recommended action: Increase budget limit.\";"},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":"    private final String[] validAddUserInputs \u003d {\"buy /n ice-cream /d 2 /c 3.00\", \"buy /n chicken rice /d 1 /c 5.00\","},{"lineNumber":25,"author":{"gitId":"tengkianen"},"content":"        \"buy /n pants /d 3 /c $30.00\"};"},{"lineNumber":26,"author":{"gitId":"tengkianen"},"content":"    private final String[] validAddEnoughUserInputs \u003d {\"buy /n right price product /d 1 /c 100000\"};"},{"lineNumber":27,"author":{"gitId":"tengkianen"},"content":"    private final String[] invalidAddUserInputs \u003d {\"buy /n priceless product /d 2 /c 100001\"};"},{"lineNumber":28,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":29,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"    void listExpenseCommand_emptyList_printListIsEmpty() throws TrippieException, ParseException {"},{"lineNumber":31,"author":{"gitId":"ShawnTanzc"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":32,"author":{"gitId":"ShawnTanzc"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":33,"author":{"gitId":"ShawnTanzc"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":34,"author":{"gitId":"ShawnTanzc"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":35,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":36,"author":{"gitId":"ShawnTanzc"},"content":"        ListExpenseCommand c \u003d new ListExpenseCommand();"},{"lineNumber":37,"author":{"gitId":"ShawnTanzc"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"},{"lineNumber":38,"author":{"gitId":"ShawnTanzc"},"content":"        PrintStream ps \u003d new PrintStream(outputStream);"},{"lineNumber":39,"author":{"gitId":"ShawnTanzc"},"content":"        System.setOut(ps);"},{"lineNumber":40,"author":{"gitId":"ShawnTanzc"},"content":"        PrintStream old \u003d System.out;"},{"lineNumber":41,"author":{"gitId":"ShawnTanzc"},"content":"        c.execute(ui, trippieData);"},{"lineNumber":42,"author":{"gitId":"ShawnTanzc"},"content":"        System.out.flush();"},{"lineNumber":43,"author":{"gitId":"ShawnTanzc"},"content":"        System.setOut(old);"},{"lineNumber":44,"author":{"gitId":"ShawnTanzc"},"content":"        assertTrue(outputStream.toString().contains(LIST_IS_EMPTY));"},{"lineNumber":45,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":47,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"    void listExpenseCommand_validUserInput_printRemainBudget() throws TrippieException, ParseException {"},{"lineNumber":49,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":50,"author":{"gitId":"ShawnTanzc"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":51,"author":{"gitId":"ShawnTanzc"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":52,"author":{"gitId":"ShawnTanzc"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":53,"author":{"gitId":"ShawnTanzc"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":54,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":55,"author":{"gitId":"ShawnTanzc"},"content":"        for (String validAddUserInput : validAddUserInputs) {"},{"lineNumber":56,"author":{"gitId":"ShawnTanzc"},"content":"            AddExpenseCommand c \u003d new AddExpenseCommand(validAddUserInput);"},{"lineNumber":57,"author":{"gitId":"ShawnTanzc"},"content":"            c.execute(ui,trippieData);"},{"lineNumber":58,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":60,"author":{"gitId":"ShawnTanzc"},"content":"        ListExpenseCommand c \u003d new ListExpenseCommand();"},{"lineNumber":61,"author":{"gitId":"ShawnTanzc"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"},{"lineNumber":62,"author":{"gitId":"ShawnTanzc"},"content":"        PrintStream ps \u003d new PrintStream(outputStream);"},{"lineNumber":63,"author":{"gitId":"ShawnTanzc"},"content":"        System.setOut(ps);"},{"lineNumber":64,"author":{"gitId":"ShawnTanzc"},"content":"        PrintStream old \u003d System.out;"},{"lineNumber":65,"author":{"gitId":"ShawnTanzc"},"content":"        c.execute(ui, trippieData);"},{"lineNumber":66,"author":{"gitId":"ShawnTanzc"},"content":"        System.out.flush();"},{"lineNumber":67,"author":{"gitId":"ShawnTanzc"},"content":"        System.setOut(old);"},{"lineNumber":68,"author":{"gitId":"ShawnTanzc"},"content":"        assertTrue(outputStream.toString().contains(REMAINING_BUDGET_LEFT));"},{"lineNumber":69,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":70,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":72,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"ivanderjmw"},"content":"    void listExpenseCommand_validUserInput_printEqualBudget() throws TrippieException, ParseException {"},{"lineNumber":74,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":75,"author":{"gitId":"ShawnTanzc"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":76,"author":{"gitId":"ShawnTanzc"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":77,"author":{"gitId":"ShawnTanzc"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":78,"author":{"gitId":"ShawnTanzc"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":79,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":80,"author":{"gitId":"ShawnTanzc"},"content":"        for (String validAddEnoughUserInput : validAddEnoughUserInputs) {"},{"lineNumber":81,"author":{"gitId":"ShawnTanzc"},"content":"            AddExpenseCommand c \u003d new AddExpenseCommand(validAddEnoughUserInput);"},{"lineNumber":82,"author":{"gitId":"ShawnTanzc"},"content":"            c.execute(ui,trippieData);"},{"lineNumber":83,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":85,"author":{"gitId":"ShawnTanzc"},"content":"        ListExpenseCommand c \u003d new ListExpenseCommand();"},{"lineNumber":86,"author":{"gitId":"ShawnTanzc"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"},{"lineNumber":87,"author":{"gitId":"ShawnTanzc"},"content":"        PrintStream ps \u003d new PrintStream(outputStream);"},{"lineNumber":88,"author":{"gitId":"ShawnTanzc"},"content":"        System.setOut(ps);"},{"lineNumber":89,"author":{"gitId":"ShawnTanzc"},"content":"        PrintStream old \u003d System.out;"},{"lineNumber":90,"author":{"gitId":"ShawnTanzc"},"content":"        c.execute(ui, trippieData);"},{"lineNumber":91,"author":{"gitId":"ShawnTanzc"},"content":"        System.out.flush();"},{"lineNumber":92,"author":{"gitId":"ShawnTanzc"},"content":"        System.setOut(old);"},{"lineNumber":93,"author":{"gitId":"ShawnTanzc"},"content":"        assertTrue(outputStream.toString().contains(NO_BUDGET_LEFT));"},{"lineNumber":94,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":96,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":97,"author":{"gitId":"ivanderjmw"},"content":"    void listExpenseCommand_invalidUserInput_exceedBudget() throws TrippieException, ParseException {"},{"lineNumber":98,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":99,"author":{"gitId":"ShawnTanzc"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":100,"author":{"gitId":"ShawnTanzc"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":101,"author":{"gitId":"ShawnTanzc"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":102,"author":{"gitId":"ShawnTanzc"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":103,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":104,"author":{"gitId":"ShawnTanzc"},"content":"        for (String invalidAddUserInput : invalidAddUserInputs) {"},{"lineNumber":105,"author":{"gitId":"ShawnTanzc"},"content":"            AddExpenseCommand c \u003d new AddExpenseCommand(invalidAddUserInput);"},{"lineNumber":106,"author":{"gitId":"ShawnTanzc"},"content":"            c.execute(ui,trippieData);"},{"lineNumber":107,"author":{"gitId":"ShawnTanzc"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":109,"author":{"gitId":"ShawnTanzc"},"content":"        ListExpenseCommand c \u003d new ListExpenseCommand();"},{"lineNumber":110,"author":{"gitId":"ShawnTanzc"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"},{"lineNumber":111,"author":{"gitId":"ShawnTanzc"},"content":"        PrintStream ps \u003d new PrintStream(outputStream);"},{"lineNumber":112,"author":{"gitId":"ShawnTanzc"},"content":"        System.setOut(ps);"},{"lineNumber":113,"author":{"gitId":"ShawnTanzc"},"content":"        PrintStream old \u003d System.out;"},{"lineNumber":114,"author":{"gitId":"ShawnTanzc"},"content":"        c.execute(ui, trippieData);"},{"lineNumber":115,"author":{"gitId":"ShawnTanzc"},"content":"        System.out.flush();"},{"lineNumber":116,"author":{"gitId":"ShawnTanzc"},"content":"        System.setOut(old);"},{"lineNumber":117,"author":{"gitId":"ShawnTanzc"},"content":"        assertTrue(outputStream.toString().contains(EXCEED_BUDGET));"},{"lineNumber":118,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":120,"author":{"gitId":"ivanderjmw"},"content":"    private void fileSetup(Storage storage, TrippieData trippieData) throws TrippieException, ParseException {"},{"lineNumber":121,"author":{"gitId":"ShawnTanzc"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":122,"author":{"gitId":"ShawnTanzc"},"content":"        Trip newTrip \u003d new Trip(trippieData.getTripList().size(), \"Singapore\", df.parse(\"11-11-2020\"));"},{"lineNumber":123,"author":{"gitId":"ShawnTanzc"},"content":"        newTrip.getExpenseListObject().setForExValue(Float.parseFloat(\"100\"));"},{"lineNumber":124,"author":{"gitId":"ShawnTanzc"},"content":"        newTrip.getExpenseListObject().setCurrencyAbbreviation(\"SGD\");"},{"lineNumber":125,"author":{"gitId":"ShawnTanzc"},"content":"        newTrip.getExpenseListObject().setBudgetValue(Float.parseFloat(\"1000\"));"},{"lineNumber":126,"author":{"gitId":"ShawnTanzc"},"content":"        int index \u003d trippieData.getTripList().size();"},{"lineNumber":127,"author":{"gitId":"ShawnTanzc"},"content":"        trippieData.getTripList().add(newTrip);"},{"lineNumber":128,"author":{"gitId":"ShawnTanzc"},"content":"        trippieData.setCurrentTripFromIndex(index);"},{"lineNumber":129,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"ShawnTanzc"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":120,"tengkianen":4,"ivanderjmw":6}},{"path":"src/test/java/seedu/trippie/command/ListPlacesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"tengkianen"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.Storage;"},{"lineNumber":5,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.Ui;"},{"lineNumber":6,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":7,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":9,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":10,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":11,"author":{"gitId":"tengkianen"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":12,"author":{"gitId":"tengkianen"},"content":"import java.io.PrintStream;"},{"lineNumber":13,"author":{"gitId":"tengkianen"},"content":"import java.text.ParseException;"},{"lineNumber":14,"author":{"gitId":"tengkianen"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":15,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":16,"author":{"gitId":"tengkianen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":17,"author":{"gitId":"tengkianen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":18,"author":{"gitId":"tengkianen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":19,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":20,"author":{"gitId":"tengkianen"},"content":"class ListPlacesCommandTest {"},{"lineNumber":21,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":22,"author":{"gitId":"tengkianen"},"content":"    private static final String LIST_IS_EMPTY \u003d \"There is currently nothing in your place list. Why not add one?\";"},{"lineNumber":23,"author":{"gitId":"tengkianen"},"content":"    private final String[] validAddUserInputs \u003d {"},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":"        \"add /n Marina Bay Sands /d 2 /t 1000 to 1200\","},{"lineNumber":25,"author":{"gitId":"tengkianen"},"content":"        \"add /n Changi Airport /d 1 /t 1900 to 2000\","},{"lineNumber":26,"author":{"gitId":"tengkianen"},"content":"        \"add /n Bugis Junction /d 3 /t 1100 to 1400\""},{"lineNumber":27,"author":{"gitId":"tengkianen"},"content":"    };"},{"lineNumber":28,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":29,"author":{"gitId":"tengkianen"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"    void listPlacesCommand_emptyList_printListIsEmpty() throws ParseException, TrippieException {"},{"lineNumber":31,"author":{"gitId":"tengkianen"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":32,"author":{"gitId":"tengkianen"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":33,"author":{"gitId":"tengkianen"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":34,"author":{"gitId":"tengkianen"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":35,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":36,"author":{"gitId":"tengkianen"},"content":"        ListPlacesCommand c \u003d new ListPlacesCommand(\"list /p\");"},{"lineNumber":37,"author":{"gitId":"tengkianen"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"},{"lineNumber":38,"author":{"gitId":"tengkianen"},"content":"        PrintStream ps \u003d new PrintStream(outputStream);"},{"lineNumber":39,"author":{"gitId":"tengkianen"},"content":"        System.setOut(ps);"},{"lineNumber":40,"author":{"gitId":"tengkianen"},"content":"        PrintStream old \u003d System.out;"},{"lineNumber":41,"author":{"gitId":"tengkianen"},"content":"        c.execute(ui, trippieData);"},{"lineNumber":42,"author":{"gitId":"tengkianen"},"content":"        System.out.flush();"},{"lineNumber":43,"author":{"gitId":"tengkianen"},"content":"        System.setOut(old);"},{"lineNumber":44,"author":{"gitId":"tengkianen"},"content":"        assertTrue(outputStream.toString().contains(LIST_IS_EMPTY));"},{"lineNumber":45,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":47,"author":{"gitId":"tengkianen"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"    void listPlacesCommand_validUserInput_printListEveryday() throws ParseException, TrippieException {"},{"lineNumber":49,"author":{"gitId":"tengkianen"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":50,"author":{"gitId":"tengkianen"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":51,"author":{"gitId":"tengkianen"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":52,"author":{"gitId":"tengkianen"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":53,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":54,"author":{"gitId":"tengkianen"},"content":"        for (int i \u003d 0; i \u003c validAddUserInputs.length; i++) {"},{"lineNumber":55,"author":{"gitId":"tengkianen"},"content":"            AddPlaceCommand c \u003d new AddPlaceCommand(validAddUserInputs[i]);"},{"lineNumber":56,"author":{"gitId":"tengkianen"},"content":"            c.execute(ui, trippieData);"},{"lineNumber":57,"author":{"gitId":"tengkianen"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":59,"author":{"gitId":"tengkianen"},"content":"        ListPlacesCommand l \u003d new ListPlacesCommand(\"list /p\");"},{"lineNumber":60,"author":{"gitId":"tengkianen"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"},{"lineNumber":61,"author":{"gitId":"tengkianen"},"content":"        PrintStream ps \u003d new PrintStream(outputStream);"},{"lineNumber":62,"author":{"gitId":"tengkianen"},"content":"        System.setOut(ps);"},{"lineNumber":63,"author":{"gitId":"tengkianen"},"content":"        PrintStream old \u003d System.out;"},{"lineNumber":64,"author":{"gitId":"tengkianen"},"content":"        l.execute(ui, trippieData);"},{"lineNumber":65,"author":{"gitId":"tengkianen"},"content":"        System.out.flush();"},{"lineNumber":66,"author":{"gitId":"tengkianen"},"content":"        System.setOut(old);"},{"lineNumber":67,"author":{"gitId":"tengkianen"},"content":"        assertTrue(outputStream.toString().contains(\"[3] 1100 - 1400 Bugis Junction\"));"},{"lineNumber":68,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":70,"author":{"gitId":"tengkianen"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"ivanderjmw"},"content":"    void listPlacesCommand_validUserInput_printListOneDay() throws ParseException, TrippieException {"},{"lineNumber":72,"author":{"gitId":"tengkianen"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":73,"author":{"gitId":"tengkianen"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":74,"author":{"gitId":"tengkianen"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":75,"author":{"gitId":"tengkianen"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":76,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":77,"author":{"gitId":"tengkianen"},"content":"        for (int i \u003d 0; i \u003c validAddUserInputs.length; i++) {"},{"lineNumber":78,"author":{"gitId":"tengkianen"},"content":"            AddPlaceCommand c \u003d new AddPlaceCommand(validAddUserInputs[i]);"},{"lineNumber":79,"author":{"gitId":"tengkianen"},"content":"            c.execute(ui, trippieData);"},{"lineNumber":80,"author":{"gitId":"tengkianen"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":82,"author":{"gitId":"tengkianen"},"content":"        ListPlacesCommand l \u003d new ListPlacesCommand(\"list /p /d 1\");"},{"lineNumber":83,"author":{"gitId":"tengkianen"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"},{"lineNumber":84,"author":{"gitId":"tengkianen"},"content":"        PrintStream ps \u003d new PrintStream(outputStream);"},{"lineNumber":85,"author":{"gitId":"tengkianen"},"content":"        System.setOut(ps);"},{"lineNumber":86,"author":{"gitId":"tengkianen"},"content":"        PrintStream old \u003d System.out;"},{"lineNumber":87,"author":{"gitId":"tengkianen"},"content":"        l.execute(ui, trippieData);"},{"lineNumber":88,"author":{"gitId":"tengkianen"},"content":"        System.out.flush();"},{"lineNumber":89,"author":{"gitId":"tengkianen"},"content":"        System.setOut(old);"},{"lineNumber":90,"author":{"gitId":"tengkianen"},"content":"        assertTrue(outputStream.toString().contains(\"1900 - 2000 Changi Airport\"));"},{"lineNumber":91,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":93,"author":{"gitId":"tengkianen"},"content":"    @Test"},{"lineNumber":94,"author":{"gitId":"tengkianen"},"content":"    void listPlacesCommand_invalidUserInput_throwTrippieInvalidArgumentExceptionArray() {"},{"lineNumber":95,"author":{"gitId":"tengkianen"},"content":"        assertThrows(TrippieInvalidArgumentException.class, () -\u003e new ListPlacesCommand(\"list /p /d\"));"},{"lineNumber":96,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":98,"author":{"gitId":"tengkianen"},"content":"    @Test"},{"lineNumber":99,"author":{"gitId":"tengkianen"},"content":"    void listPlacesCommand_invalidUserInput_throwTrippieInvalidArgumentExceptionNumberFormat() {"},{"lineNumber":100,"author":{"gitId":"tengkianen"},"content":"        assertThrows(TrippieInvalidArgumentException.class, () -\u003e new ListPlacesCommand(\"list /p /d hello\"));"},{"lineNumber":101,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":103,"author":{"gitId":"tengkianen"},"content":"    @Test"},{"lineNumber":104,"author":{"gitId":"tengkianen"},"content":"    void isExit_listPlacesCommandParsed_returnsFalse() throws TrippieInvalidArgumentException {"},{"lineNumber":105,"author":{"gitId":"tengkianen"},"content":"        String userInput \u003d \"list /p\";"},{"lineNumber":106,"author":{"gitId":"tengkianen"},"content":"        ListPlacesCommand c \u003d new ListPlacesCommand(userInput);"},{"lineNumber":107,"author":{"gitId":"tengkianen"},"content":"        assertFalse(c.isExit());"},{"lineNumber":108,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":110,"author":{"gitId":"ivanderjmw"},"content":"    private void fileSetup(Storage storage, TrippieData trippieData) throws ParseException, TrippieException {"},{"lineNumber":111,"author":{"gitId":"tengkianen"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":112,"author":{"gitId":"tengkianen"},"content":"        Trip newTrip \u003d new Trip(trippieData.getTripList().size(), \"Singapore\", df.parse(\"11-11-2020\"));"},{"lineNumber":113,"author":{"gitId":"tengkianen"},"content":"        newTrip.getExpenseListObject().setForExValue(Float.parseFloat(\"100\"));"},{"lineNumber":114,"author":{"gitId":"tengkianen"},"content":"        newTrip.getExpenseListObject().setCurrencyAbbreviation(\"SGD\");"},{"lineNumber":115,"author":{"gitId":"tengkianen"},"content":"        newTrip.getExpenseListObject().setBudgetValue(Float.parseFloat(\"1000\"));"},{"lineNumber":116,"author":{"gitId":"tengkianen"},"content":"        int index \u003d trippieData.getTripList().size();"},{"lineNumber":117,"author":{"gitId":"tengkianen"},"content":"        trippieData.getTripList().add(newTrip);"},{"lineNumber":118,"author":{"gitId":"tengkianen"},"content":"        trippieData.setCurrentTripFromIndex(index);"},{"lineNumber":119,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":121,"author":{"gitId":"tengkianen"},"content":"}"}],"authorContributionMap":{"tengkianen":116,"ivanderjmw":5}},{"path":"src/test/java/seedu/trippie/command/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"package seedu.trippie.command;"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"tengkianen"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.Storage;"},{"lineNumber":5,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.Ui;"},{"lineNumber":6,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.data.Trip;"},{"lineNumber":7,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.data.TrippieData;"},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":9,"author":{"gitId":"tengkianen"},"content":"import seedu.trippie.exception.TrippieInvalidArgumentException;"},{"lineNumber":10,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":11,"author":{"gitId":"tengkianen"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":12,"author":{"gitId":"tengkianen"},"content":"import java.io.PrintStream;"},{"lineNumber":13,"author":{"gitId":"tengkianen"},"content":"import java.text.ParseException;"},{"lineNumber":14,"author":{"gitId":"tengkianen"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":15,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":16,"author":{"gitId":"tengkianen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":17,"author":{"gitId":"tengkianen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":18,"author":{"gitId":"tengkianen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":19,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":20,"author":{"gitId":"tengkianen"},"content":"class SearchCommandTest {"},{"lineNumber":21,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":22,"author":{"gitId":"tengkianen"},"content":"    private static final String LIST_IS_EMPTY \u003d \"There is currently nothing in your place list. Why not add one?\";"},{"lineNumber":23,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":25,"author":{"gitId":"tengkianen"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"ivanderjmw"},"content":"    void searchCommand_validUserInput_emptyList() throws TrippieException, ParseException {"},{"lineNumber":27,"author":{"gitId":"tengkianen"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":28,"author":{"gitId":"tengkianen"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":29,"author":{"gitId":"tengkianen"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":30,"author":{"gitId":"tengkianen"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":31,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":32,"author":{"gitId":"tengkianen"},"content":"        SearchCommand c \u003d new SearchCommand(\"search find\");"},{"lineNumber":33,"author":{"gitId":"tengkianen"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"},{"lineNumber":34,"author":{"gitId":"tengkianen"},"content":"        PrintStream ps \u003d new PrintStream(outputStream);"},{"lineNumber":35,"author":{"gitId":"tengkianen"},"content":"        System.setOut(ps);"},{"lineNumber":36,"author":{"gitId":"tengkianen"},"content":"        PrintStream old \u003d System.out;"},{"lineNumber":37,"author":{"gitId":"tengkianen"},"content":"        c.execute(ui, trippieData);"},{"lineNumber":38,"author":{"gitId":"tengkianen"},"content":"        System.out.flush();"},{"lineNumber":39,"author":{"gitId":"tengkianen"},"content":"        System.setOut(old);"},{"lineNumber":40,"author":{"gitId":"tengkianen"},"content":"        assertTrue(outputStream.toString().contains(LIST_IS_EMPTY));"},{"lineNumber":41,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":42,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":44,"author":{"gitId":"tengkianen"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":"    void searchCommand_validUserInput_noPlaceFound() throws ParseException, TrippieException {"},{"lineNumber":46,"author":{"gitId":"tengkianen"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":47,"author":{"gitId":"tengkianen"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":48,"author":{"gitId":"tengkianen"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":49,"author":{"gitId":"tengkianen"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":50,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":51,"author":{"gitId":"tengkianen"},"content":"        AddPlaceCommand c \u003d new AddPlaceCommand(\"add /n Marina Bay Sands /d 2 /t 1000 to 1200\");"},{"lineNumber":52,"author":{"gitId":"tengkianen"},"content":"        c.execute(ui, trippieData);"},{"lineNumber":53,"author":{"gitId":"tengkianen"},"content":"        SearchCommand l \u003d new SearchCommand(\"search handsome\");"},{"lineNumber":54,"author":{"gitId":"tengkianen"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"},{"lineNumber":55,"author":{"gitId":"tengkianen"},"content":"        PrintStream ps \u003d new PrintStream(outputStream);"},{"lineNumber":56,"author":{"gitId":"tengkianen"},"content":"        System.setOut(ps);"},{"lineNumber":57,"author":{"gitId":"tengkianen"},"content":"        PrintStream old \u003d System.out;"},{"lineNumber":58,"author":{"gitId":"tengkianen"},"content":"        l.execute(ui, trippieData);"},{"lineNumber":59,"author":{"gitId":"tengkianen"},"content":"        System.out.flush();"},{"lineNumber":60,"author":{"gitId":"tengkianen"},"content":"        System.setOut(old);"},{"lineNumber":61,"author":{"gitId":"tengkianen"},"content":"        assertTrue(outputStream.toString().contains(\"Sorry I can\u0027t find any place with the keyword \\\"handsome\\\"\"));"},{"lineNumber":62,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":64,"author":{"gitId":"tengkianen"},"content":"    @Test"},{"lineNumber":65,"author":{"gitId":"ivanderjmw"},"content":"    void searchCommand_validUserInput_placeFound() throws TrippieException, ParseException {"},{"lineNumber":66,"author":{"gitId":"tengkianen"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":67,"author":{"gitId":"tengkianen"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":68,"author":{"gitId":"tengkianen"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":69,"author":{"gitId":"tengkianen"},"content":"        fileSetup(storage, trippieData);"},{"lineNumber":70,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":71,"author":{"gitId":"tengkianen"},"content":"        AddPlaceCommand c \u003d new AddPlaceCommand(\"add /n Marina Bay Sands /d 2 /t 1000 to 1200\");"},{"lineNumber":72,"author":{"gitId":"tengkianen"},"content":"        c.execute(ui, trippieData);"},{"lineNumber":73,"author":{"gitId":"tengkianen"},"content":"        SearchCommand l \u003d new SearchCommand(\"search Marina\");"},{"lineNumber":74,"author":{"gitId":"tengkianen"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"},{"lineNumber":75,"author":{"gitId":"tengkianen"},"content":"        PrintStream ps \u003d new PrintStream(outputStream);"},{"lineNumber":76,"author":{"gitId":"tengkianen"},"content":"        System.setOut(ps);"},{"lineNumber":77,"author":{"gitId":"tengkianen"},"content":"        PrintStream old \u003d System.out;"},{"lineNumber":78,"author":{"gitId":"tengkianen"},"content":"        l.execute(ui, trippieData);"},{"lineNumber":79,"author":{"gitId":"tengkianen"},"content":"        System.out.flush();"},{"lineNumber":80,"author":{"gitId":"tengkianen"},"content":"        System.setOut(old);"},{"lineNumber":81,"author":{"gitId":"tengkianen"},"content":"        assertTrue(outputStream.toString().contains(\"1.1000 - 1200 Marina Bay Sands on DAY 2\"));"},{"lineNumber":82,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":84,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":85,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":86,"author":{"gitId":"tengkianen"},"content":"    @Test"},{"lineNumber":87,"author":{"gitId":"tengkianen"},"content":"    void searchCommand_invalidUserInput_throwsTrippieInvalidArgumentException() {"},{"lineNumber":88,"author":{"gitId":"tengkianen"},"content":"        assertThrows(TrippieInvalidArgumentException.class, () -\u003e new AddExpenseCommand(\"search\"));"},{"lineNumber":89,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":91,"author":{"gitId":"tengkianen"},"content":"    @Test"},{"lineNumber":92,"author":{"gitId":"tengkianen"},"content":"    void isExit_searchCommandParsed_returnsFalse() throws TrippieInvalidArgumentException {"},{"lineNumber":93,"author":{"gitId":"tengkianen"},"content":"        String userInput \u003d \"search happy\";"},{"lineNumber":94,"author":{"gitId":"tengkianen"},"content":"        SearchCommand c \u003d new SearchCommand(userInput);"},{"lineNumber":95,"author":{"gitId":"tengkianen"},"content":"        assertFalse(c.isExit());"},{"lineNumber":96,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":98,"author":{"gitId":"ivanderjmw"},"content":"    private void fileSetup(Storage storage, TrippieData trippieData) throws ParseException, TrippieException {"},{"lineNumber":99,"author":{"gitId":"tengkianen"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":100,"author":{"gitId":"tengkianen"},"content":"        Trip newTrip \u003d new Trip(trippieData.getTripList().size(), \"Singapore\", df.parse(\"11-11-2020\"));"},{"lineNumber":101,"author":{"gitId":"tengkianen"},"content":"        newTrip.getExpenseListObject().setForExValue(Float.parseFloat(\"100\"));"},{"lineNumber":102,"author":{"gitId":"tengkianen"},"content":"        newTrip.getExpenseListObject().setCurrencyAbbreviation(\"SGD\");"},{"lineNumber":103,"author":{"gitId":"tengkianen"},"content":"        newTrip.getExpenseListObject().setBudgetValue(Float.parseFloat(\"1000\"));"},{"lineNumber":104,"author":{"gitId":"tengkianen"},"content":"        int index \u003d trippieData.getTripList().size();"},{"lineNumber":105,"author":{"gitId":"tengkianen"},"content":"        trippieData.getTripList().add(newTrip);"},{"lineNumber":106,"author":{"gitId":"tengkianen"},"content":"        trippieData.setCurrentTripFromIndex(index);"},{"lineNumber":107,"author":{"gitId":"tengkianen"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"tengkianen"},"content":"}"}],"authorContributionMap":{"tengkianen":103,"ivanderjmw":5}},{"path":"src/test/java/seedu/trippie/data/CurrencyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ShawnTanzc"},"content":"package seedu.trippie.data;"},{"lineNumber":2,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":3,"author":{"gitId":"ShawnTanzc"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":5,"author":{"gitId":"ShawnTanzc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"ShawnTanzc"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":7,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":8,"author":{"gitId":"ShawnTanzc"},"content":"class CurrencyTest {"},{"lineNumber":9,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":10,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"ShawnTanzc"},"content":"    void getCurrencyChoice_currencyChosenIsLocal_success() {"},{"lineNumber":12,"author":{"gitId":"ShawnTanzc"},"content":"        Currency currency \u003d new Currency(CurrencyType.LOCAL, (float) 3.02);"},{"lineNumber":13,"author":{"gitId":"ShawnTanzc"},"content":"        assertEquals(currency.getCurrencyChoice(), \"local\");"},{"lineNumber":14,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":16,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"ShawnTanzc"},"content":"    void getCurrencyChoice_currencyChosenIsForeign_success() {"},{"lineNumber":18,"author":{"gitId":"ShawnTanzc"},"content":"        Currency currency \u003d new Currency(CurrencyType.FOREIGN, (float) 3.02);"},{"lineNumber":19,"author":{"gitId":"ShawnTanzc"},"content":"        assertEquals(currency.getCurrencyChoice(), \"foreign\");"},{"lineNumber":20,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ShawnTanzc"},"content":""},{"lineNumber":22,"author":{"gitId":"ShawnTanzc"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"ShawnTanzc"},"content":"    void getCurrencyAmount_currencyAmountIsCorrect_success() {"},{"lineNumber":24,"author":{"gitId":"ShawnTanzc"},"content":"        Currency currency \u003d new Currency(CurrencyType.LOCAL, (float) 3.02);"},{"lineNumber":25,"author":{"gitId":"ShawnTanzc"},"content":"        assertEquals(currency.getCurrencyAmount(), (float) 3.02);"},{"lineNumber":26,"author":{"gitId":"ShawnTanzc"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ShawnTanzc"},"content":"}"}],"authorContributionMap":{"ShawnTanzc":27}},{"path":"src/test/java/seedu/trippie/data/TripTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie.data;"},{"lineNumber":2,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":"import java.text.DateFormat;"},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":"import java.text.ParseException;"},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"ivanderjmw"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;"},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":13,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"class TripTest {"},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"    void tripConstructor_validInputs_success() throws ParseException, TrippieException {"},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"        Trip trip \u003d new Trip(1, \"Trip name\", df.parse(\"01-01-2020\"));"},{"lineNumber":20,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":21,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(trip.getIndex(), 1);"},{"lineNumber":22,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(trip.getName(), \"Trip name\");"},{"lineNumber":23,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(df.format(trip.getStartDate()), \"01-01-2020\");"},{"lineNumber":24,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":26,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"ivanderjmw"},"content":"    void tripConstructor_invalidName_trippieExceptionThrown() {"},{"lineNumber":28,"author":{"gitId":"ivanderjmw"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"ivanderjmw"},"content":"            DateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"            Trip trip \u003d new Trip(-1, \"Trip name\", df.parse(\"01-01-2020\"));"},{"lineNumber":31,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"            assertEquals(trip.getIndex(), 1);"},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":"            assertEquals(trip.getName(), \"Trip name\");"},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":"            assertEquals(df.format(trip.getStartDate()), \"01-01-2020\");"},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":"        } catch (TrippieException e) {"},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":"            assertEquals(e.getMessage(), \"Index out of bounds\");"},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":"        } catch (ParseException p) {"},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":"            fail();"},{"lineNumber":39,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":"    void tripConstructor_invalidIndex_trippieExceptionThrown() {"},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":"            DateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":"            Trip trip \u003d new Trip(1, \"\", df.parse(\"01-01-2020\"));"},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"            assertEquals(trip.getIndex(), 1);"},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"            assertEquals(trip.getName(), \"Trip name\");"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"            assertEquals(df.format(trip.getStartDate()), \"01-01-2020\");"},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"        } catch (TrippieException e) {"},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":"            assertEquals(e.getMessage(), \"Trip name should not be empty\");"},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":"        } catch (ParseException p) {"},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":"            fail();"},{"lineNumber":55,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":58,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":"    void getSetExpenseListObject_validInputs_success() {"},{"lineNumber":60,"author":{"gitId":"ivanderjmw"},"content":"        Trip trip \u003d new Trip();"},{"lineNumber":61,"author":{"gitId":"ivanderjmw"},"content":"        ExpenseList expenseList \u003d new ExpenseList();"},{"lineNumber":62,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":63,"author":{"gitId":"ivanderjmw"},"content":"        assertNotEquals(trip.getExpenseListObject(), expenseList);"},{"lineNumber":64,"author":{"gitId":"ivanderjmw"},"content":"        trip.setExpenseList(expenseList);"},{"lineNumber":65,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(trip.getExpenseListObject(), expenseList);"},{"lineNumber":66,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":68,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":69,"author":{"gitId":"ivanderjmw"},"content":"    void getSetPlaceListObject_validInputs_success() {"},{"lineNumber":70,"author":{"gitId":"ivanderjmw"},"content":"        Trip trip \u003d new Trip();"},{"lineNumber":71,"author":{"gitId":"ivanderjmw"},"content":"        PlaceList placeList \u003d new PlaceList();"},{"lineNumber":72,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":73,"author":{"gitId":"ivanderjmw"},"content":"        assertNotEquals(trip.getPlaceListObject(), placeList);"},{"lineNumber":74,"author":{"gitId":"ivanderjmw"},"content":"        trip.setPlaceList(placeList);"},{"lineNumber":75,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(trip.getPlaceListObject(), placeList);"},{"lineNumber":76,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":78,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":79,"author":{"gitId":"ivanderjmw"},"content":"    void getMaxDay_emptyPlaceAndExpenses_zero() throws TrippieException, ParseException {"},{"lineNumber":80,"author":{"gitId":"ivanderjmw"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":81,"author":{"gitId":"ivanderjmw"},"content":"        Trip trip \u003d new Trip(1, \"Check\", df.parse(\"01-01-2020\"));"},{"lineNumber":82,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":83,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(trip.getMaxDay(), 0);"},{"lineNumber":84,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":86,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":87,"author":{"gitId":"ivanderjmw"},"content":"    void getMaxDay_withPlaceList_correct() throws TrippieException, ParseException {"},{"lineNumber":88,"author":{"gitId":"ivanderjmw"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":89,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":90,"author":{"gitId":"ivanderjmw"},"content":"        PlaceList placeList \u003d new PlaceList();"},{"lineNumber":91,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":92,"author":{"gitId":"ivanderjmw"},"content":"        placeList.getPlaceList().add(new Place(\"A name\", 9999, 200, 300));"},{"lineNumber":93,"author":{"gitId":"ivanderjmw"},"content":"        placeList.getPlaceList().add(new Place(\"A name1\", 99999, 200, 300));"},{"lineNumber":94,"author":{"gitId":"ivanderjmw"},"content":"        placeList.getPlaceList().add(new Place(\"A name2\", 999999, 200, 300));"},{"lineNumber":95,"author":{"gitId":"ivanderjmw"},"content":"        placeList.getPlaceList().add(new Place(\"A name3\", 9999999, 200, 300));"},{"lineNumber":96,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":97,"author":{"gitId":"ivanderjmw"},"content":"        Trip trip \u003d new Trip(1, \"Check0\", df.parse(\"01-01-2020\"));"},{"lineNumber":98,"author":{"gitId":"ivanderjmw"},"content":"        trip.setPlaceList(placeList);"},{"lineNumber":99,"author":{"gitId":"ivanderjmw"},"content":"        trip.updateMaxDay();"},{"lineNumber":100,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":101,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(9999999, trip.getMaxDay());"},{"lineNumber":102,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":104,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":105,"author":{"gitId":"ivanderjmw"},"content":"    void getMaxDay_withExpenseListOnly_correct() throws TrippieException, ParseException {"},{"lineNumber":106,"author":{"gitId":"ivanderjmw"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":107,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":108,"author":{"gitId":"ivanderjmw"},"content":"        ExpenseList expenseList \u003d new ExpenseList();"},{"lineNumber":109,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":110,"author":{"gitId":"ivanderjmw"},"content":"        expenseList.getExpenseList().add(new Expense("},{"lineNumber":111,"author":{"gitId":"ivanderjmw"},"content":"                \"Something\","},{"lineNumber":112,"author":{"gitId":"ivanderjmw"},"content":"                Float.valueOf(\"1.231\"),"},{"lineNumber":113,"author":{"gitId":"ivanderjmw"},"content":"                9));"},{"lineNumber":114,"author":{"gitId":"ivanderjmw"},"content":"        expenseList.getExpenseList().add(new Expense("},{"lineNumber":115,"author":{"gitId":"ivanderjmw"},"content":"                \"Something2\","},{"lineNumber":116,"author":{"gitId":"ivanderjmw"},"content":"                Float.valueOf(\"1.231\"),"},{"lineNumber":117,"author":{"gitId":"ivanderjmw"},"content":"                99));"},{"lineNumber":118,"author":{"gitId":"ivanderjmw"},"content":"        expenseList.getExpenseList().add(new Expense("},{"lineNumber":119,"author":{"gitId":"ivanderjmw"},"content":"                \"Something3\","},{"lineNumber":120,"author":{"gitId":"ivanderjmw"},"content":"                Float.valueOf(\"1.231\"),"},{"lineNumber":121,"author":{"gitId":"ivanderjmw"},"content":"                999));"},{"lineNumber":122,"author":{"gitId":"ivanderjmw"},"content":"        expenseList.getExpenseList().add(new Expense("},{"lineNumber":123,"author":{"gitId":"ivanderjmw"},"content":"                \"Something4\","},{"lineNumber":124,"author":{"gitId":"ivanderjmw"},"content":"                Float.valueOf(\"1.231\"),"},{"lineNumber":125,"author":{"gitId":"ivanderjmw"},"content":"                9999));"},{"lineNumber":126,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":127,"author":{"gitId":"ivanderjmw"},"content":"        Trip trip \u003d new Trip(1, \"Check1\", df.parse(\"01-01-2020\"));"},{"lineNumber":128,"author":{"gitId":"ivanderjmw"},"content":"        trip.setExpenseList(expenseList);"},{"lineNumber":129,"author":{"gitId":"ivanderjmw"},"content":"        trip.updateMaxDay();"},{"lineNumber":130,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":131,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(9999, trip.getMaxDay());"},{"lineNumber":132,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":134,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":135,"author":{"gitId":"ivanderjmw"},"content":"    void getMaxDay_withExpenseListAndPlaceList_correct() throws TrippieException, ParseException {"},{"lineNumber":136,"author":{"gitId":"ivanderjmw"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":137,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":138,"author":{"gitId":"ivanderjmw"},"content":"        PlaceList placeList \u003d new PlaceList();"},{"lineNumber":139,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":140,"author":{"gitId":"ivanderjmw"},"content":"        placeList.getPlaceList().add(new Place(\"A name\", 9999, 200, 300));"},{"lineNumber":141,"author":{"gitId":"ivanderjmw"},"content":"        placeList.getPlaceList().add(new Place(\"A name1\", 99999, 200, 300));"},{"lineNumber":142,"author":{"gitId":"ivanderjmw"},"content":"        placeList.getPlaceList().add(new Place(\"A name2\", 999999, 200, 300));"},{"lineNumber":143,"author":{"gitId":"ivanderjmw"},"content":"        placeList.getPlaceList().add(new Place(\"A name3\", 9999999, 200, 300));"},{"lineNumber":144,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":145,"author":{"gitId":"ivanderjmw"},"content":"        ExpenseList expenseList \u003d new ExpenseList();"},{"lineNumber":146,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":147,"author":{"gitId":"ivanderjmw"},"content":"        expenseList.getExpenseList().add(new Expense("},{"lineNumber":148,"author":{"gitId":"ivanderjmw"},"content":"                \"Something\","},{"lineNumber":149,"author":{"gitId":"ivanderjmw"},"content":"                Float.valueOf(\"1.231\"),"},{"lineNumber":150,"author":{"gitId":"ivanderjmw"},"content":"                9));"},{"lineNumber":151,"author":{"gitId":"ivanderjmw"},"content":"        expenseList.getExpenseList().add(new Expense("},{"lineNumber":152,"author":{"gitId":"ivanderjmw"},"content":"                \"Something2\","},{"lineNumber":153,"author":{"gitId":"ivanderjmw"},"content":"                Float.valueOf(\"1.231\"),"},{"lineNumber":154,"author":{"gitId":"ivanderjmw"},"content":"                99));"},{"lineNumber":155,"author":{"gitId":"ivanderjmw"},"content":"        expenseList.getExpenseList().add(new Expense("},{"lineNumber":156,"author":{"gitId":"ivanderjmw"},"content":"                \"Something3\","},{"lineNumber":157,"author":{"gitId":"ivanderjmw"},"content":"                Float.valueOf(\"1.231\"),"},{"lineNumber":158,"author":{"gitId":"ivanderjmw"},"content":"                999));"},{"lineNumber":159,"author":{"gitId":"ivanderjmw"},"content":"        expenseList.getExpenseList().add(new Expense("},{"lineNumber":160,"author":{"gitId":"ivanderjmw"},"content":"                \"Something4\","},{"lineNumber":161,"author":{"gitId":"ivanderjmw"},"content":"                Float.valueOf(\"1.231\"),"},{"lineNumber":162,"author":{"gitId":"ivanderjmw"},"content":"                9999));"},{"lineNumber":163,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":164,"author":{"gitId":"ivanderjmw"},"content":"        Trip trip \u003d new Trip(1, \"Check2\", df.parse(\"01-01-2020\"));"},{"lineNumber":165,"author":{"gitId":"ivanderjmw"},"content":"        trip.setPlaceList(placeList);"},{"lineNumber":166,"author":{"gitId":"ivanderjmw"},"content":"        trip.setExpenseList(expenseList);"},{"lineNumber":167,"author":{"gitId":"ivanderjmw"},"content":"        trip.updateMaxDay();"},{"lineNumber":168,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":169,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(9999999, trip.getMaxDay());"},{"lineNumber":170,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"ivanderjmw"},"content":"}"}],"authorContributionMap":{"ivanderjmw":171}},{"path":"src/test/java/seedu/trippie/data/TrippieDataTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"package seedu.trippie.data;"},{"lineNumber":2,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.Storage;"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.Trippie;"},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":"import seedu.trippie.exception.TrippieException;"},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":"import java.text.DateFormat;"},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"import java.text.ParseException;"},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":11,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":13,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"class TrippieDataTest {"},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"    void list_singleTrip_success() throws TrippieException, ParseException {"},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":20,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":21,"author":{"gitId":"ivanderjmw"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":22,"author":{"gitId":"ivanderjmw"},"content":"        Trip trip \u003d new Trip(0, \"TripName\", df.parse(\"01-01-2020\"));"},{"lineNumber":23,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":24,"author":{"gitId":"ivanderjmw"},"content":"        trippieData.getTripList().add(trip);"},{"lineNumber":25,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":26,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(\"1. TripName [No places or expenses added yet]\\n\", trippieData.list());"},{"lineNumber":27,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":29,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"ivanderjmw"},"content":"    void list_noTrip_success() throws TrippieException, ParseException {"},{"lineNumber":31,"author":{"gitId":"ivanderjmw"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":33,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":34,"author":{"gitId":"ivanderjmw"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":35,"author":{"gitId":"ivanderjmw"},"content":"        Trip trip \u003d new Trip(0, \"TripName\", df.parse(\"01-01-2020\"));"},{"lineNumber":36,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":37,"author":{"gitId":"ivanderjmw"},"content":"        trippieData.addTrip(trip);"},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":39,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(\"1. TripName [No places or expenses added yet]\\n\", trippieData.list());"},{"lineNumber":40,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":"    void addTrip_singleTrip_largerTripList() throws ParseException, TrippieException {"},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"        Trip[] trips \u003d {"},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"            new Trip(0, \"TripName0\", df.parse(\"01-01-2020\")),"},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":"            new Trip(0, \"TripName1\", df.parse(\"01-01-2020\")),"},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":"            new Trip(0, \"TripName2\", df.parse(\"01-01-2020\")),"},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":"            new Trip(0, \"TripName3\", df.parse(\"01-01-2020\")),"},{"lineNumber":55,"author":{"gitId":"ivanderjmw"},"content":"        };"},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":"        for (Trip t: trips) {"},{"lineNumber":58,"author":{"gitId":"ivanderjmw"},"content":"            trippieData.addTrip(t);"},{"lineNumber":59,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":61,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals("},{"lineNumber":62,"author":{"gitId":"ivanderjmw"},"content":"                \"1. TripName0 [No places or expenses added yet]\\n\""},{"lineNumber":63,"author":{"gitId":"ivanderjmw"},"content":"                    + \"2. TripName1 [No places or expenses added yet]\\n\""},{"lineNumber":64,"author":{"gitId":"ivanderjmw"},"content":"                    + \"3. TripName2 [No places or expenses added yet]\\n\""},{"lineNumber":65,"author":{"gitId":"ivanderjmw"},"content":"                    + \"4. TripName3 [No places or expenses added yet]\\n\","},{"lineNumber":66,"author":{"gitId":"ivanderjmw"},"content":"                    trippieData.list()"},{"lineNumber":67,"author":{"gitId":"ivanderjmw"},"content":"        );"},{"lineNumber":68,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":70,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"ivanderjmw"},"content":"    void removeTripFromIndex_singleTrip_reducedTripList() throws ParseException, TrippieException {"},{"lineNumber":72,"author":{"gitId":"ivanderjmw"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":73,"author":{"gitId":"ivanderjmw"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":74,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":75,"author":{"gitId":"ivanderjmw"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":76,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":77,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":78,"author":{"gitId":"ivanderjmw"},"content":"        Trip[] trips \u003d {"},{"lineNumber":79,"author":{"gitId":"ivanderjmw"},"content":"            new Trip(0, \"TripName0\", df.parse(\"01-01-2020\")),"},{"lineNumber":80,"author":{"gitId":"ivanderjmw"},"content":"            new Trip(1, \"TripName1\", df.parse(\"01-01-2020\")),"},{"lineNumber":81,"author":{"gitId":"ivanderjmw"},"content":"            new Trip(2, \"TripName2\", df.parse(\"01-01-2020\")),"},{"lineNumber":82,"author":{"gitId":"ivanderjmw"},"content":"            new Trip(3, \"TripName3\", df.parse(\"01-01-2020\")),"},{"lineNumber":83,"author":{"gitId":"ivanderjmw"},"content":"        };"},{"lineNumber":84,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":85,"author":{"gitId":"ivanderjmw"},"content":"        for (Trip t: trips) {"},{"lineNumber":86,"author":{"gitId":"ivanderjmw"},"content":"            trippieData.addTrip(t);"},{"lineNumber":87,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":89,"author":{"gitId":"ivanderjmw"},"content":"        Trip x \u003d trippieData.removeTripFromIndex(3);"},{"lineNumber":90,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":91,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(\"4 TripName3 01-01-2020\", x.toString());"},{"lineNumber":92,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":94,"author":{"gitId":"ivanderjmw"},"content":"    @Test"},{"lineNumber":95,"author":{"gitId":"ivanderjmw"},"content":"    void getTripFromIndex_singleTrip_correctIndex() throws ParseException, TrippieException {"},{"lineNumber":96,"author":{"gitId":"ivanderjmw"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":97,"author":{"gitId":"ivanderjmw"},"content":"        TrippieData trippieData \u003d new TrippieData(storage);"},{"lineNumber":98,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":99,"author":{"gitId":"ivanderjmw"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":100,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":101,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":102,"author":{"gitId":"ivanderjmw"},"content":"        Trip[] trips \u003d {"},{"lineNumber":103,"author":{"gitId":"ivanderjmw"},"content":"            new Trip(0, \"TripName0\", df.parse(\"01-01-2020\")),"},{"lineNumber":104,"author":{"gitId":"ivanderjmw"},"content":"            new Trip(1, \"TripName1\", df.parse(\"01-01-2020\")),"},{"lineNumber":105,"author":{"gitId":"ivanderjmw"},"content":"            new Trip(2, \"TripName2\", df.parse(\"01-01-2020\")),"},{"lineNumber":106,"author":{"gitId":"ivanderjmw"},"content":"            new Trip(3, \"TripName3\", df.parse(\"01-01-2020\")),"},{"lineNumber":107,"author":{"gitId":"ivanderjmw"},"content":"        };"},{"lineNumber":108,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":109,"author":{"gitId":"ivanderjmw"},"content":"        for (Trip t: trips) {"},{"lineNumber":110,"author":{"gitId":"ivanderjmw"},"content":"            trippieData.addTrip(t);"},{"lineNumber":111,"author":{"gitId":"ivanderjmw"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":113,"author":{"gitId":"ivanderjmw"},"content":"        assertEquals(\"4 TripName3 01-01-2020\", trippieData.getTripFromIndex(3).toString());"},{"lineNumber":114,"author":{"gitId":"ivanderjmw"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":116,"author":{"gitId":"ivanderjmw"},"content":"}"}],"authorContributionMap":{"ivanderjmw":116}},{"path":"text-ui-test/input.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"ivanderjmw"},"content":"new trip"},{"lineNumber":2,"author":{"gitId":"ivanderjmw"},"content":"Wonderful Singapore"},{"lineNumber":3,"author":{"gitId":"ivanderjmw"},"content":"01-01-2023"},{"lineNumber":4,"author":{"gitId":"ivanderjmw"},"content":"1.409"},{"lineNumber":5,"author":{"gitId":"ivanderjmw"},"content":"USD"},{"lineNumber":6,"author":{"gitId":"ivanderjmw"},"content":"999"},{"lineNumber":7,"author":{"gitId":"ivanderjmw"},"content":"list /p"},{"lineNumber":8,"author":{"gitId":"ivanderjmw"},"content":"new trip"},{"lineNumber":9,"author":{"gitId":"ivanderjmw"},"content":"Amazing Bali"},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":"03-04-2021"},{"lineNumber":11,"author":{"gitId":"ivanderjmw"},"content":"0.00123"},{"lineNumber":12,"author":{"gitId":"ivanderjmw"},"content":"IDR"},{"lineNumber":13,"author":{"gitId":"ivanderjmw"},"content":"1000029"},{"lineNumber":14,"author":{"gitId":"ivanderjmw"},"content":"load trip"},{"lineNumber":15,"author":{"gitId":"ivanderjmw"},"content":"1"},{"lineNumber":16,"author":{"gitId":"ivanderjmw"},"content":"list /p"},{"lineNumber":17,"author":{"gitId":"ivanderjmw"},"content":"load trip"},{"lineNumber":18,"author":{"gitId":"ivanderjmw"},"content":"1"},{"lineNumber":19,"author":{"gitId":"ivanderjmw"},"content":"add /n Apple MBS /d 3 /t 1200 to 1400"},{"lineNumber":20,"author":{"gitId":"ivanderjmw"},"content":"list /p"},{"lineNumber":21,"author":{"gitId":"tengkianen"},"content":"add /n nus and ntu /d 3 /t 1200 to 1400"},{"lineNumber":22,"author":{"gitId":"tengkianen"},"content":"add /n clementi mall /d 1 /t 0200 to 0400"},{"lineNumber":23,"author":{"gitId":"tengkianen"},"content":"list /p"},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":"delete /p 1"},{"lineNumber":25,"author":{"gitId":"tengkianen"},"content":"list /p"},{"lineNumber":26,"author":{"gitId":"tengkianen"},"content":"add /n clementi /d 2 /t 1000 to 1200"},{"lineNumber":27,"author":{"gitId":"tengkianen"},"content":"add /n ntu /d 2 /t 0700 to 0800"},{"lineNumber":28,"author":{"gitId":"tengkianen"},"content":"list /p"},{"lineNumber":29,"author":{"gitId":"tengkianen"},"content":"add /n nus Soc /d 5 /t 1200 to 1400"},{"lineNumber":30,"author":{"gitId":"tengkianen"},"content":"list /p"},{"lineNumber":31,"author":{"gitId":"ivanderjmw"},"content":"load trip"},{"lineNumber":32,"author":{"gitId":"ivanderjmw"},"content":"2"},{"lineNumber":33,"author":{"gitId":"tengkianen"},"content":"buy /n ice cream /d 1 /c 8.21"},{"lineNumber":34,"author":{"gitId":"tengkianen"},"content":"list /e"},{"lineNumber":35,"author":{"gitId":"tengkianen"},"content":"help"},{"lineNumber":36,"author":{"gitId":"tengkianen"},"content":"buy /n coconut /d 2 /c 5.00"},{"lineNumber":37,"author":{"gitId":"tengkianen"},"content":"buy /n bag /d 3 /c 50.30"},{"lineNumber":38,"author":{"gitId":"ivanderjmw"},"content":"load trip"},{"lineNumber":39,"author":{"gitId":"ivanderjmw"},"content":"2"},{"lineNumber":40,"author":{"gitId":"weishuangtan"},"content":"budget 300"},{"lineNumber":41,"author":{"gitId":"ivanderjmw"},"content":"edit trip"},{"lineNumber":42,"author":{"gitId":"ivanderjmw"},"content":"1"},{"lineNumber":43,"author":{"gitId":"ivanderjmw"},"content":"changed trip"},{"lineNumber":44,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":45,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":46,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":47,"author":{"gitId":"ivanderjmw"},"content":""},{"lineNumber":48,"author":{"gitId":"ivanderjmw"},"content":"load trip"},{"lineNumber":49,"author":{"gitId":"ivanderjmw"},"content":"1"},{"lineNumber":50,"author":{"gitId":"ivanderjmw"},"content":"list /p"},{"lineNumber":51,"author":{"gitId":"ivanderjmw"},"content":"delete trip"},{"lineNumber":52,"author":{"gitId":"ivanderjmw"},"content":"1"},{"lineNumber":53,"author":{"gitId":"ivanderjmw"},"content":"y"},{"lineNumber":54,"author":{"gitId":"ivanderjmw"},"content":"load trip"},{"lineNumber":55,"author":{"gitId":"ivanderjmw"},"content":"1"},{"lineNumber":56,"author":{"gitId":"ivanderjmw"},"content":"list /e"},{"lineNumber":57,"author":{"gitId":"ivanderjmw"},"content":"exit"}],"authorContributionMap":{"tengkianen":15,"ivanderjmw":41,"weishuangtan":1}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\""},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd .."},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test"},{"lineNumber":10,"author":{"gitId":"ivanderjmw"},"content":"rm -rf trippie_data"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"},{"lineNumber":16,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"Test passed!\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":21,"author":{"gitId":"-"},"content":"else"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"Test failed!\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":23,"ivanderjmw":1}},{"path":"trippie_data_mock/Tokyo.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"This file shows your saved trips under Trippie!"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":3,"author":{"gitId":"tengkianen"},"content":"Here is your itinerary! Enjoy your trip :)"},{"lineNumber":4,"author":{"gitId":"tengkianen"},"content":"Day | Start Time | End Time | Place"},{"lineNumber":5,"author":{"gitId":"tengkianen"},"content":"1 | 0400 | 1100 | Flight to Tokyo Haneda Airport"},{"lineNumber":6,"author":{"gitId":"tengkianen"},"content":"1 | 1200 | 1400 | Favourite Ramen Shop @ Ueno"},{"lineNumber":7,"author":{"gitId":"tengkianen"},"content":"1 | 1400 | 1700 | Shop at Akihabara"},{"lineNumber":8,"author":{"gitId":"tengkianen"},"content":"1 | 1730 | 1900 | Sunset at Ueno Park"},{"lineNumber":9,"author":{"gitId":"tengkianen"},"content":"1 | 2000 | 2200 | Check-in at Continental Hotel"},{"lineNumber":10,"author":{"gitId":"tengkianen"},"content":"2 | 0900 | 1100 | Breakfast at Toyosu Fish Market"},{"lineNumber":11,"author":{"gitId":"tengkianen"},"content":"2 | 1200 | 1400 | Explore Asakusa"},{"lineNumber":12,"author":{"gitId":"tengkianen"},"content":"2 | 1430 | 1530 | Udon Lunch!"},{"lineNumber":13,"author":{"gitId":"tengkianen"},"content":"2 | 1600 | 1800 | Shop at Harajuku"},{"lineNumber":14,"author":{"gitId":"tengkianen"},"content":"2 | 1830 | 1930 | Dinner at Shibuya"},{"lineNumber":15,"author":{"gitId":"tengkianen"},"content":"2 | 2000 | 2300 | Cocktails at Shibuya"},{"lineNumber":16,"author":{"gitId":"tengkianen"},"content":"3 | 0800 | 1400 | Baseball Game at Tokyo Dome"},{"lineNumber":17,"author":{"gitId":"tengkianen"},"content":"3 | 1500 | 2000 | Find an Onsen!"},{"lineNumber":18,"author":{"gitId":"tengkianen"},"content":"4 | 0700 | 1400 | Flight Home :--("},{"lineNumber":19,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":20,"author":{"gitId":"tengkianen"},"content":"These are your expenses!"},{"lineNumber":21,"author":{"gitId":"tengkianen"},"content":"Day | Item | Cost"},{"lineNumber":22,"author":{"gitId":"tengkianen"},"content":"1 | Ramen | $800.0"},{"lineNumber":23,"author":{"gitId":"tengkianen"},"content":"1 | Portable Wifi | $1600.0"},{"lineNumber":24,"author":{"gitId":"tengkianen"},"content":"2 | Branded Goods | $75000.0"},{"lineNumber":25,"author":{"gitId":"tengkianen"},"content":"2 | Counterfeit goods | $9000.0"},{"lineNumber":26,"author":{"gitId":"tengkianen"},"content":"2 | Cocktails | $12000.0"},{"lineNumber":27,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":28,"author":{"gitId":"tengkianen"},"content":"Total budget: $1500.00"},{"lineNumber":29,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":30,"author":{"gitId":"tengkianen"},"content":"Forex Abbreviation: JPY"},{"lineNumber":31,"author":{"gitId":"tengkianen"},"content":""},{"lineNumber":32,"author":{"gitId":"tengkianen"},"content":"Forex Rate: 76.65"}],"authorContributionMap":{"tengkianen":32}},{"path":"trippie_data_mock/trippie.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"tengkianen"},"content":"DEFAULT 2"},{"lineNumber":2,"author":{"gitId":"tengkianen"},"content":"0,Hong Kong,29-12-2020,4"},{"lineNumber":3,"author":{"gitId":"tengkianen"},"content":"1,Tokyo,19-06-2021,4"},{"lineNumber":4,"author":{"gitId":"tengkianen"},"content":"2,United Kingdom,03-11-2022,4"}],"authorContributionMap":{"tengkianen":4}}]
