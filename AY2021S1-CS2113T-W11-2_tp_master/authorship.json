[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    mainClassName \u003d \"seedu.trippie.Trippie\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    archiveBaseName \u003d \"trippie\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "ivanderjmw": 3
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": " # About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Felix Halim | [Github](https://github.com/felixhalim) | [Portfolio](docs/team/felixhalim.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Wei Shuang | [Github](https://github.com/weishuangtan/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "![](https://avatars3.githubusercontent.com/u/57558909?s\u003d460\u0026u\u003d006c8439b55d06cd18e6b03d2a2af8f7fa74d864\u0026v\u003d4) | Ivander Jonathan | [Github](https://github.com/ivanderjmw) | [Portfolio](docs/team/ivander.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Teng Kian En| [Github](https://github.com/tengkianen) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/60372589?s\u003d400\u0026u\u003d1de615cc2e7c38379bb93dafada1d7b27031c124\u0026v\u003d4) | Tan Zheng Chong, Shawn | [Github](https://github.com/ShawnTanzc) | [Portfolio](docs/team/ShawnTanzc.md)"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 1,
      "felixhalim": 1,
      "tengkianen": 1,
      "-": 4,
      "ivanderjmw": 1,
      "weishuangtan": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "# Trippie"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Trippie is a command-line app to plan any of your upcoming trips. It is tailored to match the needs of student travellers. Whether you are planning for your summer holiday, or a leisure trip on your student exchange program, Trippie got you covered! "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 2,
      "-": 6
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Trippie is a command-line app to plan any of your upcoming trips. It is tailored to match the needs of student travellers. Whether you are planning for your summer holiday, or a leisure trip on your student exchange program, Trippie got you covered! "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Create new trip: `new trip`](#creating-new-trip-new-trip)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [View help: `help`](#viewing-help-help)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Add a place: `add`](#adding-a-place-add)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [List all places: `list /p`](#listing-all-places-list-p)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Search for place: `search`](#searching-for-place-search)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Delete place: `delete /p`](#deleting-place-delete-p)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Edit budget: `budget`](#editing-budget-budget)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Add an expense: `buy`](#adding-an-expense-buy)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [List all expenses: `list /e`](#listing-all-expenses-list-e)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Delete an expense: `delete /e`](#deleting-an-expense-delete-e)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Exit the Trippie: `exit`](#exiting-the-trippie-exit)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Save the data](#saving-the-data)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "1. Verify that you have Java 11 or above installed in your computer."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "2. Download the latest `trippie.jar`."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "3. Copy the file to a folder where you want to run it from."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "4. Using the terminal, navigate to the path of `trippie.jar`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "5. Run `java -jar trippie.jar`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "6. If the setup is correct, you should see a welcome message. Then, it is now ready to go."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Creating new trip: `new trip`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Creates a new trip. You will be prompted to enter some details (i.e. name, start date, exchange rate, and budget) on"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": " your"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": " new trip. This allows you to organize multiple trips conveniently."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `new trip`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Viewing help: `help`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Shows a concise list of commands available. "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Adding a place: `add`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Adds a place to your trip."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `add /n PLACE_NAME /d DAY /t TIME`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* `PLACE_NAME` is the label of the place."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* `DAY` indicates which day you want to visit the place."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* `TIME` indicates the time in the 24-hour format. Separate starting time and ending time with `to`."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "`add /n Dinner at Marina Bay Sands /d 2 /t 1800 to 2000`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Got it. I\u0027ve added this place:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "1800 - 2000 Dinner at Marina Bay Sands"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Listing all places: `list /p`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Displays all places in a timetable format."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `list /p [/d DAY]`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* `DAY` indicates the specific day which timetable should display."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* If `[/d DAY]` is not specified, displays the full timetable."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "`list /p`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "DAY 2: (2020-10-21)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "1. 1800 - 2000 Dinner at Marina Bay Sands"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Searching for place: `search`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Displays all places that includes the search keyword. "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `search KEYWORD`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "`search Dinner`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Here is the matching place in your list:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "1.1800 - 2000 Dinner at Marina Bay Sands on DAY 2"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Deleting place: `delete /p`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Deletes the specified place from the list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `delete /p PLACE_INDEX`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* `PLACE_INDEX` refers to the index of the place that you want to delete."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "`delete /p 1`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Noted. I\u0027ve removed this place."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "1800 - 2000 Dinner at Marina Bay Sands"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "There are 0 items in the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Editing budget: `budget`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Edits a budget to keep track of in expenditure list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `budget AMOUNT`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* `AMOUNT` indicates your planned budget to spend for the trip."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "`budget 100`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Successfully set your total budget to 100.00"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Adding an expense: `buy`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Adds an item with its final cost into an expenditure list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `buy /i ITEM_NAME /c FINAL_COST /d DAY`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* `ITEM_NAME` is the label of the item."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* `FINAL_COST` indicates the cost of the item you purchased."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* `DAY` indicates the specific day when you bought the item."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "`buy /i R\u0026B Brown Sugar /c 3.00 /d 2`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Got it! I\u0027ve added the following item: Day 2: R\u0026B Brown Sugar - $3.00"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "There are 1 items in the list."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Listing all expenses: `list /e`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Displays all the items bought in the expenditure list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `list /e`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Total budget: $100.00"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expense List:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "[1] Day 2: R\u0026B Brown Sugar - $3.00"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Your current total spending is $3.00"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Deleting an expense: `delete /e`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Deletes the specified place from the list."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `delete /p EXPENSE_INDEX`"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* `EXPENSE_INDEX` refers to the index of the expense based on the list that you want to delete."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "`delete /p 1`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Noted. I\u0027ve removed this item from the expenditure list."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Day 2: R\u0026B Brown Sugar - $3.00"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "There are 0 items in the list."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Exiting the Trippie: `exit`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Exits the program and auto-saves."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Saving the data:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Trippie data are saved in the hard disk automatically."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**Action** | **Format, Examples**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**new trip**|`new trip`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**help**|`help`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**add**|`add /n PLACE_NAME /d DAY /t TIME`\u003cbr\u003ee.g., `add /n Dinner at Marina Bay Sands /d 2 /t 1800 to 2000`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**list /p**|`list /p [/d DAY]` \u003cbr\u003ee.g., `list /p`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**search**|`search KEYWORD` \u003cbr\u003ee.g., `search Dinner`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**delete /p**|`delete /p PLACE_INDEX` \u003cbr\u003ee.g., `delete 1`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**budget**|`budget AMOUNT`\u003cbr\u003ee.g., `budget 100`"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**buy**|`buy /i ITEM_NAME /c FINAL_COST /d DAY` \u003cbr\u003ee.g., `buy /i R\u0026B Brown Sugar /c 3.00 /d 2`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**list /e**|`list /e`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**delete /e**|`delete /p EXPENSE_INDEX` \u003cbr\u003ee.g., `delete 1`"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**exit**|`exit`"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 179,
      "-": 22
    }
  },
  {
    "path": "src/main/java/seedu/trippie/ExpenseComparator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package seedu.trippie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import seedu.trippie.data.Expense;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class ExpenseComparator implements Comparator\u003cExpense\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public int compare(Expense a, Expense b) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return a.getExpenseDayBought() - b.getExpenseDayBought();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 12
    }
  },
  {
    "path": "src/main/java/seedu/trippie/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package seedu.trippie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.command.AddExpenseCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.command.AddPlaceCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.command.BudgetCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import seedu.trippie.command.CalculateCurrencyCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.command.DeleteExpenditureCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.command.DeletePlaceCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.command.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.command.ListExpenseCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.command.ListPlacesCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.command.LoadTripCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.command.NewTripCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.command.SearchCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "import seedu.trippie.exception.TrippieIllegalCommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.exception.TrippieInvalidArgumentException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Invalid Command! Type \\\"help\\\" to view the commands available!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public static Command parse(String userInput) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            if (userInput.equals(\"exit\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            } else if (userInput.startsWith(\"buy\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                return new AddExpenseCommand(userInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            } else if (userInput.startsWith(\"delete /e\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                return new DeleteExpenditureCommand(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            } else if (userInput.equals(\"list /e\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                return new ListExpenseCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            } else if (userInput.startsWith(\"budget\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                return new BudgetCommand(userInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else if (userInput.startsWith(\"convert /to\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                return new CalculateCurrencyCommand(userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            } else if (userInput.startsWith(\"add \")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                return new AddPlaceCommand(userInput);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            } else if (userInput.startsWith(\"delete /p\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                return new DeletePlaceCommand(userInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            } else if (userInput.equals(\"help\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else if (userInput.startsWith(\"list /p\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                return new ListPlacesCommand(userInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            } else if (userInput.startsWith(\"search\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                return new SearchCommand(userInput);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            } else if (userInput.equals(\"new trip\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                return new NewTripCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            } else if (userInput.equals(\"load trip\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                return new LoadTripCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                throw new TrippieIllegalCommandException(ERROR_MESSAGE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        } catch (TrippieIllegalCommandException | TrippieInvalidArgumentException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 8,
      "felixhalim": 3,
      "tengkianen": 10,
      "ivanderjmw": 31,
      "weishuangtan": 8
    }
  },
  {
    "path": "src/main/java/seedu/trippie/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package seedu.trippie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.Expense;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.ExpenseList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.Place;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.PlaceList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.Trip;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public static final String MASTER_DIRECTORY \u003d \"trippie_data\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public static final String MASTER_FILE_NAME \u003d \"trippie.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public static final String MASTER_FILE_PATH \u003d MASTER_DIRECTORY + File.separator + MASTER_FILE_NAME;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public static final String FILE_EXTENSION \u003d \".txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Setups a master file from a tripList. Crates the directories and loads the masterFile onto tripList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     * @param trippieData a tripList object that would be updated."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void setupMasterFile(TrippieData trippieData) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        File file \u003d new File(MASTER_FILE_PATH);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        Scanner readFile \u003d getOrCreateFileScanner(file);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        loadMasterFile(readFile, trippieData);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        if (trippieData.getTripList().size() \u003e 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            trippieData.setCurrentTripFromIndex(trippieData.getCurrentTrip().getIndex());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            trippieData.loadCurrentTripFromFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     * Gets a scanner for the corresponding file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     * Creates a file if the corresponding file does not exist."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     * @param file A file to get the scanner from"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     * @return Scanner from file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public Scanner getOrCreateFileScanner(File file) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            // Code referenced from"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            // https://stackoverflow.com/questions/2833853/create-whole-path-automatically-when-writing-to-a-new-file"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            Files.createDirectories(Path.of(file.getPath()).getParent());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            if (file.createNewFile()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                System.out.println(\"I can\u0027t find a file in your directory :(\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                System.out.println(\"I created a new \" + file.getPath() + \" file for you!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            } else if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                System.out.println(\"I found a file in your directory!\\nSetting up the file now...\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            return new Scanner(file);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     * This method saves a tripList object to a single master txt file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     * Each line in the master file stores a trip in the following format:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     * TRIP_INDEX,TRIP_NAME,TRIP_DATE"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     * @param trippieData The tripList object to be saved."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void saveMasterFile(TrippieData trippieData) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        FileWriter fileWriter \u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            fileWriter \u003d new FileWriter(MASTER_FILE_PATH);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        FileWriter finalFileWriter \u003d fileWriter;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            if (trippieData.getCurrentTrip() !\u003d null) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                finalFileWriter.write("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                        String.format(\"DEFAULT %d\\n\", trippieData.getCurrentTrip().getIndex())"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                );"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            trippieData.getTripList().stream().forEach(trip -\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                    finalFileWriter.write("
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                            trip.getIndex() + \",\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                                    + trip.getName() + \",\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                                    + df.format(trip.getStartDate()) + \"\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    System.out.println(\"Error occurred when saving Master File.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            });"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(\"Error occurred when saving Master File.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            System.out.println(\"Encountered a problem when closing file.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void saveTrip(Trip trip) throws IOException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        if (trip \u003d\u003d null) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            System.out.println(\"Failed to save trip\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        String path \u003d MASTER_DIRECTORY + File.separator + trip.getName() + FILE_EXTENSION;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        fileWriter.write("
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                \"This file shows your saved trips under Trippie!\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                        + System.lineSeparator()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                        + System.lineSeparator()"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        );"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        savePlaceList(fileWriter, trip.getPlaceListObject());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        saveExpenseList(fileWriter, trip.getExpenseListObject());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private void saveExpenseList(FileWriter fileWriter, ExpenseList expenseList) throws IOException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        if (expenseList.getExpenseList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            fileWriter.write(\"There is currently nothing in your Expense list.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            fileWriter.write(\"These are your expenses!\" + System.lineSeparator());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            fileWriter.write(\"Day | Item | Cost\" + System.lineSeparator());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            for (Expense expense : expenseList.getExpenseList()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                fileWriter.write(expense.getExpenseDayBought() + \" | \" + expense.getExpenseName()"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                        + \" | $\" + expense.getExpenseCost() + System.lineSeparator());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        Float budget \u003d expenseList.getBudgetValue();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (budget !\u003d null) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            fileWriter.write(System.lineSeparator() + \"Total budget: $\" + String.format(\"%.2f\", budget)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                    + System.lineSeparator());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            fileWriter.write(System.lineSeparator() + \"Total budget has not been set\" + System.lineSeparator());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String currencyAbbreviation \u003d expenseList.getCurrencyAbbreviation();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (currencyAbbreviation !\u003d null) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            fileWriter.write(System.lineSeparator() + \"Forex Abbreviation: \" + currencyAbbreviation"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    + System.lineSeparator());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            fileWriter.write(System.lineSeparator()"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    + \"ForEx abbreviation has not been set\" + System.lineSeparator());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        Float forExValue \u003d expenseList.getForExValue();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (forExValue !\u003d null) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            fileWriter.write(System.lineSeparator() + \"Forex Rate: \" + forExValue + System.lineSeparator());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            fileWriter.write(System.lineSeparator() + \"Forex Rate has not been set\" + System.lineSeparator());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private void savePlaceList(FileWriter fileWriter, PlaceList placeList) throws IOException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        if (placeList.getPlaceList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            fileWriter.write(\"Please add your itinerary!\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            fileWriter.write(\"Here is your itinerary! Enjoy your trip :)\" + System.lineSeparator());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            fileWriter.write(\"Day | Start Time | End Time | Place\" + System.lineSeparator());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            int maxDay \u003d placeList.getMaxDay();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d maxDay; i++) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                for (Place place : placeList.getPlaceList()) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                    if (place.getPlaceDay() \u003d\u003d i) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                        fileWriter.write(place.getPlaceDay() + \" | \""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                                + String.format(\"%04d\", place.getPlaceStartTime()) + \" | \""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                                + String.format(\"%04d\", place.getPlaceEndTime()) + \" | \""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                                + place.getPlaceName() + System.lineSeparator());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        fileWriter.write(System.lineSeparator());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     * Finds a corresponding trip file, and either gets or create the File."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     * Loads the content of the file to the trip object"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     * @param trip A trip object to search for"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     * @return A trip from the file contents"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public Trip loadTrip(Trip trip) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        File file \u003d new File(MASTER_DIRECTORY + File.separator + trip.getName() + FILE_EXTENSION);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        Scanner readFile \u003d getOrCreateFileScanner(file);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        Trip newTrip \u003d new Trip(trip.getIndex(), trip.getName(), trip.getStartDate());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        List\u003cPlace\u003e places \u003d newTrip.getPlaceListObject().getPlaceList();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        List\u003cExpense\u003e expenses \u003d newTrip.getExpenseListObject().getExpenseList();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            String line \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            if (line.contains(\"Day | Start Time | End Time | Place\")) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                String input;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                input \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                do {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                    String[] placeParameters \u003d input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                    places.add(new Place("
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                            placeParameters[3],"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                            Integer.parseInt(placeParameters[0]),"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                            Integer.parseInt(placeParameters[1]),"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                            Integer.parseInt(placeParameters[2]))"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                    input \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                } while (!input.equals(\"\"));"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            } else if (line.contains(\"Day | Item | Cost\")) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                String input;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                input \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                do {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                    String[] expenseParameters \u003d input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                    expenses.add(new Expense("
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                            expenseParameters[1],"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                            Float.parseFloat(expenseParameters[2].substring(1)),"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                            Integer.parseInt(expenseParameters[0]))"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                    input \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                } while (!input.equals(\"\"));"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            } else if (line.contains(\"Total budget: $\")) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                newTrip.getExpenseListObject().setBudgetValue(extractBudgetValue(line));"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else if (line.contains(\"Forex Abbreviation: \")) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                newTrip.getExpenseListObject().setCurrencyAbbreviation(extractCurrencyAbbreviation(line));"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else if (line.contains(\"Forex Rate: \")) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                newTrip.getExpenseListObject().setForExValue(extractForExValue(line));"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        newTrip.getExpenseListObject().setExpenseList(expenses);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        newTrip.getPlaceListObject().setPlaceList(places);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return newTrip;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private Float extractBudgetValue(String userInput) throws NullPointerException, NumberFormatException {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String budgetValueString \u003d userInput.replace(\"Total budget: $\", \"\").trim();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return Float.parseFloat(budgetValueString);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private String extractCurrencyAbbreviation(String userInput) throws NullPointerException {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return userInput.replace(\"Forex Abbreviation: \", \"\").trim();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private Float extractForExValue(String userInput) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String forExString \u003d userInput.replace(\"Forex Rate: \", \"\").trim();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return Float.parseFloat(forExString);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void loadMasterFile(Scanner readFile, TrippieData trippieData) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        List\u003cTrip\u003e parsedTripList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            String line \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            // Parse default parameter"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            if (line.startsWith(\"DEFAULT\")) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                trippieData.setDefaultTripIndex("
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                        Integer.parseInt(line.replace(\"DEFAULT\", \"\").trim())"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                );"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            String[] parameters \u003d line.split(\",\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                parsedTripList.add("
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                        new Trip("
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                                Integer.parseInt(parameters[0]),"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                                parameters[1],"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                                df.parse(parameters[2])"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                        )"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                );"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        trippieData.setTripList(parsedTripList);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        if (trippieData.getTripList().size() \u003e 0) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            System.out.println(\"Found these trips in your computer \\n\" + trippieData.list());"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            System.out.println(\"Please create a new trip by entering \u0027new trip\u0027\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 38,
      "tengkianen": 4,
      "ivanderjmw": 179,
      "weishuangtan": 97
    }
  },
  {
    "path": "src/main/java/seedu/trippie/Trippie.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.trippie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import seedu.trippie.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Trippie {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private TrippieData trippieData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private boolean isFirstRun;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public Trippie() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        trippieData \u003d new TrippieData(storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        isFirstRun \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        new Trippie().run();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        ui.greetUser();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        storage.setupMasterFile(trippieData);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            if (isFirstRun) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                System.out.println(\"Please create a new trip first by entering the command \u0027new trip\u0027!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                isFirstRun \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            if (c !\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                c.execute(ui, trippieData);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                // here current Trip should not output index out of bounds exception."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                storage.saveTrip(trippieData.getCurrentTrip());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            storage.saveMasterFile(trippieData);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 10,
      "tengkianen": 6,
      "-": 11,
      "ivanderjmw": 25,
      "weishuangtan": 6
    }
  },
  {
    "path": "src/main/java/seedu/trippie/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package seedu.trippie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void showFarewells() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private void printLogo() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \"  _            _   ____   ____   _            __T___T__   \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" _| |_   ____ |_| | __ \\\\ | __ \\\\ |_|   ____   /         \\\\ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|_   _| /  __\\\\ _  | |_| || |_| | _   / __ \\\\ | |_|   |_| |  \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"  | | _ | |   | | |  __/ |  __/ | | | |__|_||    ___    |\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"  | |/ || |   | | | |    | |    | | | \\\\____  \\\\  \\\\WWW/  /\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"   \\\\__/ |_|   |_| |_|    |_|    |_|  \\\\____/   \\\\_______/\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        System.out.println(\"Welcome to\\n\" + logo"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                + \"\\n\\t\\t\\t\\t\\t\\t\\t\" + \"Travel made easy\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        System.out.println(\"_________________________________________________________________________\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.print(\"\u003e\u003e \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public String getLine() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 15,
      "felixhalim": 2,
      "tengkianen": 5,
      "-": 13,
      "ivanderjmw": 4,
      "weishuangtan": 3
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/AddExpenseCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import seedu.trippie.ExpenseComparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.data.Expense;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "import seedu.trippie.exception.TrippieInvalidArgumentException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class AddExpenseCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    private static final String FORMAT_ERROR_MESSAGE \u003d \"Incorrect format for [buy] command! Please try the following:\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            + \"Format: buy /i ITEM_NAME /c FINAL_COST /d DAY_NUMBER\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            + \"Example: buy /i R\u0026B Brown Sugar /c 3.00 /d 2\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    private static final String PARAMETER_ERROR_MESSAGE \u003d \"Please check that your FINAL_COST and DAY_NUMBER parameters\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            + \"are in \\nnumerical form.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private final String expenseName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    private final Float expenseCost;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    private final int expenseDayBought;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public AddExpenseCommand(String userInput) throws TrippieInvalidArgumentException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            this.expenseName \u003d extractExpenseName(userInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            this.expenseCost \u003d extractExpenseCost(userInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            this.expenseDayBought \u003d extractDayBought(userInput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            char[] characters \u003d userInput.toCharArray();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            if (characters[3] !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            throw new TrippieInvalidArgumentException(PARAMETER_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String extractExpenseName(String userInput) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String withoutCost \u003d userInput.split(\" /c \")[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return withoutCost.split(\" /i \")[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public Float extractExpenseCost(String userInput) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String withoutDay \u003d userInput.split(\" /d \")[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String expenseCost \u003d withoutDay.split(\" /c \")[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (expenseCost.contains(\"$\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            expenseCost \u003d expenseCost.replace(\"$\", \"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        return Float.parseFloat(expenseCost);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public int extractDayBought(String userInput) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String onlyDay \u003d userInput.split(\" /d \")[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        return Integer.parseInt(onlyDay);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void execute(Ui ui, TrippieData trippieData) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        List\u003cExpense\u003e expenses \u003d trippieData.getCurrentTrip().getExpenseListObject().getExpenseList();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        Expense expenseEntry \u003d new Expense(expenseName, expenseCost, expenseDayBought);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        expenses.add(expenseEntry);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        if (expenses.size() \u003e 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            sortExpenseList(expenses);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve added the following item: \" + expenseEntry.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.printf(\"Now you have %d %s in the list.%n\", expenses.size(), expenses.size() \u003e 1 ? \"items\" : \"item\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        trippieData.getCurrentTrip().getExpenseListObject().setExpenseList(expenses);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public void sortExpenseList(List\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        expenseList.sort(new ExpenseComparator());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 43,
      "felixhalim": 3,
      "ivanderjmw": 5,
      "weishuangtan": 29
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/AddPlaceCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.data.Place;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.exception.TrippieInvalidArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class AddPlaceCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static final String FORMAT_ERROR_MESSAGE \u003d \"Incorrect format for [add] command! Please try the following:\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            + \"Format: add /n PLACE_NAME /d DAY /t TIME\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            + \"Example: add /n Dinner at Marina Bay Sands /d 2 /t 1800 to 2000\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static final String PARAMETER_ERROR_MESSAGE \u003d \"Please check that your DAY parameter is in the numerical \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            + \"form.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static final String TIME_ERROR_MESSAGE \u003d \"Please check that your TIME parameters are in the correct \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            + \"24-hours format\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static final String TIME_TRAVELLER_ERROR_MESSAGE \u003d \"Are you a time traveller? Your END TIME should \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            + \"end before START TIME\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private final int day;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private final int start;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private final int end;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public AddPlaceCommand(String userInput) throws TrippieInvalidArgumentException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            this.name \u003d extractName(userInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            this.day \u003d extractDay(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            this.start \u003d extractStartTime(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            this.end \u003d extractEndTime(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            char[] characters \u003d userInput.toCharArray();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            if (characters[3] !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            throw new TrippieInvalidArgumentException(PARAMETER_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String extractName(String userInput) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String withoutDay \u003d userInput.split(\" /d \")[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return withoutDay.split(\" /n \")[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public int extractDay(String userInput) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String withoutTime \u003d userInput.split(\" /t \")[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String day \u003d withoutTime.split(\" /d \")[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return Integer.parseInt(day.trim());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public int extractStartTime(String userInput) throws TrippieInvalidArgumentException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return extractTime(userInput, true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private int extractTime(String userInput, boolean isStart) throws TrippieInvalidArgumentException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String time \u003d userInput.split(\" /t \")[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String start \u003d time.split(\"to\")[0];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String end \u003d time.split(\"to\")[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        int parsedTime;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        if (isStart) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            parsedTime \u003d Integer.parseInt(start.trim());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            parsedTime \u003d Integer.parseInt(end.trim());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        int hours \u003d parsedTime / 100;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        int minutes \u003d parsedTime % 100;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        if (minutes \u003e\u003d 60 || minutes \u003c 0 || hours \u003e\u003d 24 || hours \u003c 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            throw new TrippieInvalidArgumentException(TIME_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return parsedTime;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public int extractEndTime(String userInput) throws TrippieInvalidArgumentException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        int endTime \u003d extractTime(userInput, false);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        if (endTime \u003c this.start) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            throw new TrippieInvalidArgumentException(TIME_TRAVELLER_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void execute(Ui ui, TrippieData trippieData) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        List\u003cPlace\u003e places \u003d trippieData.getCurrentTrip().getPlaceListObject().getPlaceList();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        Place newPlace \u003d new Place(name, day, start, end);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        places.add(newPlace);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        if (places.size() \u003e 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            sortPlaceList(places);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this place:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        System.out.println(newPlace);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.printf(\"Now you have %d %s in the list.%n\", places.size(), places.size() \u003e 1 ? \"places\" : \"place\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        int placesSize \u003d places.size();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        assert placesSize \u003e 0 : \"placesSize should be greater than 0\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        trippieData.getCurrentTrip().getPlaceListObject().setPlaceList(places);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void sortPlaceList(List\u003cPlace\u003e sortedPlaces) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        for (int i \u003d 0; i \u003c sortedPlaces.size(); i++) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            for (int j \u003d i + 1; j \u003c sortedPlaces.size(); j++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                if (sortedPlaces.get(i).getPlaceDay() \u003d\u003d sortedPlaces.get(j).getPlaceDay()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        \u0026\u0026 sortedPlaces.get(i).getPlaceStartTime() \u003e sortedPlaces.get(j).getPlaceStartTime()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    Collections.swap(sortedPlaces, i, j);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else if (sortedPlaces.get(i).getPlaceDay() \u003e sortedPlaces.get(j).getPlaceDay()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    Collections.swap(sortedPlaces, i, j);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 1,
      "felixhalim": 97,
      "tengkianen": 14,
      "ivanderjmw": 7
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/BudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "import seedu.trippie.exception.TrippieInvalidArgumentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "public class BudgetCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    private static final String FORMAT_ERROR_MESSAGE \u003d \"Incorrect format for [budget] command! \""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            + \"Please try the following:\\nFormat: budget BUDGET\\nExample: budget 4000\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    private static final String PARAMETER_ERROR_MESSAGE \u003d \"Please check that the budget value is in numerical form.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private Float budgetValue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public BudgetCommand(String userInput) throws TrippieInvalidArgumentException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.budgetValue \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            char[] characters \u003d userInput.toCharArray();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            if (characters[6] !\u003d \u0027 \u0027 | userInput.length() \u003d\u003d 7) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                this.budgetValue \u003d extractBudgetValue(userInput);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            throw new TrippieInvalidArgumentException(PARAMETER_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    private Float extractBudgetValue(String userInput) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        String budgetValueString \u003d userInput.substring(7);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return Float.parseFloat(budgetValueString);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void execute(Ui ui, TrippieData trippieData) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        trippieData.getCurrentTrip().getExpenseListObject().setBudgetValue(budgetValue);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        System.out.println(\"Successfully set your total budget to \" + String.format(\"%.2f\", budgetValue));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ivanderjmw": 28,
      "weishuangtan": 18
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/CalculateCurrencyCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import seedu.trippie.data.Currency;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import seedu.trippie.data.CurrencyType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import seedu.trippie.exception.TrippieInvalidArgumentException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class CalculateCurrencyCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String FORMAT_ERROR_MESSAGE \u003d \"Incorrect format for [convert] command. \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            + \"Please try the following:\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            + \"Format: convert /toSGD AMOUNT_IN_FOREIGN_CURRENCY\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            + \"Format: convert /toFOR AMOUNT_IN_SGD\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            + \"Example: convert /toSGD 500\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            + \"Example: convert /toFOR 500\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private final CurrencyType currencyChoice;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private final Float currencyAmount;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public CalculateCurrencyCommand(String userInput) throws TrippieInvalidArgumentException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            this.currencyChoice \u003d extractCurrencyChoice(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            this.currencyAmount \u003d extractCurrencyAmount(userInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (TrippieInvalidArgumentException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public CurrencyType extractCurrencyChoice(String userInput) throws TrippieInvalidArgumentException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            String withoutCommand \u003d userInput.split(\" /to\")[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            String currencyChoice \u003d withoutCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            CurrencyType currencyType;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            if (currencyChoice.equals(\"SGD\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                currencyType \u003d CurrencyType.LOCAL;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else if (currencyChoice.equals(\"FOR\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                currencyType \u003d CurrencyType.FOREIGN;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            return currencyType;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public Float extractCurrencyAmount(String userInput) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String withoutChoice \u003d userInput.split(\" \")[2];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return Float.parseFloat(withoutChoice);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public void execute(Ui ui, TrippieData trippieData) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        float exchangeRate \u003d trippieData.getCurrentTrip().getExpenseListObject().getForExValue();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String currencyAbbreviation \u003d trippieData.getCurrentTrip().getExpenseListObject().getCurrencyAbbreviation();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        Currency currencyEntry \u003d new Currency(currencyChoice, currencyAmount);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        float initialInputAmount \u003d currencyEntry.getCurrencyAmount();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        float finalOutputAmount;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String finalOutputAbbreviation;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"Processing... Please Wait.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (currencyEntry.getCurrencyChoice().equals(\"local\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            finalOutputAmount \u003d initialInputAmount / exchangeRate;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            finalOutputAbbreviation \u003d \"SGD\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            finalOutputAmount \u003d initialInputAmount * exchangeRate;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            finalOutputAbbreviation \u003d currencyAbbreviation;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"That amount in your \" + currencyEntry.getCurrencyChoice()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                + \" currency is \" + String.format(\"%.2f \", finalOutputAmount)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                + finalOutputAbbreviation + \".\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 78,
      "felixhalim": 1
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public abstract void execute(Ui ui, TrippieData trippieData);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 4,
      "tengkianen": 3,
      "ivanderjmw": 2,
      "weishuangtan": 1
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/DeleteExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.data.Expense;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "import seedu.trippie.exception.TrippieInvalidArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class DeleteExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static final String FORMAT_ERROR_MESSAGE \u003d \"You typed in the incorrect format for [delete /e] command! \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            + \"Please try the following:\\nFormat: delete /e EXPENSE_INDEX\\nExample: delete /e 3\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    private static final String PARAMETER_ERROR_MESSAGE \u003d \"Please check that the index keyed in is a number.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static final String NULL_ERROR_MESSAGE \u003d \"Sorry I can\u0027t find the expense. Please enter a valid index.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    private final int expenseIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public DeleteExpenditureCommand(String userInput) throws TrippieInvalidArgumentException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            String index \u003d userInput.split(\" /e \")[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            expenseIndex \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            throw new TrippieInvalidArgumentException(PARAMETER_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void execute(Ui ui, TrippieData trippieData) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        List\u003cExpense\u003e expenses \u003d trippieData.getCurrentTrip().getExpenseListObject().getExpenseList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (expenseIndex \u003e\u003d 0 \u0026\u0026 expenseIndex \u003c expenses.size()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this item from the expenditure list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            System.out.println(expenses.get(expenseIndex).toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            expenses.remove(expenseIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.printf(\"Now you have %d %s in the list.%n\", expenses.size(), expenses.size() \u003e 1 ? \"items\" :"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    \"item\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            System.out.println(NULL_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        trippieData.getCurrentTrip().getExpenseListObject().setExpenseList(expenses);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 24,
      "felixhalim": 10,
      "tengkianen": 3,
      "ivanderjmw": 5,
      "weishuangtan": 7
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/DeletePlaceCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.data.Place;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.exception.TrippieInvalidArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class DeletePlaceCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static final String FORMAT_ERROR_MESSAGE \u003d \"You typed in the incorrect format for [delete /p] command! \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            + \"Please try the following:\\nFormat: delete /p PLACE_INDEX\\nExample: delete /p 1\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static final String PARAMETER_ERROR_MESSAGE \u003d \"Please check that the index keyed in is a number.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static final String NULL_ERROR_MESSAGE \u003d \"Sorry I can\u0027t find the place. Please enter a valid index.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private final int placeIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public DeletePlaceCommand(String userInput) throws TrippieInvalidArgumentException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            String index \u003d userInput.split(\" /p \")[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            placeIndex \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            throw new TrippieInvalidArgumentException(FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            throw new TrippieInvalidArgumentException(PARAMETER_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void execute(Ui ui, TrippieData trippieData) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        List\u003cPlace\u003e places \u003d trippieData.getCurrentTrip().getPlaceListObject().getPlaceList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        if (placeIndex \u003e\u003d 0 \u0026\u0026 placeIndex \u003c places.size()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this place from the place list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            System.out.println(places.get(placeIndex).toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            places.remove(placeIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.printf(\"Now you have %d %s in the list.%n\", places.size(), places.size() \u003e 1 ? \"places\" :"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    \"place\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(NULL_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        trippieData.getCurrentTrip().getPlaceListObject().setPlaceList(places);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 41,
      "tengkianen": 3,
      "ivanderjmw": 5
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void execute(Ui ui, TrippieData trippieData) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        ui.showFarewells();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 18,
      "ivanderjmw": 2
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void execute(Ui ui, TrippieData trippieData) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        System.out.println(\"Welcome to Trippie! A one-stop app to plan any of your upcoming trips!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        System.out.println(\"Here is a list of commands which you can use to navigate your way\\nthrough Trippie!\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"[new trip]|   Creates a new trip. You will be prompted to enter some details\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"          |   Format: new trip\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"[help]    |   Shows a concise list of commands available\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"          |   Format: help\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        System.out.println(\"[add]     |   Adds a place to your trip\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        System.out.println(\"          |   Format: add /n PLACE_NAME /d DAY /t TIME\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"          |   Example: add /n Dinner at Marina Bay Sands /d 2 /t 1800 to 2000\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"[list]    |   Displays all places in a timetable format\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"(places)  |   Format: list /p [/d DAY]\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"          |   list /p /d 2\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"[search]  |   Displays all places that includes the search keyword\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"(places)  |   Format: search KEYWORD\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"          |   search Dinner\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        System.out.println(\"[delete]  |   Deletes the specified place from the list\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"(place)   |   Format: delete /p PLACE_INDEX\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"          |   Example: delete /p 1\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"[budget]  |   Edits a budget to keep track of in expenditure list\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"          |   Format: budget AMOUNT\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"          |   Example: budget 100\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"[buy]     |   Adds an item with its final cost into an expenditure list\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"          |   Format: buy /i ITEM_NAME /c FINAL_COST /d DAY_NUMBER\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"          |   Example: buy /i R\u0026B Brown Sugar /c 3.00 /d 2\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        System.out.println(\"[list]    |   Displays all the items bought in the expenditure list\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        System.out.println(\"(expenses)|   Format: list /e\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        System.out.println(\"          |\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"[delete]  |   Deletes the specified place from the list\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"(expense) |   Format: delete /e EXPENSE_INDEX\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"          |   Example: delete /e 1\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"[exit]    |   Exit the program and auto-saves\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"          |   Format: exit\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public void printBorder() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"__________|______________________________________________________________\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 28,
      "tengkianen": 3,
      "ivanderjmw": 2,
      "weishuangtan": 27
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/ListExpenseCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.data.Expense;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.exception.TrippieExceedBudgetException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "public class ListExpenseCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String EXCEED_BUDGET_MESSAGE \u003d \"WARNING! You have exceeded your initial budget.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            + \"Recommended action: Increase budget limit.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final int BAR_SIZE \u003d 10;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String SYMBOL_START_BOUNDARY \u003d \"[\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String SYMBOL_SPEND \u003d \"\u003d\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String SYMBOL_REMAINING \u003d \"-\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String SYMBOL_END_BOUNDARY \u003d \"]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public ListExpenseCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public static void createBudgetPercentageBar(float spent, float budget) throws TrippieExceedBudgetException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        if (spent \u003d\u003d budget) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"You have spent finish your budget.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else if (spent \u003e budget) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            throw new TrippieExceedBudgetException(EXCEED_BUDGET_MESSAGE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"You are still spending within your budget.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        float spentPercentage \u003d (100 * spent) / budget;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        float spentLength \u003d BAR_SIZE * spentPercentage / 100;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        StringBuilder bar \u003d new StringBuilder(SYMBOL_START_BOUNDARY);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        for (int i \u003d 0; i \u003c BAR_SIZE; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            if (i \u003c spentLength) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                bar.append(SYMBOL_SPEND);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                bar.append(SYMBOL_REMAINING);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        bar.append(SYMBOL_END_BOUNDARY);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(bar + \" \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                + String.format(\"%.1f\", spentPercentage) + \"%\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void execute(Ui ui, TrippieData trippieData) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        List\u003cExpense\u003e expenses \u003d trippieData.getCurrentTrip().getExpenseListObject().getExpenseList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        Float exchangeRate \u003d trippieData.getCurrentTrip().getExpenseListObject().getForExValue();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String currencyAbbreviation \u003d trippieData.getCurrentTrip().getExpenseListObject().getCurrencyAbbreviation();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (expenses.isEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            System.out.println(\"There is currently nothing in your Expense list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            int listIndex \u003d 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            float budget \u003d trippieData.getCurrentTrip().getExpenseListObject().getBudgetValue() * exchangeRate;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(\"Total budget: $\" + String.format(\"%.2f \", budget) + currencyAbbreviation"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    + \" (\" + String.format(\"%.2f\", budget / exchangeRate) + \" SGD)\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            System.out.println(\"Expense List:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            for (Expense expense : expenses) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                System.out.println(\"[\" + listIndex + \"] \" + expense.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                listIndex++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            float totalSpending \u003d trippieData.getCurrentTrip().getExpenseListObject().getTotalExpenses();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "            System.out.println(\"Your current total spending is $\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    + String.format(\"%.2f \", totalSpending) + currencyAbbreviation"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    + \" (\" + String.format(\"%.2f\", totalSpending / exchangeRate) + \" SGD)\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                float remainingBudget \u003d budget - totalSpending;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                checkRemainingBudget(remainingBudget, exchangeRate, currencyAbbreviation);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                createBudgetPercentageBar(totalSpending, budget);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } catch (TrippieExceedBudgetException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                System.out.println(EXCEED_BUDGET_MESSAGE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private void checkRemainingBudget(float remainingBudget, float exchangeRate, String currencyAbbreviation) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (remainingBudget \u003c 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.print(\"\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(\"Your current remaining budget is $\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    + String.format(\"%.2f \", remainingBudget) + currencyAbbreviation"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    + \" (\" + String.format(\"%.2f\", remainingBudget / exchangeRate) + \" SGD)\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 54,
      "felixhalim": 26,
      "tengkianen": 3,
      "ivanderjmw": 8,
      "weishuangtan": 1
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/ListPlacesCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.data.Place;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class ListPlacesCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private final int specifiedDay;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public ListPlacesCommand(String userInput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        specifiedDay \u003d getSpecifiedDay(userInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public int getSpecifiedDay(String userInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String[] specificDay \u003d userInput.split(\"/p\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (specificDay.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            String[] finalDay \u003d specificDay[1].split(\"/d\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            return Integer.parseInt(finalDay[1].trim());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void execute(Ui ui, TrippieData trippieData) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        List\u003cPlace\u003e places \u003d trippieData.getCurrentTrip().getPlaceListObject().getPlaceList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        Date date \u003d trippieData.getCurrentTrip().getStartDate();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (places.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"There is currently nothing in your place list. Why not add one?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        } else if (specifiedDay \u003d\u003d -1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            int listIndex \u003d 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            int dayPointer \u003d places.get(0).getPlaceDay();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            String currentDate \u003d addDays(date, dayPointer - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"DAY \" + dayPointer + \": (\" + currentDate + \")\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            for (Place place : places) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                if (dayPointer !\u003d place.getPlaceDay()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    dayPointer \u003d place.getPlaceDay();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    currentDate \u003d addDays(date, dayPointer - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    System.out.println(\"DAY \" + dayPointer + \": (\" + currentDate + \")\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                System.out.println(\"[\" + listIndex + \"] \" + place.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                listIndex++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            String currentDate \u003d addDays(date, specifiedDay - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(\"DAY \" + specifiedDay + \": (\" + currentDate + \")\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            for (Place place : places) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                if (place.getPlaceDay() \u003d\u003d specifiedDay) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                    System.out.println(place.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        trippieData.getCurrentTrip().getPlaceListObject().setPlaceList(places);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String addDays(Date date, int day) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        cal.setTime(date);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        cal.add(Calendar.DATE, day);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return sdf.format(cal.getTime());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 14,
      "tengkianen": 54,
      "ivanderjmw": 5,
      "weishuangtan": 2
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/LoadTripCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "public class LoadTripCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public LoadTripCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void execute(Ui ui, TrippieData trippieData) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        System.out.println(\"Here are your existing trips.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        System.out.println(trippieData.list());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        System.out.print(\"Which one do you want to load? Enter the index:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        int index \u003d Integer.parseInt(ui.getLine());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        trippieData.setCurrentTripFromIndex(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        trippieData.loadCurrentTripFromFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ivanderjmw": 24
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/NewTripCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.Trip;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "public class NewTripCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public NewTripCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void execute(Ui ui, TrippieData trippieData) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        System.out.print(\"Enter your new trip\u0027s name:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        System.out.print(\"Enter your new trip\u0027s start date (dd-mm-yyyy):\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        Date startDate \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            startDate \u003d df.parse(ui.getLine());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        int index \u003d trippieData.getTripList().size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.print(\"Enter the foreign exchange rate:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        Float forEx \u003d Float.parseFloat(ui.getLine());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.print(\"Enter the foreign currency abbreviation (eg. MYR): \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String currencyAbbreviation \u003d ui.getLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.print(\"Enter your budget for the trip (in SGD):\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        Float budget \u003d Float.parseFloat(ui.getLine());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String name \u003d ui.getLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        Trip newTrip \u003d new Trip(index, name, startDate);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        newTrip.getExpenseListObject().setForExValue(forEx);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        newTrip.getExpenseListObject().setCurrencyAbbreviation(currencyAbbreviation);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        newTrip.getExpenseListObject().setBudgetValue(budget);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        trippieData.getTripList().add(newTrip);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        System.out.println(\"Added the trip \" + newTrip.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        trippieData.setCurrentTripFromIndex(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 7,
      "felixhalim": 2,
      "tengkianen": 5,
      "ivanderjmw": 39
    }
  },
  {
    "path": "src/main/java/seedu/trippie/command/SearchCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package seedu.trippie.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import seedu.trippie.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import seedu.trippie.data.Place;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.data.TrippieData;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class SearchCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public SearchCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String parsedResponse;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        parsedResponse \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.keyword \u003d parsedResponse;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void execute(Ui ui, TrippieData trippieData) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        List\u003cPlace\u003e list \u003d trippieData.getCurrentTrip().getPlaceListObject().getPlaceList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        int size \u003d list.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String listPlurality \u003d size \u003e 1 ? \"are\" : \"is\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String placePlurality \u003d size \u003e 1 ? \"places\" : \"place\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"There is currently nothing in your place list. Why not add one?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.printf(\"Here %s the matching %s in your list:%n\", listPlurality, placePlurality);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            int startingNumber \u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            for (Place place : list) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                if (place.toString().toLowerCase().contains(keyword.toLowerCase())) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    System.out.println(startingNumber + \".\" + place.toString() + \" on DAY \" + place.getPlaceDay());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                    startingNumber++;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            if (startingNumber \u003d\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                System.out.println(\"Sorry I can\u0027t find any place with the keyword \\\"\" + keyword + \"\\\"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 6,
      "tengkianen": 36,
      "ivanderjmw": 3
    }
  },
  {
    "path": "src/main/java/seedu/trippie/data/Currency.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package seedu.trippie.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class Currency {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private final CurrencyType currencyChoice;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private final Float currencyAmount;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public Currency(CurrencyType currencyChoice, Float currencyAmount) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.currencyChoice \u003d currencyChoice;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.currencyAmount \u003d currencyAmount;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getCurrencyChoice() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String currencyChosen;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (currencyChoice \u003d\u003d CurrencyType.LOCAL) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            currencyChosen \u003d \"local\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            currencyChosen \u003d \"foreign\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return currencyChosen;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public Float getCurrencyAmount() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return currencyAmount;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 25
    }
  },
  {
    "path": "src/main/java/seedu/trippie/data/CurrencyType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package seedu.trippie.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public enum CurrencyType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    LOCAL, FOREIGN;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 5
    }
  },
  {
    "path": "src/main/java/seedu/trippie/data/Expense.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "package seedu.trippie.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class Expense {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private final String expenseName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    private final Float expenseCost;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    private final int expenseDayBought;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public Expense(String expenseName, Float expenseCost, int expenseDayBought) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.expenseName \u003d expenseName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.expenseCost \u003d expenseCost;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.expenseDayBought \u003d expenseDayBought;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getExpenseName() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return expenseName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public Float getExpenseCost() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return expenseCost;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public int getExpenseDayBought() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return expenseDayBought;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        return \"Day \" + getExpenseDayBought() + \": \" + getExpenseName() + \" - $\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "                + String.format(\"%.2f\",getExpenseCost());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 21,
      "ivanderjmw": 4,
      "weishuangtan": 7
    }
  },
  {
    "path": "src/main/java/seedu/trippie/data/ExpenseList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "package seedu.trippie.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class ExpenseList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private List\u003cExpense\u003e expenseList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private Float budgetValue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private Float forExValue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private String currencyAbbreviation;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public ExpenseList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        expenseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public ExpenseList(List\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.expenseList \u003d new ArrayList\u003c\u003e(expenseList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public List\u003cExpense\u003e getExpenseList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return expenseList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public void setExpenseList(List\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.expenseList \u003d new ArrayList\u003c\u003e(expenseList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public Float getBudgetValue() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return budgetValue;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public Float getForExValue() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return forExValue;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getCurrencyAbbreviation() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return currencyAbbreviation;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public Float getTotalExpenses() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        float totalExpenses \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        for (Expense expense: expenseList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            totalExpenses +\u003d expense.getExpenseCost();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        return totalExpenses;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void setBudgetValue(Float budgetValue) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.budgetValue \u003d budgetValue;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public void setForExValue(Float forExValue) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.forExValue \u003d forExValue;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public void setCurrencyAbbreviation(String currencyAbbreviation) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.currencyAbbreviation \u003d currencyAbbreviation;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 41,
      "ivanderjmw": 12,
      "weishuangtan": 6
    }
  },
  {
    "path": "src/main/java/seedu/trippie/data/Place.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "package seedu.trippie.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class Place {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private final int day;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private final int start;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private final int end;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public Place(String name, int day, int start, int end) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getPlaceName() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public int getPlaceDay() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public int getPlaceStartTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return start;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public int getPlaceEndTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return end;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return String.format(\"%04d\",getPlaceStartTime()) + \" - \" + String.format(\"%04d\", getPlaceEndTime())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                + \" \" + getPlaceName();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 19,
      "tengkianen": 15,
      "ivanderjmw": 3
    }
  },
  {
    "path": "src/main/java/seedu/trippie/data/PlaceList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "package seedu.trippie.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class PlaceList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private List\u003cPlace\u003e placeList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public PlaceList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.placeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public PlaceList(List\u003cPlace\u003e placeList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.placeList \u003d placeList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public List\u003cPlace\u003e getPlaceList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return placeList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void setPlaceList(List\u003cPlace\u003e placeList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.placeList \u003d new ArrayList\u003c\u003e(placeList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public int getMaxDay() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return placeList.get(placeList.size() - 1).getPlaceDay();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 18,
      "ivanderjmw": 10
    }
  },
  {
    "path": "src/main/java/seedu/trippie/data/Trip.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "package seedu.trippie.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "public class Trip {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private Date startDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private ExpenseList expenseList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private PlaceList placeList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public Trip() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.expenseList \u003d new ExpenseList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.placeList \u003d new PlaceList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public Trip(int index, String name, Date startDate) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.expenseList \u003d new ExpenseList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.placeList \u003d new PlaceList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public ExpenseList getExpenseListObject() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return this.expenseList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public PlaceList getPlaceListObject() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return this.placeList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void setExpenseList(ExpenseList expenseList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.expenseList \u003d expenseList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void setPlaceList(PlaceList placeList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.placeList \u003d placeList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public Date getStartDate() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public int getMaxDay() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        //TODO: Fix placeList.getMaxDay() and expenseList.getMaxDay()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return index + \" \" + name + \" \" + startDate.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 1,
      "ivanderjmw": 62
    }
  },
  {
    "path": "src/main/java/seedu/trippie/data/TrippieData.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "package seedu.trippie.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import seedu.trippie.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "public class TrippieData {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private int defaultTripIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private List\u003cTrip\u003e tripList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    private Trip currentTrip \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public TrippieData(Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.tripList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public List\u003cTrip\u003e getTripList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return tripList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void setTripList(List\u003cTrip\u003e tripList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.tripList \u003d new ArrayList\u003c\u003e(tripList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        for (Trip trip : tripList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            boolean plural \u003d trip.getMaxDay() \u003e 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            String dayWord \u003d plural ? \"Days\" : \"Day\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            list \u003d list.concat("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                    trip.getIndex() + \". \" + trip.getMaxDay() + \" \" + dayWord + \" - \" + trip.getName() + \"\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void setDefaultTripIndex(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.defaultTripIndex \u003d index;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public Trip getCurrentTrip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        if (this.currentTrip \u003d\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                this.currentTrip \u003d tripList.get(this.defaultTripIndex);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            } catch (IndexOutOfBoundsException | NullPointerException p) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        return this.currentTrip;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void setCurrentTripFromIndex(int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        this.currentTrip \u003d this.tripList.get(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    public void loadCurrentTripFromFile() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        if (currentTrip.getIndex() \u003c this.getTripList().size()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            currentTrip \u003d this.getTripList().get(currentTrip.getIndex());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            Trip tempTrip \u003d storage.loadTrip(currentTrip);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            currentTrip.setPlaceList(tempTrip.getPlaceListObject());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "            currentTrip.setExpenseList(tempTrip.getExpenseListObject());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ivanderjmw": 67
    }
  },
  {
    "path": "src/main/java/seedu/trippie/exception/TrippieExceedBudgetException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package seedu.trippie.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class TrippieExceedBudgetException extends TrippieException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public TrippieExceedBudgetException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 8
    }
  },
  {
    "path": "src/main/java/seedu/trippie/exception/TrippieException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "package seedu.trippie.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "public class TrippieException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public TrippieException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weishuangtan": 13
    }
  },
  {
    "path": "src/main/java/seedu/trippie/exception/TrippieIllegalCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "package seedu.trippie.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "public class TrippieIllegalCommandException extends TrippieException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public TrippieIllegalCommandException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weishuangtan": 8
    }
  },
  {
    "path": "src/main/java/seedu/trippie/exception/TrippieInvalidArgumentException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "package seedu.trippie.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "public class TrippieInvalidArgumentException extends TrippieException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    public TrippieInvalidArgumentException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weishuangtan": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "new trip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "Wonderful Singapore"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "1-1-2023"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "list /p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "new trip"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "Amazing Bali"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "3-4-2021"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "load trip"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "list /p"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "load trip"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "add /n Apple MBS /d 3 /t 1200 to 1400"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "list /p"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "add /n nus and ntu /d 3 /t 1200 to 1400"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "add /n clementi mall /d 1 /t 0200 to 0400"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "list /p"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "delete /p 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "list /p"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "add /n clementi /d 2 /t 1000 to 1200"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "add /n ntu /d 2 /t 0700 to 0800"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "list /p"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "add /n nus Soc /d 5 /t 1200 to 1400"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "list /p"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "buy /i ice cream /c 8.21 /d 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "list /e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "help"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "buy /i coconut /c 5.00 /d 2"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "buy /i bag /c 50.30 /d 3"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weishuangtan"
        },
        "content": "budget 300"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 13,
      "ivanderjmw": 16,
      "weishuangtan": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew clean shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "rmdir trippie_data"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "ivanderjmw": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# change to script directory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"${0%/*}\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "./gradlew clean shadowJar"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ivanderjmw"
        },
        "content": "rm -rf trippie_data"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "diff EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test passed!\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test failed!\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 23,
      "ivanderjmw": 1
    }
  }
]
