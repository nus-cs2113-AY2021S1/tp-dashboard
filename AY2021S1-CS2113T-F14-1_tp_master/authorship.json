[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZixin67": 1,
      "-": 46
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Doe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ye Yutong | [Github](https://github.com/yeyutong811) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Ng | [Github](https://github.com/JohnNub) | [Portfolio](docs/team/johnng.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Varsha MS | [Github](https://github.com/Varsha3006) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Zixin | [Github](https://github.com/WangZixin67) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "yeyutong811": 1,
      "Varsha3006": 1,
      "WangZixin67": 1,
      "JohnNub": 1,
      "-": 7
    }
  },
  {
    "path": "docs/team/yeyutong.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "# Ye Yutong - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "yeyutong811": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import seedu.duke.backend.UserInput;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public static final int NO_MATCH \u003d -1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public static final int ARGUMENT_ERR \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public static final int ACCEPT \u003d 1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    private UserInput savedInput; // Variable for saving the given user input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * Checks if the supplied userInput is valid for the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * UserInput can contain any information so it\u0027s the command\u0027s job to ensure it is correct before acceptance"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * Once accepted, the command should store a copy of the UserInput for execution"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @param input The UserInput to Validate"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @return NO_MATCH if the command and category is incorrect, ARGUMENT_ERR if the argument supplied is incorrect."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     *          ACCEPT if the userInput is intended and correct for invoking this command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public int validate(UserInput input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        return NO_MATCH;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * Runs the actual command processing."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @return String message to be printed to the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public abstract String execute() throws DukeFinanceAddDescriptionLostException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * Provides information about command usage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @return The string to be printed to the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public abstract String help();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZixin67": 1,
      "JohnNub": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import seedu.duke.backend.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        while (!Ui.shouldShutdown()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            ui.run();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 1,
      "JohnNub": 5,
      "-": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeArgumentException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "public class DukeArgumentException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNub": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNub": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeFinanceAddDescriptionLostException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "public class DukeFinanceAddDescriptionLostException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZixin67": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeMemberListEmptyException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "public class DukeMemberListEmptyException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public DukeMemberListEmptyException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        printMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public void printMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        System.out.println(\"OOPS!!! The member list is empty!\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeyutong811": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeMemberNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "public class DukeMemberNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public DukeMemberNotFoundException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        printMessage();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public void printMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        System.out.println(\"OOPS!!! The member does not exist.\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeyutong811": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeNoMatchException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "public class DukeNoMatchException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNub": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/backend/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "package seedu.duke.backend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * Given a string input, returns a sanitized and pre-processed UserInput object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @param input The string to be processed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @return UserInput object containing the command, category and all arguments"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public UserInput parse(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        userInput \u003d sanitize(input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        // Regex looks silly, you  have to escape the / so you type double \\ to escape the \\ used to escape the /"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        String[] output \u003d userInput.split(\"\\\\/\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        UserInput ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        Map\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        String category \u003d checkCategory(output);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        if (!category.equals(\"\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            // Trim is still required as indexOf \u0027 \u0027 may hit a blank space before the category"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            // This removes the category from the command if it exists"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            String tmp \u003d output[0].trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            output[0] \u003d tmp.substring(tmp.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        if (output.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            // There are no arguments supplied"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            // Check if the input has any other arguments"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            String tmp \u003d output[0].trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            String cmd;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            if (tmp.indexOf(\u0027 \u0027) !\u003d -1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                String arg \u003d tmp.substring(tmp.indexOf(\u0027 \u0027) + 1).trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                cmd \u003d tmp.substring(0, tmp.indexOf(\u0027 \u0027)).trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                map.put(\"\", arg);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                cmd \u003d tmp;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            ui \u003d new UserInput(cmd, map);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            String base \u003d output[0].trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            if (base.indexOf(\u0027 \u0027) !\u003d -1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                String arg \u003d base.substring(base.indexOf(\u0027 \u0027) + 1).trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                base \u003d base.substring(0, base.indexOf(\u0027 \u0027)).trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                map.put(\"\", arg);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            // Convert the / arguments into a map"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            for (int i \u003d 1; i \u003c output.length; i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                String tmp \u003d output[i].trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                String key;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                String val;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                if (tmp.indexOf(\u0027 \u0027) !\u003d -1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                    val \u003d tmp.substring(tmp.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                    key \u003d tmp.substring(0, tmp.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                    val \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                    key \u003d tmp;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                map.put(key.trim().toLowerCase(), val.trim());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            ui \u003d new UserInput(base, map);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        ui.setCategory(category);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * Given any split output, finds if the output contains a string that indicates the category."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * Shorthand categories are supported."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @param output The split string output"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @return The category of the command"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public String checkCategory(String[] output) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        String tmp \u003d output[0].trim().toLowerCase();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        if (tmp.startsWith(\"hr \") || tmp.startsWith(\"h \")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            return \"hr\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        } else if (tmp.startsWith(\"finance \") || tmp.startsWith(\"f \")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            return \"finance\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        } else if (tmp.startsWith(\"event \") || tmp.startsWith(\"e \")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            return \"event\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * TODO implement string sanitization."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * Cleans up the string to ensure that anything else is safe for the rest of the program to handle."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @param s String to be sanitized"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @return Sanitized string S"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public String sanitize(String s) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 4,
      "JohnNub": 101
    }
  },
  {
    "path": "src/main/java/seedu/duke/backend/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "package seedu.duke.backend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import seedu.duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import seedu.duke.DukeArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import seedu.duke.DukeFinanceAddDescriptionLostException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import seedu.duke.DukeNoMatchException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import seedu.duke.event.CommandEventAdd;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import seedu.duke.event.CommandEventDel;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import seedu.duke.event.CommandEventList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import seedu.duke.finance.CommandFinanceAdd;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import seedu.duke.finance.CommandFinanceDel;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import seedu.duke.finance.CommandFinanceSummary;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import seedu.duke.hr.CommandAddMember;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import seedu.duke.hr.CommandDelMember;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import seedu.duke.hr.CommandViewMember;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import seedu.duke.others.CommandBye;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import seedu.duke.others.CommandHelp;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    private static ArrayList\u003cCommand\u003e commandList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    private static boolean shutdown \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    private static final String UNDERSCORES \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        initializeCommands();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        String inStr \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        UserInput userInput \u003d parser.parse(inStr);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        /*System.out.println(\"Category: \"+userInput.getCategory());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        System.out.println(\"Command: \"+userInput.getCommand());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        System.out.println(\"Num Args: \"+userInput.getNumArgs());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        System.out.println(\"Args: \"+userInput.getArgs());*/"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            Command cmd \u003d findCommand(userInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            printOutput(cmd.execute());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        } catch (DukeArgumentException ae) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            // Placeholder if additional routine is required when user enters incorrect parameters"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        } catch (DukeNoMatchException ne) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            printOutput(\"No such command. Try \u0027help\u0027 for a list of commands.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        } catch (DukeFinanceAddDescriptionLostException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            printOutput(\"Please enter the complete command. Format is:\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "                    + \"finance addLog content number\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            printOutput(\"Command execution failed with an unhandled error!\", true);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public Command findCommand(UserInput ui) throws DukeArgumentException, DukeNoMatchException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        for (Command c : commandList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            int result \u003d c.validate(ui);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            if (result \u003d\u003d Command.ARGUMENT_ERR) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                printError(c.help());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                throw new DukeArgumentException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            } else if (result \u003d\u003d Command.ACCEPT) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        throw new DukeNoMatchException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * Returns if the loop should exit."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @return true if the program should terminate"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public static boolean shouldShutdown() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        return shutdown;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public static void setShutdown(boolean shut) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        shutdown \u003d shut;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * Utility function for printing errors triggered by other classes."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @param text The string to be printed"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public void printError(String text) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        printOutput(text, true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    private static void printOutput(String text) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        printOutput(text, false);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * Prints the output with the divider lines and the supplied text."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * Option to make the text non instant for extra effect"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @param text string to be printed"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * @param isInstant whether the string is printed instantly"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    private static void printOutput(String text, boolean isInstant) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        if (text \u003d\u003d null) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        System.out.println(UNDERSCORES);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        // Split text according to the lines to format."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        String[] lines \u003d text.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        for (String s : lines) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            if (isInstant) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                System.out.println(\"  \" + s);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                System.out.print(\"  \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                // charAt is constant time lookup so we do that instead of splitting strings."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                for (int i \u003d 0; i \u003c s.length(); i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                    char c \u003d s.charAt(i);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                    System.out.print(c);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                        Thread.sleep(5);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                    } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                System.out.print(System.lineSeparator());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        System.out.println(UNDERSCORES);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     * Creates a list of commands for the program to check through."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    private static void initializeCommands() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        commandList.add(new CommandHelp());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        commandList.add(new CommandBye());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        commandList.add(new CommandFinanceSummary());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        commandList.add(new CommandFinanceAdd());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        commandList.add(new CommandFinanceDel());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        commandList.add(new CommandEventAdd());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        commandList.add(new CommandEventDel());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        commandList.add(new CommandEventList());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        commandList.add(new CommandAddMember());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        commandList.add(new CommandViewMember());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        commandList.add(new CommandDelMember());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yeyutong811": 6,
      "WangZixin67": 18,
      "Varsha3006": 7,
      "JohnNub": 114
    }
  },
  {
    "path": "src/main/java/seedu/duke/backend/UserInput.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "package seedu.duke.backend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "public class UserInput {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    private Map\u003cString, String\u003e args;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    private String category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public UserInput(String c, Map\u003cString, String\u003e a) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        command \u003d c;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        args \u003d a;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public void setCommand(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public Map\u003cString, String\u003e getArgs() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        return args;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public void setArgs(Map\u003cString, String\u003e args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public String getArg(String s) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        return args.get(s);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public int getNumArgs() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        return args.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public void setCategory(String s) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        category \u003d s;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNub": 46
    }
  },
  {
    "path": "src/main/java/seedu/duke/event/CommandEventAdd.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package seedu.duke.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import seedu.duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import seedu.duke.backend.UserInput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class CommandEventAdd extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    private UserInput userInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Event m \u003d new Event(userInput.getArg(\"n\"), userInput.getArg(\"d\"), userInput.getArg(\"t\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String output \u003d EventList.addEvent(m);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public int validate(UserInput ui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        userInput \u003d ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        if (userInput.getCategory().equals(\"event\") \u0026\u0026 userInput.getCommand().equalsIgnoreCase(\"addEvent\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            if (ui.getNumArgs() \u003d\u003d 3) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                if ((ui.getArg(\"n\") !\u003d null) \u0026\u0026 (ui.getArg(\"d\") !\u003d null) \u0026\u0026 (ui.getArg(\"t\") !\u003d null)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                    return ACCEPT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return ARGUMENT_ERR;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return NO_MATCH;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String help() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 37
    }
  },
  {
    "path": "src/main/java/seedu/duke/event/CommandEventDel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package seedu.duke.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import seedu.duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import seedu.duke.backend.UserInput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class CommandEventDel extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    private UserInput userInput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        index \u003d Integer.parseInt(userInput.getArg(\"\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String output \u003d EventList.deleteEvent(index - 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String help() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public int validate(UserInput ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        userInput \u003d ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        if (ui.getCategory().equals(\"event\") \u0026\u0026 ui.getCommand().equalsIgnoreCase(\"delEvent\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            if (ui.getNumArgs() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                if ((ui.getArg(\"\") !\u003d null)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                    return ACCEPT;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return ARGUMENT_ERR;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return NO_MATCH;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 37
    }
  },
  {
    "path": "src/main/java/seedu/duke/event/CommandEventList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package seedu.duke.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import seedu.duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import seedu.duke.backend.UserInput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class CommandEventList extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    private UserInput userInput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String output \u003d EventList.printEventList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public int validate(UserInput input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.userInput \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        if (input.getCategory().equals(\"event\") \u0026\u0026 input.getCommand().equalsIgnoreCase(\"listEvent\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return ACCEPT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return NO_MATCH;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String help() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/event/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package seedu.duke.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class Event {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String eventName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public Event(String name, String date, String time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.eventName \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.eventTime \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.setEventDate(LocalDate.parse(date));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public void setEventDate(LocalDate date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns the string format of the event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return String format of event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String printEvent() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return \"Event Name: \" + this.eventName +  \"\\nDate: \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"\\nTime: \" + this.eventTime + \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/event/EventList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package seedu.duke.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class EventList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Adds member to the arraylist."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param event event to be added in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static String addEvent(Event event) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String userOutput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        events.add(event);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        userOutput \u003d \"Got it. I\u0027ve added this Event:\\n\" + event.printEvent() + \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"Now you have \" + events.size() + \" event in the list.\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return userOutput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * To delete an event based on the given index."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param index index to be deleted from list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static String deleteEvent(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String userOutput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            userOutput \u003d \"I\u0027ll remove this Event:\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            userOutput \u003d userOutput.concat(events.get(index).printEvent() + \"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            events.remove(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            userOutput \u003d userOutput.concat(\"Now you have \" + events.size() + \" event in the list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            userOutput \u003d \"OOPS!!! The event does not exist.Please try our help command!\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return userOutput;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static String printEventList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String userOutput;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        if (events.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            userOutput \u003d (\"Oops! The event list is empty!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            userOutput \u003d \"Here are the current events in your list:\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            for (Event event : events) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                userOutput \u003d userOutput.concat(events.indexOf(event) + 1 + \".\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                userOutput \u003d userOutput.concat(event.printEvent());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return userOutput;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/finance/CommandFinanceAdd.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "package seedu.duke.finance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import seedu.duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import seedu.duke.DukeFinanceAddDescriptionLostException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import seedu.duke.backend.UserInput;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "public class CommandFinanceAdd extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    private UserInput userinput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    private Logger logger \u003d Logger.getGlobal();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public String execute() throws DukeFinanceAddDescriptionLostException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        logger.info(\"Start adding finance log...\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String input \u003d userinput.getArg(\"\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        if (input \u003d\u003d null) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            logger.warning(\"The input format is wrong.\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            throw new DukeFinanceAddDescriptionLostException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String[] contents \u003d input.trim().split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        FinanceLog fl \u003d new FinanceLog(contents[0],Double.parseDouble(contents[1]));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String output \u003d FinanceList.addLog(fl);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        logger.info(\"End adding...\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public String help() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return \"The format input to add a finance log is: hr addLog title value\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public int validate(UserInput ui) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        if (ui.getCategory().equals(\"finance\") \u0026\u0026 ui.getCommand().equalsIgnoreCase(\"addlog\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            userinput \u003d ui;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            return ACCEPT;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return NO_MATCH;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZixin67": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/finance/CommandFinanceDel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "package seedu.duke.finance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import seedu.duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import seedu.duke.backend.UserInput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "public class CommandFinanceDel extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    private UserInput userinput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String input \u003d userinput.getArg(\"\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        int index \u003d Integer.parseInt(input.trim());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String output \u003d FinanceList.dellog(index);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public String help() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return \"The format of input to delete a log is: finance delLog index\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public int validate(UserInput ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        if (ui.getCategory().equals(\"finance\") \u0026\u0026 ui.getCommand().equalsIgnoreCase(\"dellog\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            userinput \u003d ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            return ACCEPT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return NO_MATCH;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZixin67": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/finance/CommandFinanceSummary.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "package seedu.duke.finance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import seedu.duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import seedu.duke.backend.UserInput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "public class CommandFinanceSummary extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    private UserInput userinput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String output \u003d FinanceList.summary();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public String help() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return \"The format of input to show finance list is: finance summary\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public int validate(UserInput ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        if (ui.getCategory().equals(\"finance\") \u0026\u0026 ui.getCommand().equalsIgnoreCase(\"summary\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            userinput \u003d ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            return ACCEPT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return NO_MATCH;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZixin67": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/finance/FinanceList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "package seedu.duke.finance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "public class FinanceList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public static ArrayList\u003cFinanceLog\u003e  financeLogs \u003d new ArrayList\u003cFinanceLog\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public static Logger logger \u003d Logger.getGlobal();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * Add one log into the finance list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * @param fl the new finance log user wants to add"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * @return the output when it successfully add one log"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public static String addLog(FinanceLog fl) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        financeLogs.add(fl);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String output \u003d \"Got it! I\u0027ve added this to the list.\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String output1 \u003d fl.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String output2;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        if (fl.getSize() \u003e 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            output2 \u003d \"There are \" + fl.getSize() + \" logs in the list now.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            output2 \u003d \"There is \" + fl.getSize() + \" log in the list now.\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        output \u003d output + output1 + output2;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * Delete one particular log from the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * @param index the index of the log which user wants to delete"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * @return the output when successfully delete a log"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public static String dellog(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            logger.info(\"Start deleting...\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            assert index \u003e 0 : \"The index must \u003e 0\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            financeLogs.remove(index - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            FinanceLog.finSize--;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            String output2;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            if (FinanceLog.finSize \u003e 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "                output2 \u003d \"There are \" + FinanceLog.finSize + \" logs in the list now.\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "                output2 \u003d \"There is \" + FinanceLog.finSize + \" log in the list now.\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            String output1 \u003d \"Got it! I\u0027ve removed this from list.\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            String output \u003d output1 + output2;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            logger.info(\"End deleting...\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            logger.warning(\"The index is out of bound.\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            return \"Your index input does not exist in the list\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * Show the all the logs in the list and shows the total budget amount."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * @return the finance list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public static String summary() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        logger.info(\"Start listing summary...\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        if (FinanceLog.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            logger.warning(\"The list is empty.\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            return \"Sorry, your finance list is empty.\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String output \u003d \"Here is the list:\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        for (int i \u003d 0;i \u003c FinanceLog.getSize();i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "            output \u003d output.concat(\"\\t\" + (i + 1) + \".\" + financeLogs.get(i).getLog() + \" $\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "                    + financeLogs.get(i).getLogVal() + \"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        output \u003d output.concat(\"Total budget: $\" + String.format(\"%.2f\",FinanceLog.getSum()) + \"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        logger.info(\"End processing...\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZixin67": 75
    }
  },
  {
    "path": "src/main/java/seedu/duke/finance/FinanceLog.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "package seedu.duke.finance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "public class FinanceLog {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    private String finLog;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    private double finLogVal;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public static int finSize \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public static double sum \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * Create a new finance log."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * @param log the content of a finance log"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * @param val the value of its budget"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public FinanceLog(String log, double val) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        finLog \u003d log;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        finLogVal \u003d val;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        finSize++;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        sum \u003d sum + val;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * Gets the log\u0027s content."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * @return log\u0027s content"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public String getLog() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return finLog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * Get the log\u0027s budget amount."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * @return log\u0027s budget amount"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public double getLogVal() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return finLogVal;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * Gets the size of finance log list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * @return the size of finance log list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public static int getSize() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return finSize;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * Gets the sum of total budget."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * @return the sum of total budget"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public static double getSum() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return sum;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * Form a formatted string for a finance log."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     * @return the string of a formatted finance log"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        return \"\\t\" + finSize + \".\" + finLog + \" $\" + finLogVal + \"\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZixin67": 60
    }
  },
  {
    "path": "src/main/java/seedu/duke/hr/CommandAddMember.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "package seedu.duke.hr;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import seedu.duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import seedu.duke.backend.UserInput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import static seedu.duke.hr.MemberList.isInteger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": " * Represents add member command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "public class CommandAddMember extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    private UserInput savedInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public int validate(UserInput input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        this.savedInput \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        if (input.getCategory().equals(\"hr\") \u0026\u0026 input.getCommand().equalsIgnoreCase(\"add\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            if (input.getNumArgs() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                if ((input.getArg(\"n\") !\u003d null) \u0026\u0026 (input.getArg(\"p\") !\u003d null) \u0026\u0026 (input.getArg(\"e\") !\u003d null)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                        \u0026\u0026 (input.getArg(\"r\") !\u003d null) \u0026\u0026 isInteger(input.getArg(\"p\"))) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                    return ACCEPT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            return ARGUMENT_ERR;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            return NO_MATCH;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        int phone \u003d Integer.parseInt(savedInput.getArg(\"p\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        Member m \u003d new Member(savedInput.getArg(\"n\"), phone, savedInput.getArg(\"e\"), savedInput.getArg(\"r\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String output \u003d MemberList.addToList(m);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public String help() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        return \"You can use \u0027hr add\u0027 command this way:\\n\" + \"hr add /n NAME /p PHONE_NUMBER (INTEGER) /e EMAIL /ROLE\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeyutong811": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/hr/CommandDelMember.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "package seedu.duke.hr;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import seedu.duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import seedu.duke.backend.UserInput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import static seedu.duke.hr.MemberList.isInteger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": " * Represents delete member command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "public class CommandDelMember extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    private UserInput savedInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public int validate(UserInput input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        this.savedInput \u003d input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        if (input.getCategory().equals(\"hr\") \u0026\u0026 input.getCommand().equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            if (input.getNumArgs() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                if ((input.getArg(\"\") !\u003d null) \u0026\u0026 isInteger(input.getArg(\"\"))) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                    return ACCEPT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            return ARGUMENT_ERR;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            return NO_MATCH;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        index \u003d Integer.parseInt(savedInput.getArg(\"\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String output \u003d MemberList.deleteFromList(index - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public String help() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        return \"You can use \u0027hr delete\u0027 command this way:\\n\" + \"hr delete MEMBER_INDEX (INTEGER)\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeyutong811": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/hr/CommandViewMember.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "package seedu.duke.hr;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import seedu.duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import seedu.duke.backend.UserInput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": " * Represents view member command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "public class CommandViewMember extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    private UserInput savedInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public int validate(UserInput input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        this.savedInput \u003d input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        if (input.getCategory().equals(\"hr\") \u0026\u0026 input.getCommand().equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            return ACCEPT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            return NO_MATCH;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String output \u003d MemberList.listMembers();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public String help() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        return \"You can use \u0027hr list\u0027 command this way:\\n\" + \"hr list\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeyutong811": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/hr/Member.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "package seedu.duke.hr;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "public class Member {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public static int numOfMembers \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    protected String memberName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    protected int memberPhone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    protected String memberEmail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    protected String memberRole;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public Member(String name, int phone, String email, String role) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        this.memberName \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        this.memberPhone \u003d phone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        this.memberEmail \u003d email;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        this.memberRole \u003d role;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        numOfMembers +\u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public int getMemberPhone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        return this.memberPhone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public String getMemberEmail() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        return this.memberEmail;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public String getMemberRole() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        return this.memberRole;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     * Prints task data in the desired form to be printed for user interaction."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        return \"name: \" + this.memberName + \" |phone: \" + this.getMemberPhone() + \" |email: \" + this.getMemberEmail()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                + \" |role: \" + this.getMemberRole();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeyutong811": 41
    }
  },
  {
    "path": "src/main/java/seedu/duke/hr/MemberList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "package seedu.duke.hr;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "public class MemberList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public static ArrayList\u003cMember\u003e members \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     * Adds member to the arraylist."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     * @param m member to be added."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public static String addToList(Member m) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        members.add(m);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this member:\\n\" + m.toString() + \"\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                + \"Now you have \" + Member.numOfMembers + \" member\" + ((Member.numOfMembers \u003d\u003d 1) ? \"\" : \"s\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                + \" in the list.\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     * Returns the list of members."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     * @return output error message or member list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public static String listMembers() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        if (Member.numOfMembers \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            output \u003d \"OOPS!!! The member list is empty!\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            output \u003d \"Here is the list of members in your CCA:\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            for (int i \u003d 0; i \u003c Member.numOfMembers; i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                int index \u003d i + 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                output \u003d output.concat(index + \".\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                output \u003d output.concat(members.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     * Deletes the member from the arraylist."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     * @param index index of member to be deleted."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     * @return output error message or info of deleted member."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public static String deleteFromList(int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            output \u003d \"Noted. I\u0027ll remove this member:\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            output \u003d output.concat(members.get(index).toString() + \"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            members.remove(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            Member.numOfMembers--;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            output \u003d output.concat(\"Now you have \" + Member.numOfMembers + \" member\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            output \u003d output.concat(((Member.numOfMembers \u003e 1) ? \"s\" : \"\") + \" in the list.\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            output \u003d \"OOPS!!! The member does not exist.\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     * Checks whether input can be parsed into an integer."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     * @param s input to be checked"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     * @return true if input can be parsed as an integer, false if input cannot be parsed as an integer."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public static boolean isInteger(String s) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            int index \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeyutong811": 72
    }
  },
  {
    "path": "src/main/java/seedu/duke/others/CommandBye.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "package seedu.duke.others;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import seedu.duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import seedu.duke.backend.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import seedu.duke.backend.UserInput;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "public class CommandBye extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        Ui.setShutdown(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        return \"See you next time!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public int validate(UserInput userInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        if (userInput.getCategory().equals(\"\") \u0026\u0026 userInput.getCommand().equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            return ACCEPT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            return NO_MATCH;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public String help() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNub": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/others/CommandHelp.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "package seedu.duke.others;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import seedu.duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import seedu.duke.backend.UserInput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "public class CommandHelp extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return \"Commands: hr add, hr delete, hr list, events add, events delete, finance add, finance delete, \""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"help, bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public int validate(UserInput input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        if (input.getCategory().equals(\"\") \u0026\u0026 input.getCommand().equalsIgnoreCase(\"help\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            return ACCEPT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "            return NO_MATCH;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public String help() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 5,
      "JohnNub": 22
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import seedu.duke.backend.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import seedu.duke.backend.UserInput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    static final String LOGO \u003d \"    ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    public void testParser() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        // Base Case"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        HashMap\u003cString, String\u003e arg1 \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        arg1.put(\"\", \"2\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        UserInput expected1 \u003d new UserInput(\"foo\", arg1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        expected1.setCategory(\"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        String test1 \u003d \"foo 2\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test1).getArgs(), expected1.getArgs());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test1).getCategory(), expected1.getCategory());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test1).getCommand(), expected1.getCommand());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        // Space \u0026 Repetition test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        HashMap\u003cString, String\u003e arg2 \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        arg2.put(\"\", \"2 2 2\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        UserInput expected2 \u003d new UserInput(\"fOo\", arg2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        expected2.setCategory(\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        String test2 \u003d \"fOo 2 2 2\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test2).getArgs(), expected2.getArgs());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test2).getCategory(), expected2.getCategory());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test2).getCommand(), expected2.getCommand());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        // Category and extra argument test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        HashMap\u003cString, String\u003e arg3 \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        arg3.put(\"\", \"something\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        arg3.put(\"a1\", \"2 3\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        UserInput expected3 \u003d new UserInput(\"do\", arg3);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        expected3.setCategory(\"hr\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        String test3 \u003d \"hr do something /a1 2 3\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test3).getArgs(), expected3.getArgs());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test3).getCategory(), expected3.getCategory());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test3).getCommand(), expected3.getCommand());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        // Capitalization \u0026 trimming test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        HashMap\u003cString, String\u003e arg4 \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        arg4.put(\"\", \"mYeVenT     9000\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        arg4.put(\"arg\", \"some  arg\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        arg4.put(\"a2\", \"\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        arg4.put(\"a3\", \"another\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        UserInput expected4 \u003d new UserInput(\"AdD\", arg4);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        expected4.setCategory(\"event\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        String test4 \u003d \"  eVeNt AdD     mYeVenT     9000  /  arg  some  arg /a2 /a3 another\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test4).getArgs(), expected4.getArgs());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test4).getCategory(), expected4.getCategory());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test4).getCommand(), expected4.getCommand());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JohnNub"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        // Shorthand category, Accented Character and Argument Precedence test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        HashMap\u003cString, String\u003e arg5 \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        arg5.put(\"\", \"\\350\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        arg5.put(\"arg\", \"precedence test\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        UserInput expected5 \u003d new UserInput(\"testCase\\350\", arg5);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        expected5.setCategory(\"finance\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        String test5 \u003d \"  f testCase\\350  \\350\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "                + \"/  arg  some  arg / arg /arg                                     precedence test\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test5).getArgs(), expected5.getArgs());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test5).getCategory(), expected5.getCategory());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "        assertEquals(p.parse(test5).getCommand(), expected5.getCommand());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZixin67": 2,
      "Varsha3006": 6,
      "JohnNub": 66,
      "-": 13
    }
  },
  {
    "path": "src/test/java/seedu/duke/HrTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import seedu.duke.hr.Member;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "import seedu.duke.hr.MemberList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "public class HrTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public void addListDelMember_executesNormally() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String expected1 \u003d \"Got it. I\u0027ve added this member:\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                + \"name: James Gosling |phone: 11111111 |email: 111111@gmail.com |role: member\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                + \"Now you have 1 member in the list.\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String actual1 \u003d MemberList.addToList(new Member(\"James Gosling\", 11111111, \"111111@gmail.com\", \"member\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        assertEquals(expected1, actual1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String expected2 \u003d \"Here is the list of members in your CCA:\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                + \"1.name: James Gosling |phone: 11111111 |email: 111111@gmail.com |role: member\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String actual2 \u003d MemberList.listMembers();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        assertEquals(expected2, actual2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String expected3 \u003d \"Noted. I\u0027ll remove this member:\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                + \"name: James Gosling |phone: 11111111 |email: 111111@gmail.com |role: member\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "                + \"Now you have 0 member in the list.\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String actual3 \u003d MemberList.deleteFromList(0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        assertEquals(expected3, actual3);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public void removeMember_MemberNotExists() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String expected \u003d \"OOPS!!! The member does not exist.\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String actual \u003d MemberList.deleteFromList(0);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    public void listMember_MemberListEmpty() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String expected \u003d \"OOPS!!! The member list is empty!\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        String actual \u003d MemberList.listMembers();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeyutong811": 46
    }
  },
  {
    "path": "src/test/java/seedu/duke/event/EventTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package seedu.duke.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    Event event \u003d new Event(\"PR meeting\", \"2000-06-30\", \"8pm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    void testPrintEvent() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        assertEquals(\"Event Name: \" + \"PR meeting\" + \"\\nDate: \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"Jun 30 2000\" + \"\\nTime: \" + \"8pm\" + \"\\n\", event.printEvent());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    void testEventAdd() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String expected1 \u003d \"Got it. I\u0027ve added this Event:\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"Event Name: PR meeting\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"\\nDate: Jun 30 2000\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"\\nTime: 8pm\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"\\nNow you have 1 event in the list.\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        assertEquals(expected1,EventList.addEvent(event));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String expected3 \u003d \"Here are the current events in your list:\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"1.Event Name: PR meeting\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"\\nDate: Jun 30 2000\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"\\nTime: 8pm\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        assertEquals(expected3, EventList.printEventList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String expected2 \u003d \"I\u0027ll remove this Event:\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"Event Name: PR meeting\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"\\nDate: Jun 30 2000\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"\\nTime: 8pm\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"\\nNow you have 0 event in the list.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        assertEquals(expected2,EventList.deleteEvent(0));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 40
    }
  },
  {
    "path": "src/test/java/seedu/duke/finance/FinanceTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "package seedu.duke.finance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "class FinanceTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    void testver1Finance() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String expected1 \u003d \"Got it! I\u0027ve added this to the list.\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "                + \"\\t1.write $12.5\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "                + \"There is 1 log in the list now.\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String actual1 \u003d FinanceList.addLog(new FinanceLog(\"write\", 12.5));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        assertEquals(expected1, actual1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String expected2 \u003d \"Here is the list:\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "                + \"\\t1.write $12.5\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "                + \"Total budget: $12.50\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String actual2 \u003d FinanceList.summary();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        assertEquals(expected2, actual2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String expected3 \u003d \"Got it! I\u0027ve removed this from list.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "                + \"There is 0 log in the list now.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        String actual3 \u003d FinanceList.dellog(1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "        assertEquals(expected3, actual3);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WangZixin67"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WangZixin67": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "James Gosling"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "help"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "hr add /n James Gosling /p 11111111 /e 111111@gmail.com /r member"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "hr list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeyutong811"
        },
        "content": "hr delete 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNub"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yeyutong811": 3,
      "JohnNub": 2,
      "-": 1
    }
  }
]
