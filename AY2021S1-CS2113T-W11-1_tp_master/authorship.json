[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    implementation(group: \u0027org.fusesource.jansi\u0027, name: \u0027jansi\u0027, version: \u00271.18\u0027)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 1,
      "-": 46
    }
  },
  {
    "path": "data/data.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "kjwhen | hwlen | www.google.com"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " | wjkehn | www.google.com"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "wke | wee | www.yahoo.com"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "qw | qw | www.google.com"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Cs2113 | modulewebsite | https://nus-cs2113-ay2021s1.github.io/website/index.html"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "CS2101 | lecture | www.google.com"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "CS2101 | dummy | www.yahoo.com"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "CS2101 | tutorial | https://nus-sg.zoom.us/j/96278510911?pwd\u003dRVFaUXdFZWdkRTFPM2hNRC80NHNYQT09"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 8
    }
  },
  {
    "path": "data/slot.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "09:00 | 11:00 | wed |  cg2271"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jusuf Nathanael | [Github](https://github.com/jusufnathanael) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "![](https://i.imgur.com/M9W68d1.jpg) | Zhan Hao | [Github](https://github.com/Speedweener/tp) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Yu Shing | [TYS0n1](https://github.com/TYS0n1) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tey Xing Rong | [xingrong123](https://github.com/xingrong123) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Francisco Chensan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "TYS0n1": 2,
      "jusufnathanael": 1,
      "fchensan": 1,
      "Speedweener": 1,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Design \u0026 implementation"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Product scope"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the target user profile}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the value proposition: what problem does it solve?}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "## User Stories"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "|v1.0|studious NUS student| bookmark important websites from different modules|launch them easily when needed|"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "|v1.0|NUS student|label my bookmarks|I can know quickly the topics of each link|"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "|v1.0|busy NUS student|create a timetable within the app which syncs up with the system time|I will not miss my lessons|"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "|v1.0|NUS student|take a look at my modules for the day, or the entire week|I can plan out my day/week|"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Non-Functional Requirements"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "{Give non-functional requirements}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "## Glossary"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "* *glossary item* - Definition"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for manual testing"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 5,
      "-": 34
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide  "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction  "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Zoomaster is a desktop app for organizing website links, optimized for use via a "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Command Line Interface (CLI) while retaining benefits of a Graphical User Interface (GUI). "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "If you can type fast, Zoomaster can help fetch useful website links for you quicker than the bookmark function on your browser."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "### Table of contents"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Global](#global)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Switch mode:](#mode) **mode**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    *  [Exit:](#exit)  **exit**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Bookmark mode](#bookmarkmode)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Show bookmarks:](#showbookmark) **show**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Add bookmark:](#addbookmark)  **add**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Delete bookmark:](#deletebookmark)  **delete**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Find bookmark:](#findbookmark)  **find**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Launch bookmark:](#launchbookmark)  **launch**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Timetable mode](#timetablemode)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Show timetable:](#showtimetable) **show**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    * [Add slot:](#addtimeslot) **add**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Delete slot:](#deletetimeslot)  **delete**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed.  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "2. Down the latest version of `Zoomaster` from [here](https://github.com/AY2021S1-CS2113T-W11-1/tp/releases)."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "3. Copy the `.jar` file to the folder that you want to use as the home folder."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "4. Launch the file using the `java` command: `java -jar zoomaster.jar`.  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "## Features   "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"global\"\u003e\u003c/a\u003e "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Global"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "The commands below can be used in both modes of the app.   "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003ca name\u003d\"mode\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Switch mode: `mode`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Switches between the “bookmark” and “timetable” modes. Depending on the mode, "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "the behaviour of the commands below changes."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Format: mode {bookmark/timetable}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `mode bookmark`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `mode timetable` "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"exit\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "#### Exit the app: `exit`  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Exits the application "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Format: exit    "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "---"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"bookmarkmode\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "### Bookmark Mode  "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"showbookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "#### Show bookmarks: `show`  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Prints all bookmark in the bookmark list  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Format: show"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003ca name\u003d\"addbookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "#### Add bookmark: `add`  "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Add a URL bookmark under a certain topic and description.  "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Format: add {MODULE(optional)} {DESCRIPTON} {URL}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "``` "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* The `MODULE` is optional.  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* The `TOPIC` and `DESCRIPTION` can only contain one word each.  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* The `URL` has to start with `www.` or `https://`.  "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* There should be strictly one space between the `TOPIC`, `DESCRIPTION` and `URL`.    "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "* `add CS2113T tutorial www.cs2113t.nus.edu.sg/`  "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "* `add website https://cs2113t.nus.edu.sg/`  "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"deletebookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "#### Delete bookmarks: `delete`  "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Deletes a bookmark with the specified index.  The index will correspond to the index of that bookmark in the list. You can do a `show` command to check the bookmark indexes.  "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Format: delete {INDEX}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `delete 2`  "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `delete 4`  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"findbookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "#### Find bookmarks: `find`  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Finds bookmarks with matching module and description and prints them"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Format: find {MODULE} {DESCRIPTION(optional)}"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* The `DESCRIPTION` is optional.  "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* The `TOPIC` and `DESCRIPTION` can only contain one word each.  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* There should be strictly one space between the `TOPIC`, `DESCRIPTION`."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `find CS2113 tutorial`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `find CS2113`  "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"launchbookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "#### Launch bookmarks: `launch`  "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Launches bookmarks in the default browser using either:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* Index"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* Matching module or description"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "The index will correspond to the index of that bookmark in the list. You can do a `show` command to check the bookmark indexes.  "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Format: launch {INDEX}"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Format: launch {MODULE} {DESCRIPTION(optional)}"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* The `DESCRIPTION` is optional.  "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* The `TOPIC` and `DESCRIPTION` can only contain one word each.  "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* There should be strictly one space between the `TOPIC`, `DESCRIPTION`.   "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `launch CS2113 tutorial`  "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `launch CS2113`  "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "---"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"timetablemode\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Timetable mode    "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003ca name\u003d\"showtimetable\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "#### Show timetable: `show`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Show the timetable for a certain day or the whole week."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Format: show {DAY(optional)}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "* `show`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "* `show mon`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003ca name\u003d\"addtimeslot\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fchensan"
        },
        "content": "#### Add time slot: `add`  "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Add a time slot with start and end time, day of week, and title.  "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Format: add {START TIME} {END TIME} {DAY} {TITLE}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fchensan"
        },
        "content": "* The `START TIME` and `END TIME` is the format `HH:mm`.  "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fchensan"
        },
        "content": "* The `DAY` can be one of `mon`, `tue`, `wed`, `thu`, `fri`, `sat`, `sun`.  "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fchensan"
        },
        "content": "* There should be strictly one space between each parameter.    "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fchensan"
        },
        "content": "  "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "* `add 10:00 12:00 mon CS1231 Lecture`  "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "* `add 14:00 16:00 tue CG1111 Tutorial`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003ca name\u003d\"deletetimeslot\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "#### Delete time slot: `delete`  "
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Delete a time slot with the specified index."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Format: delete {INDEX}"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "* `delete 1`  "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "* `delete 2`"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ  "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer?   "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "**A**: Copy the `data/bookmarks.txt` and `data/slots.txt` file to the directory where the `jar` file is at."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Start the application and all the data should be loaded."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**Action** | **Format, Examples**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**mode**|`mode {bookmark/timetable}`\u003cbr\u003eexample: `mode bookmark`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**exit**|`exit`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**Bookmark Mode**|"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**show**|`show`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**add**|`add {MODULE(optional)} {DESCRIPTON} {URL}` \u003cbr\u003eexample: `add CS2113T tutorial www.yahoo.com`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**delete**|`delete {INDEX}`\u003cbr\u003eexample: `delete 2`"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**find**|`find {MODULE} {DESCRIPTION(optional)}` \u003cbr\u003eexample: `find CS2113 tutorial`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**launch**|`launch {MODULE} {DESCRIPTION(optional)}` \u003cbr\u003eexample: `launch CS2113`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**Timetable Mode**|"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**slotadd**|`before  \u003cyyyyMMdd HHmm\u003e`\u003cbr\u003eexample: `before 20210909 1159`"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**slotdel**|`after \u003cyyyyMMdd HHmm\u003e`\u003cbr\u003eexample: `after 19990101 0100`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**show**|`today`"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "xingrong123": 24,
      "jusufnathanael": 51,
      "fchensan": 9,
      "Speedweener": 96,
      "-": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.slot.SlotList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Timetable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Storage bookmarkStorage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Storage slotStorage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private Timetable timetable;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new Duke instance."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Pass the filepath of the txt file to set up storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param bookmarkFilePath The filepath of the bookmark txt file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param slotFilePath The filepath of the slot txt file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Duke(String bookmarkFilePath, String slotFilePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        bookmarkStorage \u003d new Storage(bookmarkFilePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        slotStorage \u003d new Storage(slotFilePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            bookmarks \u003d new BookmarkList(bookmarkStorage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        timetable \u003d new Timetable();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        /*      try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            slots \u003d new SlotList(slotStorage.load());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            slots \u003d new SlotList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This method is used run the Duke program."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.showWelcomeScreen();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                c.execute(bookmarks, timetable, ui, bookmarkStorage, slotStorage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } while (!isExit);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        new Duke(\"./data/bookmarks.txt\", \"./data/slots.txt\").run();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 5,
      "TYS0n1": 47,
      "jusufnathanael": 2,
      "Speedweener": 7,
      "-": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/ItemList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public abstract class ItemList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private ArrayList\u003cObject\u003e items;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Constructs a itemList object with an empty ArrayList to store item objects."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public ItemList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Constructs the itemList object containing an ArrayList to store item objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * This constructor is used when loading items from a text file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param itemStrings the list of strings of items."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public ItemList(ArrayList\u003cString\u003e itemStrings) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        // loadItemList(itemStrings);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Returns the number of items in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @return the size of the item list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return items.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Returns item based on the index."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param index The index of the item in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @return The item with the corresponding index in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Object getItem(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return items.get(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Returns the item list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @return The item list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public ArrayList\u003cObject\u003e getItemList() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return items;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * This method deletes the item from the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param item The item to be deleted."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void deleteItem(Object item) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        items.remove(item);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }   "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 63
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.ClearCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.bookmark.AddBookmarkCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.timetable.AddSlotCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.bookmark.DeleteBookmarkCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.timetable.DeleteSlotCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.bookmark.LaunchBookmarkCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.bookmark.FindBookmarkCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.timetable.ShowTimetableCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.bookmark.ShowBookmarkCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.ChangeModeCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * This class deals with making sense of the user command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Variable programMode controls the mode Zoomaster program is in."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * programMode \u003d\u003d 0: Main menu mode"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * programMode \u003d\u003d 1: Bookmark mode"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * programMode \u003d\u003d 2: Timetable mode"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static int programMode \u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Creates and returns the command based on user input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param input full user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException If input command is unknown."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Command command \u003d createCommand(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static Command createCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (input.compareToIgnoreCase(ExitCommand.BYE_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (input.startsWith(ChangeModeCommand.MODE_KW)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            command \u003d new ChangeModeCommand(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (input.startsWith(ClearCommand.CLEAR_KW)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            command \u003d new ClearCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (programMode \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            command \u003d createBookmarkCommand(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (programMode \u003d\u003d 2) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            command \u003d createTimetableCommand(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static Command createBookmarkCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "      "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (input.compareToIgnoreCase(ShowBookmarkCommand.LIST_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new ShowBookmarkCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (input.startsWith(DeleteBookmarkCommand.DEL_KW)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new DeleteBookmarkCommand(input);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (input.startsWith(AddBookmarkCommand.ADD_KW)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new AddBookmarkCommand(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (input.startsWith(LaunchBookmarkCommand.LAUNCH_KW)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new LaunchBookmarkCommand(input);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (input.startsWith(FindBookmarkCommand.FIND_KW)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            command \u003d new FindBookmarkCommand(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (input.startsWith(ClearCommand.CLEAR_KW)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            command \u003d new ClearCommand();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static Command createTimetableCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        // Add Timetable Commands on merge"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (input.startsWith(AddSlotCommand.ADD_KW)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            command \u003d new AddSlotCommand(input);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } else if (input.startsWith(DeleteSlotCommand.DEL_KW)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            command \u003d new DeleteSlotCommand(input);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (input.startsWith(ShowTimetableCommand.SHOW_KW)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new ShowTimetableCommand(input);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (input.startsWith(ClearCommand.CLEAR_KW)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            command \u003d new ClearCommand();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static int getProgramMode() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return programMode;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 31,
      "fchensan": 3,
      "Speedweener": 73
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new Storage instance by storing the given pathname of the file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param filePath The pathname of the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.filePath \u003d filePath.replace(\u0027/\u0027, File.separatorChar);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the tasks found within the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return Tasks found in the file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException If file is not found."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e data;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            data \u003d getData(f);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.ERROR_LOADING_FILE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private ArrayList\u003cString\u003e getData(File f) throws FileNotFoundException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ArrayList\u003cString\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            items.add(s.nextLine());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return items;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * This method creates the file if it does not exist and saves tasks data in the file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param data The string of all the data to be saved in the file."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException If there is an error writing to the file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void save(String data) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            createDirectory();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            writeToFile(data);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.WRITE_FILE_ERROR);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void createDirectory() throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String dirPath \u003d getDirectory(filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Path path \u003d Paths.get(dirPath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Files.createDirectories(path);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getDirectory(String path) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String dirPath;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (path.contains(File.separator)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            dirPath \u003d path.substring(0, path.lastIndexOf(File.separator));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            dirPath \u003d path;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return dirPath;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 74,
      "jusufnathanael": 3,
      "Speedweener": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.command.ChangeModeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.command.bookmark.AddBookmarkCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.command.bookmark.DeleteBookmarkCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.command.bookmark.FindBookmarkCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.command.bookmark.LaunchBookmarkCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.command.bookmark.ShowBookmarkCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.command.timetable.AddSlotCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.command.timetable.DeleteSlotCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.command.timetable.ShowTimetableCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.duke.slot.Slot;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import org.fusesource.jansi.AnsiConsole;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.fusesource.jansi.Ansi.ansi;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.WHITE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.BLACK;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.CYAN;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.BLUE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.RED;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.GREEN;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.YELLOW;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Represents the user interface on the command line and deals with interactions with the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static final String LINE \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String logo2 \u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            \"                                                                                                 \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                            ███████                                              \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                      ██████████████████                                         \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                    ███████████████████████                                      \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                  ███████████████████████████                                    \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                 ████             █████  █████                                   \\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                █████              █     ██████                                  \\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                █████              █     ██████                                  \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                █████              █     ██████                                  \\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                 █████             ████  █████                                   \\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                  ███████████████████████████                                    \\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                   █████████████████████████                                     \\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                      ███████████████████                                        \\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                          ███████████                                            \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"                                                                         ██                      \\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"█████████   ███████     ████████   ███████ ███████     █████     █████  █████   █████     █ ████ \\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"     ███  ██      ███  ██      ███ ██     ██     ██         ██  ██       ██   ██      ██  ██   ██\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"   ███   ███       ██ ███       ██ ██     ██     ██  █████████  ███████  ██  ████████████ ██     \\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"███       ███     ███  ██      ███ ██     ██     ██  ██     ██        ██ ██   ██          ██     \\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"██████████   █████       ██████    ██     ██     ██   ████████  ███████   ███  ████████   ██     \\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new Ui instance."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        AnsiConsole.systemInstall();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns a string of the user input in the command line."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return the string of user input."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (Parser.getProgramMode() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            System.out.print(ansi().fg(GREEN).a(\"[Main Menu] Input: \").reset());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (Parser.getProgramMode() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            System.out.print(ansi().fg(BLUE).a(\"[Bookmark mode] Input: \").reset());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (Parser.getProgramMode() \u003d\u003d 2) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            System.out.print(ansi().fg(YELLOW).a(\"[Timetable mode] Input: \").reset());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            System.out.print(\"[An error has occurred] \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE + message + LINE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void printRed(String message) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.print(ansi().fg(RED).a(message).reset());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void clearScreen() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.print(\"\\033[2J\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints a message after starting the program."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void showWelcomeScreen() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        clearScreen();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.println(\"HELLO FROM:\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.println(ansi().bg(WHITE));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.println(ansi().fg(CYAN).a(logo2).reset());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.println(ansi().bg(BLACK));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints a message before exiting the program."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void showExitScreen() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        print(message);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        AnsiConsole.systemUninstall();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints the error message if data file is not found."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"Data file not found\\n\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(message);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This method detects the type of dukeException error and prints the corresponding error message."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param dukeException The dukeException error."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void showErrorMessage(DukeException dukeException) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        switch (dukeException.getError()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case UNKNOWN_INPUT:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printUnknownInputMessage();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case INVALID_MODE:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printUnknownModeMessage();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case WRITE_FILE_ERROR:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printErrorWritingToFile();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case INVALID_ADD_BOOKMARK_INPUT:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printInvalidAddBookmarkInputMessage();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printEmptyBookmarkDescriptionMessage();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case EMPTY_COMMAND:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            printEmptyCommandMessage(dukeException.getInfo());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case NON_INTEGER_INPUT:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            printUseIntegerAsInput();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case BOOKMARK_NUMBER_OUT_OF_BOUNDS:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printUseValidBookmarkNumberMessage(dukeException.getInfo());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_URL:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printInvalidUrl();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case ERROR_LAUNCHING_URL:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printErrorLaunchUrlMessage();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case INVALID_COMMAND_FORMAT:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            print(\"invalid command format\\n\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case INVALID_MODULE:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            print(\"module does not exist\\n\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_TIME_FORMAT:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printInvalidTimeFormat();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case INVALID_SLOT_INPUT:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printInvalidSlotInput();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_TIMETABLE_DAY:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printUnknownDayMessage();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case EMPTY_TIMETABLE:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printEmptyTimetableMessage();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            // unable to get dukeExceptionType"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printErrorWritingToFile() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(\"Error writing to file.\\n\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private void printUseIntegerAsInput() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(\"Command requires an integer input\\n\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printUseValidBookmarkNumberMessage(String info) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(\"Please enter a valid index number between 1 and \" + info + \"\\n\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printErrorLaunchUrlMessage() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(\"Error launching url\\n\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printInvalidUrl() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(\"Invalid URL\" + \"\\n\" + \"URL must start with either \u0027www.\u0027\""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + \" or \u0027https://\u0027 and have no spaces\\n\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printInvalidAddBookmarkInputMessage() {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(\"Invalid bookmark input\\n\""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + \"Format: add {module(optional)} {description} {URL}\\n\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printEmptyBookmarkDescriptionMessage() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(\"Bookmark description required!\\n\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private void printEmptyCommandMessage(String info) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(\"Please enter \" + info + \" with input!\\n\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printUnknownInputMessage() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (Parser.programMode \u003d\u003d 0) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            print(\"Unknown input\\n\" + \"Available inputs in Main menu are\\n\""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    + \"1) mode {bookmark/timetable}\\n\""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    + \"2) exit\\n\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (Parser.programMode \u003d\u003d 1) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            print(\"Unknown input\\n\" + \"Available inputs in Bookmark mode are\\n\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    + \"1) \" + AddBookmarkCommand.ADD_KW + \"\\n\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    + \"2) \" + DeleteBookmarkCommand.DEL_KW + \"\\n\""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    + \"3) \" + ShowBookmarkCommand.LIST_KW + \"\\n\""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    + \"4) \" + FindBookmarkCommand.FIND_KW + \"\\n\""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    + \"5) \" + LaunchBookmarkCommand.LAUNCH_KW + \"\\n\""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    + \"6) \" + ChangeModeCommand.MODE_KW + \" timetable\\n\""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    + \"7) \" + ExitCommand.BYE_KW + \"\\n\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (Parser.programMode \u003d\u003d 2) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            print(\"Unknown input\\n\" + \"Available inputs in Timetable mode are\\n\""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    + \"1) \" + AddSlotCommand.ADD_KW + \"\\n\""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    + \"2) \" + DeleteSlotCommand.DEL_KW + \"\\n\""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    + \"3) \" + ShowTimetableCommand.SHOW_KW + \"\\n\""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    + \"4) \" + ChangeModeCommand.MODE_KW + \" bookmark\\n\""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    + \"5) \" + ExitCommand.BYE_KW + \"\\n\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printUnknownModeMessage() {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(\"Unknown mode input\\n\" + \"Valid modes: bookmark, timetable\\n\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printUnknownDayMessage() {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(\"Unknown day input\\n\""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "              + \"Valid days: monday, tuesday, wednesday, thursday, friday, saturday, sunday\\n\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printEmptyTimetableMessage() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(\"Timetable is empty\\n\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printInvalidSlotInput() {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(\"Invalid slot input\\n\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printInvalidTimeFormat() {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printRed(\"Invalid time format\\n\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 23,
      "TYS0n1": 124,
      "fchensan": 22,
      "jusufnathanael": 5,
      "Speedweener": 107
    }
  },
  {
    "path": "src/main/java/seedu/duke/bookmark/Bookmark.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.duke.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.command.bookmark.AddBookmarkCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * This class represents a bookmark of a URL of a webpage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * It stores the URL and a description of the webpage."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * It also contains a method which can extract the URL and description from a given string in a certain format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Bookmark {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String module;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String url;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static final String SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a bookmark object containing a URL and description of the webpage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param url The URL of the webpage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param description The description of the webpage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Bookmark(String module, String description, String url) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert module !\u003d null : \"module should not be null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert description !\u003d null : \"description should not be null\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert url !\u003d null : \"url should not be null\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.module \u003d module.trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.url \u003d url.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the topic, URL and description that can be detected from the given input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input the string input by the user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return a list of strings containing the topic, URL and the description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the command format is invalid, if the description is empty or if the url is invalid."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static List\u003cString\u003e extractModuleDescriptionAndUrl(String input) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert input.startsWith(AddBookmarkCommand.ADD_KW) : \"input should always start with \\\"add\\\"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input \u003d input.substring(AddBookmarkCommand.ADD_KW.length());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (input.isBlank()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.EMPTY_COMMAND, AddBookmarkCommand.ADD_KW);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!input.startsWith(\" \")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e moduleDescriptionUrl \u003d new ArrayList\u003c\u003e(Arrays.asList(input.trim().split(\" \", 3)));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (moduleDescriptionUrl.size() \u003d\u003d 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            moduleDescriptionUrl.add(0, \"\");  // No entry for module"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (moduleDescriptionUrl.size() !\u003d 3) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_ADD_BOOKMARK_INPUT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (moduleDescriptionUrl.get(1).isBlank()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new DukeException(DukeExceptionType.EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!isUrlValid(moduleDescriptionUrl.get(2))) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_URL);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return moduleDescriptionUrl;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static Boolean isUrlValid(String url) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (url.contains(\" \")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return url.startsWith(\"www.\") || url.startsWith(\"https://\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method opens the URL of the bookmark in a web browser."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if there is an error launching the URL."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void launch() throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            launchUrl();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new DukeException(DukeExceptionType.ERROR_LAUNCHING_URL);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void launchUrl() throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Runtime rt \u003d Runtime.getRuntime();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String os \u003d System.getProperty(\"os.name\").toLowerCase();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (os.contains(\"win\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            launchUrlForWindows(rt);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (os.contains(\"mac\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            launchUrlForMac(rt);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (os.contains(\"nix\") || os.contains(\"nux\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            launchUrlForLinux(rt);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void launchUrlForWindows(Runtime rt) throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        rt.exec(\"rundll32 url.dll,FileProtocolHandler \" + url);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void launchUrlForMac(Runtime rt) throws IOException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String link;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (url.startsWith(\"www.\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            link \u003d \"https://\" + url;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            link \u003d url;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        rt.exec(\"open \" + link);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void launchUrlForLinux(Runtime rt) throws IOException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String link;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (url.startsWith(\"www.\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            link \u003d \"https://\" + url;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            link \u003d url;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        rt.exec(\"xdg-open \" + link);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the URL of the bookmark."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a string of the URL."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getUrl() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return url;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the description of the bookmark."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a string of the description of the bookmark."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getModule() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getBookmarkAsString() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return  (\"[\" + module + \"] \" + description + \" \" +  url + System.lineSeparator());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the data of the bookmark in a string."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return a string containing the information of the bookmark."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getExport() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return module + SEPARATOR + description + SEPARATOR + url;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the bookmark instance which is created from the data read from the bookmark text file."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This class level method is called at the start of the program to initialize the bookmark."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param data The string containing information of the bookmark."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the bookmark instance."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the URL is invalid."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws IndexOutOfBoundsException if the data format is invalid."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static Bookmark initBookmark(String data) throws DukeException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cString\u003e details \u003d  Arrays.asList(data.split(\"\\\\|\"));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String module \u003d details.get(0).trim();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d details.get(1).trim();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d details.get(2).trim();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!isUrlValid(url)) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_URL);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(module, description, url);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return bookmark;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 36,
      "TYS0n1": 132,
      "fchensan": 7,
      "Speedweener": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/bookmark/BookmarkList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.ItemList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * This class represents the bookmark list used to store and organize bookmarks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class BookmarkList extends ItemList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private ArrayList\u003cBookmark\u003e bookmarks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final String lineSeparator \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(BookmarkList.class.getName());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a BookmarkList object with an empty ArrayList to store Bookmark objects."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public BookmarkList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.bookmarks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs the BookmarkList object containing an ArrayList to store Bookmark objects."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This constructor is used when loading bookmarks from a text file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmarkStrings the list of strings of bookmarks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public BookmarkList(ArrayList\u003cString\u003e bookmarkStrings) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.bookmarks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        loadBookmarkList(bookmarkStrings);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private void loadBookmarkList(ArrayList\u003cString\u003e bookmarks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (String line : bookmarks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            loadBookmark(line);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method adds the given bookmark object to the bookmark list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmark the bookmark to be added to the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void addBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assert bookmark !\u003d null : \"Added bookmark should not be null!\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarks.add(bookmark);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void loadBookmark(String line) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            bookmarks.add(Bookmark.initBookmark(line));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IndexOutOfBoundsException | DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            // Invalid task data, skips to the next entry"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            logger.log(Level.WARNING, \"invalid bookmark data found in file: \" + line, e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the the data of all bookmarks in the list to be saved in the text file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the data of all the bookmarks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (Bookmark bookmark : bookmarks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            data.append(bookmark.getExport()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return data.toString().trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the number of bookmarks in the list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the size of the bookmark list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmarks.size();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns bookmark based on the index."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param index The index of the bookmark in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The bookmark with the corresponding index in the list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @throws IndexOutOfBoundsException if the index is out of range."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Bookmark getBookmark(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmarks.get(index);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the bookmark list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The bookmark list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public ArrayList\u003cBookmark\u003e getBookmarkList() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmarks;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method deletes the bookmark from the list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmark The bookmark to be deleted."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws NullPointerException if the bookmark does not exist in the list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void deleteBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assert bookmarks.contains(bookmark) : \"Bookmark to be\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + \"deleted not in list!\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarks.remove(bookmark);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * This method shows all the bookmarks from the list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @return The string message containing the matching bookmarks"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String showBookmarks() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String message \u003d \"\\tHere are the bookmarks in your list:\" + lineSeparator;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c bookmarks.size(); i++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            message \u003d message + \"\\t\" + (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString() + lineSeparator;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * This method searches the bookmarks from the list with matching module"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * and description."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param list The list of strings containing the module and description to be searched"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @return The string message containing the matching bookmarks"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String findBookmarks(List\u003cString\u003e list) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (bookmarks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"Empty List\" + lineSeparator;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            String module \u003d list.get(0).toUpperCase();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            String description \u003d list.get(1).toUpperCase();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d getMatchingBookmarks(module, description);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (!message.isEmpty()) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"Here are your matching bookmarks\" + lineSeparator + message;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"No bookmarks contain the specified keyword!\" + lineSeparator;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getMatchingBookmarks(String module, String description) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assert !description.equals(\"\") : \"Description should not be empty!\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c bookmarks.size(); i++) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (bookmarks.get(i).getModule().toUpperCase().contains(module)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    \u0026\u0026 bookmarks.get(i).getDescription().toUpperCase().contains(description)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                message +\u003d (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString() + lineSeparator;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * This method searches the bookmarks from the list with matching module"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * and description and launches them accordingly."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param list The List\u003cString\u003e\u003c/String\u003e containing the module and description to be searched"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @return The string message containing the matching bookmarks"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String launchBookmarks(List\u003cString\u003e list) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (bookmarks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"Empty List\" + lineSeparator;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            String module \u003d list.get(0).toUpperCase();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            String description \u003d list.get(1).toUpperCase();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d launchMatchingBookmarks(module, description);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (!message.isEmpty()) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"Launched these bookmarks:\" + lineSeparator + message;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"No bookmarks contain the specified keyword!\" + lineSeparator;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String launchMatchingBookmarks(String module, String description) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assert !description.equals(\"\") : \"Description should not be empty!\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c bookmarks.size(); i++) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (bookmarks.get(i).getModule().toUpperCase().contains(module)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    \u0026\u0026 bookmarks.get(i).getDescription().toUpperCase().contains(description)) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    bookmarks.get(i).launch();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    message +\u003d (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString() + lineSeparator;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    errorMessage +\u003d (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString() + lineSeparator;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!errorMessage.isBlank()) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"Failed to launch these bookmarks:\" + lineSeparator + errorMessage;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 78,
      "Speedweener": 137
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ChangeModeCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Timetable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ChangeModeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String MODE_KW \u003d \"mode\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public int setToMode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new ChangeModeCommand instance."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ChangeModeCommand(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        setToMode \u003d getModeFromCommand(command);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                        Storage bookmarkStorage, Storage slotStorage)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (setToMode \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Parser.programMode \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ui.print(\"Changing to bookmark mode\" + System.lineSeparator());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (setToMode \u003d\u003d 2) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Parser.programMode \u003d 2;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ui.print(\"Changing to timetable mode\" + System.lineSeparator());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_MODE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public int getModeFromCommand(String input) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int outputData;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert input.startsWith(ChangeModeCommand.MODE_KW) : \"input should always start with \\\"mode\\\"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String modeData \u003d input.substring(5);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (modeData.equals(\"bookmark\") \u003d\u003d true) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (modeData.equals(\"timetable\") \u003d\u003d true) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d 2;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return outputData;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "TYS0n1": 55,
      "Speedweener": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ClearCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.slot.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.slot.Slot;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.slot.Timetable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String CLEAR_KW \u003d \"clear\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Constructs a new ShowBookmarkCommand instance."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public ClearCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                        Storage bookmarkStorage, Storage slotStorage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.clearScreen();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Timetable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected boolean isExitCommand \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Execution of command depends on which command subclass the command belongs to."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public abstract void execute(BookmarkList bookmarks, Timetable timetable, Ui ui,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                                 Storage bookmarkStorage, Storage slotStorage) throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns true if the command is an ExitCommand."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return isExitCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 22,
      "Speedweener": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Timetable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents the user command exit the Duke program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String BYE_KW \u003d \"exit\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new ExitCommand instance and sets isExitCommand to true."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        isExitCommand \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints the exit screen before the program exits."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param timetable The timetable. //ADD more comments"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                        Storage bookmarkStorage, Storage slotStorage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.showExitScreen();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 24,
      "Speedweener": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/bookmark/AddBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Timetable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " * Represents the user command exit the Duke program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class AddBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String ADD_KW \u003d \"add\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String module;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String url;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new AddBookmarkCommand instance and stores the information of the bookmark given by the input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if input command is invalid, if the description is empty or if the url is invalid."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public AddBookmarkCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e descAndAt \u003d Bookmark.extractModuleDescriptionAndUrl(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        module \u003d descAndAt.get(0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        description \u003d descAndAt.get(1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        url \u003d descAndAt.get(2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Adds the bookmark to the bookmark list and saves the bookmarks list in the text file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param timetable The list of slots."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmarkStorage The storage for saving and loading bookmarks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param slotStorage The storage for saving and loading slots."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if there is an error when saving the bookmark."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        Storage bookmarkStorage, Storage slotStorage) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(module, description, url);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.print(\"Added bookmark: \" + \"[\" + module + \"] \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + description + \" \" +  url + System.lineSeparator());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarkStorage.save(bookmarks.getData());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 14,
      "Speedweener": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/bookmark/DeleteBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Timetable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class DeleteBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String DEL_KW \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new DeleteBookmarkCommand instance and stores the information of the bookmark given by the input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException thrown if input command is invalid or if the bookmark number is invalid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public DeleteBookmarkCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String details \u003d command.substring(DEL_KW.length());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.EMPTY_COMMAND, DEL_KW);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            index \u003d Integer.parseInt(details.trim()) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.NON_INTEGER_INPUT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Deletes the bookmark in the bookmark list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param timetable The list of slots."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmarkStorage The storage for saving and loading bookmarks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param slotStorage The storage for saving and loading slots."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the bookmark number is invalid or if there is an error when saving the bookmark."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                        Storage bookmarkStorage, Storage slotStorage) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            Bookmark bookmark \u003d bookmarks.getBookmark(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            bookmarks.deleteBookmark(bookmark);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            ui.print(getMessage(bookmark));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            bookmarkStorage.save(bookmarks.getData());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.BOOKMARK_NUMBER_OUT_OF_BOUNDS, \"\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    + bookmarks.getBookmarkList().size());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String getMessage(Bookmark bookmark) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tI\u0027ve deleted this bookmark!:\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + \"\\t  [\" + bookmark.getModule() + \"] \" + bookmark.getDescription() + \" \" + bookmark.getUrl() + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 18,
      "Speedweener": 48
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/bookmark/FindBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Timetable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class FindBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String FIND_KW \u003d \"find\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final List\u003cString\u003e moduleAndDescription;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new FindBookmarkCommand instance and gets the module and description to be searched."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * If only one term is entered (term meaning string without a space), method asserts"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * this to be the module and inserts an empty description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param command The command input by the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the input is unknown."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public FindBookmarkCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String details \u003d command.substring(FIND_KW.length());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.EMPTY_COMMAND, FIND_KW);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        moduleAndDescription \u003d new ArrayList\u003c\u003e(Arrays.asList(details.trim().split(\" \", 2)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (moduleAndDescription.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            moduleAndDescription.add(\"\");  // Empty entry for description"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints the bookmark with the matching keyword."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *  @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param timetable The list of slots."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmarkStorage The storage for saving and loading bookmarks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param slotStorage The storage for saving and loading slots."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                        Storage bookmarkStorage, Storage slotStorage) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.print(bookmarks.findBookmarks(moduleAndDescription));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 10,
      "Speedweener": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/bookmark/LaunchBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Timetable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class LaunchBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String LAUNCH_KW \u003d \"launch\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private List\u003cString\u003e moduleAndDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private int launchTypeFlag;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new LaunchBookmarkCommand instance and gets the index of the bookmark to launch."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Determines whether the launch command was input with an integer or string, and sets launchTypeFlag accordingly."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Integer (launchTypeFlag \u003d 1)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Strings (launchTypeFlag \u003d 2)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param command The command input by the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the input is unknown or if the bookmark number is invalid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public LaunchBookmarkCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String details \u003d command.substring(LAUNCH_KW.length());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.EMPTY_COMMAND, LAUNCH_KW);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            index \u003d Integer.parseInt(details.trim()) - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            launchTypeFlag \u003d 1; // (flag to launch bookmark at specified index)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            moduleAndDescription \u003d new ArrayList\u003c\u003e(Arrays.asList(details.trim().split(\" \", 2)));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (moduleAndDescription.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                moduleAndDescription.add(\"\");  // Blank entry for description"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            launchTypeFlag \u003d 2; // (flag to launch bookmarks with matching module and description)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Launches the bookmark based on the launchTypeFlag previously determined in LaunchBookmarkCommand initialization."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param timetable The list of slots."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmarkStorage The storage for saving and loading bookmarks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param slotStorage The storage for saving and loading slots."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the bookmark number is invalid or if there is an error launching the URL."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                        Storage bookmarkStorage, Storage slotStorage) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (launchTypeFlag \u003d\u003d 1) { // Launch based on index"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                Bookmark bookmark \u003d bookmarks.getBookmark(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                bookmark.launch();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                ui.print(getMessage(bookmark));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                throw new DukeException(DukeExceptionType.BOOKMARK_NUMBER_OUT_OF_BOUNDS, \"\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                        + bookmarks.getBookmarkList().size());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (launchTypeFlag \u003d\u003d 2) { // Launch based on matching module and description"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            ui.print(bookmarks.launchBookmarks(moduleAndDescription));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String getMessage(Bookmark bookmark) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String message \u003d \"\\tNice! I\u0027ve launched this bookmark!:\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + \"\\t  [\" + bookmark.getModule() + \"] \" + bookmark.getDescription() + \" \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + bookmark.getUrl() + \"\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 12,
      "Speedweener": 75
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/bookmark/ShowBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Timetable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class ShowBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String LIST_KW \u003d \"show\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Constructs a new ShowBookmarkCommand instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public ShowBookmarkCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        Storage bookmarkStorage, Storage slotStorage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.print(bookmarks.showBookmarks());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 3,
      "Speedweener": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/timetable/AddSlotCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.slot.Slot;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Timetable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Represents the user command exit the Duke program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class AddSlotCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String ADD_KW \u003d \"add\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String moduleCode;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private List\u003cString\u003e commands;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new AddSlotCommand instance and stores the information of the slot given by the input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @throws DukeException if input command is invalid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public AddSlotCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        assert command.startsWith(ADD_KW);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String details \u003d command.substring(ADD_KW.length());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.EMPTY_COMMAND, ADD_KW);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_ADD_SLOT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String[] stringArray \u003d details.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        moduleCode \u003d stringArray[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (stringArray.length \u003e 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            commands \u003d Arrays.asList(stringArray[1].split(\",\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Adds the slot to the slot list and saves the slots list in the text file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param timetable The timetable"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarkStorage The storage for the bookmark list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param slotStorage The storage for the slot list  // ADD MORE COMMENTS"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @throws DukeException Some exception // ADD MORE COMMENTS"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui, Storage bookmarkStorage,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        Storage slotStorage) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Module module;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (timetable.moduleExists(moduleCode)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            module \u003d timetable.getModule(moduleCode);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d moduleCode + \" already exists\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            module \u003d timetable.addModule(moduleCode);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d moduleCode + \" added\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (commands !\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            for (String command : commands) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d createSlotAndBookmark(module, command.trim());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String createSlotAndBookmark(Module module, String command) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert module !\u003d null : \"module should mot be null\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d create(command, module);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d e.getInfo() + \"\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"incorrect format for slot: \" + command + \"\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String create(String command, Module module) throws DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e slotAndBookmark \u003d Arrays.asList(command.trim().split(\" \"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (isAddModuleBookmark(slotAndBookmark)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d addBookmarkToModule(module, slotAndBookmark);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String lesson \u003d slotAndBookmark.get(0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String day \u003d slotAndBookmark.get(1);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            LocalTime startTime \u003d LocalTime.parse(slotAndBookmark.get(2));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            LocalTime endTime \u003d LocalTime.parse(slotAndBookmark.get(3));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Slot newSlot;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (module.slotExists(lesson, day, startTime, endTime)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                newSlot \u003d module.getSlot(lesson, day, startTime, endTime);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d  \"  \" + lesson + \" slot already exists\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                newSlot \u003d module.createSlotNew(lesson, day, startTime, endTime);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                module.addSlot(newSlot);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d  \"  \" + lesson + \" slot added\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d checkForAndAddBookmarkToSlot(slotAndBookmark, lesson, newSlot);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String checkForAndAddBookmarkToSlot(List\u003cString\u003e slotAndBookmark,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String lesson, Slot newSlot) throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (slotAndBookmark.size() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            createBookmark(slotAndBookmark.get(4), lesson, newSlot);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"    bookmark added to \" + moduleCode + \" \" + lesson + \"\\n\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (slotAndBookmark.size() \u003e 5) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_URL, \"invalid url\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String addBookmarkToModule(Module module, List\u003cString\u003e slotAndBookmark) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d slotAndBookmark.get(0);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String url \u003d slotAndBookmark.get(1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description,\"dummy\", url);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        module.addBookmark(bookmark);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"  bookmark added to module\\n\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private boolean isAddModuleBookmark(List\u003cString\u003e slotAndBookmark) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return (slotAndBookmark.get(1).startsWith(\"www.\") || slotAndBookmark.get(1).startsWith(\"https://\"))"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                \u0026\u0026 slotAndBookmark.size() \u003d\u003d 2;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void createBookmark(String url, String lesson, Slot newSlot) throws DukeException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!url.startsWith(\"www.\") \u0026\u0026 !url.startsWith(\"https://\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_URL, \"invalid url format: \" + url);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(lesson, \"dummy\", url);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        newSlot.addBookmark(bookmark);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 107,
      "TYS0n1": 27,
      "fchensan": 4,
      "Speedweener": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/timetable/DeleteSlotCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Slot;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Timetable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class DeleteSlotCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String DEL_KW \u003d \"delete\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String moduleCode;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private Integer slotIndex \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private boolean deleteBookmarks \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Constructs a new DeleteSlotCommand instance and stores the information of the Slot given by the input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @throws DukeException if input command is invalid."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public DeleteSlotCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        assert command.startsWith(DEL_KW);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String details \u003d command.substring(DEL_KW.length());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.EMPTY_COMMAND, DEL_KW);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String[] deleteCommands \u003d details.trim().split(\" \", 3);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        moduleCode \u003d deleteCommands[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String something \u003d deleteCommands[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (something.trim().compareTo(\"bookmarks\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                deleteBookmarks \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            slotIndex \u003d Integer.parseInt(something) - 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (deleteCommands[2].trim().compareTo(\"bookmarks\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                deleteBookmarks \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } catch (NullPointerException | NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            // No slot index or delete bookmark keyword provided."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Deletes either module or slot depending on the deleteBookmarks flag. // ADD MORE COMMENTS"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param timetable The timetable"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarkStorage The storage for the bookmark list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param slotStorage The storage for the slot list  // ADD MORE COMMENTS"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @throws DukeException INVALID_SLOT_NUMBER // ADD MORE COMMENTS"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                        Storage bookmarkStorage, Storage slotStorage)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!timetable.moduleExists(moduleCode)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"module does not exists\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Module module \u003d timetable.getModule(moduleCode);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slotIndex \u003d\u003d null \u0026\u0026 !deleteBookmarks) { // delete module"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                timetable.deleteModule(module);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"deleted module: \" + moduleCode + \"\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else if (slotIndex !\u003d null \u0026\u0026 !deleteBookmarks) { // delete slot"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                Slot slot \u003d module.getSlot(slotIndex);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                module.removeSlot(slot);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"deleted \" + slot + \" from \" + moduleCode + \"\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else if (slotIndex \u003d\u003d null \u0026\u0026 deleteBookmarks) { // delete module bookmark"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                module.removeAllBookmarks();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"deleted bookmark from \" + moduleCode + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else if (slotIndex !\u003d null \u0026\u0026 deleteBookmarks) { // delete slot bookmark"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                Slot slot \u003d module.getSlot(slotIndex);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                slot.removeAllBookmarks();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"deleted bookmarks from \" + slot + \" from \" + moduleCode + \"\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private String getMessage(Slot slot) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String message \u003d \"\\tI\u0027ve deleted this slot!:\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                + slot.getDay() + \" [\" + slot.getStartTime()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                + \"-\" + slot.getEndTime() + \"] \" + slot.getTitle() + System.lineSeparator();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 42,
      "fchensan": 41,
      "Speedweener": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/timetable/ShowTimetableCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.duke.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.slot.Slot;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.slot.Timetable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ShowTimetableCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String SHOW_KW \u003d \"show\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private boolean showBookmarks \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String module \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new ShowTimetableCommand instance."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public ShowTimetableCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert command.startsWith(SHOW_KW) : \"command should start with show keyword\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (command.compareTo(SHOW_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"ALL\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (command.charAt(SHOW_KW.length()) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                throw new DukeException(DukeExceptionType.INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String details \u003d command.substring(SHOW_KW.length() + 1).trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (isDay(details)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                day \u003d getDayFromCommand(details);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                String[] something \u003d details.split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                module \u003d something[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                if (something.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    if (something[1].compareTo(\"bookmarks\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        showBookmarks \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        throw new DukeException(DukeExceptionType.INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        Storage bookmarkStorage, Storage slotStorage) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cModule\u003e modules \u003d timetable.getFullModuleList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (day !\u003d null) { // show and show day"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            List\u003cSlot\u003e list \u003d new ArrayList\u003c\u003e(timetable.getFullSlotList());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d getMessageLessonAtTime(modules, list, day);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (module !\u003d null \u0026\u0026 !showBookmarks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (!timetable.moduleExists(module)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                throw new DukeException(DukeExceptionType.INVALID_MODULE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Module matchedModule \u003d timetable.getModule(module);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d getMessageForModule(matchedModule);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (module !\u003d null \u0026\u0026 showBookmarks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (!timetable.moduleExists(module)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                throw new DukeException(DukeExceptionType.INVALID_MODULE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Module matchedModule \u003d timetable.getModule(module);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d matchedModule.getBookmarks();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private boolean isDay(String input) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        boolean isDay \u003d false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (input.compareToIgnoreCase(Slot.MON) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            isDay \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(Slot.TUE) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            isDay \u003d true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(Slot.WED) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            isDay \u003d true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(Slot.THU) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            isDay \u003d true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(Slot.FRI) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            isDay \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(Slot.SAT) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            isDay \u003d true;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(Slot.SUN) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            isDay \u003d true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return isDay;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getDayFromCommand(String input) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String outputData;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (input.compareToIgnoreCase(Slot.MON) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d Slot.MON;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(Slot.TUE) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d Slot.TUE;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(Slot.WED) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d Slot.WED;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(Slot.THU) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d Slot.THU;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(Slot.FRI) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d Slot.FRI;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(Slot.SAT) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d Slot.SAT;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(Slot.SUN) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d Slot.SUN;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return outputData;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getMessageSlotsInADay(List\u003cModule\u003e modules, List\u003cSlot\u003e slots, String day) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        boolean hasSlotOnDay \u003d false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Slot s: slots) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            for (Module module : modules) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                if (module.slotExists(s) \u0026\u0026 s.getDay().equals(day)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    message.append(s.toString()).append(\" \").append(module.getModuleCode()).append(\"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    hasSlotOnDay \u003d true;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!hasSlotOnDay) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message.append(\"No lessons\" + \"\\n\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        message.append(\"\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getMessageTimetable(List\u003cModule\u003e modules, List\u003cSlot\u003e slots) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (String d: Slot.days) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message.append(d).append(\"\\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message.append(getMessageSlotsInADay(modules, slots, d));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String getMessageLessonAtTime(List\u003cModule\u003e modules, List\u003cSlot\u003e slots,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                                          String dayInput) throws DukeException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (slots.isEmpty()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.EMPTY_TIMETABLE);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (dayInput \u003d\u003d null) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_TIMETABLE_DAY);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (dayInput.compareTo(\"ALL\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            return getMessageTimetable(modules,slots);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        message +\u003d \"Lessons for \" + dayInput + \"\\n\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        message +\u003d getMessageSlotsInADay(modules, slots, dayInput);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getMessageForModule(Module module) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cSlot\u003e slots \u003d module.getSlotList();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!slots.isEmpty()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d module.getModuleCode() + \"\\n\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            for (int i \u003d 0; i \u003c slots.size(); i++) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"  \" + (i + 1) + \". \" + slots.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"no slots for \" + module.getModuleCode() + \"\\n\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 134,
      "TYS0n1": 35,
      "Speedweener": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * The class DukeException is a subclass of Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * It is thrown when an error specific to Duke occurs."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private DukeExceptionType dukeExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String info;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new DukeException instance by storing the given DukeExceptionType."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param dukeExceptionType The type of dukeException."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public DukeException(DukeExceptionType dukeExceptionType) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.dukeExceptionType \u003d dukeExceptionType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new DukeException instance by storing the given DukeExceptionType and message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param dukeExceptionType The type of dukeException."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param info Additional information of the exception."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public DukeException(DukeExceptionType dukeExceptionType, String info) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.dukeExceptionType \u003d dukeExceptionType;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.info \u003d info;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the dukeExceptionType of the dukeException."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the dukeExceptionType."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public DukeExceptionType getError() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return dukeExceptionType;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return info;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 34,
      "Speedweener": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeExceptionType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Enumeration of all the types of DukeException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public enum DukeExceptionType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    UNKNOWN_INPUT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_MODE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    WRITE_FILE_ERROR,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    ERROR_LOADING_FILE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_ADD_BOOKMARK_INPUT,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    EMPTY_DESCRIPTION,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    NON_INTEGER_INPUT,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    BOOKMARK_NUMBER_OUT_OF_BOUNDS,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    EMPTY_COMMAND,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_URL,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    ERROR_LAUNCHING_URL,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_ADD_SLOT,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_MODULE,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_SLOT_NUMBER,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_TIME_FORMAT,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_SLOT_INPUT,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_TIMETABLE_DAY,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    EMPTY_TIMETABLE"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 10,
      "TYS0n1": 15,
      "Speedweener": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/slot/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String moduleCode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private List\u003cSlot\u003e slots;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Module(String moduleCode) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.moduleCode \u003d moduleCode.toUpperCase();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        slots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void addSlot(Slot slot) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        slots.add(slot);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean slotExists(String lesson, String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Slot slot : slots) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slot.match(lesson, day, startTime, endTime)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean slotExists(Slot slot) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slots.contains(slot);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Slot getSlot(String lesson, String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Slot slot : slots) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slot.match(lesson, day, startTime, endTime)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                return slot;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Slot getSlot(int index) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Slot slot;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            slot \u003d slots.get(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_SLOT_NUMBER, \"\" + slots.size());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slot;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Slot createSlotNew(String lesson, String day, LocalTime startTime, LocalTime endTime) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Slot slot \u003d new Slot(startTime, endTime, day, lesson);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slot;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void removeSlot(Slot slot) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert slots.contains(slot) : \"Use getSlot to get reference of slot to be deleted before calling this method\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        slots.remove(slot);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean isModule(String moduleCode) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        boolean isModule \u003d false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (this.moduleCode.compareToIgnoreCase(moduleCode) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            isModule \u003d true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return isModule;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void addBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void removeAllBookmarks() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public List\u003cSlot\u003e getSlotList() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slots;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String getBookmarks() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cBookmark\u003e bookmarkList \u003d bookmarks.getBookmarkList();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Bookmark bookmark : bookmarkList) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d bookmark.getBookmarkAsString() + \"\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (bookmarkList.isEmpty()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"no bookmarks found in module\\n\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Slot slot : slots) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d slot.toString() + \"\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            List\u003cBookmark\u003e slotBookmarkList \u003d slot.getBookmarkList();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            for (Bookmark bookmark : slotBookmarkList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"  \" + bookmark.getBookmarkAsString() + \"\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slotBookmarkList.isEmpty()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"  no bookmarks found in slot\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (message.isBlank()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"no bookmarks found in \" + moduleCode + \"\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String getModuleCode() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return moduleCode;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 117
    }
  },
  {
    "path": "src/main/java/seedu/duke/slot/Slot.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.duke.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Slot {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String MON \u003d \"mon\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String TUE \u003d \"tue\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String WED \u003d \"wed\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String THU \u003d \"thu\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String FRI \u003d \"fri\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String SAT \u003d \"sat\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String SUN \u003d \"sun\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String[] days \u003d { MON, TUE, WED, THU, FRI, SAT, SUN };"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static final String SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Slot(LocalTime startTimeInput, LocalTime endTimeInput, String dayInput, String titleInput) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        startTime \u003d startTimeInput;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        endTime \u003d endTimeInput;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        day \u003d dayInput;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        title \u003d titleInput;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean match(String lesson, String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (title.compareTo(lesson) \u003d\u003d 0"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                \u0026\u0026 this.day.compareTo(day) \u003d\u003d 0"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                \u0026\u0026 this.startTime.equals(startTime)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                \u0026\u0026 this.endTime.equals(endTime)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Bookmark getBookmark(int index) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark bookmark;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            bookmark \u003d bookmarks.getBookmark(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.BOOKMARK_NUMBER_OUT_OF_BOUNDS, \"\" + bookmarks.getSize());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return bookmark;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public List\u003cBookmark\u003e getBookmarkList() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return bookmarks.getBookmarkList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void removeBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.deleteBookmark(bookmark);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void removeAllBookmarks() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void addBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setStartTime(LocalTime timeInput) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        startTime \u003d timeInput;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public LocalTime getStartTime() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setEndTime(LocalTime timeInput) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        endTime \u003d timeInput;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public LocalTime getEndTime() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setDay(String dayInput) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        day \u003d dayInput;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getDay() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setTitle(String titleInput) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        title \u003d titleInput;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getExport() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return startTime.toString() + SEPARATOR + endTime.toString() + SEPARATOR + day + SEPARATOR + title;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static Slot initSlot(String data) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cString\u003e details \u003d Arrays.asList(data.split(\"\\\\|\"));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        LocalTime startTime \u003d LocalTime.parse(details.get(0).trim());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        LocalTime endTime \u003d LocalTime.parse(details.get(1).trim());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String day \u003d details.get(2).trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String title \u003d details.get(3).trim();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return new Slot(startTime, endTime, day, title);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return String.format(startTime.toString() + \"-\" + endTime.toString() + \" \" + title);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 45,
      "TYS0n1": 84
    }
  },
  {
    "path": "src/main/java/seedu/duke/slot/SlotList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.duke.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.ItemList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * This class represents the timetable used to store and organize the schedule slots."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class SlotList extends ItemList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private ArrayList\u003cSlot\u003e slots;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    //private ArrayList\u003cBookmark\u003e bookmarks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private ArrayList\u003cModule\u003e modules;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a SlotList object with an empty ArrayList to store Slot objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public SlotList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.slots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        //this.bookmarks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs the SlotList object containing an ArrayList to store Slot objects."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This constructor is used when loading Slots from a text file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param slotStrings the list of strings of Slots."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public SlotList(ArrayList\u003cString\u003e slotStrings) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.slots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        loadSlotList(slotStrings);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void loadSlotList(ArrayList\u003cString\u003e slots) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (String slot: slots) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            loadSlot(slot);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean moduleExists(String moduleCode) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        boolean moduleExists \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Module module : modules) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (module.isModule(moduleCode)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                moduleExists \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return moduleExists;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Module addModule(String moduleCode) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Module module \u003d new Module(moduleCode);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        modules.add(module);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Module getModule(String moduleCode) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Module module \u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Module mod : modules) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (moduleCode.compareTo(mod.getModuleCode()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                module \u003d mod;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This method adds the given Slot object to the timetable."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param slot the slot to be added to the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void addSlot(Slot slot)  {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        slots.add(slot);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void loadSlot(String line) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            slots.add(Slot.initSlot(line));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            // TODO: to be fixed"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(\"Error\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the the data of all Slots in the list to be saved in the text file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return the data of all the Slots."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */ "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Slot slot : slots) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            data.append(slot.getExport()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return data.toString().trim();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the number of slots in the timetable."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return the size of the list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return slots.size();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns a slot based on the index."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param index The index of the slot in the list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return The slot with the corresponding index in the list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Slot getSlot(int index) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return slots.get(index);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the slot list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return The slot list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ArrayList\u003cSlot\u003e getSlotList() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return slots;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This method deletes the slot from the list."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param slot The slot to be deleted."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void deleteSlot(Slot slot) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        slots.remove(slot);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 34,
      "TYS0n1": 103
    }
  },
  {
    "path": "src/main/java/seedu/duke/slot/Timetable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Timetable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private List\u003cModule\u003e modules;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Timetable() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean moduleExists(String moduleCode) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        boolean moduleExists \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Module module : modules) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (module.isModule(moduleCode)) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                moduleExists \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return moduleExists;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Module addModule(String moduleCode) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Module module \u003d new Module(moduleCode);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        modules.add(module);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public List\u003cSlot\u003e getFullSlotList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cSlot\u003e slotList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Module module : modules) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            slotList.addAll(module.getSlotList());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slotList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public List\u003cModule\u003e getFullModuleList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return modules;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Module getModule(String moduleCode) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Module module \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Module mod : modules) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (mod.isModule(moduleCode)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                module \u003d mod;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert module !\u003d null : \"module should not be null\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Module getModule(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return modules.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public int getModuleCount() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return modules.size();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void deleteModule(Module module) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        modules.remove(module);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 64
    }
  },
  {
    "path": "src/test/java/seedu/duke/ChangeModeCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.duke.command.ChangeModeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ChangeModeCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testChangeToBookmarkMode() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(1, new ChangeModeCommand(\"mode bookmark\").setToMode);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testChangeToTimetableMode() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(2, new ChangeModeCommand(\"mode timetable\").setToMode);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testInvalidModeInput() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(0, new ChangeModeCommand(\"mode abcd\").setToMode);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 27
    }
  },
  {
    "path": "src/test/java/seedu/duke/bookmark/BookmarkListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "class BookmarkListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private final Bookmark bookmark \u003d new Bookmark(\"CS2113T\", \"tutorial\", \"www.google.com\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final String lineSeparator \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void init() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void addBookmark() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String module \u003d \"CS2113T\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(module, description, url);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmark, bookmarks.getBookmark(0));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void initializeBookmarkListWithArrayList_validBookmark_addsToBookmarkList() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | tutorial | www.google.com\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.getBookmark(0).getExport(), \"CS2113T | tutorial | www.google.com\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.getBookmark(1).getExport(), \"CS2113T | lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Adds 1 valid and 1 invalid bookmark to the BookmarkList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Asserts IndexOutOfBoundsException for index 1 as only 1 bookmark will be added to index 0."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void initializeBookmarkListWithArrayList_invalidBookmark_throwsIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | tutorial | www.google.com\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e bookmarks.getBookmark(1));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getData() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | tutorial | www.google.com\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.getData(), \"CS2113T | tutorial | www.google.com\" + System.lineSeparator()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + \"CS2113T | lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getSize() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | tutorial | www.google.com\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS1010 | lecture | https://www.youtube.com/\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.getSize(), 3);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void getBookmark() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.getBookmark(0), bookmark);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getBookmarkList() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Adds 4 valid bookmarks to the BookmarkList."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Checks that size decreases to 4 after deletion."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Checks that bookmark at index 2 changes after deletion."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void deleteBookmark() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | tutorial | www.google.com\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS1010 | lecture | https://www.youtube.com/\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"GEH1049 | lecture | https://www.stackoverflow.com/\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.getSize(), 4);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.getBookmark(2).getBookmarkAsString(),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                \"[CS1010] lecture https://www.youtube.com/\" + System.lineSeparator());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarks.deleteBookmark(bookmarks.getBookmark(2));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.getSize(), 3);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.getBookmark(2).getBookmarkAsString(),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                \"[GEH1049] lecture https://www.stackoverflow.com/\" + System.lineSeparator());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void showBookmark() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | tutorial | www.google.com\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.showBookmarks(), \"\\tHere are the bookmarks in your list:\" + lineSeparator"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + \"\\t\" + (1) + \".\" + \"[CS2113T] tutorial www.google.com\" + System.lineSeparator() + lineSeparator"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + \"\\t\" + (2) + \".\" + \"[CS2113T] lecture www.yahoo.com\" + System.lineSeparator() + lineSeparator);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void findBookmark_matchingBookmark() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | tutorial | www.google.com\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e findTerm \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        findTerm.add(\"CS2113T\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        findTerm.add(\"lecture\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.findBookmarks(findTerm), \"Here are your matching bookmarks\" + lineSeparator"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + (2) + \".\" + bookmarks.getBookmark(1).getBookmarkAsString() + lineSeparator);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void findBookmark_noMatchingBookmarks() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | tutorial | www.google.com\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e findTerm \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        findTerm.add(\"NONMATCHINGTERM\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        findTerm.add(\"NONMATCHINGTERM\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.findBookmarks(findTerm), \"No bookmarks contain the specified keyword!\" + lineSeparator);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void launchBookmark_matchingBookmark() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | tutorial | www.google.com\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e findTerm \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        findTerm.add(\"CS2113T\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        findTerm.add(\"lecture\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.findBookmarks(findTerm), \"Here are your matching bookmarks\" + lineSeparator"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + (2) + \".\" + bookmarks.getBookmark(1).getBookmarkAsString() + lineSeparator);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void launchBookmark_noMatchingBookmarks() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | tutorial | www.google.com\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input.add(\"CS2113T | lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e findTerm \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        findTerm.add(\"NONMATCHINGTERM\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        findTerm.add(\"NONMATCHINGTERM\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(bookmarks.launchBookmarks(findTerm),"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                \"No bookmarks contain the specified keyword!\" + lineSeparator);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 42,
      "Speedweener": 151
    }
  },
  {
    "path": "src/test/java/seedu/duke/bookmark/BookmarkTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "class BookmarkTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void extractModuleDescriptionAndUrl_missingModule_returnsDescAndUrl() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e expectedUrlAndDescription \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        expectedUrlAndDescription.add(\"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        expectedUrlAndDescription.add(\"tutorial\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        expectedUrlAndDescription.add(\"www.google.com\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String input \u003d \"add tutorial www.google.com\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(expectedUrlAndDescription, Bookmark.extractModuleDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void extractModuleDescriptionAndUrl_insertModuleDescAndUrl_returnsModuleDescAndUrl() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e expectedUrlAndDescription \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        expectedUrlAndDescription.add(\"\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        expectedUrlAndDescription.add(\"tutorial\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        expectedUrlAndDescription.add(\"www.google.com\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String input \u003d \"add tutorial www.google.com\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(expectedUrlAndDescription, Bookmark.extractModuleDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void extractModuleDescriptionAndUrl_missingDescription_throwsDukeException() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String input \u003d \"add CS2113T  www.google.com\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        DukeException e \u003d assertThrows(DukeException.class, () -\u003e Bookmark.extractModuleDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(DukeExceptionType.EMPTY_DESCRIPTION, e.getError());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void extractModuleDescriptionAndUrl_invalidUrl_throwsDukeException() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String input \u003d \"add CS2113T google.com\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        DukeException e \u003d assertThrows(DukeException.class, () -\u003e Bookmark.extractModuleDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(DukeExceptionType.INVALID_URL, e.getError());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void extractModuleDescriptionAndUrl_invalidAddBookmarkFormat_throwsDukeException() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String input \u003d \"add something\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        DukeException e \u003d assertThrows(DukeException.class, () -\u003e Bookmark.extractModuleDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(DukeExceptionType.INVALID_ADD_BOOKMARK_INPUT, e.getError());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getUrl_validModuleDescriptionAndUrl_returnsUrl() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String module \u003d \"CS2113T\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(module, description, url);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(url, bookmark.getUrl());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getDescription_validModuleDescriptionAndUrl_returnsDescription() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String module \u003d \"CS2113T\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(module, description, url);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(description, bookmark.getDescription());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void initBookmark_validDataString_returnsBookmark() throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String data \u003d \"CS2113T | tutorial | www.google.com\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String module \u003d \"CS2113T\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d \"tutorial\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark expectedBookmark \u003d new Bookmark(module, description, url);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(expectedBookmark.getBookmarkAsString(), Bookmark.initBookmark(data).getBookmarkAsString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void initBookmark_missingSeparator_throwsIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String data \u003d \"CS2113T | tutorial www.google.com\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e Bookmark.initBookmark(data));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void initBookmark_invalidUrl_throwsDukeException() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String data \u003d \"CS2113T | tutorial | google.com\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        DukeException e \u003d assertThrows(DukeException.class, () -\u003e Bookmark.initBookmark(data));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(DukeExceptionType.INVALID_URL, e.getError());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 96
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/bookmark/AddBookmarkCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "class AddBookmarkCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 12
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/bookmark/DeleteBookmarkCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "class DeleteBookmarkCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 12
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/timetable/AddSlotCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.slot.Slot;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.slot.SlotList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "class AddSlotCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    void constructor_invalidInput_throwsDukeException() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        String input \u003d AddSlotCommand.ADD_KW;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            AddSlotCommand command \u003d new AddSlotCommand(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            fail();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            assertEquals(e.getError(), DukeExceptionType.EMPTY_COMMAND);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        input \u003d AddSlotCommand.ADD_KW + \"1111 12:00 mon CS1231 lecture\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            AddSlotCommand command \u003d new AddSlotCommand(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            fail();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            assertEquals(e.getError(), DukeExceptionType.INVALID_TIME_FORMAT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    void execute_validInput_addsSlotInSlotSlit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        String startTime \u003d \"10:00\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        String endTime \u003d \"12:00\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        String title \u003d \"CS1231 Lecture\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        String input \u003d AddSlotCommand.ADD_KW + \" \" + startTime + \" \" + endTime + \" \" + Slot.FRI + \" \" + title;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        SlotList expectedSlots \u003d new SlotList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        expectedSlots.addSlot(new Slot(LocalTime.parse(startTime),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//                LocalTime.parse(endTime),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//                Slot.FRI,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//                title"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//                ));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        AddSlotCommand command;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            command \u003d new AddSlotCommand(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            command.execute(new BookmarkList(),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//                    slots,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//                    new Ui(),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//                    new Storage(\"test.txt\"),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//                    new Storage(\"test.txt\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            fail(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        assertEquals(expectedSlots.getData(), slots.getData());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 59,
      "fchensan": 11
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/timetable/DeleteSlotCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package seedu.duke.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.slot.Slot;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.duke.slot.SlotList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "class DeleteSlotCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    void constructor_invalidInput_throwsDukeException() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        String input \u003d DeleteSlotCommand.DEL_KW + \" 0\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            DeleteSlotCommand command \u003d new DeleteSlotCommand(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            assertEquals(e.getError(), DukeExceptionType.INVALID_SLOT_NUMBER);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    void execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        String startTime \u003d \"10:00\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        String endTime \u003d \"12:00\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        String title \u003d \"CS1231 Lecture\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slots.addSlot(new Slot(LocalTime.parse(startTime),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//                LocalTime.parse(endTime),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//                Slot.FRI,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//                title"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        ));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        String input \u003d DeleteSlotCommand.DEL_KW + \" 1\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            DeleteSlotCommand command \u003d new DeleteSlotCommand(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            command.execute(new BookmarkList(), slots, new Ui(), new Storage(\"test.txt\"), new Storage(\"test.txt\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//            fail(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        assertEquals(new SlotList().getData(), slots.getData());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 35,
      "fchensan": 18
    }
  },
  {
    "path": "src/test/java/seedu/duke/slot/SlotListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package seedu.duke.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "class SlotListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    void testAddSlot() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        LocalTime startTime \u003d LocalTime.parse(\"12:00\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        LocalTime endTime \u003d LocalTime.parse(\"14:00\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        String day \u003d \"mon\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        String title \u003d \"CS2101\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        Slot slot \u003d new Slot(startTime, endTime, day, title);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slots.addSlot(slot);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        assertEquals(slot, slots.getSlot(0));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    void testDeleteSlot() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        Slot slot0 \u003d new Slot(LocalTime.parse(\"16:00\"), LocalTime.parse(\"18:00\"), \"fri\", \"CS2113T\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        Slot slot1 \u003d new Slot(LocalTime.parse(\"14:00\"), LocalTime.parse(\"15:00\"), \"mon\", \"CG2028\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        Slot slot2 \u003d new Slot(LocalTime.parse(\"10:00\"), LocalTime.parse(\"12:00\"), \"tue\", \"CS2101\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slots.addSlot(slot0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slots.addSlot(slot1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slots.addSlot(slot2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slots.deleteSlot(slots.getSlot(1));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        assertEquals(slot2, slots.getSlot(1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slots.deleteSlot(slots.getSlot(0));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        assertEquals(slot2, slots.getSlot(0));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    void testGetSize() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        Slot slot0 \u003d new Slot(LocalTime.parse(\"16:00\"), LocalTime.parse(\"18:00\"), \"fri\", \"CS2113T\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        Slot slot1 \u003d new Slot(LocalTime.parse(\"14:00\"), LocalTime.parse(\"15:00\"), \"mon\", \"CG2028\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slots.addSlot(slot0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slots.addSlot(slot1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        assertEquals(2, slots.getSize());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    void testGetSlot() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        Slot slot0 \u003d new Slot(LocalTime.parse(\"16:00\"), LocalTime.parse(\"18:00\"), \"fri\", \"CS2113T\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        Slot slot1 \u003d new Slot(LocalTime.parse(\"14:00\"), LocalTime.parse(\"15:00\"), \"mon\", \"CG2028\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slots.addSlot(slot0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slots.addSlot(slot1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        assertEquals(slot0, slots.getSlot(0));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        assertEquals(slot1, slots.getSlot(1));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    void testGetSlotList() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        Slot slot0 \u003d new Slot(LocalTime.parse(\"16:00\"), LocalTime.parse(\"18:00\"), \"fri\", \"CS2113T\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        Slot slot1 \u003d new Slot(LocalTime.parse(\"14:00\"), LocalTime.parse(\"15:00\"), \"mon\", \"CG2028\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slots.addSlot(slot0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slots.addSlot(slot1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        ArrayList\u003cSlot\u003e slot \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slot.add(slot0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        slot.add(slot1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//        assertEquals(slot, slots.getSlotList());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 65,
      "jusufnathanael": 13
    }
  },
  {
    "path": "src/test/java/seedu/duke/slot/SlotTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package seedu.duke.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "class SlotTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    void getDay_oneTimeSlot_returnsDay() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        Slot s \u003d new Slot(LocalTime.parse(\"10:00\"), LocalTime.parse(\"11:00\"), \"Monday\", \"Test\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        assertEquals(s.getDay(), \"Monday\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "mode timetable"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show mon"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2113"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2113 bookmarks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cs2113"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show mon"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2113"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2113 bookmarks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cs2113 lecture mon 12:00 13:00"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cs2113 lecture mon 12:00 13:00 www.google.com"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cs2213 lecture wed 12:00 13:00 www.google.com, tutorial tue 12:00 13:00, something www.google.com"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show mon"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show tue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show wed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2113"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2113 bookmarks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2213"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2213 bookmarks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete cs2113 1 bookmarks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show mon"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show tue"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show wed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2113"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2113 bookmarks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cs2113 lecture mon 12:00 13:00 www.google.com"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2113 bookmarks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete cs2213 bookmarks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2213 bookmarks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete cs2213 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show mon"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show tue"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show wed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2213"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2213 bookmarks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete cs2113"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show mon"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show tue"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show wed"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2113"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "show cs2213"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 45,
      "TYS0n1": 2
    }
  }
]
