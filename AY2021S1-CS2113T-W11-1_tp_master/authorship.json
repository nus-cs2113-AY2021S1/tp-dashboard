[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    implementation(group: \u0027org.fusesource.jansi\u0027, name: \u0027jansi\u0027, version: \u00271.18\u0027)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    implementation(group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    mainClassName \u003d \"seedu.zoomaster.Zoomaster\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    archiveBaseName \u003d \"zoomaster\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 6,
      "-": 44
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jusuf Nathanael | [Github](https://github.com/jusufnathanael) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "![](https://i.imgur.com/M9W68d1.jpg) | Zhan Hao | [Github](https://github.com/Speedweener/tp) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Yu Shing | [TYS0n1](https://github.com/TYS0n1) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tey Xing Rong | [xingrong123](https://github.com/xingrong123) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Francisco Chensan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "TYS0n1": 2,
      "jusufnathanael": 1,
      "fchensan": 1,
      "Speedweener": 1,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "# **Developer Guide**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## **Introduction**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " ![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/zoomwhitebg.png) \u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### **Welcome to Zoomaster!**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Zoomaster is a Java application for the Command Line. It provides you with a simple and intuitive way to store your Zoom links for your online classes, alongside other useful links for the lesson at hand.\u003cbr/\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Zoomaster can also intelligently determine the current lesson you are having, allowing you to launch the correct links quickly and elegantly from the command line."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Table of contents"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [Getting Started](#getting-started)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [Design](#design)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Architecture](#architecture)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [UI component](#architecture)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Logic component](#architecture)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Model component](#architecture)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Storage component](#architecture)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Common classes](#architecture)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [Implementation](#implementation)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Proposed] Undo/redo feature"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Proposed] Implementation"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * Design consideration:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "      * Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Proposed] Data archiving"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [Documentation, logging, testing, configuration, dev-ops](#architecture)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [Appendix: Requirements](#architecture)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Product Scope](#architecture)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [User Stories](#architecture)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Use cases](#architecture)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Non-Functional Requirements](#architecture)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Glossary](#glossary)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [Appendix: Instructions for manual testing](#faq)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "  * [Launch and shutdown](#command-summary)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## **Getting Started**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Refer to the setting up guide over [here](https://github.com/AY2021S1-CS2113T-W11-1/tp/releases)."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "## **Design**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "{if you have not organized the code into clearly divided components (no penalty if you didn\u0027t), you can use a single class diagram (if it is not too complicated) or use several class diagrams each describing a different area of the system.}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Architecture"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### UI component"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "![Structure of the UI Component](images/UiClassDiagram.png)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**API** :"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "[`Ui.java`](https://github.com/AY2021S1-CS2113T-W11-1/tp/blob/master/src/main/java/seedu/duke/Ui.java)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "The UI is responsible for all visual output to the User from the app. It utilises the `Jansi` library to enable the usage of ANSI escape codes to format the console, allowing the app to output in colour. \u003cbr/\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "The UI also receives input from the User using a `Scanner` object. It returns the input as a String to the main function. \u003cbr/\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "In addition, the UI contains the different exception and error messages which can be displayed. When a particular exception is thrown (eg. **UNKNOWN_INPUT**), the corresponding function is called in UI to print out the error message (**printUnknownInputMessage()**). "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* Receives user commands and returns to the Main function."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* Prints visual output in the console for the User"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Logic component"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Model component"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Storage component"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fchensan"
        },
        "content": "**API:** [`Storage.java`](https://github.com/AY2021S1-CS2113T-W11-1/tp/blob/master/src/main/java/seedu/duke/Storage.java)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fchensan"
        },
        "content": "The Storage class is responsible for encoding and saving objects into .txt files, as well as reading and decoding files. "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fchensan"
        },
        "content": "It uses the Gson library to encode and decode objects to and from JSON."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Common classes"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "slots class"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "bookmark class"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "command class"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "## **Implementation**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "{describe how you implement the features}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "### Bookmark and Timetable modes feature (TYS)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "#### Implementaion"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "This feature extends Command class with a way to toggle between different modes of Zoomaster. The integer variable used to control the modes is stored in the Parser class called \"programMode\". Additionally, it implements the following operation:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* getModeFromCommand() - Decodes the command sent by the users to figure out which mode the user wants to move to."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Given below is a sequential diagram of how changing between modes occur."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/images/sequential%20diagram.png?raw\u003dtrue) \u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Step 1. When the App gets a command from the user to change modes, a new ChangeModeCommand object is created."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Step 2. The ChangeModeCommand passes the command through getModeFromCommand() function to decode the mode the user wishes to change to."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Step 3. The App now executes the command and changes to the respective mode. If an invalid mode was given by the user or if the input field was empty, the execute function throws an exception and tells the user valid modes for the App."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "{choose your own adventure diagram}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Design consideration:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "##### Aspect: How to store programMode variable for security"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* **Alternative 1 (Current choice):** No security"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    * Pros: Easy to implement"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * Cons: May introduce errors to the App if variable is changed outside of ChangeModeCommand class objects."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* **Alternative 2:** Private variable and implement mode changing inside Parser class"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * Pros: Ensure the App does not change modes outside commands to change modes."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * Cons: Reduces OOP standard of code by decoupling ChangeModeCommand from Command class and increases code complexity."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Add Module and Slot feature (Xing Rong)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "This feature allows the user to add modules and lesson slots into the timetable."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Users can also add bookmarks to specific modules and slots."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Users can enter one-shot-commands, adding multiple slots and bookmarks to a module."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Given below is a sequence diagram of how the feature works."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "![](./diagrams/addSlotSequenceDiagram.png)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Step 1. After calling execute() method of the AddSlotCommand object, there will be a check on whether the module code "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "entered by the user already exists in the timetable. If it does not exist, then the module will be created."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Step 2. There will then be a check for additional commands pertaining to the module entered by the user."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Step 3. The code will then check if the command is to add a module bookmark or a lesson slot, and do so accordingly."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Step 4. If the command is to add a lesson slot, then there will be check for a bookmark entry in the command. If there "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "is one, then the bookmark will be added to the lesson slot."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Step 5. Loop to step 3 if there are additional commands which have not been executed."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "#### Design consideration:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "##### Aspect: How to enable fast typing users to add modules, slots and related bookmarks faster"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* **Alternative 1 (Current choice):** allowing one shot command to add slots and bookmarks to a module"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * Pros: Allow one shot command"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * Cons: Difficult to implement."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* **Alternative 2:** separate adding of modules, lesson slots and related bookmarks into different commands"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * Pros: Easy to implement"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * Pros: Lower chance of error"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * Cons: User has to enter multiple commands each at a time to perform the functions, which takes up more time."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## **Product scope**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Our target users are NUS students with fast typing skills."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "The App was developed during the coronavirus pandemic whereby many NUS classes have been transitioned towards online lessons. NUS lessons are mainly conducted on Zoom video conferencing software. However, as Zoom does not store recurring nor past meetings, it is hard for students to easily access their online lessons. Hence, our App helps to organise students’ Zoom links for easy access to their lesson."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## **User Stories**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "|v1.0|studious NUS student| bookmark important websites from different modules|launch them easily when needed|"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "|v1.0|NUS student|label my bookmarks|I can know quickly the topics of each link|"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "|v1.0|busy NUS student|create a timetable within the app which syncs up with the system time|I will not miss my lessons|"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "|v1.0|NUS student|take a look at my modules for the day, or the entire week|I can plan out my day/week|"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "|v2.0|first time user of the App|be able to see the list commands available|easily naviagate through the App|"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "|v2.0|advanced user|be able to launch multiple links at the same time if the links are grouped together|save time by not doing multiple launching commands|"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## **Non-Functional Requirements**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "{Give non-functional requirements}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## **Glossary**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "* *glossary item* - Definition"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## **Instructions for manual testing**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 21,
      "fchensan": 5,
      "Speedweener": 140,
      "-": 27
    }
  },
  {
    "path": "docs/SettingUp.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "title: Setting up and getting started"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## Setting up the project in your computer"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "First, **fork** this repo, and **clone** the fork into your computer."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "If you plan to use Intellij IDEA (highly recommended):"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Verify the setup**:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   1. Run the `seedu.zoomaster.Zoomaster` and try a few commands."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   1. [Run the tests](Testing.md) to ensure they all pass."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## Before writing code"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Configure the coding style**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   \u003c/div\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Set up CI**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Learn the design**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Do the tutorials**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   These tutorials will help you get acquainted with the codebase."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   * [Tracing code](tutorials/TracingCode.md)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   * [Removing fields](tutorials/RemovingFields.md)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   * [Adding a new command](tutorials/AddRemark.md)"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 55
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide  "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction  "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Zoomaster is a desktop app for organizing website links, optimized for use via a "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Command Line Interface (CLI) while retaining benefits of a Graphical User Interface (GUI). "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "If you can type fast, Zoomaster can help fetch useful website links for you quicker than the bookmark function on your browser."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Table of contents"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Global](#global)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Switch mode:](#mode) **mode**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    *  [Exit:](#exit)  **exit**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Bookmark mode](#bookmarkmode)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Show bookmarks:](#showbookmark) **show**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Add bookmark:](#addbookmark)  **add**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Delete bookmark:](#deletebookmark)  **delete**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Find bookmark:](#findbookmark)  **find**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Launch bookmark:](#launchbookmark)  **launch**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Timetable mode](#timetablemode)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Show timetable:](#showtimetable) **show**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    * [Show module details:](#showmoduledetails) **show**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    * [Add module, time slot and bookmark:](#addtimeslot) **add**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    * [Delete module, time slot and bookmarks:](#deletetimeslot)  **delete**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed.  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "2. Download the latest version of `Zoomaster` from [here](https://github.com/AY2021S1-CS2113T-W11-1/tp/releases)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "3. Copy the `.jar` file to the folder that you want to use as the home folder."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "4. Launch the file using the `java` command: `java -jar zoomaster.jar`.  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "## Features   "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e[i] Notes on command format:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* Word contained in {currly brackets} are parameters to be supplied by the user. \u003cbr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003eeg. in delete {BOOKMARK_NUMBER}, BOOKMARK_NUMBER is a parameter which can be used as `delete 1`."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e * Parameters with `/` inside are parameters which accept different types of inputs. \u003cbr\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e eg. show launch {INDEX/DESCRIPTION} shows that either INDEX or DESCRIPTION can be used."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* Items in with (optional) are optional inputs. \u003cbr\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003eeg. show {DAY(optional)} can be used as `show` or as `show mon`."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"global\"\u003e\u003c/a\u003e "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Global"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The commands below can be used in both modes of the app.  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"mode\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### Switch mode: `mode`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You can switches between the “bookmark” and “timetable” modes. Depending on the mode you select, "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "the behaviour of the commands below changes. \u003cbr\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "There are two modes for Zoomaster, Bookmark and Timetable."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: mode {bookmark/timetable}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `mode bookmark`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `mode timetable` "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003ca name\u003d\"launchnow\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Launch the bookmarks of the current lesson: `launch now`  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Launches the bookmarks of a current lesson slot on your timetable. "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "The time depends on the system time of your machine."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: launch now    "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"exit\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### Exit the app: `exit`  "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Exits the application "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: exit    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "---"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003cbr/\u003e "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"bookmarkmode\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Bookmark Mode  "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"showbookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### Show bookmarks: `show`  "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Prints all bookmark in the bookmark list  "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: show"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"addbookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### Add bookmark: `add`  "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Adds a URL bookmark with a description.  "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: add {DESCRIPTON} {URL}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "``` "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* The `DESCRIPTION` can only contain one word (no whitespace inside).  "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* The `URL` has to start with `www.` or `https://`.  "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* There should be strictly one space between the `DESCRIPTION` and `URL`.    "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `add cs2113t-website www.cs2113t.nus.edu.sg/`  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `add cs2113t-website https://cs2113t.nus.edu.sg/`  "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"deletebookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### Delete bookmarks: `delete`  "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Deletes a bookmark with the specified index.  "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "The index will correspond to the index of that bookmark in the list. "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "You can do a `show` command to check the bookmark indexes.  "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: delete {INDEX}"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `delete 2`  "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `delete 4`  "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"findbookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### Find bookmarks: `find`  "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Finds bookmarks with matching description and prints them."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: find {DESCRIPTION}"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* The `DESCRIPTION` can only contain one word.  "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `find cs2113t-website`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `find notes`  "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"launchbookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### Launch bookmarks: `launch`  "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Launches bookmarks in the default browser using either:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Index"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* Matching description"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "The index will correspond to the index of that bookmark in the list. "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "You can do a `show` command to check the bookmark indexes.  "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: launch {INDEX/DESCRIPTION}"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* The `DESCRIPTION` can only contain one word.   "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:  "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `launch 1`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `launch cs2113t-website`  "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "---"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003cbr/\u003e "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"timetablemode\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Timetable mode    "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"showtimetable\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### Show timetable: `show`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Shows the timetable for a certain day or the whole week.  "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Day inputs are in three letter abbreviations eg `mon`, `tue`, `wed`.  "
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "`today` can also be a day input to show the timetable for the current day based on system time.  "
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "You can also view the information of module or its bookmarks."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: show {DAY(optional)}"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `show`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `show mon`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `show today`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003ca name\u003d\"showmoduledetails\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Show module details: `show`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Shows the details of a module that has been added.  "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "You can see the respective indexes of each of the slots from the module "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "and using the `bookmarks` keyword will show the bookmarks which are saved in the module and its slots."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "```"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: show {MODULE} bookmarks(optional)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "```"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `show cs2113t`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `show cs2113t bookmarks`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"addtimeslot\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Add module, time slot and bookmark: `add`  "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Adds module, time slot and bookmark."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "You can chain commands when adding multiple slots and bookmarks to a module by using `,` as a separator."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format (adding a module): "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* add {MODULE}"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format (adding a slot to a module): "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* add {MODULE} {DESCRIPTION} {DAY} {START_TIME} {END_TIME} "
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format (adding a bookmark to a module): "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* add {MODULE} {DESCRIPTION} {URL}"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format (adding a bookmark to a slot): "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* add {MODULE} {DESCRIPTION} {DAY} {START_TIME} {END_TIME} {URL}"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* add {MODULE} {DESCRIPTION} {INDEX} {URL}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format (chaining commands): "
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* add {MODULE} {DESCRIPTION} {DAY} {START_TIME} {END_TIME} {URL}, {DESCRIPTION} {URL}, ..."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* The `START TIME` and `END TIME` is the format `HH:mm`.  "
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* The `DAY` can be one of `mon`, `tue`, `wed`, `thu`, `fri`, `sat`, `sun`.  "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* There should be strictly one space between each parameter."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* Multiple bookmarks can be added to a module and a slot."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * To add another bookmark to an existing module, you have to enter the module code of the "
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    existing module in the timetable."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * To add another bookmark to an existing slot, you can enter the command with the matching details "
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    of the existing slot or use the index number of the slot in the module to access the slot. "
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    Index number of the slot can be found by using the command `show {MODULE}`. "
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* Each command works by checking if each of the components (module, slot, bookmark) "
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  exists or is valid from left to right of the input before adding them."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * In the command `add cs2113t lecture fri 16:00 18:00`, if `cs2113t` module already exists, "
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    then it will not be added into the timetable. The slot `lecture fri 16:00 18:00` "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    which is valid and not a duplicate will then be added to the existing `cs2113t` module."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* The chaining of commands only performs on one module which is {MODULE}.    "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `add cs2113t`  "
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `add cs2113t lecture fri 16:00 18:00`"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `add cs2113t notes www.google.com`"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `add cs2113t lecture fri 16:00 18:00 www.google.com`"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `add cs2113t 1 www.yahoo.com`"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `add cs2113t lecture fri 16:00 18:00 www.google.com, notes www.google.com, tutorial fri 10:00 12:00`"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"deletetimeslot\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Delete module, time slot and bookmarks: `delete`  "
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Delete module, time slot or bookmarks."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format (deleting a module): "
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* delete {MODULE}"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format (deleting a slot of a module): "
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* delete {MODULE} {INDEX} "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format (deleting bookmarks of a module): "
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* delete {MODULE} bookmarks "
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format (deleting bookmarks of a slot of a module): "
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* delete {MODULE} {INDEX} bookmarks "
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* Deleting bookmarks will delete all bookmarks associated with the module or slot."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `delete cs2113t`  "
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `delete cs2113t 1`"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `delete cs2113t bookmarks`"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `delete cs2113t 1 bookmarks`"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ  "
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer?   "
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**A**: Copy the `data/bookmarks.txt` and `data/slots.txt` file to the directory where the `jar` file is at."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Start the application and all the data should be loaded."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**Action** | **Format, Examples**"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**mode**|`mode {bookmark/timetable}`\u003cbr\u003eexample: `mode bookmark`"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**exit**|`exit`"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**Bookmark Mode**|"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**show**|`show`"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**add**|`add {MODULE(optional)} {DESCRIPTON} {URL}` \u003cbr\u003eexample: `add CS2113T tutorial www.yahoo.com`"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**delete**|`delete {INDEX}`\u003cbr\u003eexample: `delete 2`"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**find**|`find {MODULE} {DESCRIPTION(optional)}` \u003cbr\u003eexample: `find CS2113 tutorial`"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**launch**|`launch {MODULE} {DESCRIPTION(optional)}` \u003cbr\u003eexample: `launch CS2113`"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**Timetable Mode**|"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**slotadd**|`before  \u003cyyyyMMdd HHmm\u003e`\u003cbr\u003eexample: `before 20210909 1159`"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**slotdel**|`after \u003cyyyyMMdd HHmm\u003e`\u003cbr\u003eexample: `after 19990101 0100`"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**show**|`today`"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "xingrong123": 123,
      "TYS0n1": 135,
      "-": 41
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.ChangeModeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.ClearCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.HelpCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.command.LaunchNowCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.AddBookmarkCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.planner.AddMeetingCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.planner.LoadPlannerCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.AddSlotCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.DeleteBookmarkCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.DeleteSlotCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.LaunchBookmarkCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.FindBookmarkCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.command.timetable.LaunchModuleAndSlotBookmark;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.command.timetable.EditSlotCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.ShowTimetableCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.ShowBookmarkCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * This class deals with making sense of the user command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Variable programMode controls the mode Zoomaster program is in."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * programMode \u003d\u003d 0: Main menu mode"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * programMode \u003d\u003d 1: Bookmark mode"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * programMode \u003d\u003d 2: Timetable mode"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static int programMode \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Creates and returns the command based on user input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input full user input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException If input command is unknown."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static Command parse(String input) throws ZoomasterException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Command command \u003d createCommand(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static Command createCommand(String input) throws ZoomasterException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.compareToIgnoreCase(ExitCommand.BYE_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(LaunchNowCommand.LAUNCH_NOW_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new LaunchNowCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(ChangeModeCommand.MODE_KW)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new ChangeModeCommand(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(ClearCommand.CLEAR_KW)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new ClearCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.toLowerCase().equals(HelpCommand.HELP_KW)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new HelpCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (programMode \u003d\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d createBookmarkCommand(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (programMode \u003d\u003d 2) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d createTimetableCommand(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (programMode \u003d\u003d 3) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d createPlannerCommand(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    //@@author TYS0n1"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static Command createBookmarkCommand(String input) throws ZoomasterException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.compareToIgnoreCase(ShowBookmarkCommand.LIST_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new ShowBookmarkCommand();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(DeleteBookmarkCommand.DEL_KW)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new DeleteBookmarkCommand(input);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(AddBookmarkCommand.ADD_KW)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new AddBookmarkCommand(input);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(LaunchBookmarkCommand.LAUNCH_KW)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new LaunchBookmarkCommand(input);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(FindBookmarkCommand.FIND_KW)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new FindBookmarkCommand(input);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(ClearCommand.CLEAR_KW)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    //@@author TYS0n1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static Command createTimetableCommand(String input) throws ZoomasterException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        // Add Timetable Commands on merge"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.startsWith(AddSlotCommand.ADD_KW)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new AddSlotCommand(input);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(DeleteSlotCommand.DEL_KW)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new DeleteSlotCommand(input);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(ShowTimetableCommand.SHOW_KW)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new ShowTimetableCommand(input);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(ClearCommand.CLEAR_KW)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new ClearCommand();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(LaunchModuleAndSlotBookmark.LAUNCH_KW)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new LaunchModuleAndSlotBookmark(input);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(EditSlotCommand.EDIT_KW)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new EditSlotCommand(input);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static Command createPlannerCommand(String input) throws ZoomasterException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.startsWith(AddMeetingCommand.ADD_KW)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new AddMeetingCommand(input);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(ShowTimetableCommand.SHOW_KW)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new ShowTimetableCommand(input);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        //} else if (input.startsWith(ClearCommand.CLEAR_KW)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        //    return new ClearCommand();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(LoadPlannerCommand.LOAD_KW)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new LoadPlannerCommand();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static int getProgramMode() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return programMode;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 4,
      "TYS0n1": 133,
      "fchensan": 1
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.net.HttpURLConnection;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.net.MalformedURLException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Storage\u003cT\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Class\u003cT\u003e storageClass;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new Storage instance by storing the given pathname of the file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param path The pathname of the file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Storage(String path, Class\u003cT\u003e storageClass) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.filePath \u003d path.replace(\u0027/\u0027, File.separatorChar);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.storageClass \u003d storageClass;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the tasks found within the file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return Objects T found in the file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException If file is not found."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public T load() throws ZoomasterException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String fileAsString;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            fileAsString \u003d Files.readString(Paths.get(filePath));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return createNewInstance();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!fileAsString.equals(\"null\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return gson.fromJson(fileAsString, storageClass);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return createNewInstance();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private T createNewInstance() throws ZoomasterException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return storageClass.getDeclaredConstructor().newInstance();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.ERROR_LOADING_FILE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ArrayList\u003cFile\u003e getFiles() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        File folder \u003d new File(filePath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(folder.listFiles()));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public T loadPlanner() throws ZoomasterException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        File folder \u003d new File(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            createDirectory();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (folder.listFiles() \u003d\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return createNewInstance();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ArrayList\u003cFile\u003e listOfFiles \u003d getFiles();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            StringBuilder fileAsString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            String opening \u003d \"{\" + System.lineSeparator() + \"  \\\"modules\\\": [\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            fileAsString.append(opening);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            for (File f : listOfFiles) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    StringBuilder line \u003d new StringBuilder(Files.readString(Paths.get(f.getPath())));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    fileAsString.append(line.delete(0, 16));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    fileAsString.delete(fileAsString.length() - 6, fileAsString.length());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    fileAsString.append(\",\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    return createNewInstance();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            fileAsString.delete(fileAsString.length() - 1, fileAsString.length());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            String closing \u003d System.lineSeparator() + \"  ]\" + System.lineSeparator() + \"}\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            fileAsString.append(closing).append(System.lineSeparator());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (!fileAsString.toString().equals(\"null\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                return gson.fromJson(fileAsString.toString(), storageClass);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                return createNewInstance();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(\"No timetable in planner folder.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return createNewInstance();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private ArrayList\u003cString\u003e getData(File f) throws FileNotFoundException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cString\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            items.add(s.nextLine());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return items;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This method creates the file if it does not exist and saves tasks data in the file."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param data An object to be converted into JSON and saved in the file."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException If there is an error writing to the file."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void save(Object data) throws ZoomasterException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            createDirectory();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            String jsonString \u003d gson.toJson(data);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            writeToFile(jsonString);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.WRITE_FILE_ERROR);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void createDirectory() throws IOException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String dirPath \u003d getDirectory(filePath);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Path path \u003d Paths.get(dirPath);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Files.createDirectories(path);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String getDirectory(String path) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String dirPath;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (path.contains(File.separator)) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            dirPath \u003d path.substring(0, path.lastIndexOf(File.separator));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            dirPath \u003d path;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return dirPath;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Makes a connection to the NUSMODS API URL and retrieves the JSON"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * file moduleList. Then converts JSON to an Array\u003cString\u003e\u003c/String\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * of module codes to be returned."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return Array\u003cString\u003e\u003c/String\u003e of module codes"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException CONNECTION_ERROR and JSON_PARSE_ERROR"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    // Solution below adapted from AY2021S1-CS2113T-T09-2"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    // https://github.com/AY2021S1-CS2113T-T09-2/tp/../data/storage/Decoder.java"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private ArrayList\u003cString\u003e nusModuleListFromNusMods() throws ZoomasterException {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String weblink \u003d \"\"; // For exception messages"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            URL url \u003d getNusModsUrl();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            weblink \u003d url.toString();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            HttpURLConnection connection \u003d (HttpURLConnection) url.openConnection();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            connection.setRequestMethod(\"GET\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            connection.connect();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            int responseCode \u003d connection.getResponseCode();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (responseCode !\u003d 200) { //Unable to connect"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            String jsonAsString \u003d \"\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Scanner sc \u003d new Scanner(url.openStream());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            while (sc.hasNext()) { // if line is empty, means finish reading"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                jsonAsString +\u003d sc.nextLine();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return jsonToArrayList(jsonAsString);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.CONNECTION_ERROR, weblink);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.JSON_PARSE_ERROR, weblink);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Converts the moduleList JSON to Array\u003cString\u003e\u003c/String\u003e of module codes."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return Array\u003cString\u003e\u003c/String\u003e of module codes"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ParseException When unable to parse JSON files from NUSMODS"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private ArrayList\u003cString\u003e jsonToArrayList(String jsonAsString) throws ParseException {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        JSONParser parse \u003d new JSONParser();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        JSONArray moduleArray \u003d (JSONArray) parse.parse(jsonAsString);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cString\u003e moduleList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (int i \u003d 0; i \u003c moduleArray.size(); i++) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            JSONObject module \u003d (JSONObject) moduleArray.get(i);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            moduleList.add(module.get(\"moduleCode\").toString());"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return moduleList;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the url of moduleList JSON file from NUSMODS API for the current year."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return URL"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws MalformedURLException If URL is invalid"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private URL getNusModsUrl() throws MalformedURLException {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int year \u003d LocalDate.now().getYear();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return new URL(\"https://api.nusmods.com/v2/\" + year + \"-\" + (year + 1)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                + \"/moduleList.json\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Loads modulelist from the txt file if the file exists locally and returns"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * it as an Array\u003cString\u003e\u003c/String\u003e."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Else tries to retrieve online to be returned. If retrieved successfully,"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * save the information locally as txt file."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return Array\u003cString\u003e\u003c/String\u003e of module codes or null if unable to make"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *     connection and file does not exist locally."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ArrayList\u003cString\u003e loadModuleList() throws IOException, ZoomasterException {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String moduleListPath \u003d filePath;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        moduleListPath \u003d moduleListPath.replace(\"timetable\", \"modulelist\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        File f \u003d new File(moduleListPath);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cString\u003e moduleList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            while ((s \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                moduleList.add(s);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (moduleList.isEmpty()) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                throw new FileNotFoundException();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return moduleList;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            moduleList \u003d nusModuleListFromNusMods();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (moduleList !\u003d null) { // If moduleList is successfully filled, store the list locally"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                saveModuleList(moduleListPath, moduleList);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return moduleList;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Saves the moduleList locally."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param  moduleListPath Filepath for local txt file of module codes"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param  moduleList The list of module codes"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void saveModuleList(String moduleListPath, ArrayList\u003cString\u003e moduleList)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String dirPath \u003d getDirectory(moduleListPath);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Path path \u003d Paths.get(dirPath);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Files.createDirectories(path);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        FileWriter fw \u003d new FileWriter(moduleListPath, false);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (String str: moduleList) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            fw.write(str + System.lineSeparator());"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 307
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.fusesource.jansi.AnsiConsole;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.ChangeModeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.ClearCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.AddBookmarkCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.DeleteBookmarkCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.FindBookmarkCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.LaunchBookmarkCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.ShowBookmarkCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.AddSlotCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.DeleteSlotCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.ShowTimetableCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import javax.swing.JSeparator;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.BLACK;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.BLUE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.CYAN;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.GREEN;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.RED;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.WHITE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.YELLOW;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.ansi;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Represents the user interface on the command line and deals with interactions with the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final String NEW_LINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final String LINE \u003d \"____________________________________________________________\" + NEW_LINE;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String logo2 \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            \"                                                                                                 \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                            ███████                                              \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                      ██████████████████                                         \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                    ███████████████████████                                      \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                  ███████████████████████████                                    \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                 ████             █████  █████                                   \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                █████              █     ██████                                  \\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                █████              █     ██████                                  \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                █████              █     ██████                                  \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                 █████             ████  █████                                   \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                  ███████████████████████████                                    \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                   █████████████████████████                                     \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                      ███████████████████                                        \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                          ███████████                                            \\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                                                         ██                      \\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"█████████   ███████     ████████   ███████ ███████     █████     █████  █████   █████     █ ████ \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"     ███  ██      ███  ██      ███ ██     ██     ██         ██  ██       ██   ██      ██  ██   ██\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"   ███   ███       ██ ███       ██ ██     ██     ██  █████████  ███████  ██  ████████████ ██     \\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"███       ███     ███  ██      ███ ██     ██     ██  ██     ██        ██ ██   ██          ██     \\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"██████████   █████       ██████    ██     ██     ██   ████████  ███████   ███  ████████   ██     \\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new Ui instance."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        AnsiConsole.systemInstall();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns a string of the user input in the command line."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return the string of user input."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (Parser.getProgramMode() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.print(ansi().fg(GREEN).a(\"[Main Menu] Input: \").reset());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.getProgramMode() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.print(ansi().fg(BLUE).a(\"[Bookmark mode] Input: \").reset());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.getProgramMode() \u003d\u003d 2) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.print(ansi().fg(YELLOW).a(\"[Timetable mode] Input: \").reset());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.getProgramMode() \u003d\u003d 3) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.print(ansi().fg(WHITE).a(\"[Planner mode] Input: \").reset());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.print(\"[An error has occurred] \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE + message + LINE);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void printRed(String message) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.print(ansi().fg(RED).a(message).reset());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void printGreen(String message) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.print(ansi().fg(GREEN).a(message).reset());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void printYellow(String message) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.print(ansi().fg(YELLOW).a(message).reset());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void clearScreen() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.print(\"\\033[2J\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints a message after starting the program."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void showWelcomeScreen() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\"\\t\\t\\t\\t  ++++{  WELCOME TO  }++++\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(ansi().bg(WHITE));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(ansi().fg(CYAN).a(logo2).reset());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(ansi().bg(BLACK));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints a message before exiting the program."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void showExitScreen() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"Bye. Hope to see you again soon!\" + NEW_LINE;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        print(message);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        AnsiConsole.systemUninstall();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints the error message if data file is not found."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"Data file not found\" + NEW_LINE;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRed(message);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method detects the type of ZoomasterException error and prints the corresponding error message."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param e The ZoomasterException error."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showErrorMessage(ZoomasterException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        switch (e.getError()) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case UNKNOWN_INPUT:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            print(\"Unknown input\" + NEW_LINE);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printHelpMessage();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_MODE:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printUnknownModeMessage();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case WRITE_FILE_ERROR:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printErrorWritingToFile();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case ERROR_LOADING_FILE:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printErrorLoadingFile();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_ADD_BOOKMARK_INPUT:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printInvalidAddBookmarkInputMessage();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printEmptyBookmarkDescriptionMessage();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case EMPTY_COMMAND:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printEmptyCommandMessage(e.getInfo());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case NON_INTEGER_INPUT:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printUseIntegerAsInput();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case BOOKMARK_NUMBER_OUT_OF_BOUNDS:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printUseValidBookmarkNumberMessage(e.getInfo());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_URL:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printInvalidUrl();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case ERROR_LAUNCHING_URL:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printErrorLaunchUrlMessage();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_COMMAND_FORMAT:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printRed(\"invalid command format\" + NEW_LINE);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_MODULE:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printRed(\"module does not exist\" + NEW_LINE);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_SLOT_NUMBER:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printInvalidSlotNumber(e.getInfo());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_TIME_FORMAT:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printInvalidTimeFormat();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_SLOT_INPUT:"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printInvalidSlotInput();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_TIMETABLE_DAY:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printUnknownDayMessage();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case EMPTY_TIMETABLE:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printEmptyTimetableMessage();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case CONNECTION_ERROR:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printConnectionErrorMessage(e.getInfo());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case JSON_PARSE_ERROR:"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printJsonParseErrorMessage(e.getInfo());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            // unable to get dukeExceptionType"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printInvalidSlotNumber(String index) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Invalid slot number. Please enter a valid index number between 1 and \" + index + NEW_LINE"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"Enter command: \\\"show \u003cmodule\u003e\\\" to view slot index\" + NEW_LINE);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printJsonParseErrorMessage(String weblink) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Unable to parse modules from \" + weblink + NEW_LINE"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"The app will not check for valid modules\" + NEW_LINE);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printConnectionErrorMessage(String weblink) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Unable to connect to \" + weblink + NEW_LINE"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"Please check your internet connection\" + NEW_LINE"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"The app will not check for valid modules\" + NEW_LINE);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printErrorLoadingFile() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Error loading file.\" + NEW_LINE);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printErrorWritingToFile() {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Error writing to file.\" + NEW_LINE);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printUseIntegerAsInput() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Command requires an integer input\" + NEW_LINE);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printUseValidBookmarkNumberMessage(String info) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Please enter a valid index number between 1 and \" + info + NEW_LINE);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printErrorLaunchUrlMessage() {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Error launching url\" + NEW_LINE);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printInvalidUrl() {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Invalid URL\" + NEW_LINE + \"URL must start with either \u0027www.\u0027\""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \" or \u0027https://\u0027 and have no spaces\" + NEW_LINE);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printInvalidAddBookmarkInputMessage() {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Invalid bookmark input\" + NEW_LINE"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"Format: add {module(optional)} {description} {URL}\" + NEW_LINE);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printEmptyBookmarkDescriptionMessage() {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Bookmark description required!\" + NEW_LINE);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printEmptyCommandMessage(String info) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Please enter \" + info + \" with input!\" + NEW_LINE);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void printHelpMessage() {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert (Parser.programMode \u003e\u003d 0) \u0026\u0026 (Parser.programMode \u003c\u003d 2) : \"only modes of Zoomaster are 0, 1, 2\";"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (Parser.programMode \u003d\u003d 0) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printYellow(\"Available inputs in Main menu are\" + NEW_LINE"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"1) mode {bookmark/timetable}\" + NEW_LINE"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"2) \" + ClearCommand.CLEAR_KW + NEW_LINE"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"3) exit\" + NEW_LINE);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.programMode \u003d\u003d 1) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printYellow(\"Available inputs in Bookmark mode are\" + NEW_LINE"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"1) \" + AddBookmarkCommand.ADD_KW + NEW_LINE"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"2) \" + DeleteBookmarkCommand.DEL_KW + NEW_LINE"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"3) \" + ShowBookmarkCommand.LIST_KW + NEW_LINE"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"4) \" + FindBookmarkCommand.FIND_KW + NEW_LINE"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"5) \" + LaunchBookmarkCommand.LAUNCH_KW + NEW_LINE"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"6) \" + ClearCommand.CLEAR_KW + NEW_LINE"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"7) \" + ChangeModeCommand.MODE_KW + \" timetable\" + NEW_LINE"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"8) \" + ExitCommand.BYE_KW + NEW_LINE);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.programMode \u003d\u003d 2) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printYellow(\"Available inputs in Timetable mode are\" + NEW_LINE"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"1) \" + AddSlotCommand.ADD_KW + NEW_LINE"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"2) \" + DeleteSlotCommand.DEL_KW + NEW_LINE"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"3) \" + ShowTimetableCommand.SHOW_KW + NEW_LINE"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"4) \" + ChangeModeCommand.MODE_KW + \" bookmark\" + NEW_LINE"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"5) \" + ClearCommand.CLEAR_KW + NEW_LINE"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"6) \" + ExitCommand.BYE_KW + NEW_LINE);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printUnknownModeMessage() {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Unknown mode input\" + NEW_LINE + \"Valid modes: bookmark, timetable\" + NEW_LINE);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printUnknownDayMessage() {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Unknown day input\" + NEW_LINE"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "              + \"Valid days: monday, tuesday, wednesday, thursday, friday, saturday, sunday\" + NEW_LINE);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printEmptyTimetableMessage() {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Timetable is empty\" + NEW_LINE);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printInvalidSlotInput() {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Invalid slot input\" + NEW_LINE);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printInvalidTimeFormat() {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRed(\"Invalid time format\" + NEW_LINE);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 64,
      "TYS0n1": 260
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/Zoomaster.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Zoomaster {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Storage\u003cBookmarkList\u003e bookmarkStorage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Storage\u003cTimetable\u003e timetableStorage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Storage\u003cTimetable\u003e plannerStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Timetable timetable;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Timetable planner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    //private ArrayList\u003cFile\u003e files;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new Duke instance."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Pass the filepath of the txt file to set up storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param bookmarkFilePath The filepath of the bookmark txt file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param timetableFilePath The filepath of the slot txt file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Zoomaster(String bookmarkFilePath, String timetableFilePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "      "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        bookmarkStorage \u003d new Storage\u003c\u003e(getJarFilepath() + bookmarkFilePath, BookmarkList.class);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        timetableStorage \u003d new Storage\u003c\u003e(getJarFilepath() + timetableFilePath, Timetable.class);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "      "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            bookmarks \u003d bookmarkStorage.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d timetableStorage.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            planner \u003d new Timetable();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Module.setModuleList(timetableStorage.loadModuleList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This method is used run the Duke program."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.showWelcomeScreen();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                if (Parser.programMode \u003d\u003d 3) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    c.execute(bookmarks, planner, ui);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    c.execute(bookmarks, timetable, ui);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                bookmarkStorage.save(bookmarks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                timetableStorage.save(timetable);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } while (!isExit);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        new Zoomaster(\"./data/bookmarks.txt\", \"./data/timetable.txt\").run();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns path of jar file during execution to allow"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * app to create txt file in the same location."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static String getJarFilepath() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return new File(Zoomaster.class.getProtectionDomain().getCodeSource().getLocation()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                .getPath()).getParent().replace(\"%20\", \" \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 86,
      "jusufnathanael": 1,
      "Speedweener": 1,
      "-": 6
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/bookmark/Bookmark.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * This class represents a bookmark of a URL of a webpage."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * It stores the URL and a description of the webpage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * It also contains a method which can extract the URL and description from a given string in a certain format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Bookmark {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String url;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static final String SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a bookmark object containing a URL and description of the webpage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param url The URL of the webpage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param description The description of the webpage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Bookmark(String description, String url) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert description !\u003d null : \"description should not be null\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert url !\u003d null : \"url should not be null\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.url \u003d url.trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the description and url that can be detected from the given input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input the string input by the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a list of strings containing the description and url."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if the command format is invalid or if the url is invalid."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static List\u003cString\u003e extractDescriptionAndUrl(String input) throws ZoomasterException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cString\u003e descriptionUrl \u003d Arrays.asList(input.split(\" \", 2));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (descriptionUrl.size() !\u003d 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_ADD_BOOKMARK_INPUT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!isUrlValid(descriptionUrl.get(1))) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_URL);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return descriptionUrl;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static Boolean isUrlValid(String url) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (url.contains(\" \")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return url.startsWith(\"www.\") || url.startsWith(\"https://\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This method opens the URL of the bookmark in a web browser."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a string"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if there is an error launching the URL."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String launch() throws ZoomasterException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            launchUrl();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.ERROR_LAUNCHING_URL);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return \"  [\" + description + \"] \" + url;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void launchUrl() throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Runtime rt \u003d Runtime.getRuntime();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String os \u003d System.getProperty(\"os.name\").toLowerCase();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (os.contains(\"win\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            launchUrlForWindows(rt);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (os.contains(\"mac\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            launchUrlForMac(rt);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (os.contains(\"nix\") || os.contains(\"nux\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            launchUrlForLinux(rt);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void launchUrlForWindows(Runtime rt) throws IOException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        rt.exec(\"rundll32 url.dll,FileProtocolHandler \" + url);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void launchUrlForMac(Runtime rt) throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String link \u003d getFullLink();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        rt.exec(\"open \" + link);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void launchUrlForLinux(Runtime rt) throws IOException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String link \u003d getFullLink();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        rt.exec(\"xdg-open \" + link);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String getFullLink() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String link;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (url.startsWith(\"www.\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            link \u003d \"https://\" + url;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            link \u003d url;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the URL of the bookmark."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a string of the URL."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getUrl() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return url;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the description of the bookmark."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a string of the description of the bookmark."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getBookmarkAsString() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return  (\"[\" + description + \"] \" + url + System.lineSeparator());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the data of the bookmark in a string."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a string containing the information of the bookmark."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getExport() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return description + SEPARATOR + url;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the bookmark instance which is created from the data read from the bookmark text file."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This class level method is called at the start of the program to initialize the bookmark."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param data The string containing information of the bookmark."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return the bookmark instance."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if the URL is invalid."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws IndexOutOfBoundsException if the data format is invalid."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static Bookmark initBookmark(String data) throws ZoomasterException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cString\u003e details \u003d  Arrays.asList(data.split(\"\\\\|\"));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d details.get(0).trim();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d details.get(1).trim();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!isUrlValid(url)) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_URL);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return bookmark;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "TYS0n1": 159
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/bookmark/BookmarkList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * This class represents the bookmark list used to store and organize bookmarks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class BookmarkList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private ArrayList\u003cBookmark\u003e bookmarks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final String lineSeparator \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(BookmarkList.class.getName());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a BookmarkList object with an empty ArrayList to store Bookmark objects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public BookmarkList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.bookmarks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs the BookmarkList object containing an ArrayList to store Bookmark objects."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This constructor is used when loading bookmarks from a text file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmarkStrings the list of strings of bookmarks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public BookmarkList(ArrayList\u003cString\u003e bookmarkStrings) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.bookmarks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        loadBookmarkList(bookmarkStrings);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private void loadBookmarkList(ArrayList\u003cString\u003e bookmarks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (String line : bookmarks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            loadBookmark(line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method adds the given bookmark object to the bookmark list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmark the bookmark to be added to the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String addBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assert bookmark !\u003d null : \"Added bookmark should not be null!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarks.add(bookmark);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return \"Added bookmark: \" + \"[\" + bookmark.getDescription() + \"] \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                +  bookmark.getUrl() + System.lineSeparator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void loadBookmark(String line) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            bookmarks.add(Bookmark.initBookmark(line));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IndexOutOfBoundsException | ZoomasterException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            // Invalid task data, skips to the next entry"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            // logger.log(Level.WARNING, \"invalid bookmark data found in file: \" + line, e);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the the data of all bookmarks in the list to be saved in the text file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the data of all the bookmarks."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (Bookmark bookmark : bookmarks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            data.append(bookmark.getExport()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return data.toString().trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the number of bookmarks in the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the size of the bookmark list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmarks.size();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns bookmark based on the index."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param index The index of the bookmark in the list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The bookmark with the corresponding index in the list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @throws IndexOutOfBoundsException if the index is out of range."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Bookmark getBookmark(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmarks.get(index);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the bookmark list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The bookmark list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public ArrayList\u003cBookmark\u003e getBookmarks() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmarks;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method deletes the bookmark from the list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmark The bookmark to be deleted."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws NullPointerException if the bookmark does not exist in the list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String deleteBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assert bookmarks.contains(bookmark) : \"Bookmark to be\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + \"deleted not in list!\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarks.remove(bookmark);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return \"[\" + bookmark.getDescription() + \"] \" + bookmark.getUrl() + \"\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * This method shows all the bookmarks from the list."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @return The string message containing the matching bookmarks"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String showBookmarks() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"Here are the bookmarks in your list:\" + lineSeparator;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c bookmarks.size(); i++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d message + \"  \" + (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message + lineSeparator;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method searches the bookmarks from the list with matching module and description."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param description The description to be searched"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @return The string message containing the matching bookmarks"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String findBookmarks(String description) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert !description.equals(\"\") : \"Description should not be empty!\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (bookmarks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"Empty List\" + lineSeparator;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d getMatchingBookmarks(description.toUpperCase());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (!message.isEmpty()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"Here are your matching bookmarks\" + lineSeparator + message;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"No bookmarks contain the specified keyword!\" + lineSeparator;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getMatchingBookmarks(String description) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c bookmarks.size(); i++) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (bookmarks.get(i).getDescription().toUpperCase().contains(description)) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                message +\u003d (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString() + lineSeparator;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * This method searches the bookmarks from the list with matching module"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * and description and launches them accordingly."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param description The description to be searched"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @return The string message containing the matching bookmarks"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String launchBookmarks(String description) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert !description.equals(\"\") : \"Description should not be empty!\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (bookmarks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"Empty List\" + lineSeparator;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d launchMatchingBookmarks(description.toUpperCase());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (!message.isBlank()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"Launched these bookmarks:\" + lineSeparator + message;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"No bookmarks contain the specified keyword!\" + lineSeparator;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String launchMatchingBookmarks(String description) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c bookmarks.size(); i++) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (bookmarks.get(i).getDescription().toUpperCase().contains(description)) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    bookmarks.get(i).launch();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    message +\u003d (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    errorMessage +\u003d (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!errorMessage.isBlank()) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"Failed to launch these bookmarks:\" + lineSeparator + errorMessage;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message + lineSeparator;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String launchAllBookmarks() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (bookmarks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"Empty List\" + lineSeparator;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d launchBookmarksFromList();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (!message.isEmpty()) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"Launched these bookmarks:\" + lineSeparator + message;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String launchBookmarksFromList() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (int i \u003d 0; i \u003c bookmarks.size(); i++) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.get(i).launch();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                errorMessage +\u003d (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!errorMessage.isBlank()) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"Failed to launch these bookmarks:\" + lineSeparator + errorMessage;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 121,
      "TYS0n1": 5,
      "Speedweener": 107
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/ChangeModeCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ChangeModeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String MODE_KW \u003d \"mode\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public int setToMode;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new ChangeModeCommand instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ChangeModeCommand(String command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        setToMode \u003d getModeFromCommand(command);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throws ZoomasterException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (setToMode \u003d\u003d 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Parser.programMode \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ui.print(\"Changing to bookmark mode\" + System.lineSeparator());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (setToMode \u003d\u003d 2) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Parser.programMode \u003d 2;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ui.print(\"Changing to timetable mode\" + System.lineSeparator());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (setToMode \u003d\u003d 3) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Parser.programMode \u003d 3;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ui.print(\"Changing to planner mode\" + System.lineSeparator());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_MODE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public int getModeFromCommand(String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int outputData;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert input.startsWith(ChangeModeCommand.MODE_KW) : \"input should always start with \\\"mode\\\"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String modeData \u003d input.substring(5);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (modeData.compareTo(\"bookmark\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (modeData.compareTo(\"timetable\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d 2;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (modeData.compareTo(\"planner\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d 3;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d 0;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return outputData;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 61
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/ClearCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String CLEAR_KW \u003d \"clear\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new ShowBookmarkCommand instance."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ClearCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.clearScreen();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 20
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    protected boolean isExitCommand \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Execution of command depends on which command subclass the command belongs to."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public abstract void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns true if the command is an ExitCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return isExitCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 26
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Represents the user command exit the Duke program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String BYE_KW \u003d \"exit\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new ExitCommand instance and sets isExitCommand to true."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        isExitCommand \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints the exit screen before the program exits."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param timetable The timetable. //ADD more comments"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.showExitScreen();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 31
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String HELP_KW \u003d \"help\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new HelpCommand instance and sets isExitCommand to true."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints the commands available."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.printHelpMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 24
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/LaunchNowCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Day;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class LaunchNowCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String LAUNCH_NOW_KW \u003d \"launch now\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public LaunchNowCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        LocalTime currentTime \u003d LocalTime.now();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cSlot\u003e slots \u003d timetable.getFullSlotList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Slot slot : slots) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slot.getStartTime().isBefore(currentTime) \u0026\u0026 slot.getEndTime().isAfter(currentTime)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    \u0026\u0026 slot.getDay().compareToIgnoreCase(Day.getDayToday()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d slot.getBookmarkList().launchAllBookmarks();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (message.isBlank()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"no lessons now.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 39
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/bookmark/AddBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Represents the user command exit the Duke program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class AddBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String ADD_KW \u003d \"add\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String url;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new AddBookmarkCommand instance and stores the information of the bookmark given by the input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if input command is invalid, if the description is empty or if the url is invalid."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public AddBookmarkCommand(String input) throws ZoomasterException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert input.startsWith(AddBookmarkCommand.ADD_KW) : \"input should always start with \\\"add\\\"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String command \u003d input.substring(AddBookmarkCommand.ADD_KW.length());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (command.isBlank()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, ADD_KW);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!command.startsWith(\" \")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cString\u003e descAndUrl \u003d Bookmark.extractDescriptionAndUrl(command.trim());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        description \u003d descAndUrl.get(0);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        url \u003d descAndUrl.get(1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Adds the bookmark to the bookmark list and saves the bookmarks list in the text file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param timetable The list of slots."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if there is an error when saving the bookmark."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 54
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/bookmark/DeleteBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class DeleteBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String DEL_KW \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new DeleteBookmarkCommand instance and stores the information of the bookmark given by the input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException thrown if input command is invalid or if the bookmark number is invalid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public DeleteBookmarkCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String details \u003d command.substring(DEL_KW.length());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, DEL_KW);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            index \u003d Integer.parseInt(details.trim()) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.NON_INTEGER_INPUT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Deletes the bookmark in the bookmark list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param timetable The list of slots."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if the bookmark number is invalid or if there is an error when saving the bookmark."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            Bookmark bookmark \u003d bookmarks.getBookmark(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String message \u003d \"I\u0027ve deleted this bookmark!:\\n\" + bookmarks.deleteBookmark(bookmark);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            ui.print(message);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.BOOKMARK_NUMBER_OUT_OF_BOUNDS, \"\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + bookmarks.getBookmarks().size());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 11,
      "TYS0n1": 16,
      "Speedweener": 28
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/bookmark/FindBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class FindBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String FIND_KW \u003d \"find\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new FindBookmarkCommand instance and gets the module and description to be searched."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * If only one term is entered (term meaning string without a space), method asserts"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * this to be the module and inserts an empty description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param command The command input by the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if the input is unknown."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public FindBookmarkCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String details \u003d command.substring(FIND_KW.length());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, FIND_KW);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        description \u003d details.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints the bookmark with the matching keyword."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *  @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param timetable The list of slots."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d bookmarks.findBookmarks(description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 44
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/bookmark/LaunchBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class LaunchBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String LAUNCH_KW \u003d \"launch\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private int launchTypeFlag;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new LaunchBookmarkCommand instance and gets the index of the bookmark to launch."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Determines whether the launch command was input with an integer or string, and sets launchTypeFlag accordingly."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Integer (launchTypeFlag \u003d 1)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Strings (launchTypeFlag \u003d 2)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param command The command input by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if the input is unknown or if the bookmark number is invalid."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public LaunchBookmarkCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String details \u003d command.substring(LAUNCH_KW.length());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, LAUNCH_KW);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            index \u003d Integer.parseInt(details.trim()) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            launchTypeFlag \u003d 1; // (flag to launch bookmark at specified index)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (details.trim().contains(\" \")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            description \u003d details.trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            launchTypeFlag \u003d 2; // (flag to launch bookmarks with matching description)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Launches the bookmark based on the launchTypeFlag previously determined in LaunchBookmarkCommand initialization."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param timetable The list of slots."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if the bookmark number is invalid or if there is an error launching the URL."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (launchTypeFlag \u003d\u003d 1) { // Launch based on index"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                Bookmark bookmark \u003d bookmarks.getBookmark(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                String message \u003d \"Nice! I\u0027ve launched this bookmark!:\\n\" + bookmark.launch() + System.lineSeparator();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                ui.print(message);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.BOOKMARK_NUMBER_OUT_OF_BOUNDS, \"\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        + bookmarks.getBookmarks().size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (launchTypeFlag \u003d\u003d 2) { // Launch based on matching module and description"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String message \u003d bookmarks.launchBookmarks(description);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            ui.print(message);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 15,
      "TYS0n1": 16,
      "Speedweener": 40
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/bookmark/ShowBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ShowBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String LIST_KW \u003d \"show\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new ShowBookmarkCommand instance."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ShowBookmarkCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.print(bookmarks.showBookmarks());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 22
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/planner/AddMeetingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.planner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.AddSlotCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class AddMeetingCommand extends AddSlotCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String ADD_KW \u003d \"add\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Timetable localTimetable;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private List\u003cSlot\u003e slots;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new AddSlotCommand instance and stores the information of the slot given by the input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if input command is invalid."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public AddMeetingCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Adds the slot to the slot list and saves the slots list in the text file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param bookmarks The list of bookmarks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param timetable The timetable"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param ui The user interface"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException Some exception // ADD MORE COMMENTS"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        localTimetable \u003d timetable;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        slots \u003d timetable.getFullSlotList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        super.execute(bookmarks, timetable, ui);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    protected String create(String command, Module module, Timetable timetable) throws ZoomasterException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cString\u003e slotAndBookmark \u003d Arrays.asList(command.trim().split(\" \"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (isAddModuleBookmark(slotAndBookmark)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message \u003d addBookmarkToModule(module, slotAndBookmark);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            String lesson \u003d slotAndBookmark.get(0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            String day \u003d slotAndBookmark.get(1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            LocalTime startTime;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            LocalTime endTime;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                startTime \u003d LocalTime.parse(slotAndBookmark.get(2));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                endTime \u003d LocalTime.parse(slotAndBookmark.get(3));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIME_FORMAT, \"Invalid time format. (\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + slotAndBookmark.get(2) + \" \" + slotAndBookmark.get(3) + \") Please check format.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Slot newSlot;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            if (timetable.isOverlapTimeSlot(day, startTime, endTime)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                newSlot \u003d module.getSlot(lesson, day, startTime, endTime);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                message +\u003d  \"  \" + lesson + \" overlaps with an existing timeslot\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else if (isAvailable(day, startTime, endTime)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                newSlot \u003d module.createSlotNew(lesson, day, startTime, endTime);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                module.addSlot(newSlot);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                message +\u003d  \"  \" + lesson + \" slot added\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                message +\u003d checkForAndAddBookmarkToSlot(slotAndBookmark, lesson, newSlot);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                message +\u003d  \"  \" + \"slot is full\" + System.lineSeparator();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private boolean isAvailable(String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Slot s: slots) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (s.getDay().equals(day) \u0026\u0026 s.getTitle().equals(\"\u003cempty slot\u003e\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    \u0026\u0026 s.getStartTime().compareTo(startTime) \u003c\u003d 0 \u0026\u0026 s.getEndTime().compareTo(endTime) \u003e\u003d 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                updateEmptySlot(s, startTime, endTime);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void updateEmptySlot(Slot slot, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (slot.getStartTime().compareTo(startTime) !\u003d 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Slot slot1 \u003d new Slot(slot.getStartTime(), startTime, slot.getDay(), slot.getTitle());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Slot slot2 \u003d new Slot(endTime, slot.getEndTime(), slot.getDay(), slot.getTitle());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            localTimetable.getModule(\"EMPTY\").addSlot(slot1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            localTimetable.getModule(\"EMPTY\").addSlot(slot2);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        localTimetable.getModule(\"EMPTY\").removeSlot(slot);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 99,
      "fchensan": 3
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/planner/LoadPlannerCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.planner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Day;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class LoadPlannerCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String LOAD_KW \u003d \"load\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Storage\u003cTimetable\u003e storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public LoadPlannerCommand() throws ZoomasterException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Loads the slots to the planner."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param bookmarks The list of bookmarks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param planner The timetable"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param ui The user interface"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException Some exception"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable planner, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        storage \u003d new Storage\u003c\u003e(\"./data/planner/\", Timetable.class);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Timetable temp \u003d storage.loadPlanner();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        planner.addModule(initialiseEmptySlots(temp));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.print(\"Planner loaded\" + System.lineSeparator());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Module initialiseEmptySlots(Timetable timetable) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cArrayList\u003cInteger\u003e\u003e array \u003d new ArrayList\u003c\u003e(7);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            array.add(new ArrayList\u003c\u003e(Collections.nCopies(300, 0)));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cSlot\u003e slots \u003d new ArrayList\u003c\u003e(timetable.getFullSlotList());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Slot s: slots) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            markAsFull(array, s.getStartMinutes(), s.getEndMinutes(), s.getDay());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Module module \u003d new Module(\"EMPTY\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        generateEmptySlots(array, module);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static void markAsFull(ArrayList\u003cArrayList\u003cInteger\u003e\u003e array, int start, int end, String day) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Day d: Day.values()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (d.toString().compareTo(day) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                for (int i \u003d start / 5; i \u003c end / 5; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    array.get(count).set(i, 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static void generateEmptySlots(ArrayList\u003cArrayList\u003cInteger\u003e\u003e array, Module module) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Day d: Day.values()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            for (int i \u003d 0; i \u003c 287; i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                if (array.get(count).get(i) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    int startHours \u003d (i * 5) / 60;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    int startMinutes \u003d (i * 5) % 60;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    LocalTime start \u003d Slot.convertIntToLocalTime(startHours % 288, startMinutes % 288);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    do {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        i++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    } while (array.get(count).get(i) \u003d\u003d 0 \u0026\u0026 i \u003c 287);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    int endHours \u003d (i * 5) / 60;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    int endMinutes \u003d (i * 5) % 60;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    LocalTime end \u003d Slot.convertIntToLocalTime(endHours % 288, endMinutes % 288);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    module.addSlot(new Slot(start, end, d.toString(), \"\u003cempty slot\u003e\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 5,
      "TYS0n1": 82
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/timetable/AddSlotCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Represents the user command exit the Duke program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class AddSlotCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String ADD_KW \u003d \"add\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String moduleCode;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private List\u003cString\u003e commands;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new AddSlotCommand instance and stores the information of the slot given by the input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if input command is invalid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public AddSlotCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        assert command.startsWith(ADD_KW);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String details \u003d command.substring(ADD_KW.length());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, ADD_KW);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String[] stringArray \u003d details.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        moduleCode \u003d stringArray[0].toUpperCase();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (stringArray.length \u003e 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            commands \u003d Arrays.asList(stringArray[1].split(\",\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Adds the slot to the slot list and saves the slots list in the text file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param timetable The timetable"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException Some exception // ADD MORE COMMENTS"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Module module;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (timetable.moduleExists(moduleCode)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            module \u003d timetable.getModule(moduleCode);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d moduleCode + \" already exists\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (!isValidModule(moduleCode)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_MODULE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            module \u003d timetable.addModule(moduleCode);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d moduleCode + \" added\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (commands !\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            for (String command : commands) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                message +\u003d createSlotAndBookmark(module, command.trim(), timetable);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    protected String createSlotAndBookmark(Module module, String command, Timetable timetable) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert module !\u003d null : \"module should mot be null\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            message +\u003d create(command, module, timetable);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d e.getInfo() + \"\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"incorrect format for slot: \" + command + \"\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    protected String create(String command, Module module, Timetable timetable) throws ZoomasterException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e slotAndBookmark \u003d Arrays.asList(command.trim().split(\" \"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (isAddModuleBookmark(slotAndBookmark)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d addBookmarkToModule(module, slotAndBookmark);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (slotAndBookmark.size() \u003d\u003d 2) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Slot slot;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                int index \u003d Integer.parseInt(slotAndBookmark.get(0)) - 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                slot \u003d module.getSlot(index);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.NON_INTEGER_INPUT, \"  Invalid slot index.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.INVALID_SLOT_NUMBER, \"  Slot index out of range.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            createBookmark(slotAndBookmark.get(1), slot.getTitle(), slot);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"  bookmark added to \" + moduleCode + \" \" + slot.getTitle() + \"\\n\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String lesson \u003d slotAndBookmark.get(0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String day \u003d slotAndBookmark.get(1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            LocalTime startTime;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            LocalTime endTime;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (!Day.isDay(day)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIMETABLE_DAY,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        \"  Invalid day input: \" + day);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                startTime \u003d LocalTime.parse(slotAndBookmark.get(2));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                endTime \u003d LocalTime.parse(slotAndBookmark.get(3));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIME_FORMAT,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        \"  Invalid time format for slot. (\" + slotAndBookmark.get(2)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        + \" \" + slotAndBookmark.get(3) + \") Please check format.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Slot newSlot;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (module.slotExists(lesson, day, startTime, endTime)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                newSlot \u003d module.getSlot(lesson, day, startTime, endTime);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"  Slot already exists.\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                if (startTime.isAfter(endTime) || startTime.equals(endTime)) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIME_FORMAT,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                            \"  Invalid time for slot. (\" + slotAndBookmark.get(2) + \" \" + slotAndBookmark.get(3) + \")\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                } else if (timetable.isOverlapTimeSlot(day, startTime, endTime)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    // message +\u003d  \"  \" + lesson + \" overlaps with an existing timeslot\\n\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIME_FORMAT,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                            \"  Slot clash. (\" + slotAndBookmark.get(2) + \" \" + slotAndBookmark.get(3) + \")\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                            + \" Please check timetable.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    newSlot \u003d module.createSlotNew(lesson, day, startTime, endTime);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    module.addSlot(newSlot);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    message +\u003d  \"  \" + lesson + \" slot added\\n\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d checkForAndAddBookmarkToSlot(slotAndBookmark, lesson, newSlot);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    protected String checkForAndAddBookmarkToSlot(List\u003cString\u003e slotAndBookmark,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                                                  String lesson, Slot newSlot) throws ZoomasterException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (slotAndBookmark.size() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            createBookmark(slotAndBookmark.get(4), lesson, newSlot);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"    bookmark added to \" + moduleCode + \" \" + lesson + \"\\n\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (slotAndBookmark.size() \u003e 5) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_URL, \"invalid url\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    protected String addBookmarkToModule(Module module, List\u003cString\u003e slotAndBookmark) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d slotAndBookmark.get(0);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String url \u003d slotAndBookmark.get(1);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        module.addBookmark(bookmark);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"  bookmark added to module\\n\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    protected boolean isAddModuleBookmark(List\u003cString\u003e slotAndBookmark) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            int num \u003d Integer.parseInt(slotAndBookmark.get(0));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            return (slotAndBookmark.get(1).startsWith(\"www.\") || slotAndBookmark.get(1).startsWith(\"https://\"))"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    \u0026\u0026 slotAndBookmark.size() \u003d\u003d 2;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void createBookmark(String url, String lesson, Slot newSlot) throws ZoomasterException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!url.startsWith(\"www.\") \u0026\u0026 !url.startsWith(\"https://\")) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_URL, \"invalid url format: \" + url);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(lesson, url);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        newSlot.addBookmark(bookmark);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Validates the module code with the list of modules moduleList."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param module The module code to be added."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * true if module exist in the list or list is null."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *     false if module does not exists in the list."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private boolean isValidModule(String module) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (Module.getModuleList() \u003d\u003d null) { // If unable to get list of modules, always return true."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (Module.getModuleList().contains(module)) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 129,
      "TYS0n1": 44,
      "fchensan": 6,
      "Speedweener": 28
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/timetable/DeleteSlotCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class DeleteSlotCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String DEL_KW \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String moduleCode;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Integer slotIndex \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private boolean deleteBookmarks \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new DeleteSlotCommand instance and stores the information of the Slot given by the input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if input command is invalid."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public DeleteSlotCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert command.startsWith(DEL_KW);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String details \u003d command.substring(DEL_KW.length());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, DEL_KW);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String[] deleteCommands \u003d details.trim().split(\" \", 3);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        moduleCode \u003d deleteCommands[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            String something \u003d deleteCommands[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (something.trim().compareTo(\"bookmarks\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                deleteBookmarks \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                slotIndex \u003d Integer.parseInt(something) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                if (deleteCommands[2].trim().compareTo(\"bookmarks\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    deleteBookmarks \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            // No slot index or delete bookmark keyword provided."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.NON_INTEGER_INPUT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Deletes either module or slot depending on the deleteBookmarks flag. // ADD MORE COMMENTS"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param bookmarks The list of bookmarks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param timetable The timetable"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param ui The user interface"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException INVALID_SLOT_NUMBER // ADD MORE COMMENTS"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throws ZoomasterException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!timetable.moduleExists(moduleCode)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message +\u003d \"module does not exists\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Module module \u003d timetable.getModule(moduleCode);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (slotIndex \u003d\u003d null \u0026\u0026 !deleteBookmarks) { // delete module"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                timetable.deleteModule(module);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                message +\u003d \"deleted module: \" + moduleCode + \"\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else if (slotIndex !\u003d null \u0026\u0026 !deleteBookmarks) { // delete slot"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                Slot slot \u003d module.getSlot(slotIndex);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                module.removeSlot(slot);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                message +\u003d \"deleted \" + slot + \" from \" + moduleCode + \"\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else if (slotIndex \u003d\u003d null \u0026\u0026 deleteBookmarks) { // delete module bookmark"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                module.removeAllBookmarks();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"deleted bookmarks from \" + moduleCode + \"\\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else if (slotIndex !\u003d null \u0026\u0026 deleteBookmarks) { // delete slot bookmark"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                Slot slot \u003d module.getSlot(slotIndex);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                slot.removeAllBookmarks();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"deleted bookmarks from \" + slot.getDay() + \" \" + slot + \" from \" + moduleCode + \"\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 8,
      "TYS0n1": 84
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/timetable/EditSlotCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class EditSlotCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String EDIT_KW \u003d \"edit\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String FIELD_KW_MODULE \u003d \"module\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String FIELD_KW_TITLE \u003d \"title\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String FIELD_KW_TIME \u003d \"time\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private String fieldToEdit;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public EditSlotCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        assert command.startsWith(EDIT_KW);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        // details: \"NEW_MODULE_CODE\" or \"NEW_TITLE\" or \"NEW_DAY START_TIME END_TIME\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        details \u003d command.substring(EDIT_KW.length()).trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, EDIT_KW);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Pattern parser \u003d Pattern.compile("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                \"(?\u003cfieldToEdit\u003e[a-zA-Z]+) (?\u003cdetails\u003e.+)\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Matcher matcher \u003d parser.matcher(details);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            // TODO: Make new exception type for this"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_SLOT_INPUT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        fieldToEdit \u003d matcher.group(\"fieldToEdit\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        details \u003d matcher.group(\"details\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Pattern parser \u003d Pattern.compile("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                \"(?\u003cday\u003e[a-zA-Z]+) (?\u003cindexInDay\u003e\\\\d+) (?\u003cfirstArgument\u003e\\\\w+)\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                + \"( (?\u003cstartTime\u003e[\\\\w:]+) (?\u003cendTime\u003e[\\\\w:]+))?\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Matcher matcher \u003d parser.matcher(details);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_SLOT_INPUT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String day \u003d matcher.group(\"day\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        int indexInDay \u003d Integer.parseInt(matcher.group(\"indexInDay\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Slot slot \u003d timetable.getSlotByIndexInDay(day, indexInDay);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        switch (fieldToEdit) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        case FIELD_KW_MODULE:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            timetable.moveSlotToAnotherModule(day, indexInDay, matcher.group(\"firstArgument\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            message \u003d \"Slot moved to \" + matcher.group(\"firstArgument\").toUpperCase();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        case FIELD_KW_TITLE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            slot.setTitle(matcher.group(\"firstArgument\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            message \u003d \"Slot title changed to \" + matcher.group(\"firstArgument\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        case FIELD_KW_TIME:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            message \u003d changeSlotTime("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    slot,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    matcher.group(\"firstArgument\"),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    matcher.group(\"startTime\"),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    matcher.group(\"endTime\"),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    timetable);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            message \u003d \"Unrecognized field!\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.print(message + System.lineSeparator());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Change a slot\u0027s start and end time with the given user input."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param slot The slot object with the day we want to change."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param startTimeInput The new start time as string."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param endTimeInput The new end time as string."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private String changeSlotTime("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            Slot slot, String dayInput, String startTimeInput, String endTimeInput, Timetable timetable)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throws ZoomasterException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        LocalTime startTime;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        LocalTime endTime;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            startTime \u003d LocalTime.parse(startTimeInput);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            endTime \u003d LocalTime.parse(endTimeInput);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIME_FORMAT);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (timetable.isOverlapTimeSlot(dayInput, startTime, endTime)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            return \"Timing clashes with another slot!\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        slot.setDay(dayInput);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        slot.setStartTime(startTime);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        slot.setEndTime(endTime);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return \"Slot time changed to \" + dayInput + \" \" + startTimeInput + \" \" + endTimeInput;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 123
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/timetable/LaunchModuleAndSlotBookmark.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class LaunchModuleAndSlotBookmark extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String LAUNCH_KW \u003d \"launch\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private List\u003cString\u003e  moduleAndSlotIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public LaunchModuleAndSlotBookmark(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert command.startsWith(LAUNCH_KW) : \"command should start with launch keyword\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String details \u003d command.substring(LAUNCH_KW.length());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, LAUNCH_KW);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        moduleAndSlotIndex \u003d Arrays.asList(details.trim().split(\" \", 2));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String moduleCode \u003d moduleAndSlotIndex.get(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Integer slotIndex \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (moduleAndSlotIndex.size() \u003d\u003d 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                slotIndex \u003d Integer.parseInt(moduleAndSlotIndex.get(1)) - 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.NON_INTEGER_INPUT);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Module module;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!timetable.moduleExists(moduleCode)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"module does not exist\" + System.lineSeparator();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            module \u003d timetable.getModule(moduleCode);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slotIndex \u003d\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d launchModuleBookmark(module);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                Slot slot \u003d module.getSlot(slotIndex);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d launchSlotBookmark(slot);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String launchModuleBookmark(Module module) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d module.launchBookmarks();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String launchSlotBookmark(Slot slot) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarkList \u003d slot.getBookmarkList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d bookmarkList.launchAllBookmarks();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 69
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/timetable/ShowTimetableCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Day;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.SlotContainer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ShowTimetableCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String SHOW_KW \u003d \"show\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private boolean showBookmarks \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String module \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new ShowTimetableCommand instance."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ShowTimetableCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert command.startsWith(SHOW_KW) : \"command should start with show keyword\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (command.compareTo(SHOW_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            day \u003d \"ALL\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (command.charAt(SHOW_KW.length()) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            String details \u003d command.substring(SHOW_KW.length() + 1).trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (details.toLowerCase().equals(\"today\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                day \u003d Day.getDayToday();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (Day.isDay(details)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                day \u003d Day.getDayFromCommand(details);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                String[] something \u003d details.split(\" \", 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                module \u003d something[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                if (something.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    if (something[1].compareTo(\"bookmarks\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        showBookmarks \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cModule\u003e modules \u003d timetable.getFullModuleList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (day !\u003d null) { // \"show\" and \"show day\" and \"show today\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            List\u003cSlot\u003e list \u003d new ArrayList\u003c\u003e(timetable.getFullSlotList());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message +\u003d getMessageLessonAtTime(modules, list, day);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (isShowModule()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (!timetable.moduleExists(module)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.INVALID_MODULE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Module matchedModule \u003d timetable.getModule(module);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message +\u003d getMessageForModule(matchedModule);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (isShowModuleBookmarks()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (!timetable.moduleExists(module)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.INVALID_MODULE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Module matchedModule \u003d timetable.getModule(module);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message +\u003d matchedModule.getBookmarks();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String getMessageSlotsInADay(List\u003cModule\u003e modules, List\u003cSlot\u003e slots, String day) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean hasSlotOnDay \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean hasIndicatorOnDay \u003d false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (day.equals(Day.getDayToday())) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            hasIndicatorOnDay \u003d true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cSlot\u003e thisDaySlots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cString\u003e thisDayModuleCodesList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Slot s: slots) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            for (Module module : modules) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                if (module.slotExists(s) \u0026\u0026 s.getDay().equals(day)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    thisDaySlots.add(s);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    thisDayModuleCodesList.add(module.getModuleCode());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        SlotContainer slotContainer \u003d new SlotContainer(thisDaySlots, thisDayModuleCodesList);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        SlotContainer sortedSlotContainer \u003d sortSlotsByTime(slotContainer);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cSlot\u003e sortedSlots \u003d sortedSlotContainer.getSlotList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cString\u003e sortedModuleCodes \u003d sortedSlotContainer.getModuleCodesList();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (int i \u003d 0; i \u003c sortedSlots.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (hasLessonNow(sortedSlots.get(i))) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                message.append(getHighlighBoxUpperMessage());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                message.append(sortedSlots.get(i).toString()).append(\" \")"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        .append(sortedModuleCodes.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                message.append(getHighlighBoxLowerMessage());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                hasIndicatorOnDay \u003d false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                if (sortedSlots.get(i).getStartTime().isAfter(LocalTime.now())"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        \u0026\u0026 hasIndicatorOnDay) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    message.append(getIndicatorMessage());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    hasIndicatorOnDay \u003d false;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                message.append(sortedSlots.get(i).toString()).append(\" \")"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        .append(sortedModuleCodes.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            hasSlotOnDay \u003d true;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!hasSlotOnDay) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message.append(\"No lessons\" + \"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (hasIndicatorOnDay) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message.append(getIndicatorMessage());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        message.append(\"\\n\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private SlotContainer sortSlotsByTime(SlotContainer slotContainer) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cSlot\u003e thisDaySlots \u003d slotContainer.getSlotList();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cString\u003e thisDayModuleCodesList \u003d slotContainer.getModuleCodesList();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cSlot\u003e sortedThisDaySlots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cString\u003e sortedThisDayModuleCodesList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        int indexEarliestTimeSlot;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Slot earliestTimeSlot;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        while (thisDaySlots.size() !\u003d 0) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            earliestTimeSlot \u003d thisDaySlots.get(0);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            indexEarliestTimeSlot \u003d 0;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            for (int i \u003d 1; i \u003c thisDaySlots.size(); i++) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                if (earliestTimeSlot.getStartTime().isAfter(thisDaySlots.get(i).getStartTime())) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    earliestTimeSlot \u003d thisDaySlots.get(i);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    indexEarliestTimeSlot \u003d i;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            sortedThisDaySlots.add(thisDaySlots.get(indexEarliestTimeSlot));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            sortedThisDayModuleCodesList.add(thisDayModuleCodesList.get(indexEarliestTimeSlot));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            thisDaySlots.remove(indexEarliestTimeSlot);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            thisDayModuleCodesList.remove(indexEarliestTimeSlot);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return new SlotContainer(sortedThisDaySlots, sortedThisDayModuleCodesList);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String getMessageTimetable(List\u003cModule\u003e modules, List\u003cSlot\u003e slots) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Day day: Day.values()) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message.append(day.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message.append(getMessageSlotsInADay(modules, slots, day.toString()));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String getMessageLessonAtTime(List\u003cModule\u003e modules, List\u003cSlot\u003e slots,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                                          String dayInput) throws ZoomasterException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (slots.isEmpty()) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_TIMETABLE);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (dayInput \u003d\u003d null) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIMETABLE_DAY);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (dayInput.compareTo(\"ALL\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return getMessageTimetable(modules,slots);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        message +\u003d \"Lessons for \" + dayInput + \"\\n\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        message +\u003d getMessageSlotsInADay(modules, slots, dayInput);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String getMessageForModule(Module module) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cSlot\u003e slots \u003d module.getSlotList();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!slots.isEmpty()) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message +\u003d module.getModuleCode() + \"\\n\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            for (int i \u003d 0; i \u003c slots.size(); i++) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                Slot slot \u003d slots.get(i);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                String dayString \u003d (isShowModule() ? slot.getDay() + \" \" : \"\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"  \" + (i + 1) + \". \" + dayString + slot.toString() + \"\\n\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message +\u003d \"no slots for \" + module.getModuleCode() + \"\\n\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static boolean hasLessonNow(Slot slot) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean isOverlap \u003d false;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        LocalTime timeNow \u003d LocalTime.now();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (slot.getStartTime().isBefore(timeNow) \u0026\u0026 slot.getEndTime().isAfter(timeNow)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                \u0026\u0026 Day.getDayToday().equals(slot.getDay())) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            isOverlap \u003d true;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return isOverlap;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static String getIndicatorMessage() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        DateTimeFormatter hoursAndMinutes \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String currentTimeMessage \u003d \"\u003c----\" + \"Current Time: \" + LocalTime.now().format(hoursAndMinutes)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                + \"----\u003e\" + \"\\n\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return \"\\u001b[34m\" + currentTimeMessage + \"\\u001b[0m\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static String getHighlighBoxUpperMessage() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"[\u003d\u003d\u003d\u003d\" + \"Lesson now\" + \"\u003d\u003d\u003d\u003d]\" + \"\\n\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return \"\\u001b[32m\" + message + \"\\u001b[0m\";"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static String getHighlighBoxLowerMessage() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"[\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d]\" + \"\\n\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return \"\\u001b[32m\" + message + \"\\u001b[0m\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private boolean isShowModuleBookmarks() {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return module !\u003d null \u0026\u0026 showBookmarks;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private boolean isShowModule() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return module !\u003d null \u0026\u0026 !showBookmarks;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 38,
      "TYS0n1": 199
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/exception/ZoomasterException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * The class DukeException is a subclass of Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * It is thrown when an error specific to Duke occurs."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ZoomasterException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private ZoomasterExceptionType zoomasterExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String info;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new DukeException instance by storing the given DukeExceptionType."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param dukeExceptionType The type of dukeException."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ZoomasterException(ZoomasterExceptionType dukeExceptionType) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.zoomasterExceptionType \u003d dukeExceptionType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new DukeException instance by storing the given DukeExceptionType and message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param dukeExceptionType The type of dukeException."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param info Additional information of the exception."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ZoomasterException(ZoomasterExceptionType dukeExceptionType, String info) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.zoomasterExceptionType \u003d dukeExceptionType;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.info \u003d info;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the dukeExceptionType of the dukeException."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return the dukeExceptionType."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ZoomasterExceptionType getError() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return zoomasterExceptionType;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return info;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 45
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/exception/ZoomasterExceptionType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Enumeration of all the types of DukeException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public enum ZoomasterExceptionType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    UNKNOWN_INPUT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_MODE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    WRITE_FILE_ERROR,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    ERROR_LOADING_FILE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_ADD_BOOKMARK_INPUT,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    EMPTY_DESCRIPTION,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    EMPTY_COMMAND,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    NON_INTEGER_INPUT,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    BOOKMARK_NUMBER_OUT_OF_BOUNDS,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_URL,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    ERROR_LAUNCHING_URL,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_MODULE,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_SLOT_NUMBER,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_TIME_FORMAT,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_SLOT_INPUT,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_TIMETABLE_DAY,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    EMPTY_TIMETABLE,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    CONNECTION_ERROR,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    JSON_PARSE_ERROR,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 29
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/slot/Day.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public enum Day {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    MON,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    TUE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    WED,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    THU,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    FRI,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    SAT,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    SUN;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns String of today\u0027s day of the week."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return outputDay String of today\u0027s day of the week readable by Slot class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static String getDayToday() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String outputDay;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert (LocalDate.now().getDayOfWeek().getValue() \u003c\u003d 7) \u0026\u0026 (LocalDate.now().getDayOfWeek().getValue() \u003e\u003d 1) :"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                \"LocalDate.now().getDayOfWeek().getValue() only returns value within range 1 to 7\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        switch (LocalDate.now().getDayOfWeek().getValue()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d MON.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d TUE.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d WED.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d THU.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d FRI.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d SAT.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d SUN.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return outputDay;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static String getDayFromCommand(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String outputData;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (input.compareToIgnoreCase(MON.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d MON.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(TUE.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d TUE.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(WED.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d WED.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(THU.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d THU.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(FRI.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d FRI.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(SAT.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d SAT.toString();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(SUN.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d SUN.toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return outputData;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static boolean isDay(String input) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        boolean isDay \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (getDayFromCommand(input) !\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            isDay \u003d true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return isDay;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String day;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case MON:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"mon\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case TUE:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"tue\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case WED:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"wed\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case THU:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"thu\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case FRI:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"fri\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case SAT:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"sat\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case SUN:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"sun\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 113
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/slot/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String moduleCode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private List\u003cSlot\u003e slots;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static ArrayList\u003cString\u003e moduleList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static ArrayList\u003cString\u003e getModuleList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return moduleList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static void setModuleList(ArrayList\u003cString\u003e moduleList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Module.moduleList \u003d moduleList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Module(String moduleCode) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.moduleCode \u003d moduleCode.toUpperCase();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        slots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void addSlot(Slot slot) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        slots.add(slot);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean slotExists(String lesson, String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Slot slot : slots) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slot.match(lesson, day, startTime, endTime)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean slotExists(Slot slot) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slots.contains(slot);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Slot getSlot(String lesson, String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Slot slot : slots) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slot.match(lesson, day, startTime, endTime)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                return slot;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Slot getSlot(int index) throws ZoomasterException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Slot slot;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            slot \u003d slots.get(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_SLOT_NUMBER, \"\" + slots.size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slot;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Slot createSlotNew(String lesson, String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Slot slot \u003d new Slot(startTime, endTime, day, lesson);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slot;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void removeSlot(Slot slot) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert slots.contains(slot) : \"Use getSlot to get reference of slot to be deleted before calling this method\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        slots.remove(slot);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean isModule(String moduleCode) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        boolean isModule \u003d false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (this.moduleCode.compareToIgnoreCase(moduleCode) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            isModule \u003d true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return isModule;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void addBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void removeAllBookmarks() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public List\u003cSlot\u003e getSlotList() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slots;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String getBookmarks() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cBookmark\u003e bookmarkList \u003d bookmarks.getBookmarks();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Bookmark bookmark : bookmarkList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d bookmark.getBookmarkAsString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!message.isBlank()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d System.lineSeparator();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (bookmarkList.isEmpty()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"no bookmarks found in module\" + System.lineSeparator() + System.lineSeparator();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (int i \u003d 0; i \u003c slots.size(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Slot slot \u003d slots.get(i);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d (i + 1) + \". \" + slot.getDay() + \" \" + slot.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            List\u003cBookmark\u003e slotBookmarkList \u003d slot.getBookmarkList().getBookmarks();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            for (Bookmark bookmark : slotBookmarkList) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"  \" + bookmark.getBookmarkAsString();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slotBookmarkList.isEmpty()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"  no bookmarks found in slot\" + System.lineSeparator();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d System.lineSeparator();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (message.isBlank()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"no bookmarks found in \" + moduleCode + System.lineSeparator();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String launchBookmarks() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d bookmarks.launchAllBookmarks();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String getModuleCode() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return moduleCode;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 122,
      "TYS0n1": 7,
      "Speedweener": 7
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/slot/Slot.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Slot {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static final String SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Slot(LocalTime startTimeInput, LocalTime endTimeInput, String dayInput, String titleInput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        startTime \u003d startTimeInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        endTime \u003d endTimeInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        day \u003d dayInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        title \u003d titleInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public boolean match(String lesson, String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (title.compareTo(lesson) \u003d\u003d 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                \u0026\u0026 this.day.compareTo(day) \u003d\u003d 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                \u0026\u0026 this.startTime.equals(startTime)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                \u0026\u0026 this.endTime.equals(endTime)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Bookmark getBookmark(int index) throws ZoomasterException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            bookmark \u003d bookmarks.getBookmark(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.BOOKMARK_NUMBER_OUT_OF_BOUNDS, \"\" "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                                         + bookmarks.getSize());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return bookmark;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public BookmarkList getBookmarkList() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return bookmarks;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void removeBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        bookmarks.deleteBookmark(bookmark);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void removeAllBookmarks() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void addBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setStartTime(LocalTime timeInput) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        startTime \u003d timeInput;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public LocalTime getStartTime() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public int getStartMinutes() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int hours \u003d Integer.parseInt(startTime.toString().substring(0,2));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int minutes \u003d Integer.parseInt(startTime.toString().substring(3));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return hours * 60 + minutes;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setEndTime(LocalTime timeInput) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        endTime \u003d timeInput;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public LocalTime getEndTime() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public int getEndMinutes() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int hours \u003d Integer.parseInt(endTime.toString().substring(0,2));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int minutes \u003d Integer.parseInt(endTime.toString().substring(3));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return hours * 60 + minutes;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static LocalTime convertIntToLocalTime(int hours, int minutes) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String h \u003d String.valueOf(hours);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String m \u003d String.valueOf(minutes);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (hours \u003c 10) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            h \u003d \"0\" + h;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (minutes \u003c 10) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            m \u003d \"0\" + m;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return LocalTime.parse(h + \":\" + m);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setDay(String dayInput) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        day \u003d dayInput;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getDay() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setTitle(String titleInput) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        title \u003d titleInput;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getExport() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return startTime.toString() + SEPARATOR + endTime.toString() + SEPARATOR + day + SEPARATOR + title;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static Slot initSlot(String data) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cString\u003e details \u003d Arrays.asList(data.split(\"\\\\|\"));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        LocalTime startTime \u003d LocalTime.parse(details.get(0).trim());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        LocalTime endTime \u003d LocalTime.parse(details.get(1).trim());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String day \u003d details.get(2).trim();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String title \u003d details.get(3).trim();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return new Slot(startTime, endTime, day, title);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return String.format(startTime.toString() + \"-\" + endTime.toString() + \" \" + title);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 2,
      "TYS0n1": 139
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/slot/SlotContainer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class SlotContainer {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private ArrayList\u003cSlot\u003e thisDaySlots;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private ArrayList\u003cString\u003e thisDayModuleCodesList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public SlotContainer(ArrayList\u003cSlot\u003e slotsListInput, ArrayList\u003cString\u003e moduleCodesListInput) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.thisDaySlots \u003d slotsListInput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.thisDayModuleCodesList \u003d moduleCodesListInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ArrayList\u003cSlot\u003e getSlotList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return thisDaySlots;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setToSlotList(ArrayList\u003cSlot\u003e slotsListInput) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        thisDaySlots \u003d slotsListInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ArrayList\u003cString\u003e getModuleCodesList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return thisDayModuleCodesList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setModuleCodesList(ArrayList\u003cString\u003e moduleCodeListInput) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        thisDayModuleCodesList \u003d moduleCodeListInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 29
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/slot/SlotList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * This class represents the timetable used to store and organize the schedule slots."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class SlotList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private ArrayList\u003cSlot\u003e slots;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    //private ArrayList\u003cBookmark\u003e bookmarks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private ArrayList\u003cModule\u003e modules;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a SlotList object with an empty ArrayList to store Slot objects."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public SlotList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.slots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        //this.bookmarks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs the SlotList object containing an ArrayList to store Slot objects."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This constructor is used when loading Slots from a text file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param slotStrings the list of strings of Slots."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public SlotList(ArrayList\u003cString\u003e slotStrings) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.slots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        loadSlotList(slotStrings);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void loadSlotList(ArrayList\u003cString\u003e slots) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (String slot: slots) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            loadSlot(slot);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public boolean moduleExists(String moduleCode) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean moduleExists \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Module module : modules) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (module.isModule(moduleCode)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                moduleExists \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return moduleExists;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Module addModule(String moduleCode) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Module module \u003d new Module(moduleCode);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        modules.add(module);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Module getModule(String moduleCode) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Module module \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Module mod : modules) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (moduleCode.compareTo(mod.getModuleCode()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                module \u003d mod;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This method adds the given Slot object to the timetable."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param slot the slot to be added to the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void addSlot(Slot slot)  {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        slots.add(slot);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void loadSlot(String line) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            slots.add(Slot.initSlot(line));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(\"Index out of bound\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(\"Incorrect time format\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the the data of all Slots in the list to be saved in the text file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return the data of all the Slots."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Slot slot : slots) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            data.append(slot.getExport()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return data.toString().trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the number of slots in the timetable."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return the size of the list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return slots.size();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns a slot based on the index."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param index The index of the slot in the list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return The slot with the corresponding index in the list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Slot getSlot(int index) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return slots.get(index);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the slot list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return The slot list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ArrayList\u003cSlot\u003e getSlotList() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return slots;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This method deletes the slot from the list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param slot The slot to be deleted."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void deleteSlot(Slot slot) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        slots.remove(slot);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "TYS0n1": 134
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/slot/Timetable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Timetable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private List\u003cModule\u003e modules;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Timetable() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public boolean moduleExists(String moduleCode) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean moduleExists \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Module module : modules) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (module.isModule(moduleCode)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                moduleExists \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return moduleExists;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Module addModule(String moduleCode) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Module module \u003d new Module(moduleCode);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        modules.add(module);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void addModule(Module module) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        modules.add(module);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public List\u003cSlot\u003e getFullSlotList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cSlot\u003e slotList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Module module : modules) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            slotList.addAll(module.getSlotList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return slotList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public List\u003cModule\u003e getFullModuleList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return modules;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Module getModule(String moduleCode) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Module module \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Module mod : modules) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (mod.isModule(moduleCode)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                module \u003d mod;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert module !\u003d null : \"module should not be null\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Module getModuleContainingSlot(Slot slot) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        for (Module module: modules) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            if (module.getSlotList().contains(slot)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                return module;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void deleteModule(Module module) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        modules.remove(module);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public boolean isOverlapTimeSlot(String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        boolean isOverlap \u003d false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        List\u003cSlot\u003e slotList \u003d getFullSlotList();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        for (Slot slot : slotList) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            if (slot.getDay().equals(day)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                if ((isTimeAGreaterEqualsTimeB(startTime, slot.getEndTime())"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                        \u0026\u0026 isTimeAGreaterEqualsTimeB(endTime, slot.getEndTime()))"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                        || (isTimeAGreaterEqualsTimeB(slot.getStartTime(), startTime)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                        \u0026\u0026 isTimeAGreaterEqualsTimeB(slot.getStartTime(), endTime))) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                isOverlap \u003d true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return isOverlap;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public boolean isTimeAGreaterEqualsTimeB(LocalTime timeA, LocalTime timeB) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        boolean isGreaterEquals \u003d false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (timeA.isAfter(timeB) || timeA.equals(timeB)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            isGreaterEquals \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return isGreaterEquals;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Slot getSlotByIndexInDay(String day, int index) throws ZoomasterException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        // TODO: Implement this method. This is a dummy implementation."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        for (Module module: modules) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            if (!module.getSlotList().isEmpty()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                return module.getSlotList().get(0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Move a slot to another module given a user input module code."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param dayOfSlot The day of slot to be moved."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param indexInDay The index of the slot within its day."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param newModuleCode The module code where the slot will be moved to."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void moveSlotToAnotherModule(String dayOfSlot, int indexInDay, String newModuleCode)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throws ZoomasterException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Slot slot \u003d getSlotByIndexInDay(dayOfSlot, indexInDay);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        getModuleContainingSlot(slot).removeSlot(slot);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Module newModule;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (moduleExists(newModuleCode)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            newModule \u003d getModule(newModuleCode);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            newModule \u003d addModule(newModuleCode);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        newModule.addSlot(slot);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 60,
      "fchensan": 71
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/ZoomasterTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "class ZoomasterTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 2,
      "TYS0n1": 1,
      "-": 9
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/bookmark/BookmarkListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "class BookmarkListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private final Bookmark bookmarkTest \u003d new Bookmark(\"tutorial\", \"www.google.com\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private final String lineSeparator \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void addBookmark() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmark, bookmarks.getBookmark(0));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void initializeBookmarkListWithArrayList_validBookmark_addsToBookmarkList() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getBookmark(0).getExport(), \"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getBookmark(1).getExport(), \"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Adds 1 valid and 1 invalid bookmark to the BookmarkList."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Asserts IndexOutOfBoundsException for index 1 as only 1 bookmark will be added to index 0."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void initializeBookmarkListWithArrayList_invalidBookmark_throwsIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e bookmarks.getBookmark(1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getData() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getData(), \"tutorial | www.google.com\" + System.lineSeparator()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getSize() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | https://www.youtube.com/\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getSize(), 3);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getBookmark() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.addBookmark(bookmarkTest);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarkTest, bookmarks.getBookmark(0));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getBookmarkList_returnsListOfBookmarks() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.addBookmark(bookmarkTest);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cBookmark\u003e bookmarksExpected \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarksExpected.add(bookmarkTest);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarksExpected, bookmarks.getBookmarks());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Adds 4 valid bookmarks to the BookmarkList."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Checks that size decreases to 4 after deletion."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Checks that bookmark at index 2 changes after deletion."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void deleteBookmark() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2113T | www.google.com\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2113T | www.yahoo.com\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS1010 | https://www.youtube.com/\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"GEH1049 | https://www.stackoverflow.com/\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getSize(), 4);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getBookmark(2).getBookmarkAsString(),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                \"[CS1010] https://www.youtube.com/\" + System.lineSeparator());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.deleteBookmark(bookmarks.getBookmark(2));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getSize(), 3);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getBookmark(2).getBookmarkAsString(),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                \"[GEH1049] https://www.stackoverflow.com/\" + System.lineSeparator());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void showBookmark() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2113T | www.google.com\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2113T | www.yahoo.com\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"Here are the bookmarks in your list:\" + lineSeparator"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"  \" + (1) + \".\" + \"[CS2113T] www.google.com\" + lineSeparator"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"  \" + (2) + \".\" + \"[CS2113T] www.yahoo.com\" + lineSeparator + lineSeparator,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.showBookmarks());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void findBookmark_matchingBookmark() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2112T | www.google.com\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2113T | www.yahoo.com\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"Here are your matching bookmarks\" + lineSeparator + (2) + \".\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        + bookmarks.getBookmark(1).getBookmarkAsString() + lineSeparator,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.findBookmarks(\"CS2113T\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void findBookmark_emptyList_returnsEmptyListMessage() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"Empty List\" + lineSeparator,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.findBookmarks(\"CS2113T\"));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void findBookmark_noMatchingKeyword_returnsNoMatchingBookmarkMessage() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2112T | www.google.com\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2113T | www.yahoo.com\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"No bookmarks contain the specified keyword!\" + lineSeparator,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.findBookmarks(\"CS3113T\"));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void launchBookmark_matchingBookmark() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"Launched these bookmarks:\" + lineSeparator"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + (2) + \".\" + bookmarks.getBookmark(1).getBookmarkAsString() + lineSeparator,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.launchBookmarks(\"lecture\"));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void launchBookmark_emptyBookmarkList_returnEmptyListMessage() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"Empty List\" + lineSeparator,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.launchBookmarks(\"lecture\"));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void launchBookmark_noMatchingBookmarks() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d \"NONMATCHINGTERM\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"No bookmarks contain the specified keyword!\" + lineSeparator,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.launchBookmarks(description));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void launchAllBookmark_returnLaunchBookmarksMessage() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"Launched these bookmarks:\" + lineSeparator"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        + \"1.[tutorial] www.google.com\" + lineSeparator"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        + \"2.[lecture] www.yahoo.com\" + lineSeparator,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.launchAllBookmarks());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void launchAllBookmark_emptyBookmarkList_returnEmptyListMessage() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"Empty List\" + lineSeparator,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.launchAllBookmarks());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 198,
      "TYS0n1": 1,
      "Speedweener": 5
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/bookmark/BookmarkTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class BookmarkTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void extractModuleDescriptionAndUrl_returnsDescAndUrl() throws ZoomasterException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cString\u003e expectedUrlAndDescription \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        expectedUrlAndDescription.add(\"tutorial\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        expectedUrlAndDescription.add(\"www.google.com\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String input \u003d \"tutorial www.google.com\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(expectedUrlAndDescription, Bookmark.extractDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void extractModuleDescriptionAndUrl_missingDescription_throwsZoomasterException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String input \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e Bookmark.extractDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(ZoomasterExceptionType.INVALID_ADD_BOOKMARK_INPUT, e.getError());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void extractModuleDescriptionAndUrl_invalidUrl_throwsZoomasterException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String input \u003d \"CS2113T google.com\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e Bookmark.extractDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(ZoomasterExceptionType.INVALID_URL, e.getError());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void launch() throws ZoomasterException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d \"desc\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String expectedOutput \u003d \"  [\" + description + \"] \" + url;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(expectedOutput, bookmark.launch());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getUrl_validModuleDescriptionAndUrl_returnsUrl() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(url, bookmark.getUrl());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getDescription_validModuleDescriptionAndUrl_returnsDescription() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(description, bookmark.getDescription());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getBookmarkAsString_returnsDescriptionAndUrl() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String expectedString \u003d \"[something] www.google.com\" + System.lineSeparator();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(expectedString, bookmark.getBookmarkAsString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getExport_returnsDescriptionAndUrl() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String expectedString \u003d description + \" | \" + url;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(expectedString, bookmark.getExport());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void initBookmark_validDataString_returnsBookmark() throws ZoomasterException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String data \u003d \"tutorial | www.google.com\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d \"tutorial\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark expectedBookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(expectedBookmark.getBookmarkAsString(), Bookmark.initBookmark(data).getBookmarkAsString());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void initBookmark_missingSeparator_throwsIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String data \u003d \"tutorial www.google.com\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e Bookmark.initBookmark(data));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void initBookmark_invalidUrl_throwsZoomasterException() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String data \u003d \"tutorial | google com\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e Bookmark.initBookmark(data));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(ZoomasterExceptionType.INVALID_URL, e.getError());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "TYS0n1": 101
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/command/ChangeModeCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ChangeModeCommandTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testChangeToBookmarkMode() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(1, new ChangeModeCommand(\"mode bookmark\").setToMode);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testChangeToTimetableMode() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(2, new ChangeModeCommand(\"mode timetable\").setToMode);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testInvalidModeInput() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(0, new ChangeModeCommand(\"mode abcd\").setToMode);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testShortLenghtInput() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(0, new ChangeModeCommand(\"mode\").setToMode);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 29
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/command/bookmark/AddBookmarkCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class AddBookmarkCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 12
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/command/bookmark/DeleteBookmarkCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class DeleteBookmarkCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 12
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/command/timetable/AddSlotCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class AddSlotCommandTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    void constructor_invalidInput_throwsDukeException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String input \u003d AddSlotCommand.ADD_KW;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            AddSlotCommand command \u003d new AddSlotCommand(input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            fail();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            assertEquals(e.getError(), DukeExceptionType.EMPTY_COMMAND);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        input \u003d AddSlotCommand.ADD_KW + \"1111 12:00 mon CS1231 lecture\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            AddSlotCommand command \u003d new AddSlotCommand(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            fail();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            assertEquals(e.getError(), DukeExceptionType.INVALID_TIME_FORMAT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    void execute_validInput_addsSlotInSlotSlit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String startTime \u003d \"10:00\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String endTime \u003d \"12:00\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String title \u003d \"CS1231 Lecture\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String input \u003d AddSlotCommand.ADD_KW + \" \" + startTime + \" \" + endTime + \" \" + Slot.FRI + \" \" + title;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        SlotList expectedSlots \u003d new SlotList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        expectedSlots.addSlot(new Slot(LocalTime.parse(startTime),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                LocalTime.parse(endTime),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                Slot.FRI,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                title"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                ));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        AddSlotCommand command;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            command \u003d new AddSlotCommand(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            command.execute(new BookmarkList(),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                    slots,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                    new Ui(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                    new Storage(\"test.txt\"),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                    new Storage(\"test.txt\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            fail(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        assertEquals(expectedSlots.getData(), slots.getData());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 59
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/command/timetable/DeleteSlotCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class DeleteSlotCommandTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    void constructor_invalidInput_throwsDukeException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String input \u003d DeleteSlotCommand.DEL_KW + \" 0\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            DeleteSlotCommand command \u003d new DeleteSlotCommand(input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            assertEquals(e.getError(), DukeExceptionType.INVALID_SLOT_NUMBER);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    void execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String startTime \u003d \"10:00\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String endTime \u003d \"12:00\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String title \u003d \"CS1231 Lecture\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.addSlot(new Slot(LocalTime.parse(startTime),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                LocalTime.parse(endTime),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                Slot.FRI,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                title"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        ));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String input \u003d DeleteSlotCommand.DEL_KW + \" 1\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            DeleteSlotCommand command \u003d new DeleteSlotCommand(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            command.execute(new BookmarkList(), slots, new Ui(), new Storage(\"test.txt\"), new Storage(\"test.txt\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            fail(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        assertEquals(new SlotList().getData(), slots.getData());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 42
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/command/timetable/ShowTimetableCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ShowTimetableCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    static Timetable time1 \u003d new Timetable();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testShowAllSlots() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testMondaySlots() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show mon\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testTuesdaySlots() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show tue\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testWednesdaySlots() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show wed\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testThursdaySlots() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show thu\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testFridaySlots() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show fri\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testSatudaySlots() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show sat\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testSundaySlots() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show sun\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testInvalidSlots1() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show1\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(true, true);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testInvalidSlots2() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show abc\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void setupTimetable() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            AddSlotCommand addSlot1 \u003d new AddSlotCommand(\"add laj1201 tutorial_1 mon 08:00 10:00\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            addSlot1.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            AddSlotCommand addSlot2 \u003d new AddSlotCommand(\"add cs2101 tutorial_1 tue 10:00 12:00\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            addSlot2.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            AddSlotCommand addSlot3 \u003d new AddSlotCommand(\"add cg2271 lecture wed 09:00 11:00 \");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            addSlot3.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            AddSlotCommand addSlot4 \u003d new AddSlotCommand(\"add laj1201 tutorial_2 thu 08:00 10:00 \");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            addSlot4.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            AddSlotCommand addSlot5 \u003d new AddSlotCommand(\"add cg2271 lab fri 08:00 10:00 \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            addSlot5.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 150
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/slot/SlotListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class SlotListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    void testAddSlot() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        LocalTime startTime \u003d LocalTime.parse(\"12:00\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        LocalTime endTime \u003d LocalTime.parse(\"14:00\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String day \u003d \"mon\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String title \u003d \"CS2101\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        Slot slot \u003d new Slot(startTime, endTime, day, title);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.addSlot(slot);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        assertEquals(slot, slots.getSlot(0));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    void testDeleteSlot() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        Slot slot0 \u003d new Slot(LocalTime.parse(\"16:00\"), LocalTime.parse(\"18:00\"), \"fri\", \"CS2113T\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        Slot slot1 \u003d new Slot(LocalTime.parse(\"14:00\"), LocalTime.parse(\"15:00\"), \"mon\", \"CG2028\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        Slot slot2 \u003d new Slot(LocalTime.parse(\"10:00\"), LocalTime.parse(\"12:00\"), \"tue\", \"CS2101\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.addSlot(slot0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.addSlot(slot1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.addSlot(slot2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.deleteSlot(slots.getSlot(1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        assertEquals(slot2, slots.getSlot(1));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.deleteSlot(slots.getSlot(0));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        assertEquals(slot2, slots.getSlot(0));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    void testGetSize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        Slot slot0 \u003d new Slot(LocalTime.parse(\"16:00\"), LocalTime.parse(\"18:00\"), \"fri\", \"CS2113T\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        Slot slot1 \u003d new Slot(LocalTime.parse(\"14:00\"), LocalTime.parse(\"15:00\"), \"mon\", \"CG2028\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.addSlot(slot0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.addSlot(slot1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        assertEquals(2, slots.getSize());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    void testGetSlot() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        Slot slot0 \u003d new Slot(LocalTime.parse(\"16:00\"), LocalTime.parse(\"18:00\"), \"fri\", \"CS2113T\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        Slot slot1 \u003d new Slot(LocalTime.parse(\"14:00\"), LocalTime.parse(\"15:00\"), \"mon\", \"CG2028\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.addSlot(slot0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.addSlot(slot1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        assertEquals(slot0, slots.getSlot(0));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        assertEquals(slot1, slots.getSlot(1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    void testGetSlotList() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        Slot slot0 \u003d new Slot(LocalTime.parse(\"16:00\"), LocalTime.parse(\"18:00\"), \"fri\", \"CS2113T\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        Slot slot1 \u003d new Slot(LocalTime.parse(\"14:00\"), LocalTime.parse(\"15:00\"), \"mon\", \"CG2028\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.addSlot(slot0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.addSlot(slot1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        ArrayList\u003cSlot\u003e slot \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slot.add(slot0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slot.add(slot1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        assertEquals(slot, slots.getSlotList());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 73
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/slot/SlotTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class SlotTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    Slot slotTest \u003d new Slot(LocalTime.parse(\"10:00\"), LocalTime.parse(\"11:00\"), \"mon\", \"tutorial\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getDay_oneTimeSlot_returnsDay() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(\"mon\", slotTest.getDay());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void match_validDetails_returnsTrue() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(true, slotTest.match(\"tutorial\", \"mon\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                LocalTime.parse(\"10:00\"), LocalTime.parse(\"11:00\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void match_invalidDetails_returnsFalse() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(false, slotTest.match(\"lecture\", \"mon\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                LocalTime.parse(\"10:00\"), LocalTime.parse(\"11:00\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getBookmark() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getBookmarkList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(new ArrayList\u003cBookmark\u003e(), slotTest.getBookmarkList().getBookmarks());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void removeBookmark() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void removeAllBookmarks() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void addBookmark() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void setStartTime() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getStartTime() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void setEndTime() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getEndTime() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void setDay() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getDay() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void setTitle() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getTitle() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(\"tutorial\", slotTest.getTitle());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getExport() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(\"10:00 | 11:00 | mon | tutorial\", slotTest.getExport());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void initSlot() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(slotTest.toString(), Slot.initSlot(\"10:00 | 11:00 | mon | tutorial\").toString());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(\"10:00-11:00 tutorial\", slotTest.toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "TYS0n1": 99
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "mode bookmark"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "show"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add description www.bookmark.com"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "show"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add description2 www.bookmark2.com"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "show"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "show"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "mode timetable"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add laj1201 tutorial_1 mon 08:00 10:00"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add geh1034 lecture mon 14:00 16:00"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add laj1201 lecture tue 14:00 16:00"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cs2101 tutorial_1 tue 10:00 12:00"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cg2271 lecture wed 09:00 11:00"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cs2113t tutorial wed 11:00 12:00"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add laj1201 tutorial_2 thu 08:00 10:00"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cg2271 tutorial thu 11:00 12:00"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cg2271 lab fri 08:00 10:00"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cs2101 tutorial_2 fri 10:00 12:00"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cs2113t lecture fri 16:00 18:00"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add 1111"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 16,
      "TYS0n1": 8
    }
  }
]
