[
  {
    "path": "data/data.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "kjwhen | hwlen | www.google.com"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " | wjkehn | www.google.com"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "wke | wee | www.yahoo.com"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 3
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jusuf Nathanael | [Github](https://github.com/jusufnathanael) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "![](https://i.imgur.com/M9W68d1.jpg) | Zhan Hao | [Github](https://github.com/Speedweener/tp) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Yu Shing | [TYS0n1](https://github.com/TYS0n1) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tey Xing Rong | [xingrong123](https://github.com/xingrong123) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Francisco Chensan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "TYS0n1": 2,
      "jusufnathanael": 1,
      "fchensan": 1,
      "Speedweener": 1,
      "-": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new Duke instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Pass the filepath of the txt file to set up storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param filePath The filepath of the txt file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            bookmarks \u003d new BookmarkList(storage.load());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        //try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        //    load timetable here"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        //    if use another text file to save timetable, then pass another filepath to Duke constructor"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        //    and create another Storage object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        //} catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        //}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method is used run the Duke program."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.showWelcomeScreen();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                c.execute(bookmarks, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } while (!isExit);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        new Duke(\"./data/data.txt\").run();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 24,
      "Speedweener": 29,
      "-": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.DeleteBookmarkCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.LaunchBookmarkCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.AddBookmarkCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * This class deals with making sense of the user command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Creates and returns the command based on user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param input full user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException If input command is unknown."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Command command \u003d createCommand(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static Command createCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (input.compareToIgnoreCase(ExitCommand.BYE_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(ListCommand.LIST_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (input.startsWith(DeleteBookmarkCommand.DEL_KW)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            command \u003d new DeleteBookmarkCommand(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (input.startsWith(AddBookmarkCommand.ADD_KW)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            command \u003d new AddBookmarkCommand(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (input.startsWith(LaunchBookmarkCommand.LAUNCH_KW)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            command \u003d new LaunchBookmarkCommand(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 34,
      "Speedweener": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new Storage instance by storing the given pathname of the file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param filePath The pathname of the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.filePath \u003d filePath.replace(\u0027/\u0027, File.separatorChar);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the tasks found within the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return Tasks found in the file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException If file is not found."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e data;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            data \u003d getData(f);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.ERROR_LOADING_FILE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private ArrayList\u003cString\u003e getData(File f) throws FileNotFoundException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ArrayList\u003cString\u003e bookmarks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            bookmarks.add(s.nextLine());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmarks;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * This method creates the file if it does not exist and saves tasks data in the file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param data The string of all the data to be saved in the file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException If there is an error writing to the file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void save(String data) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            createDirectory();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            writeToFile(data);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.WRITE_FILE_ERROR);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void createDirectory() throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String dirPath \u003d getDirectory(filePath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Path path \u003d Paths.get(dirPath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Files.createDirectories(path);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getDirectory(String path) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String dirPath;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (path.contains(File.separator)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            dirPath \u003d path.substring(0, path.lastIndexOf(File.separator));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            dirPath \u003d path;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return dirPath;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 75,
      "Speedweener": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents the user interface on the command line and deals with interactions with the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final String LINE \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new Ui instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns a string of the user input in the command line."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the string of user input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.print(\"Input: \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        System.out.println(LINE"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + message"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + LINE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints a message after starting the program."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showWelcomeScreen() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String message \u003d \"Hello from\\n\" + logo;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        print(message);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints a message before exiting the program."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showExitScreen() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String message \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        print(message);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints the error message if data file is not found."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String message \u003d \"Data file not found\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        print(message);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method detects the type of dukeException error and prints the corresponding error message."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param dukeException The dukeException error."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showErrorMessage(DukeException dukeException) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        switch (dukeException.getError()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case FULL_TASK_LIST:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            //printFullTaskListMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case UNKNOWN_INPUT:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printUnknownInputMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case INVALID_BOOKMARK_NUMBER:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            //printUseValidTaskNumberMessage();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case WRITE_FILE_ERROR:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            //printErrorWritingToFile();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printEmptyBookmarkDescriptionMessage();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case ERROR_LAUNCHING_URL:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printErrorLaunchUrlMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case INVALID_BOOKMARK_INPUT:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printInvalidBookmarkInputMessage();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case INVALID_URL:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printInvalidUrl();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            // unable to get dukeExceptionType"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printErrorLaunchUrlMessage() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        print(\"Error launching url\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printInvalidUrl() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        print(\"Invalid url\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printInvalidBookmarkInputMessage() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        print(\"Invalid bookmark input\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printEmptyBookmarkDescriptionMessage() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        print(\"Empty description\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private void printUnknownInputMessage() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        print(\"Unknown input\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 105,
      "Speedweener": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/bookmark/Bookmark.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.command.AddBookmarkCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " * This class represents a bookmark of a URL of a webpage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " * It stores the URL and a description of the webpage."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " * It also contains a method which can extract the URL and description from a given string in a certain format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class Bookmark {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String module;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String url;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final String SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Constructs a bookmark object containing a URL and description of the webpage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param url The URL of the webpage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param description The description of the webpage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Bookmark(String module, String description, String url) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.module \u003d module.trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.url \u003d url.trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Returns the topic, URL and description that can be detected from the given input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param input the string input by the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @return a list of strings containing the topic, URL and the description"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static List\u003cString\u003e extractModuleDescriptionAndUrl(String input) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        input \u003d input.substring(AddBookmarkCommand.ADD_KW.length()).trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e moduleDescriptionUrl \u003d new ArrayList\u003c\u003e(Arrays.asList(input.split(\" \", 3)));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (moduleDescriptionUrl.size() \u003d\u003d 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            moduleDescriptionUrl.add(0, \"\");  // No entry for module"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (moduleDescriptionUrl.size() !\u003d 3) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_BOOKMARK_INPUT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (moduleDescriptionUrl.get(1).isBlank() || moduleDescriptionUrl.get(2).isBlank()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!isUrlValid(moduleDescriptionUrl.get(2))) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_URL);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return moduleDescriptionUrl;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static Boolean isUrlValid(String url) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        boolean isValid \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (url.startsWith(\"www.\") || url.startsWith(\"https://\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            isValid \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return isValid;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * This method opens a web browser and open the URL of the bookmark."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void launch() throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            launchUrl();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.ERROR_LAUNCHING_URL);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void launchUrl() throws IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Runtime rt \u003d Runtime.getRuntime();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String os \u003d System.getProperty(\"os.name\").toLowerCase();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (os.contains(\"win\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            launchUrlForWindows(rt);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (os.contains(\"mac\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            launchUrlForMac(rt);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (os.contains(\"nix\") || os.contains(\"nux\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            launchUrlForLinux(rt);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void launchUrlForWindows(Runtime rt) throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        rt.exec(\"rundll32 url.dll,FileProtocolHandler \" + url);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void launchUrlForMac(Runtime rt) throws IOException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        rt.exec(\"open \" + url);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void launchUrlForLinux(Runtime rt) throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String[] browsers \u003d {\"epiphany\", \"firefox\", \"mozilla\", \"konqueror\", \"netscape\", \"opera\", \"links\", \"lynx\"};"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String cmd \u003d \"\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (int i \u003d 0; i \u003c browsers.length; i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            cmd \u003d (i \u003d\u003d 0 ? \"\" : \" || \") + browsers[i] + \" \\\"\" + url + \"\\\" \";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        rt.exec(new String[] {\"sh\", \"-c\", cmd});"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Returns the URL of the bookmark."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @return a string of the URL."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getUrl() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return url;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Returns the description of the bookmark."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @return a string of the description of the bookmark."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getModule() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getBookmarkAsString() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return  (\"[\" + module + \"] \" + description + \" \" +  url + System.lineSeparator());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getExport() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return module + SEPARATOR + description + SEPARATOR + url;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static Bookmark initBookmark(String data) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        List\u003cString\u003e details \u003d  Arrays.asList(data.split(\"\\\\|\"));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String module \u003d details.get(0).trim();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String description \u003d details.get(1).trim();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String url \u003d details.get(2).trim();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(module, description, url);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmark;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 49,
      "Speedweener": 97
    }
  },
  {
    "path": "src/main/java/seedu/duke/bookmark/BookmarkList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * This class represents the bookmark list used to store and organize bookmarks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class BookmarkList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private ArrayList\u003cBookmark\u003e bookmarks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a BookmarkList object with an empty ArrayList to store Bookmark objects."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public BookmarkList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.bookmarks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs the BookmarkList object containing an ArrayList to store Bookmark objects."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This constructor is used when loading bookmarks from a text file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmarkStrings the list of strings of bookmarks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public BookmarkList(ArrayList\u003cString\u003e bookmarkStrings) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.bookmarks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        loadBookmarkList(bookmarkStrings);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private void loadBookmarkList(ArrayList\u003cString\u003e bookmarks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (String line : bookmarks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            loadBookmark(line);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method adds the given bookmark object to the bookmark list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmark the bookmark to be added to the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void addBookmark(Bookmark bookmark)  {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarks.add(bookmark);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void loadBookmark(String line) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            bookmarks.add(Bookmark.initBookmark(line));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            // Invalid task data, skips to the next entry"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the the data of all bookmarks in the list to be saved in the text file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the data of all the bookmarks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (Bookmark bookmark : bookmarks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            data.append(bookmark.getExport()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return data.toString().trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the number of bookmarks in the list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the size of the bookmark list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmarks.size();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns bookmark based on the index."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param index The index of the bookmark in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The bookmark with the corresponding index in the list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Bookmark getBookmark(int index) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmarks.get(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the bookmark list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The bookmark list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public ArrayList\u003cBookmark\u003e getBookmarkList() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmarks;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method deletes the bookmark from the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmark The bookmark to be deleted."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void deleteBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarks.remove(bookmark);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 32,
      "Speedweener": 69
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " * Represents the user command exit the Duke program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class AddBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String ADD_KW \u003d \"add\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String module;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String url;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new AddBookmarkCommand instance and stores the information of the bookmark given by the input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException thrown if input command is invalid."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public AddBookmarkCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e descAndAt \u003d Bookmark.extractModuleDescriptionAndUrl(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        module \u003d descAndAt.get(0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        description \u003d descAndAt.get(1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        url \u003d descAndAt.get(2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Adds the bookmark to the bookmark list and saves the bookmarks list in the text file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param storage The storage for saving and loading."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(BookmarkList bookmarks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(module, description, url);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.print(\"Added bookmark: \" + \"[\" + module + \"] \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + description + \" \" +  url + System.lineSeparator());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            storage.save(bookmarks.getData());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 7,
      "Speedweener": 45
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected boolean isExitCommand \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Execution of command depends on which command subclass the command belongs to."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public abstract void execute(BookmarkList bookmarks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns true if the command is an ExitCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return isExitCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 20,
      "Speedweener": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class DeleteBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String DEL_KW \u003d \"delete\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new DeleteBookmarkCommand instance and stores the information of the bookmark given by the input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException thrown if input command is invalid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public DeleteBookmarkCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String details \u003d command.substring(DEL_KW.length());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            index \u003d Integer.parseInt(details.trim()) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (NullPointerException | NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_BOOKMARK_NUMBER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Deletes the bookmark in the bookmark list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param storage The storage for saving and loading."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(BookmarkList bookmarks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            Bookmark bookmark \u003d bookmarks.getBookmark(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            bookmarks.deleteBookmark(bookmarks.getBookmark(index));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            ui.print(getMessage(bookmark));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            //storage.save(taskList.getData());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_BOOKMARK_NUMBER);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String getMessage(Bookmark bookmark) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tI\u0027ve deleted this bookmark!:\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + \"\\t  [\" + bookmark.getModule() + \"] \" + bookmark.getDescription() + \" \" + bookmark.getUrl() + \"\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 9,
      "Speedweener": 49
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents the user command exit the Duke program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String BYE_KW \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new ExitCommand instance and sets isExitCommand to true."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        isExitCommand \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints the exit screen before the program exits."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param storage The storage for saving and loading."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(BookmarkList bookmarks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.showExitScreen();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 25,
      "Speedweener": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/LaunchBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class LaunchBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String LAUNCH_KW \u003d \"launch\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new LaunchBookmarkCommand instance and and gets the index of the bookmark to launch."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public LaunchBookmarkCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String details \u003d command.substring(LAUNCH_KW.length());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            index \u003d Integer.parseInt(details.trim()) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (NullPointerException | NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_BOOKMARK_NUMBER);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * launches the bookmark."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param storage The storage for saving and loading."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(BookmarkList bookmarks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            Bookmark bookmark \u003d bookmarks.getBookmark(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            bookmark.launch();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            ui.print(getMessage(bookmark));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            //storage.save(taskList.getData());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_BOOKMARK_NUMBER);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String getMessage(Bookmark bookmark) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String message \u003d \"\\tNice! I\u0027ve launched this bookmark!:\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + \"\\t  [\" + bookmark.getModule() + \"] \" + bookmark.getDescription() + \" \" + bookmark.getUrl() + \"\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 5,
      "Speedweener": 50
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String LIST_KW \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Constructs a new ListCommand instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String getMessage(BookmarkList bookmarks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String message \u003d \"\\tHere are the bookmarks in your list:\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c bookmarks.getSize(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            message \u003d message + \"\\t\" + (i + 1) + \".\" + bookmarks.getBookmark(i).getBookmarkAsString() + \"\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(BookmarkList bookmarks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String message \u003d getMessage(bookmarks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "Speedweener": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * The class DukeException is a subclass of Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * It is thrown when an error specific to Duke occurs."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private DukeExceptionType dukeExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new DukeException instance by storing the given DukeExceptionType."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param dukeExceptionType The type of dukeException."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public DukeException(DukeExceptionType dukeExceptionType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.dukeExceptionType \u003d dukeExceptionType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the dukeExceptionType of the dukeException."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the dukeExceptionType."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public DukeExceptionType getError() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return dukeExceptionType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeExceptionType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Enumeration of all the types of DukeException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public enum DukeExceptionType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    EMPTY_DESCRIPTION,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_TASK_FORMAT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    FULL_TASK_LIST,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    UNKNOWN_INPUT,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_BOOKMARK_NUMBER,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    WRITE_FILE_ERROR,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    ERROR_LOADING_FILE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    ERROR_LAUNCHING_URL,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_URL,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_BOOKMARK_INPUT"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/slot/Slot.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package seedu.duke.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class Slot {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String MON \u003d \"Monday\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String TUE \u003d \"Tuesday\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String WED \u003d \"Wednesda]y\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String THU \u003d \"Thursday\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String FRI \u003d \"Friday\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String SAT \u003d \"Saturday\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String SUN \u003d \"Sunday\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String[] days \u003d { MON, TUE, WED, THU, FRI, SAT, SUN };"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Slot(LocalTime startTimeInput, LocalTime endTimeInput, String dayInput, String titleInput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        startTime \u003d startTimeInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        endTime \u003d endTimeInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        day \u003d dayInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        title \u003d titleInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void setStartTime(LocalTime timeInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        startTime \u003d timeInput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public LocalTime getStartTime() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void setEndTime(LocalTime timeInput) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        endTime \u003d timeInput;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public LocalTime getEndTime() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void setTitle(String titleInput) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        title \u003d titleInput;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void setDay(String dayInput) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        day \u003d dayInput;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public String getDay() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static void printSlotsInADay(ArrayList\u003cSlot\u003e slots, String day) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        for (Slot s: slots) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            if (s.getDay().equals(day)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                System.out.println(s);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static void printTimetable(ArrayList\u003cSlot\u003e slots) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        for (String d: days) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(d);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            printSlotsInADay(slots, d);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return String.format(startTime.toString() + \"-\" + endTime.toString() + \" \" + title);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 82
    }
  },
  {
    "path": "src/test/java/seedu/duke/bookmark/BookmarkListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "class BookmarkListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void addBookmark() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        // test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getData() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getSize() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getBookmark() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getBookmarkList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void deleteBookmark() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 34
    }
  },
  {
    "path": "src/test/java/seedu/duke/bookmark/BookmarkTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.duke.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "class BookmarkTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void extractModuleDescriptionAndUrl_missingModule_returnsDescAndUrl() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e expectedUrlAndDescription \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        expectedUrlAndDescription.add(\"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        expectedUrlAndDescription.add(\"tutorial\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        expectedUrlAndDescription.add(\"www.google.com\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String input \u003d \"add tutorial www.google.com\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(expectedUrlAndDescription, Bookmark.extractModuleDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void extractModuleDescriptionAndUrl_insertModuleDescAndUrl_returnsModuleDescAndUrl() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e expectedUrlAndDescription \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        expectedUrlAndDescription.add(\"\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        expectedUrlAndDescription.add(\"tutorial\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        expectedUrlAndDescription.add(\"www.google.com\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String input \u003d \"add tutorial www.google.com\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(expectedUrlAndDescription, Bookmark.extractModuleDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void extractModuleDescriptionAndUrl_missingDescription_throwsDukeException() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String input \u003d \"add CS2113T  www.google.com\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        DukeException e \u003d assertThrows(DukeException.class, () -\u003e Bookmark.extractModuleDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(DukeExceptionType.EMPTY_DESCRIPTION, e.getError());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void extractModuleDescriptionAndUrl_invalidUrl_throwsDukeException() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String input \u003d \"add CS2113T google.com\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        DukeException e \u003d assertThrows(DukeException.class, () -\u003e Bookmark.extractModuleDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(DukeExceptionType.INVALID_URL, e.getError());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getUrl_validModuleDescriptionAndUrl_returnsUrl() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String module \u003d \"CS2113T\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(module, description, url);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(url, bookmark.getUrl());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getDescription_validModuleDescriptionAndUrl_returnsDescription() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String module \u003d \"CS2113T\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(module, description, url);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(description, bookmark.getDescription());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void initBookmark_validDataString_bookmark() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String data \u003d \"CS2113T | tutorial | www.google.com\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String module \u003d \"CS2113T\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d \"tutorial\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark expectedBookmark \u003d new Bookmark(module, description, url);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(expectedBookmark.getBookmarkAsString(), Bookmark.initBookmark(data).getBookmarkAsString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 76
    }
  },
  {
    "path": "src/test/java/seedu/duke/slot/SlotTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package seedu.duke.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "class SlotTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    void getDay_oneTimeSlot_returnsDay() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        Slot s \u003d new Slot(LocalTime.parse(\"10:00\"), LocalTime.parse(\"11:00\"), \"Monday\", \"Test\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        assertEquals(s.getDay(), \"Monday\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add CS2113T tutorial www.google.com"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add test delete www.jadfasd.adsfa"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add noModule www.google.com"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add asjdfalj"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add jasdkfl asdjfkla sjdkfla"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add noModule inValidUrl"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add empty  description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 12,
      "Speedweener": 2
    }
  }
]
