[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    implementation(group: \u0027org.fusesource.jansi\u0027, name: \u0027jansi\u0027, version: \u00271.18\u0027)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    implementation(group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    mainClassName \u003d \"seedu.zoomaster.Zoomaster\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    archiveBaseName \u003d \"zoomaster\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 6,
      "-": 44
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cimg src\u003d\"https://github.com/AY2021S1-CS2113T-W11-1/tp/blob/master/docs/team/Jusuf.jpeg\" height\u003d\"250\"\u003e | Jusuf Nathanael | [Github](https://github.com/jusufnathanael) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "![](https://i.imgur.com/M9W68d1.jpg) | Zhan Hao | [Github](https://github.com/Speedweener/tp) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Yu Shing | [TYS0n1](https://github.com/TYS0n1) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tey Xing Rong | [xingrong123](https://github.com/xingrong123) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Francisco Chensan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "TYS0n1": 2,
      "jusufnathanael": 1,
      "fchensan": 1,
      "Speedweener": 1,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "# **Developer Guide**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## **Introduction**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " ![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/zoomwhitebg.png) \u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Introduction to Zoomaster"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Zoomaster is a Java application for the Command Line. It provides a simple and intuitive way to store Zoom links for online classes abd other useful links for the lesson at hand.\u003cbr/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Zoomaster can also intelligently determine the current lesson users are having, allowing them to launch the correct links quickly and elegantly from the command line."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Target audience"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "This developer guide is for experienced programmers with knowledge of object oriented programming."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Purpose"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "This guide seeks to introduce to you the design and implementation of Zoomaster features. It will share our reasoning behind the way we implemented different features and its logic flow. With this, you would be able to tweak and further develop Zoomaster without confusion or introduce unwanted bugs to the App."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Scope"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "First, the guide will help you set up Zoomaster in its current iteration so that you can familiarise with it. \u003cbr/\u003e "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Secondly, the guide will explain the design of Zoomaster and its various components. \u003cbr/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Next, the guide will showcase how we implement various features into Zoomaster with step by step explanations and diagram. \u003cbr/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Finally, the guide has several appendixes explaining the scope of the product, user stories, non-function requirements, glossary and instructions for manual testing."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Navigation"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You can navigate the guide via the table of contents below. \u003cbr/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Otherwise, each major section is distinguished by a bold header and underline. Sub-sections are of a smaller font than major sections but still larger than normal paragraphs to distingush them."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Table of contents"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Getting Started](#getting-started)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Design](#design)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Architecture](#architecture)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Initialization](#initialization)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [UI component](#ui-component)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Parser component](#parser)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Commands component](#command)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Temporary list component](#temp-list)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Storage component](#storage-component)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Local files component](#local-files)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Exceptions component](#exceptions)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Implementation](#implementation)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Bookmark and Timetable modes feature](#mode)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Show timetable feature](#show-timetable)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Add Module and Slot featurea](#add-module-slot)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Appendix A: Product Scope](#appendix-a)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Appendix B: User Stories](#appendix-b)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Appendix C: Non-Functional Requirements](#appendix-c)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Appendix D: Glossary](#appendix-d)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Appendix E: Instructions for manual testing](#appendix-e)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Launch and shutdown](#command-summary)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"getting-started\"\u003e\u003c/a\u003ea\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## **Getting Started**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "First, download the source cod and jar file of Zoomaster [here](https://github.com/AY2021S1-CS2113T-W11-1/tp/releases)."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Next, follow the startup procedures as stated in the [User Guide](https://github.com/AY2021S1-CS2113T-W11-1/tp/blob/master/docs/UserGuide.md) and familiarise yourself with Zoomaster\u0027s features."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Now, you can dive into the source code and explore the inner workings of Zoomaster with this guide."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"design\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## **Design**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "This section explains the design behind Zoomaster by first sharing the grand architecture of the code then it\u0027s various components."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"architecture\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Architecture"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The figure below shows a high-level design for the architecture of Zoomaster. "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/archiveture2-01.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*\u003ccenter/\u003e Figure 1.1 Architecture diagram of Zoomaster \u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Our Program can be split up into 8 components"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Initialization"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* User Interface"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Parser"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Commands"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Temp Lists"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Storage"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Local Files"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Exceptions"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "These components interact with each other as shown in Figure 1.1 to execute the functionalities of Zoomaster."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"initialization\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Initialization"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The diagram below shows a class-level diagram for Zoomaster. \u003cbr/\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/initial.png)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*\u003ccenter/\u003e Figure 1.2 Class diagram of Initialization \u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**API**:`Zoomaster.java`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The Initialization component is responsive for setting up Zoomaster for it to be used by users. "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "It consists of `Zoomaster`, `Ui`, `Storage`, `BookmarkList`, `Timetable` and `Module` classes."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Its main roles are:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Retrieving bookmark, timetable and planner lists from storage if it exists."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Set the list of Modules for Zoomaster "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Initializes the User Interface object, as well as the 3 Storage  objects for `BookmarkList`, `Timetable` and `Planner`."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"ui-component\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### User Interface component"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](images/UiClassDiagram.png)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*\u003ccenter/\u003e Figure 1.3 Class diagram of User Interface \u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**API**:`Ui.java`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The UI component is responsible for all visual output to the User from the app. "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The only class carrying out the component\u0027s function is the `Ui` class."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "It utilises the `Jansi` library to enable the usage of ANSI escape codes to format the console, allowing the app to output in colour. \u003cbr/\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The UI also receives input from the User using a `Scanner` object. It returns the input as a String to the main function. \u003cbr/\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "In addition, the UI contains the different exception and error messages which can be displayed. When a particular exception is thrown (eg. **UNKNOWN_INPUT**), the corresponding function is called in UI to print out the error message (**printUnknownInputMessage()**). "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Its main roles are:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Receiving user commands and returning it to the Main function."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Prints visual output in the console for the User"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"parser\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Parser component"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://github.com/TYS0n1/tp/blob/master/docs/diagrams/parser%20class%20diagram.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*\u003ccenter/\u003e Figure 1.4 Class diagram of Parser \u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The Parser component is responsible for decoding the user\u0027s input and telling the Main function which command to execute."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "It also contains the **programMode** which indicates which mode the program currently is in."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "It initializes the different commands according to which mode the program currently is in."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "It consists of `Parser` and the Command interface classes."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Its main roles are:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Decoding users commands and returning the correct command to the Main function to be executed"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Catch errors in users commands and return the appropriate exception to the Main function"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Storing the mode Zoomaster is in (Bookmark/Timetable/Planner)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The interaction of the Parser component with the Command component is covered in greater detail below. "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"command\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Commands component"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Figures 1.3 to 1.6 below show the class-level diagrams for Parser and Command for each different mode. \u003cbr/\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The diagrams are colour coded as such:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Orange -\u003e Global"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Green -\u003e Bookmark Mode"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Blue -\u003e Timetable Mode"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Red -\u003e Planner Mode"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/mode1.png)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*\u003ccenter/\u003e Figure 1.3 Class diagram of Commands valid in all modes (Global) \u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/mode2.png)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*\u003ccenter/\u003e Figure 1.4 Class diagram of Commands valid in Bookmark Mode \u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/mode3.png)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*\u003ccenter/\u003e Figure 1.5 Class diagram of Commands valid in Timetable Mode\u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/mode4.png)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*\u003ccenter/\u003e Figure 1.6 Class diagram of Commands valid in Planner Mode\u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The Command component is responsible for carrying out the functions of Zoomaster."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Usually, a successful command will return a message to indicate a successful execution or updates to Zoomaster. Otherwide it will create error messages for the Ui to display to the users."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "It consists of `ChangeModeCommand`, `ClearCommand`,  `ExitCommand`,  `HelpCommand`,   `LaunchNowCommand`, `AddBookmarkCommand`,   `DeleteBookmarkCommand`,  `FindBookmarkCommand`,  `LaunchBookmarkCommand`, `ShowBookmarkCommand`, `AddTimetableCommand`, `DeleteTimetableCommand`, `ShowTimetableCommand`, `EditTimetableCommand`, `LaunchTimetableCommand`, `AddMeetingCommand`, `LoadPlannerCommand` and `SavePlannerCommand` classes."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Its main roles are:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Executing commands to carry out functionalities of Zoomaster"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Signal to Ui successful execution of commands"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Create messages for Ui on updates to Zoomaster"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Catch errors or conflicts in users commands and return the appropriate exception to the Main function"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"temp-list\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Temp List component"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The Temp List component is responsible for holding on to temporary data of Zoomaster to be used by Commands."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "It consists of `BookmarkList`, `SlotList`, `Module` and `Timetable`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Its main role is:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Hold on to temporary data about Zoomaster"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"storage\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Storage component"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The Storage component is responsible for saving and retrieving Zoomaster data to and from an external text file."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "It uses `Gson` library to encode temporary data from Temp List into a HTML format. Then it writes the encoded data to an external text file. On the other hand, it decodes the HTML format from the external text file and update the Temp List of Zoomaster"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The only class carrying out the component\u0027s function is the `Storage` class."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Its main roles are:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Store Zoomaster data to an external text file for long term storage"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Retrieve Zoomaster data on Initialization"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Return error messages to the users during extraction or writing"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"local-files\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Local Files component"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The Local Files component is where Zoomaster\u0027s long term storage of data is kept"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Its main role is:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Store Zoomaster data"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"exceptions\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Exceptions component"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The Exceptions component is responsible for responding to the different errors different components of Zoomaster sends back to the Main function."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "It extends the `Exception` class and uses it to catch unique exceptions thrown by different components of Zoomaster."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "It consists of  `ZoomasterException` and `ZoomasterExceptionType` classes."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Its main role is:"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Create unique exceptions thrown by different components to signal the Main function what error has occured"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## **Implementation**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "This section explains the implementations of Zoomaster features. It goes through the step-by-step proccess, expected outcomes of each feature and the design considerations."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"mode\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Bookmark, Timetable and Planner modes feature (TYS)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Zoomaster has three modes for users to interact in. First, bookmark mode has the list of bookmarks with links to online resources. "
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Secondly, timetable mode has a list of timetable slots. Lastly, planner mode which helps users plan their timetable. "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "To simplify input commands for users, all lists has the same keywords for adding, deleting, and showing items in the lists. "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Hence by having seperating both list into different modes allows both lists to access the same keywords without causing conflicts when parsing commands."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### Implementation"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "This feature extends Command class with a way to toggle between different modes of Zoomaster. The integer variable used to control the modes is stored in the Parser class called \"programMode\". Additionally, it implements the following operation:"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* getModeFromCommand() - Decodes the command sent by the users to figure out which mode the user wants to move to."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Given below is a sequential diagram of how changing between modes occur."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/ChangeModeCommand%20seq%20dia.png?raw\u003dtrue) \u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*\u003ccenter/\u003eFigure 2.1 Sequential diagram for ChangeModeCommand\u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. When Zoomaster gets a command from the user to change modes, a new ChangeModeCommand object is created."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "2. The ChangeModeCommand passes the command through getModeFromCommand() function to decode the mode the user wishes to change to."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "3. Zoomaster now executes the command and changes to the respective mode. "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "4. If an invalid mode was given by the user or if the input field was empty, the execute function throws an exception and tells the user valid modes for Zoomaster."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://github.com/TYS0n1/tp/blob/master/docs/diagrams/activity%20diagram%20change%20mode%20command.png?raw\u003dtrue) "
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*\u003ccenter/\u003e Figure 2.2 Activity diagram for ChangeModeCommand \u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### Design consideration:"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "##### Aspect: How to store programMode variable for security"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* **Alternative 1 (Current choice):** No security"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * Pros: Easy to implement"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * Cons: May introduce errors to the App if the variable is changed outside of ChangeModeCommand class objects."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* **Alternative 2:** Private variable and implement mode changing inside Parser class"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * Pros: Ensure the App does not change modes outside commands to change modes."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * Cons: Reduces OOP standard of code by decoupling ChangeModeCommand from Command class and increases code complexity."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"show-timetable\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Show timetable feature (Tan Yu Shing)"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Users can see the timetable they have created in the App using the **show** command. The can see complete timetable from monday to sunday, the timetable of a specified day of the week or the timetable today. The commands for these are **show**, **show {DAY}** eg. **show mon**, **show tue** and **show today**. "
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### Implementation"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "This feature extends the command class. It is a simple retrieval algorithm which firstly gets data from the Timetable class. Then sorts it by timing and add additional indicators for the users. And finally, prints it our using the User Interface. \u003c/br\u003e It uses SlotContainer class sortSlotsByTime method to help sort the list of lessons and it\u0027s module code by timing. \u003c/br\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* getMessageSlotsInADay(List\u003cModule\u003e **modules**, List\u003cSlot\u003e **slots**, String **day**) - Retreives all the lesson **slots** and it\u0027s respective **module** code on the **day** specified. It then sorts the lessons by timing and returns it as a **message string**. \u003c/br\u003e If valid, additional formatting such as current lesson indicator or current time indicator is added to the **message string**."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* getMessageTimetable(List\u003cModule\u003e **modules**, List\u003cSlot\u003e **slots**) - Retreives all the lesson **slots** and it\u0027s respective **module** code for the whole week. It then sorts the lessons by timing and returns it as a **message string**.  \u003c/br\u003e If valid, additional formatting such as current lesson indicator or current time indicator is added to the **message string**."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* getMessageLessonAtTime(List\u003cModule\u003e **modules**, List\u003cSlot\u003e **slots**, String **dayInput**) - Decodes the mode the user wants the timetable to be printed out in using **dayInput**. \u003c/br\u003e Then calls the appropriate methods such as getMessageSlotsInADay and getMessageTimetable to get the **message string** which is then returned to the execute function to be printed out by the User Interface. If the the timetable is empty or an invalid **dayInput** is given, an **exception** is thrown to tell users their mistake."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* hasLessonNow(Slot **slot**) - Checks if a **slot** timing is overlapping with the current system time. Returns a **boolean** true or false based on the check."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* getIndicatorMessage() - Returns a **String** containing a indicator with the current system time."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* getHighlighBoxUpperMessage() - Returns a **String** containing a indicator with a message \"lesson now\"."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* getHighlighBoxLowerMessage() - Returns a **String** containing a indicator."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Given below is a sequential diagram of how printing the timetable occurs."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://github.com/TYS0n1/tp/blob/master/docs/diagrams/ShowTimetableCommand%20seq%20dia.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*\u003ccenter/\u003eFigure 2.3 Sequential diagram for ShowTimetableCommand\u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. When Zoomaster gets a command from the user to show the timetable, a new ShowTimetableCommand object is created."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "2. The ShowTimetableCommand passes the command through getModeFromCommand() function to decode the mode the user wishes to view the timetable in."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "3. If an invalid input day is entered by the user, the input day will be set as **null**."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "4. Zoomaster now executes the command and displays the timetable in the requested mode. "
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "5. If the input day is **null**, no timetable will be printed out. Instead, the program checks for does checks for Show Lesson Bookmarks feature."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://github.com/TYS0n1/tp/blob/master/docs/diagrams/activity%20diagram%20show%20timetable%20command.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*\u003ccenter/\u003eFigure 2.4 Activity diagram for ShowTimetableCommand\u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### Design consideration:"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "##### \u003cAspect: How to store programMode variable for security\u003e"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"add-module-slot\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Add Module and Slot feature (Xing Rong)"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "This feature allows the user to add modules and lesson slots into the timetable."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Users can also add bookmarks to specific modules and slots."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Users can enter one-shot-commands, adding multiple slots and bookmarks to a module."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Given below is a sequence diagram of how the feature works."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://github.com/AY2021S1-CS2113T-W11-1/tp/blob/master/docs/diagrams/addSlotSequenceDiagram.png?raw\u003dtrue)  "
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "![](https://github.com/AY2021S1-CS2113T-W11-1/tp/blob/master/docs/diagrams/addSlotSequenceDiagram2.png?raw\u003dtrue)  "
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "![](https://github.com/AY2021S1-CS2113T-W11-1/tp/blob/master/docs/diagrams/addSlotSequenceDiagram3.png?raw\u003dtrue)  "
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "![](https://github.com/AY2021S1-CS2113T-W11-1/tp/blob/master/docs/diagrams/addSlotSequenceDiagram4.png?raw\u003dtrue)  "
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "![](https://github.com/AY2021S1-CS2113T-W11-1/tp/blob/master/docs/diagrams/addSlotSequenceDiagram5.png?raw\u003dtrue)  "
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "![](https://github.com/AY2021S1-CS2113T-W11-1/tp/blob/master/docs/diagrams/addSlotSequenceDiagram6.png?raw\u003dtrue)  "
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "*\u003ccenter/\u003e Figure 2.5 Sequence diagram for AddSlotCommand \u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. After calling execute() method of the AddSlotCommand object, there will be a check on whether the module code entered by the user already exists in the timetable. If it does not exist, then the module will be created."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "2. There will then be a check for additional commands pertaining to the module entered by the user."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "3. The code will then check if the command is to add a module bookmark or a lesson slot, and do so accordingly."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "4. If the command is to add a lesson slot, then there will be check for a bookmark entry in the command. If there is one, then the bookmark will be added to the lesson slot."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "5. Loop to step 3 if there are additional commands which have not been executed."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### Design consideration:"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "##### Aspect: How to enable fast typing users to add modules, slots and related bookmarks faster"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* **Alternative 1 (Current choice):** allow one shot command to add slots and bookmarks to a module"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * Pros: Fast typers can input faster"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * Cons: Difficult to implement"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* **Alternative 2:** separate adding of modules, lesson slots and related bookmarks into different commands"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * Pros: Easy to implement"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * Pros: Lower chance of error"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * Cons: User has to enter multiple commands each at a time to perform the functions, which takes up more time."
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Edit Slot feature (Francisco)"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "This feature allows users to edit a slot\u0027s title or time. Users can also move slots over to another module."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Given below is an example usage scenario and how the edit mechanism works."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. The user enters \"edit title mon 2 new_title\""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "2. A new EditSlotCommand instance is created and the execute() method is called."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "3. The slot corresponding to the day and index given in the user input is retrieved by calling the getSlotByIndexInDay method of the timetable. In this case, the 2nd slot on Monday will be returned."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "4. Based on the chosen field in the user input, different methods are called:"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    a. If the command is \"edit module\", the moveSlotToAnotherModule method in timetable is called to move the slot to a given module."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    b. If the command is \"edit title\", the setTitle method of the retrieved slot is called."
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    c. If the command is \"edit time\", changeSlotTime is called. This method will call setDay(), setStartTime(), and setEndTime() of the retrieved slot."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The sequence diagram below explains how this feature is executed:"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " ![](https://raw.githubusercontent.com/fchensan/tp/docs-images/docs/images/editslotsequence.png)"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*\u003ccenter/\u003e Figure 2.6 Sequence diagram for EditSlotCommand \u003c/center\u003e \u003cbr/\u003e\u003c/br\u003e*"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Planner feature (Jusuf)"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "This feature is an extension of the timetable feature that allows users to find common empty slots from each individual timetable. The users can then add a new meeting, and the app will automatically write the meeting to each timetable."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Below is the general flow on how the mechanism works:"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. The different timetables must first be loaded to the `planner` folder manually."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "2. In the app, the user can enter the `load` command to load all the timetables and initialise the common empty slots."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "3. To view the slots, the user can enter the `show` command with or without the day (optional)."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "4. The user can also call the `add` command to add a new meeting, similar to the timetable feature."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "5. Finally, the user can call the `save` command to store the newly added meeting(s) to each individual timetable."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"appendix-a\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## **Appendix A: Product scope**"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* NUS student"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* has fast typing skills "
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* comfortable with using the command line interface"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Zoomaster was developed during the coronavirus pandemic whereby many NUS classes have been transitioned towards online lessons. NUS lessons are mainly conducted on Zoom video conferencing software. However, as Zoom does not store recurring nor past meetings, it is hard for students to easily access their online lessons. Hence, Zoomaster helps to organise students’ Zoom links for easy access to their lesson."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"appendix-b\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## **Appendix B: User Stories**"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "|v1.0|studious NUS student| bookmark important websites from different modules|launch them easily when needed|"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "|v1.0|NUS student|label my bookmarks|know quickly the topics of each link|"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "|v1.0|busy NUS student|create a timetable within the app which syncs up with the system time|avoid missing my lessons|"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "|v1.0|NUS student|take a look at my modules for the day, or the entire week|plan out my day/week|"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "|v2.0|first time user of Zoomaster|be able to see the list commands available|easily navigate through the Zoomaster|"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "|v2.0|advanced user|be able to launch multiple links at the same time if the links are grouped together|save time by not doing multiple launching commands|"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "|v2.0|advanced user|edit my bookmarks and timetable lists according to changes in my module and timetable|quickly make changes to my lessons|"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "|v2.0|busy user|have an indicator telling me the current time|easily check on the time in a hurry|"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "|v2.0|fast typer|to be able to type a one-shot-command when entering the details of the lessons in my timetable|add the lesson details faster|"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"appendix-c\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## **Appendix C: Non-Functional Requirements**"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. The App should work on any mainstream OS as long as it has Java `11` installed."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "2. A user with above average typing speed should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"appendix-d\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## **Appendix D Glossary**"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Zoom"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e A popular video communication program by a company of the same name"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### UML "
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e Unified Modeling Language, a standard to visualize the design of a system"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### UI"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e User Interface"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    "
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### ANSI "
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e American National Standards Institute, ANSI characters is a popular character set used by programmers"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    "
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### NUS"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e National University of Singapore"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"appendix-e\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## **Appendix E: Instructions for manual testing**"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. Initial launch"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    1. Download the jar file and copy into an empty folder."
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    2. Open the command prompt and change directory to the location of the jar file."
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    3. Enter `java -jar zoomaster.jar` in the command line. You should expect to see the welcome screen of the application."
      }
    ],
    "authorContributionMap": {
      "xingrong123": 11,
      "TYS0n1": 415,
      "-": 27
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "# Zoomaster"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Zoomaster is a Java application for the Command Line. It provides a simple and intuitive way to store Zoom links for online classes abd other useful links for the lesson at hand."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Zoomaster can also intelligently determine the current lesson users are having, allowing them to launch the correct links quickly and elegantly from the command line."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "### Useful links:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 5,
      "-": 5
    }
  },
  {
    "path": "docs/SettingUp.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "title: Setting up and getting started"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## Setting up the project in your computer"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "First, **fork** this repo, and **clone** the fork into your computer."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "If you plan to use Intellij IDEA (highly recommended):"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Verify the setup**:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   1. Run the `seedu.zoomaster.Zoomaster` and try a few commands."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   1. [Run the tests](Testing.md) to ensure they all pass."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## Before writing code"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Configure the coding style**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   \u003c/div\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Set up CI**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Learn the design**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. **Do the tutorials**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   These tutorials will help you get acquainted with the codebase."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   * [Tracing code](tutorials/TracingCode.md)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   * [Removing fields](tutorials/RemovingFields.md)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   * [Adding a new command](tutorials/AddRemark.md)"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 55
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide  "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## 1.0 Introduction  "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Zoomaster is a desktop app for organizing website links, optimized for use via a "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Command Line Interface (CLI) while retaining benefits of a Graphical User Interface (GUI). "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "If you can type fast, Zoomaster can help fetch useful website links for you quicker than the bookmark function on your browser."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## 2.0 Preface"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "This user guide would help you walkthrough the features of Zoomaster and ways to input commands to it to "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "access these features."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## 3.0 Table of contents"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [4.0 Quick Start](#quick-start)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [5.0 Features](#features)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [5.1 Global](#global)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    *  [Show help information:](#help) **help**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    *  [Switch mode:](#mode) **mode**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    *  [Clear:](#clear)  **clear**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    *  [Launch current lesson:](#launchnow)  **launch now**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    *  [Exit:](#exit)  **exit**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [5.2 Bookmark mode](#bookmarkmode)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Show bookmarks:](#showbookmark) **show**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Add bookmark:](#addbookmark)  **add**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Delete bookmark:](#deletebookmark)  **delete**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Find bookmark:](#findbookmark)  **find**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Launch bookmark:](#launchbookmark)  **launch**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [5.3 Timetable mode](#timetablemode)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Show timetable:](#showtimetable) **show**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Show module, slot and bookmarks:](#showmoduledetails) **show**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Add module, slot and bookmark:](#addtimeslot) **add**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Delete module, time slot and bookmarks:](#deletetimeslot)  **delete**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Edit slot\u0027s module, title, time:](#edittimeslot)  **edit**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Launch bookmarks from module, slot:](#launchtimeslot)  **launch**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [5.4 Planner mode](#plannermode)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Load planner:](#loadplanner) **load**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Show planner:](#showplanner) **show**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Add meeting:](#addmeeting) **add**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    * [Save planner:](#saveplanner) **save**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [6.0 FAQ](#faq)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [7.0 Command Summary](#command-summary)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e   "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## 4.0 Quick Start  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed.  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "2. You can download the latest version of `Zoomaster` from [here](https://github.com/AY2021S1-CS2113T-W11-1/tp/releases)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " if you are running a older version."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "3. Now move the **zoomaster.jar** file into your desired home folder for Zoomaster. \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "4. Copy the absolute path of your **zoomaster.jar** file by first highlighting your file, then while"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "holding the \u003ckbd\u003eShift\u003c/kbd\u003e key on your keyboard, right click on that file and select the option \"Copy as path\". "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "5. Afterwards, start Command Prompt by pressing \u003ckbd\u003eWindows\u003c/kbd\u003e + \u003ckbd\u003eR\u003c/kbd\u003e on the keyboard, "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "then type in \"cmd\" and hit the \u003ckbd\u003eEnter\u003c/kbd\u003e key. \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "6. In the Command Prompt, type in \"java -jar\", then paste the absolute path you copied previously in step 4. "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "It should look similar to the picture below:  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/zoomastercommand.png) \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "7. Finally, press \u003ckbd\u003eEnter\u003c/kbd\u003e. You should should see something similar to this Zoomaster logo indicating "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "that you have successfully started your Zoomaster program. \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/startscreen.png)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "8. The app is now ready to go! Go ahead and test it out with a `help` command. "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The app should print out a list of different commands. \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "9. You can now refer to the section below to explore the different features of the Zoomaster app."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## 5.0 Features   "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "This section will explain to you the different features of Zoomaster and how you can interact with it. "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Zoomaster has three different modes you can use to interact with different features in each mode."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"command_format\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e[i] Notes on command format:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* Word contained in `{curly brackets}` are parameters to be supplied by the user. "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eeg. in `delete {BOOKMARK_NUMBER}`, `BOOKMARK_NUMBER` is a parameter which can be used as `delete 1`."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e * Parameters with `/` inside are parameters which accept different types of inputs. "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e eg. `launch {INDEX/DESCRIPTION}` shows that either `INDEX` or `DESCRIPTION` can be used."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* Parameters with `(optional)` are optional inputs. "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eeg. `show {DAY(optional)}` can be used as `show` or as `show mon`."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* Parameter `DAY` takes three letter abbreviations of days in a week"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eThe full list of DAY parameters are **mon, tue, wed, thu, fri, sat, sun**."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYour inputs need not be case sensitive."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eeg. `show {DAY(optional)}` can be used as `show mon`, `show tue` etc."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* Parameter `MODULE` has to be an NUS module recognised by NUSMods. "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou can go to https://nusmods.com/ to get the full list of NUS modules available."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eeg. `CS2113`, `CS2101`  "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* Parameters `START TIME` and `END TIME` requires input to be in the format `HH:mm` and in 24 Hours."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eeg. `12:00`, `14:00`, `00:00`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"global\"\u003e\u003c/a\u003e "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### 5.1 Global Commands"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "These commands can be used by you in every mode of the app."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"help\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.1.1 Show help information: `help` (Yu Shing + Zhan Hao)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You can see the list of commands available in mode you are currently in."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: help {COMMAND(optional)}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eLet\u0027s say you require help to see the commands you can access the main menu mode. "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou will first enter `help` into the console."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/help%20cmd%20main.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eThen you should see the following message to guide you with the relevant commands."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/helpmainmenu.PNG)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eSimilarly, you require help to see the commands you can access in the bookmark mode. "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou will first enter `help` into the console."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/help%20cmd%20bkmrk.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eThen you should see the following message to guide you with the relevant commands."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/helpbookmark.PNG)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eAlternatively, you require help to see the commands you can access in the timetable mode. "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou will first enter `help` into the console."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/help%20cmd%20time.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eThen you should see the following message to guide you with the relevant commands."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/helptimetable.PNG)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eElse, you require help to see the commands you can access in the planner mode. "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou will first enter `help` into the console."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![]()"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eThen you should see the following message to guide you with the relevant commands."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/helpplanner.PNG)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "If you require additional information about a command, you can insert the optional parameter of `{COMMAND}` "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "after `help` show you additional information about the commands and how to format the command properly."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `help add`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `help delete`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eThe following example represents the case if you require help about the `add` command in timetable mode. "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eFirst you type the command `help add`."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/help%20add.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eThen you should see the following message to explain and instruct you on how to use the `add` command in timetable mode"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/help%20add%20msg.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"mode\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.1.2 Switch mode: `mode` (Yu Shing)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You can switches between the “bookmark” and “timetable” modes. Depending on the mode you select the behaviour of the commands below changes. \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "There are three modes for Zoomaster, Bookmark, Timetable and Planner modes."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: mode {bookmark/timetable/planner}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `mode bookmark`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `mode timetable` "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `mode planner`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eHere are some examples of switching from the main menu of Zoomaster to the various modes."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* When you are switching to the bookmark mode you would see the message shown below.\u003cbr/\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/mode%201.png?raw\u003dtrue)\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* When you are switching to the timetable mode you would see the message shown below.\u003cbr/\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/mode%202.png?raw\u003dtrue)\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* When you are switching to the planner mode you would see the message shown below.\u003cbr/\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/mode%203.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"clear\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.1.3 Clear screen: `clear` (Zhan Hao)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "This feature helps you clear the screen in the command prompt. "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "It is useful if the screen gets too cluttered with past commands. \u003cbr\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Note that if your monitor screen has high dimensions, you might need multiple calls of this command to fully"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "clear your screen."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: clear"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"launchnow\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.1.4 Launch bookmarks of current lesson: `launch now` (Xing Rong)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You can launch the bookmarks of a current lesson slot in your timetable. "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The time depends on the system time of your machine with an additional 5 minutes of buffer, "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "allowing you to launch your zoom session ahead of time."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: launch now    "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"clear\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 2.1.4. Clear screen: `clear`"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "This feature helps you clear the screen in the command prompt. It is useful if the screen gets too cluttered with past commands."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: clear"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"exit\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.1.5 Exit the app: `exit`  "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You can exit the application by using the exit command."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  "
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: exit    "
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou should see this message on exit  "
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/exit.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "---"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e "
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"bookmarkmode\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### 5.2 Bookmark Mode  "
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"showbookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.2.1 Show bookmarks: `show`  "
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "It prints all bookmark in your bookmark list  "
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: show"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"addbookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.2.2 Add bookmark: `add`  "
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Adds a URL bookmark with a description.  "
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: add {DESCRIPTON} {URL}"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "``` "
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* The `DESCRIPTION` must only contain one word (no whitespace inside).  "
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* The `URL` has to start with `www.`, `http://` or `https://`.  "
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Note that validity of the `URL` cannot be checked. Please ensure that you enter the correct link.  "
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `add google www.google.com/`  "
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `add example http://example.com`  "
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `add cs2113t-website https://nus-cs2113-ay2021s1.github.io/website/`  "
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"deletebookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.2.3 Delete bookmarks: `delete`  "
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Deletes a bookmark with the specified index.  "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The index will correspond to the index of that bookmark in the list. "
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You can do a `show` command to check the bookmark indexes.  "
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: delete {INDEX}"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `delete 2`  "
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `delete 4`  "
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"findbookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.2.4 Find bookmarks: `find`  "
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Finds bookmarks with matching description and prints them."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: find {DESCRIPTION}"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  "
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* The `DESCRIPTION` can only contain one word.  "
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `find cs2113t-website`"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `find notes`  "
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"launchbookmark\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.2.5 Launch bookmarks: `launch`  "
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Launches bookmarks in the default browser using either:"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Index"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Matching description"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "The index will correspond to the index of that bookmark in the list. "
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You can do a `show` command to check the bookmark indexes.  "
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: launch {INDEX/DESCRIPTION}"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* The `DESCRIPTION` can only contain one word.   "
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:  "
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `launch 1`"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `launch cs2113t-website`  "
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  "
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "---"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e "
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"timetablemode\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### 5.3 Timetable mode    "
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"showtimetable\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.3.1 Show timetable: `show` (Yu Shing)"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You will be able to see the timetable for a certain day or the whole week.  "
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**today** can also be a `DAY` input to show the timetable for the current day based on system time.  "
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "If your selected timetable is the current day, you should be able to see a"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\"current time\" indicator with your system local time. "
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Else if you have a lesson ongoing currently, it will instead show a \"lesson now\" indicator."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*around* your current lesson."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e \u003ca name \u003d \"alert\" style\u003d\"color:ORANGE; font-size:17px\"\u003eALERT!\u003c/a\u003e"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* You have to enter `DAY` input according to the command format else it will not be recognised as a valid date. "
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eThe valid inputs are `mon`, `tue`, `wed`, `thu`, `fri`, `sat`, `sun`and `today`. "
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou can see the [command format](#command_format) for more information."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* Zoomaster will interpret you command as the [Show module and slot feature](#showmoduledetails) "
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eif you do not enter the correct `DAY` input. As such, you would see an error message saying you have entered an invalid module."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: show {DAY(optional)}"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `show`"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `show wed`"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `show today`"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou will see an empty list message if your timetable is empty. \u003cbr\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/show%20empty%20list.png?raw\u003dtrue) \u003cbr\u003e\u003c/br\u003e\u003cbr\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou will see your entire timetable if you use `show` input. \u003cbr\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://raw.githubusercontent.com/fchensan/tp/docs-images/docs/images/addslotbookmark.png) \u003cbr\u003e\u003c/br\u003e\u003cbr\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou will see the timetable of your selected day if you use `show {day}` input. "
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eThis example uses wednesday as its selected day input. \u003cbr\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/show%20wed%20list.png?raw\u003dtrue) \u003cbr\u003e\u003c/br\u003e\u003cbr\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou will see the timetable for today if you use `show today` input. \u003cbr\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/show%20today%20list.png?raw\u003dtrue) \u003cbr\u003e\u003c/br\u003e\u003cbr\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eExample of \"current time\" indicator showing the current time \u003cbr\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/current%20time%20indicator.png?raw\u003dtrue) "
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e\u003cbr\u003e\u003c/br\u003e\u003cbr\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eExample of \"lesson now\" indicator hightlighting the current lesson \u003cbr\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e![](https://github.com/TYS0n1/tp/blob/team-Branch2/docs/diagrams/lesson%20now%20indicator.png?raw\u003dtrue) \u003cbr\u003e\u003c/br\u003e\u003cbr\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"showmoduledetails\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.3.2 Show module and slot details: `show` (Xing Rong)"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Shows the details of a module or slot that has been added.  "
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You can see the respective indexes of each of the slots from the module "
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "and using the `bookmarks` keyword will show the bookmarks which are saved in the module and its slots."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e \u003ca name \u003d \"alert\" style\u003d\"color:ORANGE; font-size:17px\"\u003eALERT!\u003c/a\u003e"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* You can only see modules that are listed on the NUSMods website. "
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou can see the [command format](#command_format) for more information."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (show module details): show {MODULE} bookmarks(optional)"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (show slot details): show {MODULE} {INDEX} bookmarks(optional)"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `show cs2113t`"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `show cs2113t bookmarks`"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `show cs2113t 1`"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `show cs2113t 1 bookmarks`"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"addtimeslot\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.3.3 Add module, time slot and bookmark: `add` (Xing Rong)"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You can add modules, time slots and bookmarks using this feature."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You can also chain commands when adding multiple slots and bookmarks to a module by using `,` as a separator."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e \u003ca name \u003d \"alert\" style\u003d\"color:ORANGE; font-size:17px\"\u003eALERT!\u003c/a\u003e"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* You are required to insert **a space** between each parameter."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* The chaining of commands only performs on **one module** which is `{MODULE}`.    "
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* You can only add a module that is listed on the NUSMods website. "
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou can see the [command format](#command_format) for more information."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  "
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (adding a module): add {MODULE}"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (adding a slot to a module): add {MODULE} {DESCRIPTION} {DAY} {START_TIME} {END_TIME} "
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (adding a bookmark to a module): add {MODULE} {DESCRIPTION} {URL}"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (adding a bookmark to a slot): add {MODULE} {DESCRIPTION} {DAY} {START_TIME} {END_TIME} {URL}"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                                      add {MODULE} {INDEX} {URL}"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (chaining commands): add {MODULE} {DESCRIPTION} {DAY} {START_TIME} {END_TIME} {URL}, {DESCRIPTION} {URL}, ..."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```  "
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Multiple bookmarks can be added to a module and a slot."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * To add another bookmark to an existing module, you have to enter the module code of the "
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    existing module in the timetable. "
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * To add another bookmark to an existing slot, you can enter the command with the matching details "
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    of the existing slot or use the index number of the slot in the module to access the slot. "
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    Index number of the slot can be found by using the command `show {MODULE}`. "
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Each command works by checking if each of the components (module, slot, bookmark) "
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  exists or is valid from left to right of the input before adding them."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * In the command `add cs2113t lecture fri 16:00 18:00`, if `cs2113t` module already exists, "
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    then it will not be added into the timetable. The slot `lecture fri 16:00 18:00` "
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    which is valid and not a duplicate will then be added to the existing `cs2113t` module."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* The chaining of commands only performs on one module which is {MODULE}.    "
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* The `DESCRIPTION` must only contain one word (no whitespace inside).  "
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* The `URL` has to start with `www.`, `http://` or `https://`.  "
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " "
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Note that validity of the `URL` cannot be checked. Please ensure that you enter the correct link. "
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Parameter `DAY` takes three letter abbreviations of days in a week"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * The full list of DAY parameters are **mon, tue, wed, thu, fri, sat, sun**"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Adding a module  "
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "input:  "
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](./images/addmoduleinput.PNG)  "
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "output:  "
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](./images/addbookmarktomoduleoutput.PNG)  "
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Adding a slot to a module  "
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "input:  "
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](./images/addslottomoduleinput.PNG)  "
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "output:  "
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](./images/addslottomoduleoutput.PNG)  "
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Adding a bookmark to a module  "
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "input:  "
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](./images/addbookmarktomoduleinput.PNG)  "
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "output:  "
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](./images/addbookmarktomoduleoutput.PNG)  "
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Adding a bookmark to a slot  "
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "input:  "
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](./images/addbookmarktoslotinput.PNG)  "
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "output:  "
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](./images/addbookmarktoslotoutput.PNG)  "
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Chaining commands  "
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "input:  "
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](./images/addchaincommandinputnew.PNG)  "
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "output:  "
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "(The indentation of each line of the output shows the relationships between the components."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "In the output shown below, `bookmarks added to CG2271 lecture` is one level of indentation "
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "higher than the previous line. This means that the bookmark is added to that lecture slot."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Similarly, `bookmark added to module` is one level of indentation higher than `CG2271 added`, "
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "which suggests that the bookmark is added to the module CG2271.)  "
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](./images/addchaincommandoutput.PNG)  "
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "result:  "
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](./images/addresult.PNG)"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  "
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "More examples:"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `add cs2113t`  "
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `add cs2113t lecture fri 16:00 18:00`"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `add cs2113t notes www.google.com`"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `add cs2113t lecture fri 16:00 18:00 www.google.com`"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `add cs2113t 1 www.yahoo.com`"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `add cs2113t lecture fri 16:00 18:00 www.google.com, notes www.google.com, tutorial fri 10:00 12:00`"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"deletetimeslot\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.3.4 Delete module, time slot and bookmarks: `delete`   (Xing Rong)"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Deletes module, time slot or bookmarks."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e \u003ca name \u003d \"alert\" style\u003d\"color:ORANGE; font-size:17px\"\u003eALERT!\u003c/a\u003e"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* You can only delete a module that is listed on the NUSMods website. "
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou can see the [command format](#command_format) for more information."
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (deleting a module): delete {MODULE}"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (deleting a slot of a module): delete {MODULE} {INDEX} "
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (deleting bookmarks of a module): delete {MODULE} bookmarks "
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (deleting bookmarks of a slot of a module): delete {MODULE} {INDEX} bookmarks "
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Deleting bookmarks will delete all bookmarks associated with the module or slot."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `delete cs2113t`  "
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `delete cs2113t 1`"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `delete cs2113t bookmarks`"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `delete cs2113t 1 bookmarks`"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"edittimeslot\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.3.5 Edit slot\u0027s module, title, time: `edit`  (Francisco) "
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Edits the module, title or time for a specific slot."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e \u003ca name \u003d \"alert\" style\u003d\"color:ORANGE; font-size:17px\"\u003eALERT!\u003c/a\u003e"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* You can only edit a module that is listed on the NUSMods website. "
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou can see the [command format](#command_format) for more information."
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (editing the module of a slot): edit module {DAY} {INDEX} {new MODULE}"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (editing the title of a slot): edit title {DAY} {INDEX} {new TITLE}"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (editing the time of a slot): edit time {DAY} {INDEX} {new START_TIME} {new END_TIME}"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Obtain the `DAY` and `INDEX` of the slot to be edited using the `show` command."
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `edit module mon 1 CS1010`  "
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `edit title mon 1 lecture`"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `edit time mon 1 fri 10:00 12:00`"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"launchtimeslot\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.3.6 Launch bookmarks from module, slot: `launch`  "
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Launches the bookmarks of slots or the bookmarks of a module"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e \u003ca name \u003d \"alert\" style\u003d\"color:ORANGE; font-size:17px\"\u003eALERT!\u003c/a\u003e"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* You can only launch a module that is listed on the NUSMods website. "
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou can see the [command format](#command_format) for more information."
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (launch module bookmarks): launch {MODULE}"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format (launch slot bookmarks): launch {MODULE} {INDEX}"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Obtain the `INDEX` of the slot to be launched using the `show {MODULE}` command."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `launch {MODULE}` launches the bookmarks tagged to the module itself, for example the module website"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `launch {MODULE} {INDEX}` launches the bookmarks tagged to the second slot of the module, "
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "for example the zoom link for tutorial"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `launch CS2113`  "
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `launch CS2113 2`"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"plannermode\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"plannermode\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### 5.4. Planner Mode  "
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"loadplanner\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.4.1. Load planner: `load`  "
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Loads all the timetables from the `planner` folder and helps you find some common empty slots."
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e \u003ca name \u003d \"alert\" style\u003d\"color:ORANGE; font-size:17px\"\u003eALERT!\u003c/a\u003e"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e * You need to copy the different .txt files manually to the planner folder."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: load"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* This command only displays the common empty time slots."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"addmeeting\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.4.2. Add meeting: `add`  "
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You can add modules, time slots and bookmarks using this feature."
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You can also chain commands when adding multiple slots and bookmarks to a module by using `,` as a separator."
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: same as [add time slots](#addtimeslot) command."
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* You can only add a new meeting to empty time slots."
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* Note that this command does not automatically store the newly added meeting to the .txt files. "
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* You will need to type `save` to save your changes."
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"showplanner\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.4.3. Show planner: `show`"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "You will be able to see the empty time slots for a certain day or the whole week.  "
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**today** can also be a `DAY` input to show the timetable for the current day based on system time.  "
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "If your selected timetable is the current day, you should be able to see a"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\"current time\" indicator with your system local time. "
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Else, if you have a lesson ongoing currently, it will instead show a \"lesson now\" indicator"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "*around* your current lesson.  "
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e \u003ca name \u003d \"alert\" style\u003d\"color:ORANGE; font-size:17px\"\u003eALERT!\u003c/a\u003e"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* You have to enter `DAY` input according to the command format else it will not be recognised as a valid date. "
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eThe valid inputs are `mon`, `tue`, `wed`, `thu`, `fri`, `sat`, `sun`and `today`. "
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou can see the [command format](#command_format) for more information."
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: show {DAY(optional)}"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage:   "
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `show`"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `show wed`"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* `show today`"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ca name\u003d\"saveplanner\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### 5.4.4. Save planner: `save`  "
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Saves the newly added slot(s) to each individual timetables."
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Format: save"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "```"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## 6.0 FAQ  "
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer?   "
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**A**: Copy the `data/bookmarks.txt` and `data/slots.txt` file to the **data** directory where the `jar` file is at."
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/directory.png)"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Start the application and all the data should be loaded."
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**Q**: Can I add a module not from NUS?   "
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**A**: Yes you can! \u003cbr\u003e In the **data** directory locate the  `modulelist.txt` file. Add the new module on a new line"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "and save the txt file. You can now add the module in Zoomaster."
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003cbr/\u003e\u003c/br\u003e"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## 7.0 Command Summary"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**Action** | **Format, Examples**"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**Global**|"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**help**|`help {COMMAND(optional)}`\u003cbr\u003eexample: `help`, `help add`"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**mode**|`mode {bookmark/timetable}`\u003cbr\u003eexample: `mode bookmark`"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**clear**|`launch now`"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**launch now**|`clear`"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**exit**|`exit`"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**Bookmark Mode**|"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**show**|`show`"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**add**|`add {DESCRIPTION} {URL}` \u003cbr\u003eexample: `add cheatsheet www.google.com` \u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**delete**|`delete {INDEX}`\u003cbr\u003eexample: `delete 2`|"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**find**|`find {MODULE} {DESCRIPTION(optional)}` \u003cbr\u003eexample: `find CS2113 tutorial`"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**launch**|`launch {MODULE} {DESCRIPTION(optional)}` \u003cbr\u003eexample: `launch CS2113`"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**Timetable Mode**|"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**show (lessons)**|`show {DAY(optional)}` \u003cbr\u003eexample: `show`, `show wed`, `show today` "
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**show (bookmarks\u003cbr\u003eattatched)**| `show {MODULE} bookmarks(optional)`\u003cbr\u003eexample: `show CS2113`, `show CS2113 bookmarks`"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**add**|`add {MODULE}` \u003cbr\u003eexample: `add CS2113T` \u003cbr/\u003e\u003cbr/\u003e `add {MODULE} {DESCRIPTION} {DAY} {START_TIME} {END_TIME}` \u003cbr\u003eexample: `add CS2113T tutorial wed 11:00 12:00` \u003cbr/\u003e\u003cbr/\u003e`add {MODULE} {DESCRIPTION} {URL}` \u003cbr\u003eexample: `add CS2113T tutorial www.yahoo.com` \u003cbr/\u003e\u003cbr/\u003e `add {MODULE} {DESCRIPTION} {DAY} {START_TIME} {END_TIME} {URL}` \u003cbr\u003eexample: `add CS2113T tutorial wed 11:00 12:00 www.yahoo.com` \u003cbr/\u003e\u003cbr/\u003e`add {MODULE} {INDEX} {URL}` \u003cbr\u003eexample: `add CS2113T 2 www.yahoo.com`"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**delete**| `delete {MODULE}` \u003cbr\u003eexample: `delete CS2113`\u003cbr/\u003e\u003cbr/\u003e`delete {MODULE} {INDEX}` \u003cbr\u003eexample: `delete CS2113 2`\u003cbr/\u003e\u003cbr/\u003e`delete {MODULE} bookmarks` \u003cbr\u003eexample: `delete CS2113 bookmarks`\u003cbr/\u003e\u003cbr/\u003e`delete {MODULE} {INDEX} bookmarks` \u003cbr\u003eexample: `delete CS2113 2 bookmarks`\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**edit**| `edit module {DAY} {INDEX} {new MODULE}` \u003cbr\u003e example: `edit module fri 2 CS1010` \u003cbr/\u003e\u003cbr/\u003e `edit title {DAY} {INDEX} {new TITLE}`\u003cbr\u003e example: `edit title fri 2 tutorial` \u003cbr/\u003e\u003cbr/\u003e`edit time {DAY} {INDEX} {new START_TIME} {new END_TIME}` \u003cbr\u003e example: `edit time fri 2 16:00 18:00`"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**launch**|`launch {MODULE}` \u003cbr\u003e example: `launch CS2113` \u003cbr/\u003e\u003cbr/\u003e `launch {MODULE} {INDEX}` \u003cbr\u003e example: `launch CS2113 1` "
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "***Planner Mode***|"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**load**|`load`"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**show**|`show {DAY(optional)}` \u003cbr\u003eexample: `show`, `show wed`, `show today` "
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**add**|see add in timetable mode above"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**save**|`save`"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 616,
      "-": 39
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.ChangeModeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.ClearCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.HelpCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.command.LaunchNowCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.AddBookmarkCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.planner.AddMeetingCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.planner.LoadPlannerCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.command.planner.SavePlannerCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.AddSlotCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.DeleteBookmarkCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.DeleteSlotCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.LaunchBookmarkCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.FindBookmarkCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.command.timetable.LaunchModuleAndSlotBookmark;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.command.timetable.EditSlotCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.ShowTimetableCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.ShowBookmarkCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * This class deals with making sense of the user command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Variable programMode controls the mode Zoomaster program is in."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * programMode \u003d\u003d 0: Main menu mode"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * programMode \u003d\u003d 1: Bookmark mode"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * programMode \u003d\u003d 2: Timetable mode"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static int programMode \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Creates and returns the command based on user input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input full user input."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException If input command is unknown."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static Command parse(String input) throws ZoomasterException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Command command \u003d createCommand(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static Command createCommand(String input) throws ZoomasterException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (input.compareToIgnoreCase(ExitCommand.EXIT_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(LaunchNowCommand.LAUNCH_NOW_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new LaunchNowCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(ChangeModeCommand.MODE_KW)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new ChangeModeCommand(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(ClearCommand.CLEAR_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new ClearCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else if (input.startsWith(HelpCommand.HELP_KW)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            command \u003d new HelpCommand(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (programMode \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d createBookmarkCommand(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (programMode \u003d\u003d 2) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d createTimetableCommand(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (programMode \u003d\u003d 3) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d createPlannerCommand(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    //@@author TYS0n1"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static Command createBookmarkCommand(String input) throws ZoomasterException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.startsWith(ShowBookmarkCommand.SHOW_KW)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new ShowBookmarkCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(DeleteBookmarkCommand.DEL_KW)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new DeleteBookmarkCommand(input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(AddBookmarkCommand.ADD_KW)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new AddBookmarkCommand(input);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(LaunchBookmarkCommand.LAUNCH_KW)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new LaunchBookmarkCommand(input);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(FindBookmarkCommand.FIND_KW)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new FindBookmarkCommand(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    //@@author TYS0n1"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static Command createTimetableCommand(String input) throws ZoomasterException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        // Add Timetable Commands on merge"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.startsWith(AddSlotCommand.ADD_KW)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new AddSlotCommand(input);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(DeleteSlotCommand.DEL_KW)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new DeleteSlotCommand(input);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(ShowTimetableCommand.SHOW_KW)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return new ShowTimetableCommand(input);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(LaunchModuleAndSlotBookmark.LAUNCH_KW)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new LaunchModuleAndSlotBookmark(input);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(EditSlotCommand.EDIT_KW)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new EditSlotCommand(input);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    //@@author jusufnathanael"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private static Command createPlannerCommand(String input) throws ZoomasterException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (input.startsWith(AddMeetingCommand.ADD_KW)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            return new AddMeetingCommand(input);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (input.startsWith(ShowTimetableCommand.SHOW_KW)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            return new ShowTimetableCommand(input);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (input.startsWith(SavePlannerCommand.SAVE_KW)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            return new SavePlannerCommand();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (input.startsWith(LoadPlannerCommand.LOAD_KW)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            return new LoadPlannerCommand();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static int getProgramMode() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return programMode;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 5,
      "TYS0n1": 104,
      "jusufnathanael": 21,
      "fchensan": 1,
      "Speedweener": 3
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.net.HttpURLConnection;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.net.MalformedURLException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Storage\u003cT\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Class\u003cT\u003e storageClass;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new Storage instance by storing the given pathname of the file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param path The pathname of the file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Storage(String path, Class\u003cT\u003e storageClass) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Runtime rt \u003d Runtime.getRuntime();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String os \u003d System.getProperty(\"os.name\").toLowerCase();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (os.contains(\"mac\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            this.filePath \u003d path.replace(\"./\", File.separator);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            this.filePath \u003d path.replace(\u0027/\u0027, File.separatorChar);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.storageClass \u003d storageClass;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the tasks found within the file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return Objects T found in the file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException If file is not found."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public T load() throws ZoomasterException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String fileAsString;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            fileAsString \u003d Files.readString(Paths.get(filePath));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return createNewInstance();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!fileAsString.equals(\"null\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return gson.fromJson(fileAsString, storageClass);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return createNewInstance();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private T createNewInstance() throws ZoomasterException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return storageClass.getDeclaredConstructor().newInstance();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.ERROR_LOADING_FILE);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    //@@author jusufnathanael"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public ArrayList\u003cFile\u003e getFiles() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        File folder \u003d new File(filePath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(folder.listFiles()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    //@@author jusufnathanael"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public T loadPlanner() throws ZoomasterException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        File folder \u003d new File(filePath);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            createDirectory();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.ERROR_LOADING_FILE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (folder.listFiles() \u003d\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            return createNewInstance();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            ArrayList\u003cFile\u003e listOfFiles \u003d getFiles();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            StringBuilder fileAsString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            String opening \u003d \"{\" + System.lineSeparator() + \"  \\\"modules\\\": [\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            fileAsString.append(opening);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            for (File f : listOfFiles) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    StringBuilder line \u003d new StringBuilder(Files.readString(Paths.get(f.getPath())));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    Timetable temp \u003d (Timetable) gson.fromJson(line.toString(), storageClass);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    if (!temp.isEmpty()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                        fileAsString.append(line.delete(0, 16));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                        fileAsString.delete(fileAsString.length() - 6, fileAsString.length());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                        fileAsString.append(\",\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    return createNewInstance();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            fileAsString.delete(fileAsString.length() - 1, fileAsString.length());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            String closing \u003d System.lineSeparator() + \"  ]\" + System.lineSeparator() + \"}\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            fileAsString.append(closing).append(System.lineSeparator());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            if (!fileAsString.toString().equals(\"null\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                return gson.fromJson(fileAsString.toString(), storageClass);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                return createNewInstance();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_FOLDER);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    //@@author jusufnathanael"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void writePlanner(Object t, File f) throws ZoomasterException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        String jsonString \u003d gson.toJson(t);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            writeToFile(jsonString);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.WRITE_FILE_ERROR);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * This method creates the file if it does not exist and saves tasks data in the file."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param data An object to be converted into JSON and saved in the file."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws ZoomasterException If there is an error writing to the file."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void save(Object data) throws ZoomasterException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            createDirectory();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            String jsonString \u003d gson.toJson(data);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            writeToFile(jsonString);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.WRITE_FILE_ERROR);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private void createDirectory() throws IOException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        String dirPath \u003d getDirectory(filePath);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        Path path \u003d Paths.get(dirPath);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        Files.createDirectories(path);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private String getDirectory(String path) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        String dirPath;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (path.contains(File.separator)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            dirPath \u003d path.substring(0, path.lastIndexOf(File.separator));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            dirPath \u003d path;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return dirPath;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Makes a connection to the NUSMODS API URL and retrieves the JSON"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * file moduleList. Then converts JSON to an Array\u003cString\u003e\u003c/String\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * of module codes to be returned."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @return Array\u003cString\u003e\u003c/String\u003e of module codes"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws ZoomasterException CONNECTION_ERROR and JSON_PARSE_ERROR"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    // Solution below adapted from AY2021S1-CS2113T-T09-2"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    // https://github.com/AY2021S1-CS2113T-T09-2/tp/../data/storage/Decoder.java"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private ArrayList\u003cString\u003e nusModuleListFromNusMods() throws ZoomasterException {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        String weblink \u003d \"\"; // For exception messages"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            URL url \u003d getNusModsUrl();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            weblink \u003d url.toString();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            HttpURLConnection connection \u003d (HttpURLConnection) url.openConnection();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            connection.setRequestMethod(\"GET\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            connection.connect();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            int responseCode \u003d connection.getResponseCode();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            if (responseCode !\u003d 200) { //Unable to connect"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            String jsonAsString \u003d \"\";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            Scanner sc \u003d new Scanner(url.openStream());"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            while (sc.hasNext()) { // if line is empty, means finish reading"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                jsonAsString +\u003d sc.nextLine();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            return jsonToArrayList(jsonAsString);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.CONNECTION_ERROR, weblink);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.JSON_PARSE_ERROR, weblink);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Converts the moduleList JSON to Array\u003cString\u003e\u003c/String\u003e of module codes."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @return Array\u003cString\u003e\u003c/String\u003e of module codes"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws ParseException When unable to parse JSON files from NUSMODS"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private ArrayList\u003cString\u003e jsonToArrayList(String jsonAsString) throws ParseException {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        JSONParser parse \u003d new JSONParser();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        JSONArray moduleArray \u003d (JSONArray) parse.parse(jsonAsString);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ArrayList\u003cString\u003e moduleList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        for (int i \u003d 0; i \u003c moduleArray.size(); i++) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            JSONObject module \u003d (JSONObject) moduleArray.get(i);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            moduleList.add(module.get(\"moduleCode\").toString());"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return moduleList;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Returns the url of moduleList JSON file from NUSMODS API for the current year."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @return URL"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws MalformedURLException If URL is invalid"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private URL getNusModsUrl() throws MalformedURLException {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        int year \u003d LocalDate.now().getYear();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return new URL(\"https://api.nusmods.com/v2/\" + year + \"-\" + (year + 1)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                + \"/moduleList.json\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Loads modulelist from the txt file if the file exists locally and returns"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * it as an Array\u003cString\u003e\u003c/String\u003e."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Else tries to retrieve online to be returned. If retrieved successfully,"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * save the information locally as txt file."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @return Array\u003cString\u003e\u003c/String\u003e of module codes or null if unable to make"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *     connection and file does not exist locally."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public ArrayList\u003cString\u003e loadModuleList() throws IOException, ZoomasterException {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        String moduleListPath \u003d filePath;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        assert filePath.contains(\"data\") : \"filepath to be loaded is from wrong directory\";"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        assert filePath.contains(\"timetable\") : \"filepath to be loaded has errors\";"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        moduleListPath \u003d moduleListPath.replace(\"timetable\", \"modulelist\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        File f \u003d new File(moduleListPath);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ArrayList\u003cString\u003e moduleList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            while ((s \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                moduleList.add(s);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            if (moduleList.isEmpty()) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                throw new FileNotFoundException();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            return moduleList;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            moduleList \u003d nusModuleListFromNusMods();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            if (moduleList !\u003d null) { // If moduleList is successfully filled, store the list locally"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                saveModuleList(moduleListPath, moduleList);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            return moduleList;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Saves the moduleList locally."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param  moduleListPath Filepath for local txt file of module codes"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param  moduleList The list of module codes"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private void saveModuleList(String moduleListPath, ArrayList\u003cString\u003e moduleList)"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        String dirPath \u003d getDirectory(moduleListPath);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        Path path \u003d Paths.get(dirPath);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        Files.createDirectories(path);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        FileWriter fw \u003d new FileWriter(moduleListPath, false);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        for (String str: moduleList) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            fw.write(str + System.lineSeparator());"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 90,
      "jusufnathanael": 235
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.fusesource.jansi.AnsiConsole;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.ChangeModeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.ClearCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.LaunchNowCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.AddBookmarkCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.DeleteBookmarkCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.FindBookmarkCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.LaunchBookmarkCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.ShowBookmarkCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.planner.AddMeetingCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.planner.LoadPlannerCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.planner.SavePlannerCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.AddSlotCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.DeleteSlotCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.ShowTimetableCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.EditSlotCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.LaunchModuleAndSlotBookmark;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.BLACK;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.BLUE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.CYAN;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.MAGENTA;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.GREEN;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.RED;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.WHITE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.Color.YELLOW;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.fusesource.jansi.Ansi.ansi;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Represents the user interface on the command line and deals with interactions with the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static final String NEW_LINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static final String LINE \u003d \"____________________________________________________________\" + NEW_LINE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String logo2 \u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            \"                                                                                                 \\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                            ███████                                              \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                      ██████████████████                                         \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                    ███████████████████████                                      \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                  ███████████████████████████                                    \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                 ████             █████  █████                                   \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                █████              █     ██████                                  \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                █████              █     ██████                                  \\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                █████              █     ██████                                  \\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                 █████             ████  █████                                   \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                  ███████████████████████████                                    \\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                   █████████████████████████                                     \\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                      ███████████████████                                        \\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                          ███████████                                            \\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"                                                                         ██                      \\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"█████████   ███████     ████████   ███████ ███████     █████     █████  █████   █████     █ ████ \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"     ███  ██      ███  ██      ███ ██     ██     ██         ██  ██       ██   ██      ██  ██   ██\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"   ███   ███       ██ ███       ██ ██     ██     ██  █████████  ███████  ██  ████████████ ██     \\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"███       ███     ███  ██      ███ ██     ██     ██  ██     ██        ██ ██   ██          ██     \\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"██████████   █████       ██████    ██     ██     ██   ████████  ███████   ███  ████████   ██     \\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new Ui instance."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        AnsiConsole.systemInstall();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns a string of the user input in the command line."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return the string of user input."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (Parser.getProgramMode() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.print(ansi().fg(GREEN).a(\"[Main Menu] Input: \").reset());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.getProgramMode() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.print(ansi().fg(CYAN).a(\"[Bookmark mode] Input: \").reset());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.getProgramMode() \u003d\u003d 2) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.print(ansi().fg(YELLOW).a(\"[Timetable mode] Input: \").reset());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.getProgramMode() \u003d\u003d 3) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.print(ansi().fg(MAGENTA).a(\"[Planner mode] Input: \").reset());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.print(\"[An error has occurred] \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE + message + LINE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void printRedWithBorder(String message) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.print(ansi().fg(RED).a(message).reset());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void printGreenWithBorder(String message) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.print(ansi().fg(GREEN).a(message).reset());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void printYellowWithBorder(String message) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.print(ansi().fg(YELLOW).a(message).reset());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void printRed(String message) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.print(ansi().fg(RED).a(message).reset());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void printGreen(String message) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.print(ansi().fg(GREEN).a(message).reset());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void printYellow(String message) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.print(ansi().fg(YELLOW).a(message).reset());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void printCyan(String message) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.print(ansi().fg(CYAN).a(message).reset());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void clearScreen() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.print(\"\\033[2J\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints a message after starting the program."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void showWelcomeScreen() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\"\\t\\t\\t\\t  ++++{  WELCOME TO  }++++\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(ansi().bg(WHITE));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(ansi().fg(CYAN).a(logo2).reset());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(ansi().bg(BLACK));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints a message before exiting the program."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void showExitScreen() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"Bye. Hope to see you again soon!\" + NEW_LINE;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        print(message);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        AnsiConsole.systemUninstall();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints the error message if data file is not found."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"Data file not found\" + NEW_LINE;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(message);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This method detects the type of ZoomasterException error and prints the corresponding error message."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param e The ZoomasterException error."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void showErrorMessage(ZoomasterException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        switch (e.getError()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case UNKNOWN_INPUT:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printRedWithBorder(\"Unknown input\" + NEW_LINE);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printHelpMessage();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case UNKNOWN_HELP_COMMAND:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printRedWithBorder(\"Unknown command \" + e.getInfo() + NEW_LINE);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printHelpMessage();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_MODE:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printUnknownModeMessage();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case WRITE_FILE_ERROR:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printErrorWritingToFile();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case ERROR_LOADING_FILE:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printErrorLoadingFile();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_ADD_BOOKMARK_INPUT:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printInvalidAddBookmarkInputMessage();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case EMPTY_BOOKMARK_LIST:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printEmptyBookmarkListMessage();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printEmptyBookmarkDescriptionMessage();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case EMPTY_COMMAND:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printEmptyCommandMessage(e.getInfo());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case NON_INTEGER_INPUT:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printUseIntegerAsInput();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case BOOKMARK_NUMBER_OUT_OF_BOUNDS:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printUseValidBookmarkNumberMessage(e.getInfo());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_URL:"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printInvalidUrl();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case ERROR_LAUNCHING_URL:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printErrorLaunchUrlMessage();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_COMMAND_FORMAT:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printRedWithBorder(\"invalid command format\" + NEW_LINE);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_MODULE:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printRedWithBorder(\"module does not exist\" + NEW_LINE);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_SLOT_NUMBER:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printInvalidSlotNumber(e.getInfo());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_TIME_FORMAT:"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printInvalidTimeFormat();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_SLOT_INPUT:"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printInvalidSlotInput();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_EDIT_INPUT:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printInvalidEditInput();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case INVALID_TIMETABLE_DAY:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printUnknownDayMessage();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case EMPTY_TIMETABLE:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printEmptyTimetableMessage();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case CONNECTION_ERROR:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printConnectionErrorMessage(e.getInfo());"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        case JSON_PARSE_ERROR:"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printJsonParseErrorMessage(e.getInfo());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            // unable to get dukeExceptionType"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printEmptyBookmarkListMessage() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Bookmark list is empty!\" + NEW_LINE);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printInvalidSlotNumber(String index) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Invalid slot number. Please enter a valid index number between 1 and \" + index + NEW_LINE"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                + \"Enter command: \\\"show \u003cmodule\u003e\\\" to view slot index\" + NEW_LINE);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printJsonParseErrorMessage(String weblink) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Unable to parse modules from \" + weblink + NEW_LINE"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                + \"The app will not check for valid modules\" + NEW_LINE);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printConnectionErrorMessage(String weblink) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Unable to connect to \" + weblink + NEW_LINE"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                + \"Please check your internet connection\" + NEW_LINE"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                + \"The app will not check for valid modules\" + NEW_LINE);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printErrorLoadingFile() {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Error loading file.\" + NEW_LINE);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printErrorWritingToFile() {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Error writing to file.\" + NEW_LINE);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printUseIntegerAsInput() {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Command requires an integer input\" + NEW_LINE);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printUseValidBookmarkNumberMessage(String info) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Please enter a valid index number between 1 and \" + info + NEW_LINE);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printErrorLaunchUrlMessage() {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Error launching url\" + NEW_LINE);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printInvalidUrl() {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Invalid URL\" + NEW_LINE + \"URL must start with either \u0027www.\u0027, \u0027http://\u0027\""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                + \" or \u0027https://\u0027 and have no spaces\" + NEW_LINE);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printInvalidAddBookmarkInputMessage() {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Invalid bookmark input\" + NEW_LINE"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"Format: add {description} {URL}\" + NEW_LINE);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printEmptyBookmarkDescriptionMessage() {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Bookmark description required!\" + NEW_LINE);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printEmptyCommandMessage(String info) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Please enter \" + info + \" with input!\" + NEW_LINE);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void printHelpMessage() {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert (Parser.programMode \u003e\u003d 0) \u0026\u0026 (Parser.programMode \u003c\u003d 3) : \"only modes of Zoomaster are 0, 1, 2, 3\";"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (Parser.programMode \u003d\u003d 0) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printYellowWithBorder(\"Available inputs in Main menu are\" + NEW_LINE"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"1) \" + ChangeModeCommand.MODE_KW + \" bookmark/timetable/planner\" + NEW_LINE"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"2) \" + ClearCommand.CLEAR_KW + NEW_LINE"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"3) \" + LaunchNowCommand.LAUNCH_NOW_KW + NEW_LINE"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"4) \" + ExitCommand.EXIT_KW + NEW_LINE);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.programMode \u003d\u003d 1) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printYellowWithBorder(\"Available inputs in Bookmark mode are\" + NEW_LINE"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"1) \" + AddBookmarkCommand.ADD_KW + NEW_LINE"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"2) \" + DeleteBookmarkCommand.DEL_KW + NEW_LINE"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"3) \" + ShowBookmarkCommand.SHOW_KW + NEW_LINE"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"4) \" + FindBookmarkCommand.FIND_KW + NEW_LINE"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"5) \" + LaunchBookmarkCommand.LAUNCH_KW + NEW_LINE"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"6) \" + ClearCommand.CLEAR_KW + NEW_LINE"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"7) \" + ChangeModeCommand.MODE_KW + \" timetable/planner\" + NEW_LINE"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"8) \" + ExitCommand.EXIT_KW + NEW_LINE);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.programMode \u003d\u003d 2) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printYellowWithBorder(\"Available inputs in Timetable mode are\" + NEW_LINE"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"1) \" + AddSlotCommand.ADD_KW + NEW_LINE"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"2) \" + DeleteSlotCommand.DEL_KW + NEW_LINE"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"3) \" + ShowTimetableCommand.SHOW_KW + NEW_LINE"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"4) \" + EditSlotCommand.EDIT_KW + NEW_LINE"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"5) \" + LaunchModuleAndSlotBookmark.LAUNCH_KW + NEW_LINE"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"6) \" + ChangeModeCommand.MODE_KW + \" bookmark/planner\" + NEW_LINE"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"7) \" + ClearCommand.CLEAR_KW + NEW_LINE"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"8) \" + ExitCommand.EXIT_KW + NEW_LINE);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printYellowWithBorder(\"Available inputs in Planner mode are\" + NEW_LINE"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"1) \" + LoadPlannerCommand.LOAD_KW + NEW_LINE"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"2) \" + AddMeetingCommand.ADD_KW + NEW_LINE"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"3) \" + ShowTimetableCommand.SHOW_KW + NEW_LINE"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"4) \" + SavePlannerCommand.SAVE_KW + NEW_LINE"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"6) \" + ChangeModeCommand.MODE_KW + \" bookmark/timetable\" + NEW_LINE"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"7) \" + ClearCommand.CLEAR_KW + NEW_LINE"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"8) \" + ExitCommand.EXIT_KW + NEW_LINE);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printYellow(\"You can also check what each command does using: \");"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printCyan(\"help {command}\" + NEW_LINE);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void printHelpMessage(String input) {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert (Parser.programMode \u003e\u003d 0) \u0026\u0026 (Parser.programMode \u003c\u003d 3) : \"only modes of Zoomaster are 0, 1, 2, 3\";"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.equals(ClearCommand.CLEAR_KW)) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printYellowWithBorder(\"Clears the visible command line screen\" + NEW_LINE);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.equals(ExitCommand.EXIT_KW)) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printYellowWithBorder(\"Exits the application. What else did you expect ^_^\" + NEW_LINE);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.equals(ChangeModeCommand.MODE_KW)) {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printYellow(\"Changes the current mode. You can change to Bookmark, \""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \"Timetable or Planner mode\" + NEW_LINE);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printCyan(\"Format: mode {bookmark/timetable/planner}\" + NEW_LINE);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.equals(LaunchNowCommand.LAUNCH_NOW_KW)) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printYellow(\"Launches bookmarks for lessons happening at the current time\" + NEW_LINE);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            printCyan(\"Format: launch now\" + NEW_LINE);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.programMode \u003d\u003d 1) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            switch (input) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case AddBookmarkCommand.ADD_KW:"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Adds a bookmark to the bookmark list\" + NEW_LINE"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"URL must start with www or https:// or http://\" + NEW_LINE);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: add {description} {URL}\" + NEW_LINE);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case DeleteBookmarkCommand.DEL_KW:"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Deletes bookmark from the bookmark list with their indexes\" + NEW_LINE);"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: delete {index} \" + NEW_LINE);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case ShowBookmarkCommand.SHOW_KW:"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellowWithBorder(\"Shows the whole list of bookmarks.\" + NEW_LINE);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case FindBookmarkCommand.FIND_KW:"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Finds and shows bookmarks with description matching the keyword\" + NEW_LINE);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: find {keyword} \" + NEW_LINE);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case LaunchBookmarkCommand.LAUNCH_KW:"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Finds and launches bookmarks with description matching the keyword\""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \" or index \" + NEW_LINE);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: launch {keyword} \" + NEW_LINE"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"Format: launch {index} \" + NEW_LINE);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellowWithBorder(\"something went wrong...\");"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.programMode \u003d\u003d 2) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            switch (input) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case AddSlotCommand.ADD_KW:"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Adds modules and their timeslots to the timetable \" + NEW_LINE);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: add {module} {slot description} {day of the week} \""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"{start time} {end time} {URL}\" + NEW_LINE);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. add CS2113 lecture fri 16:00 18:00 www.google.com\" + NEW_LINE + NEW_LINE);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"You can also add the module first then add the slot afterwards, \""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"then add the bookmark to that slot. \" + NEW_LINE);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. add CS2113\" + NEW_LINE"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"    add CS2113 lecture fri 16:00 18:00\" + NEW_LINE"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"    add CS2113 lecture fri 16:00 18:00 www.google.com\" + NEW_LINE + NEW_LINE);"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"You can also add bookmarks tagged to the entire module\" + NEW_LINE);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: add {module} {description} {URL}\" + NEW_LINE);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. add CS2113 homepage https://nus-cs2113-ay2021s1.github.io/website/index.html\""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + NEW_LINE);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case DeleteSlotCommand.DEL_KW:"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Deletes slots or bookmarks belonging to that slot \" + NEW_LINE);"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: delete {module} {slot index} \u0027bookmarks\u0027\" + NEW_LINE);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. delete CS2113 1 (Deletes the slot at index 1 of CS2113)\" + NEW_LINE);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. delete CS2113 1 bookmarks\""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \" (Deletes the bookmarks of slot at index 1 of CS2113)\" + NEW_LINE);"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"You can display the slot indexes using: \");"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"show {module}\" + NEW_LINE + NEW_LINE);"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"You can also delete the entire module or the module\u0027s bookmarks\" + NEW_LINE);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: delete {module} \u0027bookmarks\u0027\" + NEW_LINE);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. delete CS2113 (Deletes the module CS2113)\" + NEW_LINE);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. delete CS2113 bookmarks\""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \" (Deletes the bookmarks tagged to CS2113)\" + NEW_LINE);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case ShowTimetableCommand.SHOW_KW:"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Shows the entire timetable, or slots on a particular day\" + NEW_LINE);"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: show \u0027{day}\u0027\" + NEW_LINE);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. show\" + NEW_LINE);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. show mon\" + NEW_LINE + NEW_LINE);"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"You can also shows the slots for a module, or bookmarks for a module \" + NEW_LINE);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: show {module} \u0027bookmarks\u0027\" + NEW_LINE);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. show CS2113\" + NEW_LINE);"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. show CS2113 bookmarks\" + NEW_LINE);"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case EditSlotCommand.EDIT_KW:"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Edits the details of slots in the timetable based on their \""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"index in the timetable\" + NEW_LINE);"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Details you can edit include the module, title of slot and time of slot\""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + NEW_LINE);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"You can view the indexes using: \");"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"show\" + NEW_LINE + NEW_LINE);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: edit module {day} {index} {new module}\" + NEW_LINE);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. edit module mon 1 CS1010 (Changes the module of slot 1 on Monday \""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"to CS1010)\" + NEW_LINE + NEW_LINE);"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: edit title {day} {index} {new description}\" + NEW_LINE);"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. edit title mon 1 lecture (Changes the description of slot 1 on Monday \""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"to lecture)\" + NEW_LINE + NEW_LINE);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: edit time {day} {index} {new time}\" + NEW_LINE);"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. edit time mon 1 fri 10:00 12:00 (Changes the time of slot 1 on Monday \""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"to fri 10:00 12:00)\" + NEW_LINE + NEW_LINE);"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case LaunchModuleAndSlotBookmark.LAUNCH_KW:"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Launches the bookmarks of slots based on their index in the module \" + NEW_LINE);"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"You can also launch bookmarks tagged to the module itself\" + NEW_LINE);"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: launch {module} {index}\" + NEW_LINE);"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. launch CS2113 2 (Bookmarks for slot 2 of CS2113)\" + NEW_LINE);"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. launch CS2113 (Bookmarks tagged directly to CS2113)\" + NEW_LINE + NEW_LINE);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellowWithBorder(\"something went wrong...\");"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.programMode \u003d\u003d 3) {"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            switch (input) {"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case AddMeetingCommand.ADD_KW:"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Adds modules and their timeslots to the common timetable \" + NEW_LINE);"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: add {module} {slot description} {day of the week} \""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"{start time} {end time} {URL}\" + NEW_LINE);"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. add CS2113 lecture fri 16:00 18:00 www.google.com\" + NEW_LINE + NEW_LINE);"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"You can also add the module first then add the slot afterwards, \""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"then add the bookmark to that slot. \" + NEW_LINE);"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. add CS2113\" + NEW_LINE"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"    add CS2113 lecture fri 16:00 18:00\" + NEW_LINE"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + \"    add CS2113 lecture fri 16:00 18:00 www.google.com\" + NEW_LINE + NEW_LINE);"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"You can also add bookmarks tagged to the entire module\" + NEW_LINE);"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: add {module} {description} {URL}\" + NEW_LINE);"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. add CS2113 homepage https://nus-cs2113-ay2021s1.github.io/website/index.html\""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        + NEW_LINE);"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case LoadPlannerCommand.LOAD_KW:"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Loads the common empty slots from a few individual timetables \" + NEW_LINE);"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: load\" + NEW_LINE);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case ShowTimetableCommand.SHOW_KW:"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Shows the common empty slots along with the newly added slots (if any)\" + NEW_LINE);"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: show \u0027{day}\u0027\" + NEW_LINE);"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. show\" + NEW_LINE);"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. show mon\" + NEW_LINE + NEW_LINE);"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"You can also shows the slots for a module, or bookmarks for a module \" + NEW_LINE);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: show {module} bookmarks\" + NEW_LINE);"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. show CS2113\" + NEW_LINE);"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printGreen(\"eg. show CS2113 bookmarks\" + NEW_LINE);"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            case SavePlannerCommand.SAVE_KW:"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellow(\"Saves the newly added slot(s) to each individual timetables\" + NEW_LINE);"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printCyan(\"Format: save\" + NEW_LINE);"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                printYellowWithBorder(\"something went wrong...\");"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printUnknownModeMessage() {"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Unknown mode input\" + NEW_LINE + \"Valid modes: bookmark, timetable, planner\" + NEW_LINE);"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printUnknownDayMessage() {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Unknown day input\" + NEW_LINE"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "              + \"Valid days: mon, tue, wed, thu, fri, sat, sun\" + NEW_LINE);"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printEmptyTimetableMessage() {"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Timetable is empty\" + NEW_LINE);"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printInvalidSlotInput() {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Invalid slot input\" + NEW_LINE);"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printInvalidEditInput() {"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Invalid edit format\" + NEW_LINE"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            + \"Enter \\\"help edit\\\" for the correct format.\" + NEW_LINE);"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void printInvalidTimeFormat() {"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printRedWithBorder(\"Invalid time format\" + NEW_LINE);"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showParsingErrorAndExit() {"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        printRedWithBorder(\"File corrupted! Please check data files or delete them.\" + NEW_LINE"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"Zoomaster will now shut down\" + NEW_LINE);"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        AnsiConsole.systemUninstall();"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 7,
      "TYS0n1": 568
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/Zoomaster.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import com.google.gson.JsonParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Zoomaster {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Storage\u003cBookmarkList\u003e bookmarkStorage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Storage\u003cTimetable\u003e timetableStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Storage\u003cTimetable\u003e plannerStorage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Timetable timetable;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Timetable planner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    //private ArrayList\u003cFile\u003e files;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new Zoomaster instance."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Pass the filepath of the txt file to set up storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param bookmarkFilePath The filepath of the bookmark txt file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param timetableFilePath The filepath of the slot txt file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Zoomaster(String bookmarkFilePath, String timetableFilePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "      "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        bookmarkStorage \u003d new Storage\u003c\u003e(getJarFilepath() + bookmarkFilePath, BookmarkList.class);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        timetableStorage \u003d new Storage\u003c\u003e(getJarFilepath() + timetableFilePath, Timetable.class);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "      "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            bookmarks \u003d bookmarkStorage.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d timetableStorage.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            planner \u003d new Timetable();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Module.setModuleList(timetableStorage.loadModuleList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (JsonParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            ui.showParsingErrorAndExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This method is used run the Duke program."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.showWelcomeScreen();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                if (Parser.programMode \u003d\u003d 3) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    c.execute(bookmarks, planner, ui);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    c.execute(bookmarks, timetable, ui);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                bookmarkStorage.save(bookmarks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                timetableStorage.save(timetable);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } while (!isExit);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        new Zoomaster(\"./data/bookmarks.txt\", \"./data/timetable.txt\").run();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns path of jar file during execution to allow"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * app to create txt file in the same location."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static String getJarFilepath() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return new File(Zoomaster.class.getProtectionDomain().getCodeSource().getLocation()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                .getPath()).getParent().replace(\"%20\", \" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 3,
      "TYS0n1": 86,
      "jusufnathanael": 1,
      "Speedweener": 1,
      "-": 6
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/bookmark/Bookmark.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * This class represents a bookmark of a URL of a webpage."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * It stores the URL and a description of the webpage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * It also contains a method which can extract the URL and description from a given string in a certain format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Bookmark {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String url;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static final String SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a bookmark object containing a URL and description of the webpage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param url The URL of the webpage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param description The description of the webpage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Bookmark(String description, String url) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert description !\u003d null : \"description should not be null\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert url !\u003d null : \"url should not be null\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.url \u003d url.trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the description and url that can be detected from the given input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input the string input by the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a list of strings containing the description and url."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if the command format is invalid or if the url is invalid."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static List\u003cString\u003e extractDescriptionAndUrl(String input) throws ZoomasterException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e descriptionUrl \u003d Arrays.asList(input.split(\"\\\\s+\", 2));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (descriptionUrl.size() !\u003d 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_ADD_BOOKMARK_INPUT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!isUrlValid(descriptionUrl.get(1))) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_URL);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return descriptionUrl;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static Boolean isUrlValid(String url) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (url.contains(\" \")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return url.startsWith(\"www.\") || url.startsWith(\"https://\") || url.startsWith(\"http://\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This method opens the URL of the bookmark in a web browser."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a string"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if there is an error launching the URL."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String launch() throws ZoomasterException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            launchUrl();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.ERROR_LAUNCHING_URL);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return \"  [\" + description + \"] \" + url;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void launchUrl() throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Runtime rt \u003d Runtime.getRuntime();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String os \u003d System.getProperty(\"os.name\").toLowerCase();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (os.contains(\"win\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            launchUrlForWindows(rt);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (os.contains(\"mac\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            launchUrlForMac(rt);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (os.contains(\"nix\") || os.contains(\"nux\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            launchUrlForLinux(rt);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void launchUrlForWindows(Runtime rt) throws IOException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        rt.exec(\"rundll32 url.dll,FileProtocolHandler \" + url);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void launchUrlForMac(Runtime rt) throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String link \u003d getFullLink();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        rt.exec(\"open \" + link);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private void launchUrlForLinux(Runtime rt) throws IOException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String link \u003d getFullLink();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        rt.exec(\"xdg-open \" + link);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String getFullLink() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String link;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (url.startsWith(\"www.\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            link \u003d \"https://\" + url;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            link \u003d url;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the URL of the bookmark."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a string of the URL."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getUrl() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return url;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the description of the bookmark."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a string of the description of the bookmark."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getBookmarkAsString() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return  (\"[\" + description + \"] \" + url + System.lineSeparator());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the data of the bookmark in a string."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a string containing the information of the bookmark."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getExport() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return description + SEPARATOR + url;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the bookmark instance which is created from the data read from the bookmark text file."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * This class level method is called at the start of the program to initialize the bookmark."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param data The string containing information of the bookmark."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return the bookmark instance."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if the URL is invalid."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws IndexOutOfBoundsException if the data format is invalid."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static Bookmark initBookmark(String data) throws ZoomasterException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cString\u003e details \u003d  Arrays.asList(data.split(\"\\\\|\"));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d details.get(0).trim();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d details.get(1).trim();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!isUrlValid(url)) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_URL);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return bookmark;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 2,
      "TYS0n1": 156,
      "Speedweener": 2
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/bookmark/BookmarkList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * This class represents the bookmark list used to store and organize bookmarks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class BookmarkList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private ArrayList\u003cBookmark\u003e bookmarks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final String lineSeparator \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(BookmarkList.class.getName());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a BookmarkList object with an empty ArrayList to store Bookmark objects."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public BookmarkList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.bookmarks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs the BookmarkList object containing an ArrayList to store Bookmark objects."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This constructor is used when loading bookmarks from a text file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmarkStrings the list of strings of bookmarks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public BookmarkList(ArrayList\u003cString\u003e bookmarkStrings) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.bookmarks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        loadBookmarkList(bookmarkStrings);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private void loadBookmarkList(ArrayList\u003cString\u003e bookmarks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (String line : bookmarks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            loadBookmark(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method adds the given bookmark object to the bookmark list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmark the bookmark to be added to the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String addBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assert bookmark !\u003d null : \"Added bookmark should not be null!\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarks.add(bookmark);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return \"Added bookmark: \" + \"[\" + bookmark.getDescription() + \"] \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                +  bookmark.getUrl() + System.lineSeparator();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void loadBookmark(String line) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            bookmarks.add(Bookmark.initBookmark(line));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IndexOutOfBoundsException | ZoomasterException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            // Invalid task data, skips to the next entry"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            // logger.log(Level.WARNING, \"invalid bookmark data found in file: \" + line, e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the the data of all bookmarks in the list to be saved in the text file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the data of all the bookmarks."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (Bookmark bookmark : bookmarks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            data.append(bookmark.getExport()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return data.toString().trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the number of bookmarks in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the size of the bookmark list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmarks.size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns bookmark based on the index."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param index The index of the bookmark in the list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The bookmark with the corresponding index in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @throws IndexOutOfBoundsException if the index is out of range."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Bookmark getBookmark(int index) throws IndexOutOfBoundsException, ZoomasterException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (bookmarks.isEmpty()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new  ZoomasterException(ZoomasterExceptionType.EMPTY_BOOKMARK_LIST);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmarks.get(index);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the bookmark list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The bookmark list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public ArrayList\u003cBookmark\u003e getBookmarks() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return bookmarks;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method deletes the bookmark from the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmark The bookmark to be deleted."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws NullPointerException if the bookmark does not exist in the list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String deleteBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assert bookmarks.contains(bookmark) : \"Bookmark to be\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + \"deleted not in list!\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        bookmarks.remove(bookmark);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return \"[\" + bookmark.getDescription() + \"] \" + bookmark.getUrl() + \"\\n\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * This method shows all the bookmarks from the list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @return The string message containing the matching bookmarks"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String showBookmarks() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"Here are the bookmarks in your list:\" + lineSeparator;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (bookmarks.isEmpty()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            message \u003d message + \"Bookmark list is empty\" + lineSeparator;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            for (int i \u003d 0; i \u003c bookmarks.size(); i++) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d message + \"  \" + (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message + lineSeparator;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method searches the bookmarks from the list with matching module and description."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param description The description to be searched"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @return The string message containing the matching bookmarks"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String findBookmarks(String description) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert !description.equals(\"\") : \"Description should not be empty!\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (bookmarks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"Empty List\" + lineSeparator;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d getMatchingBookmarks(description.toUpperCase());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (!message.isEmpty()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"Here are your matching bookmarks\" + lineSeparator + message;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"No bookmarks contain the specified keyword!\" + lineSeparator;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getMatchingBookmarks(String description) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c bookmarks.size(); i++) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (bookmarks.get(i).getDescription().toUpperCase().contains(description)) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                message +\u003d (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString() + lineSeparator;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * This method searches the bookmarks from the list with matching module"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * and description and launches them accordingly."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param description The description to be searched"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @return The string message containing the matching bookmarks"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String launchBookmarks(String description) throws ZoomasterException {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert !description.equals(\"\") : \"Description should not be empty!\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (bookmarks.isEmpty()) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_BOOKMARK_LIST);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d launchMatchingBookmarks(description.toUpperCase());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (!message.isBlank()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"Launched these bookmarks:\" + lineSeparator + message;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"No bookmarks contain the specified keyword!\" + lineSeparator;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String launchMatchingBookmarks(String description) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c bookmarks.size(); i++) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (bookmarks.get(i).getDescription().toUpperCase().contains(description)) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    bookmarks.get(i).launch();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    message +\u003d (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    errorMessage +\u003d (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!errorMessage.isBlank()) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"Failed to launch these bookmarks:\" + lineSeparator + errorMessage;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message + lineSeparator;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String launchAllBookmarks() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (bookmarks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"Empty List\" + lineSeparator;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d launchBookmarksFromList();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (!message.isEmpty()) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d \"Launched these bookmarks:\" + lineSeparator + message;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String launchBookmarksFromList() {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (int i \u003d 0; i \u003c bookmarks.size(); i++) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.get(i).launch();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                errorMessage +\u003d (i + 1) + \".\" + bookmarks.get(i).getBookmarkAsString();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!errorMessage.isBlank()) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"Failed to launch these bookmarks:\" + lineSeparator + errorMessage;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 119,
      "TYS0n1": 5,
      "Speedweener": 117
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/ChangeModeCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Executes the change mode functionality of the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ChangeModeCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String MODE_KW \u003d \"mode\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public int setToMode;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new ChangeModeCommand instance."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * It decodes the command received to find out the mode the user wants"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * the program to be in."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * If an invalid mode or error in the command occurs, it is set to 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param command The command sent by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ChangeModeCommand(String command) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        setToMode \u003d getModeFromCommand(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Executes ChangeModeCommand."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param bookmarks BookmarkList of the program"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param timetable Timetable containing the lesson slots of the program"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param ui The User Interface used to send messages to the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throws ZoomasterException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (setToMode \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Parser.programMode \u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ui.print(\"Changing to bookmark mode\" + System.lineSeparator());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (setToMode \u003d\u003d 2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Parser.programMode \u003d 2;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ui.print(\"Changing to timetable mode\" + System.lineSeparator());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (setToMode \u003d\u003d 3) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Parser.programMode \u003d 3;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ui.print(\"Changing to planner mode\" + System.lineSeparator());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_MODE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Decodes the command sent from the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Assert line catches when a non ChangeModeCommand compatible command has called this function."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Any input commands with less than equals length of 5 is an invalid input mode by default."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * For example \"mode \" is an invalid input as it has no mode input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Another example \"mode1\" is an invalid input too as mode command requires a space before it\u0027s"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * mode input."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Any mode input not \"bookmark\", \"timetable\" or \"planner\" are invalid inputs. Inputs are not"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * case sensitive."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input The input command from the user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return outputData"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public int getModeFromCommand(String input) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int outputData;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert input.startsWith(ChangeModeCommand.MODE_KW) : \"input should always start with \\\"mode\\\"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String modeData \u003d input.substring(5);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (modeData.toLowerCase().compareTo(\"bookmark\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (modeData.toLowerCase().compareTo(\"timetable\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d 2;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (modeData.toLowerCase().compareTo(\"planner\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d 3;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputData \u003d 0;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return outputData;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 88
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/ClearCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String CLEAR_KW \u003d \"clear\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new ShowBookmarkCommand instance."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ClearCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.clearScreen();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 20
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    protected boolean isExitCommand \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Execution of command depends on which command subclass the command belongs to."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public abstract void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns true if the command is an ExitCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return isExitCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 26
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Represents the user command exit the Duke program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String EXIT_KW \u003d \"exit\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new ExitCommand instance and sets isExitCommand to true."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        isExitCommand \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints the exit screen before the program exits."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param timetable The timetable."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.showExitScreen();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "TYS0n1": 29,
      "Speedweener": 1
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.AddBookmarkCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.DeleteBookmarkCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.FindBookmarkCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.LaunchBookmarkCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.bookmark.ShowBookmarkCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.planner.LoadPlannerCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.planner.SavePlannerCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.AddSlotCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.DeleteSlotCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.ShowTimetableCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.EditSlotCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.timetable.LaunchModuleAndSlotBookmark;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.planner.AddMeetingCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Executes the help functionality of the program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String HELP_KW \u003d \"help\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String details;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new HelpCommand instance."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Assert line catches when a non HelpCommand compatible command has triggered this constructor."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * It extracts a String, details and check if it is the name of a valid command in the current"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * program mode."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param command The command sent by the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException If details is not a valid command in the current program mode."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public HelpCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert command.startsWith(HELP_KW) : \"input should always start with \\\"help\\\"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        details \u003d command.substring(HELP_KW.length()).trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!details.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (!isValidCommand(details)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_HELP_COMMAND, details);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Executes HelpCommand."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * If no command name is requested for help, it will print out all the command names available"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * in the current program mode."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * If a valid command name is requested for help, it will print out help information for the"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * command specified."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param bookmarks BookmarkList of the program"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param timetable Timetable containing the lesson slots of the program"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param ui The User Interface used to send messages to the user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (details.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ui.printHelpMessage();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            ui.printHelpMessage(details);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Checks if the command requested for help is a valid command in the current program mode."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param details The name of the command requested for help by the user."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return isValid."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private boolean isValidCommand(String details) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean isValid \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (details.compareToIgnoreCase(ClearCommand.CLEAR_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            || details.compareToIgnoreCase(ChangeModeCommand.MODE_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            || details.compareToIgnoreCase(ExitCommand.EXIT_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            || details.compareToIgnoreCase(LaunchNowCommand.LAUNCH_NOW_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            isValid \u003d true;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.getProgramMode() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (details.compareToIgnoreCase(AddBookmarkCommand.ADD_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    || details.compareToIgnoreCase(DeleteBookmarkCommand.DEL_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    || details.compareToIgnoreCase(ShowBookmarkCommand.SHOW_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    || details.compareToIgnoreCase(FindBookmarkCommand.FIND_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    || details.compareToIgnoreCase(LaunchBookmarkCommand.LAUNCH_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                isValid \u003d  true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.getProgramMode() \u003d\u003d 2) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (details.compareToIgnoreCase(AddSlotCommand.ADD_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    || details.compareToIgnoreCase(DeleteSlotCommand.DEL_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    || details.compareToIgnoreCase(ShowTimetableCommand.SHOW_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    || details.compareToIgnoreCase(EditSlotCommand.EDIT_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    || details.compareToIgnoreCase(LaunchModuleAndSlotBookmark.LAUNCH_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                isValid \u003d  true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (Parser.getProgramMode() \u003d\u003d 3) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (details.compareToIgnoreCase(AddMeetingCommand.ADD_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    || details.compareToIgnoreCase(LoadPlannerCommand.LOAD_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    || details.compareToIgnoreCase(ShowTimetableCommand.SHOW_KW) \u003d\u003d 0"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    || details.compareToIgnoreCase(SavePlannerCommand.SAVE_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                isValid \u003d  true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return isValid;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 110
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/LaunchNowCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Day;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class LaunchNowCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String LAUNCH_NOW_KW \u003d \"launch now\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public LaunchNowCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        LocalTime currentTime \u003d LocalTime.now().plusMinutes(5);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cSlot\u003e slots \u003d timetable.getFullSlotList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Slot slot : slots) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slot.getStartTime().isBefore(currentTime) \u0026\u0026 slot.getEndTime().isAfter(currentTime)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    \u0026\u0026 slot.getDay().compareToIgnoreCase(Day.getDayToday()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d slot.getBookmarkList().launchAllBookmarks();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (message.isBlank()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"no lessons now.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 38,
      "Speedweener": 1
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/bookmark/AddBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Represents the user command exit the Duke program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class AddBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String ADD_KW \u003d \"add\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final String url;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new AddBookmarkCommand instance and stores the information of the bookmark given by the input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if input command is invalid, if the description is empty or if the url is invalid."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public AddBookmarkCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assert command.startsWith(ADD_KW) : \"input should always start with \\\"add\\\"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        command \u003d command.substring(AddBookmarkCommand.ADD_KW.length());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (command.isBlank()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, ADD_KW);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!command.startsWith(\" \")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cString\u003e descAndUrl \u003d Bookmark.extractDescriptionAndUrl(command.trim());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        description \u003d descAndUrl.get(0);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        url \u003d descAndUrl.get(1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Adds the bookmark to the bookmark list and saves the bookmarks list in the text file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param timetable The list of slots."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if there is an error when saving the bookmark."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 49,
      "Speedweener": 5
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/bookmark/DeleteBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class DeleteBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String DEL_KW \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new DeleteBookmarkCommand instance and stores the information of the bookmark given by the input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException thrown if input command is invalid or if the bookmark number is invalid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public DeleteBookmarkCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assert command.startsWith(DEL_KW) : \"input should always start with \\\"del\\\"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String details \u003d command.substring(DEL_KW.length());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, DEL_KW);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            index \u003d Integer.parseInt(details.trim()) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.NON_INTEGER_INPUT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Deletes the bookmark in the bookmark list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param timetable The list of slots."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if the bookmark number is invalid or if there is an error when saving the bookmark."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            Bookmark bookmark \u003d bookmarks.getBookmark(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String message \u003d \"I\u0027ve deleted this bookmark!:\\n\" + bookmarks.deleteBookmark(bookmark);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            ui.print(message);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.BOOKMARK_NUMBER_OUT_OF_BOUNDS, \"\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + bookmarks.getBookmarks().size());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 11,
      "TYS0n1": 16,
      "Speedweener": 29
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/bookmark/FindBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class FindBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String FIND_KW \u003d \"find\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new FindBookmarkCommand instance and gets the module and description to be searched."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * If only one term is entered (term meaning string without a space), method asserts"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * this to be the module and inserts an empty description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param command The command input by the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if the input is unknown."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public FindBookmarkCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String details \u003d command.substring(FIND_KW.length());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, FIND_KW);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        description \u003d details.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints the bookmark with the matching keyword."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *  @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param timetable The list of slots."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d bookmarks.findBookmarks(description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 44
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/bookmark/LaunchBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class LaunchBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String LAUNCH_KW \u003d \"launch\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private int launchTypeFlag;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new LaunchBookmarkCommand instance and gets the index of the bookmark to launch."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Determines whether the launch command was input with an integer or string, and sets launchTypeFlag accordingly."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Integer (launchTypeFlag \u003d 1)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Strings (launchTypeFlag \u003d 2)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param command The command input by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if the input is unknown or if the bookmark number is invalid."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public LaunchBookmarkCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String details \u003d command.substring(LAUNCH_KW.length());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, LAUNCH_KW);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            index \u003d Integer.parseInt(details.trim()) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            launchTypeFlag \u003d 1; // (flag to launch bookmark at specified index)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (details.trim().contains(\" \")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            description \u003d details.trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            launchTypeFlag \u003d 2; // (flag to launch bookmarks with matching description)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Launches the bookmark based on the launchTypeFlag previously determined in LaunchBookmarkCommand initialization."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param timetable The list of slots."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if the bookmark number is invalid or if there is an error launching the URL."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (launchTypeFlag \u003d\u003d 1) { // Launch based on index"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                Bookmark bookmark \u003d bookmarks.getBookmark(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                String message \u003d \"Nice! I\u0027ve launched this bookmark!:\\n\" + bookmark.launch() + System.lineSeparator();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                ui.print(message);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.BOOKMARK_NUMBER_OUT_OF_BOUNDS, \"\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        + bookmarks.getBookmarks().size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (launchTypeFlag \u003d\u003d 2) { // Launch based on matching module and description"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String message \u003d bookmarks.launchBookmarks(description);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            ui.print(message);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 15,
      "TYS0n1": 16,
      "Speedweener": 40
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/bookmark/ShowBookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ShowBookmarkCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String SHOW_KW \u003d \"show\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new ShowBookmarkCommand instance."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ShowBookmarkCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.print(bookmarks.showBookmarks());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 21,
      "Speedweener": 1
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/planner/AddMeetingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "//@@author jusufnathanael"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package seedu.zoomaster.command.planner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.command.timetable.AddSlotCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class AddMeetingCommand extends AddSlotCommand {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String ADD_KW \u003d \"add\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private Timetable localTimetable;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private List\u003cSlot\u003e slots;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Constructs a new AddSlotCommand instance and stores the information of the slot given by the input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws ZoomasterException if input command is invalid."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public AddMeetingCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Adds the slot to the slot list and saves the slots list in the text file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param bookmarks The list of bookmarks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param timetable The timetable"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param ui The user interface"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws ZoomasterException Some exception // ADD MORE COMMENTS"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        localTimetable \u003d timetable;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        slots \u003d timetable.getFullSlotList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        super.execute(bookmarks, timetable, ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    protected String create(String command, Module module, Timetable timetable) throws ZoomasterException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        List\u003cString\u003e slotAndBookmark \u003d Arrays.asList(command.trim().split(\"\\\\s+\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (isAddModuleBookmark(slotAndBookmark)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            message \u003d addBookmarkToModule(module, slotAndBookmark);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            String lesson \u003d slotAndBookmark.get(0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            String day \u003d slotAndBookmark.get(1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            LocalTime startTime;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            LocalTime endTime;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                startTime \u003d LocalTime.parse(slotAndBookmark.get(2));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                endTime \u003d LocalTime.parse(slotAndBookmark.get(3));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIME_FORMAT, \"Invalid time format. (\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                        + slotAndBookmark.get(2) + \" \" + slotAndBookmark.get(3) + \") Please check format.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            Slot newSlot;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            if (isAvailable(day, startTime, endTime)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                newSlot \u003d module.createSlotNew(lesson, day, startTime, endTime);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                module.addSlot(newSlot);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                message +\u003d  \"  \" + lesson + \" slot added\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                message +\u003d checkForAndAddBookmarkToSlot(slotAndBookmark, lesson, newSlot);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                message +\u003d  \"  \" + \"This slot is already filled.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private boolean isAvailable(String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        for (Slot s: slots) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            if (s.getDay().equals(day) \u0026\u0026 s.getTitle().equals(\"\u003cempty slot\u003e\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    \u0026\u0026 s.getStartTime().compareTo(startTime) \u003c\u003d 0 \u0026\u0026 s.getEndTime().compareTo(endTime) \u003e\u003d 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                updateEmptySlot(s, startTime, endTime);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private void updateEmptySlot(Slot slot, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        Slot slot1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        Slot slot2;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (slot.getStartTime().compareTo(startTime) !\u003d 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            slot1 \u003d new Slot(slot.getStartTime(), startTime, slot.getDay(), slot.getTitle());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            localTimetable.getModule(\"EMPTY\").addSlot(slot1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (slot.getEndTime().compareTo(endTime) !\u003d 0) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            slot2 \u003d new Slot(endTime, slot.getEndTime(), slot.getDay(), slot.getTitle());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            localTimetable.getModule(\"EMPTY\").addSlot(slot2);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        localTimetable.getModule(\"EMPTY\").removeSlot(slot);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 105
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/planner/LoadPlannerCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "//@@author jusufnathanael"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package seedu.zoomaster.command.planner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.Zoomaster;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.slot.Day;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class LoadPlannerCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String LOAD_KW \u003d \"load\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private Storage\u003cTimetable\u003e storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public LoadPlannerCommand() throws ZoomasterException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Loads the slots to the planner."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param bookmarks The list of bookmarks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param planner The timetable"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param ui The user interface"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws ZoomasterException Some exception"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable planner, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        planner.clearAllModule();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        storage \u003d new Storage\u003c\u003e(Zoomaster.getJarFilepath() + \"./data/planner/\", Timetable.class);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            Timetable temp \u003d storage.loadPlanner();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            planner.addModule(initialiseEmptySlots(temp));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            ui.print(\"Planner loaded.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            ui.print(\"Please insert a non-empty timetable to the planner folder.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Module initialiseEmptySlots(Timetable timetable) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ArrayList\u003cArrayList\u003cInteger\u003e\u003e array \u003d new ArrayList\u003c\u003e(7);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            array.add(new ArrayList\u003c\u003e(Collections.nCopies(300, 0)));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ArrayList\u003cSlot\u003e slots \u003d new ArrayList\u003c\u003e(timetable.getFullSlotList());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        for (Slot s: slots) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            markAsFull(array, s.getStartMinutes(), s.getEndMinutes(), s.getDay());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        Module module \u003d new Module(\"EMPTY\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        generateEmptySlots(array, module);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private static void markAsFull(ArrayList\u003cArrayList\u003cInteger\u003e\u003e array, int start, int end, String day) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        for (Day d: Day.values()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            if (d.toString().compareTo(day) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                for (int i \u003d start / 5; i \u003c Math.ceil((double) end / 5); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    array.get(count).set(i, 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private static void generateEmptySlots(ArrayList\u003cArrayList\u003cInteger\u003e\u003e array, Module module) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        for (Day d: Day.values()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            for (int i \u003d 0; i \u003c 287; i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                if (array.get(count).get(i) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    int startHours \u003d (i * 5) / 60;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    int startMinutes \u003d (i * 5) % 60;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    LocalTime start \u003d Slot.convertIntToLocalTime(startHours % 288, startMinutes % 288);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    do {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                        i++;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    } while (array.get(count).get(i) \u003d\u003d 0 \u0026\u0026 i \u003c 287);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    int endHours \u003d (i * 5) / 60;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    int endMinutes \u003d (i * 5) % 60;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    LocalTime end \u003d Slot.convertIntToLocalTime(endHours % 288, endMinutes % 288);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    module.addSlot(new Slot(start, end, d.toString(), \"\u003cempty slot\u003e\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 94
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/planner/SavePlannerCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "//@@author jusufnathanael"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package seedu.zoomaster.command.planner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.Zoomaster;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class SavePlannerCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String SAVE_KW \u003d \"save\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public SavePlannerCommand() throws ZoomasterException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Adds the slot to the slot list and saves the slots list in the text file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param bookmarks The list of bookmarks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param planner The timetable"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param ui The user interface"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws ZoomasterException Some exception // ADD MORE COMMENTS"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable planner, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        File folder \u003d new File(Zoomaster.getJarFilepath() + \"./data/planner/\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ArrayList\u003cFile\u003e listOfFiles \u003d new ArrayList\u003c\u003e(Arrays.asList(folder.listFiles()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        for (File f: listOfFiles) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            Storage\u003cTimetable\u003e storage \u003d new Storage\u003c\u003e(f.getPath(), Timetable.class);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            Timetable timetableF \u003d storage.load();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            writeToFile(planner, timetableF);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            storage.writePlanner(timetableF, f);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ui.print(\"Planner saved.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private void writeToFile(Timetable planner, Timetable timetable) throws ZoomasterException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        for (Module m : planner.getFullModuleList()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            if (!m.getModuleCode().equals(\"EMPTY\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                if (timetable.moduleExists(m.getModuleCode())) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    Module module \u003d timetable.getModule(m.getModuleCode());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    for (int i \u003d 0; i \u003c m.getSlotList().size(); i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                        module.addSlot(m.getSlot(i));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    timetable.addModule(m);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 68
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/timetable/AddSlotCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Represents the user command exit the Duke program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class AddSlotCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String ADD_KW \u003d \"add\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String moduleCode;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private List\u003cString\u003e commands;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new AddSlotCommand instance and stores the information of the slot given by the input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if input command is invalid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    //@@author xingrong123"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public AddSlotCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert command.startsWith(ADD_KW);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String details \u003d command.substring(ADD_KW.length());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, ADD_KW);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String[] stringArray \u003d details.trim().split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        moduleCode \u003d stringArray[0].toUpperCase();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (stringArray.length \u003e 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            commands \u003d Arrays.asList(stringArray[1].split(\",\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Adds the slot to the slot list and saves the slots list in the text file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmarks The list of bookmarks"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param timetable The timetable"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param ui The user interface"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws ZoomasterException Some exception // ADD MORE COMMENTS"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Module module;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (timetable.moduleExists(moduleCode)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            module \u003d timetable.getModule(moduleCode);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d moduleCode + \" already exists\" + System.lineSeparator();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (!isValidModule(moduleCode)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_MODULE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            module \u003d timetable.addModule(moduleCode);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d moduleCode + \" added\" + System.lineSeparator();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (commands !\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            for (String command : commands) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d createSlotAndBookmark(module, command.trim(), timetable);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected String createSlotAndBookmark(Module module, String command, Timetable timetable) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert module !\u003d null : \"module should mot be null\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d create(command, module, timetable);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d e.getInfo() + System.lineSeparator();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"incorrect format for slot: \" + command + System.lineSeparator();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected String create(String command, Module module, Timetable timetable) throws ZoomasterException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e slotAndBookmark \u003d Arrays.asList(command.trim().split(\"\\\\s+\"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (isAddModuleBookmark(slotAndBookmark)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d addBookmarkToModule(module, slotAndBookmark);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (slotAndBookmark.size() \u003d\u003d 2) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Slot slot;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            slot \u003d retrieveSlotFromModule(module, slotAndBookmark);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            createBookmark(slotAndBookmark.get(1), slot.getTitle(), slot);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"  bookmark added to \" + moduleCode + \" \" + slot.getTitle() + System.lineSeparator();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (slotAndBookmark.size() \u003e\u003d 4) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String lesson \u003d slotAndBookmark.get(0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String day \u003d slotAndBookmark.get(1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            LocalTime startTime;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            LocalTime endTime;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (!Day.isDay(day)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIMETABLE_DAY,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        \"  Invalid day input: \" + day + \". (make sure that the description only contains one word)\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                startTime \u003d LocalTime.parse(slotAndBookmark.get(2));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                endTime \u003d LocalTime.parse(slotAndBookmark.get(3));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIME_FORMAT,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        \"  Invalid time format for slot. (\" + slotAndBookmark.get(2)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        + \" \" + slotAndBookmark.get(3) + \") Please check format.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Slot newSlot;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (module.slotExists(lesson, day, startTime, endTime)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                newSlot \u003d module.getSlot(lesson, day, startTime, endTime);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"  Slot already exists.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                if (startTime.isAfter(endTime) || startTime.equals(endTime)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIME_FORMAT,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                            \"  Invalid time for slot. (\" + slotAndBookmark.get(2) + \" \" + slotAndBookmark.get(3) + \")\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                } else if (timetable.isOverlapTimeSlot(day, startTime, endTime)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIME_FORMAT,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                            \"  Slot clash. (\" + slotAndBookmark.get(2) + \" \" + slotAndBookmark.get(3) + \")\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                            + \" Please check timetable.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    newSlot \u003d module.createSlotNew(lesson, day, startTime, endTime);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    module.addSlot(newSlot);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    message +\u003d  \"  \" + lesson + \" slot added\" + System.lineSeparator();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d checkForAndAddBookmarkToSlot(slotAndBookmark, lesson, newSlot);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"  Invalid command format.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private Slot retrieveSlotFromModule(Module module, List\u003cString\u003e slotAndBookmark) throws ZoomasterException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Slot slot;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            int index \u003d Integer.parseInt(slotAndBookmark.get(0)) - 1;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            slot \u003d module.getSlot(index);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.NON_INTEGER_INPUT, \"  Invalid slot index.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_SLOT_NUMBER, \"  Slot index out of range.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slot;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected String checkForAndAddBookmarkToSlot(List\u003cString\u003e slotAndBookmark, String lesson, Slot newSlot)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throws ZoomasterException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (slotAndBookmark.size() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            createBookmark(slotAndBookmark.get(4), lesson, newSlot);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"    bookmark added to \" + moduleCode + \" \" + lesson + System.lineSeparator();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (slotAndBookmark.size() \u003e 5) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"    Invalid url format. Please provide one valid url.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected String addBookmarkToModule(Module module, List\u003cString\u003e slotAndBookmark) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d slotAndBookmark.get(0);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String url \u003d slotAndBookmark.get(1);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        module.addBookmark(bookmark);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"  bookmark added to module\\n\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected boolean isAddModuleBookmark(List\u003cString\u003e slotAndBookmark) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            int num \u003d Integer.parseInt(slotAndBookmark.get(0));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            return (slotAndBookmark.get(1).startsWith(\"www.\") || slotAndBookmark.get(1).startsWith(\"https://\"))"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    \u0026\u0026 slotAndBookmark.size() \u003d\u003d 2;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void createBookmark(String url, String lesson, Slot newSlot) throws ZoomasterException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!Bookmark.isUrlValid(url)) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_URL, \"invalid url format: \" + url"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + \"URL must start with either \u0027www.\u0027, \u0027http://\u0027 or \u0027https://\u0027\""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    + System.lineSeparator());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(lesson, url);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        newSlot.addBookmark(bookmark);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Validates the module code with the list of modules moduleList."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param module The module code to be added."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * true if module exist in the list or list is null."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *     false if module does not exists in the list."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private boolean isValidModule(String module) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (Module.getModuleList() \u003d\u003d null) { // If unable to get list of modules, always return true."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (Module.getModuleList().contains(module)) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 191,
      "TYS0n1": 24,
      "fchensan": 1
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/timetable/DeleteSlotCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class DeleteSlotCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String DEL_KW \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String moduleCode;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private Integer slotIndex \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private boolean deleteBookmarks \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new DeleteSlotCommand instance and stores the information of the Slot given by the input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws ZoomasterException if input command is invalid."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    //@@ xingrong123"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public DeleteSlotCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert command.startsWith(DEL_KW);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String details \u003d command.substring(DEL_KW.length());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, DEL_KW);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String[] deleteCommands \u003d details.trim().split(\" \", 3);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        moduleCode \u003d deleteCommands[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String bookmarksOrSlotCommand \u003d deleteCommands[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (bookmarksOrSlotCommand.trim().compareTo(\"bookmarks\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                deleteBookmarks \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                slotIndex \u003d Integer.parseInt(bookmarksOrSlotCommand) - 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                if (deleteCommands[2].trim().compareTo(\"bookmarks\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    deleteBookmarks \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            // No slot index or delete bookmark keyword provided."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            // The application will proceed with deleting the module."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.NON_INTEGER_INPUT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Deletes either module or slot depending on the deleteBookmarks flag."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param bookmarks The list of bookmarks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param timetable The timetable."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws ZoomasterException if the slot number provide is invalid."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!timetable.moduleExists(moduleCode)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message +\u003d \"module does not exists\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Module module \u003d timetable.getModule(moduleCode);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (slotIndex \u003d\u003d null \u0026\u0026 !deleteBookmarks) { // delete module"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                timetable.deleteModule(module);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                message +\u003d \"deleted module: \" + moduleCode + \"\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else if (slotIndex !\u003d null \u0026\u0026 !deleteBookmarks) { // delete slot"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                Slot slot \u003d module.getSlot(slotIndex);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                module.removeSlot(slot);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                message +\u003d \"deleted \" + slot + \" from \" + moduleCode + \"\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else if (slotIndex \u003d\u003d null \u0026\u0026 deleteBookmarks) { // delete module bookmark"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                module.removeAllBookmarks();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"deleted bookmarks from \" + moduleCode + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else if (slotIndex !\u003d null \u0026\u0026 deleteBookmarks) { // delete slot bookmark"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                Slot slot \u003d module.getSlot(slotIndex);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                slot.removeAllBookmarks();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"deleted bookmarks from \" + slot.getDay() + \" \" + slot + \" from \" + moduleCode + \"\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 19,
      "TYS0n1": 74
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/timetable/EditSlotCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class EditSlotCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String EDIT_KW \u003d \"edit\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String FIELD_KW_MODULE \u003d \"module\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String FIELD_KW_TITLE \u003d \"title\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String FIELD_KW_TIME \u003d \"time\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private String fieldToEdit;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public EditSlotCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        assert command.startsWith(EDIT_KW);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        // details: \"NEW_MODULE_CODE\" or \"NEW_TITLE\" or \"NEW_DAY START_TIME END_TIME\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        details \u003d command.substring(EDIT_KW.length()).trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, EDIT_KW);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Pattern parser \u003d Pattern.compile("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                \"(?\u003cfieldToEdit\u003e[a-zA-Z]+)\\\\s+(?\u003cdetails\u003e.+)\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Matcher matcher \u003d parser.matcher(details);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_EDIT_INPUT);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        fieldToEdit \u003d matcher.group(\"fieldToEdit\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        details \u003d matcher.group(\"details\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Pattern parser \u003d Pattern.compile("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                \"(?\u003cday\u003e[a-zA-Z]+)\\\\s+(?\u003cindexInDay\u003e\\\\d+)\\\\s+(?\u003cfirstArgument\u003e\\\\w+)\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                + \"(\\\\s+(?\u003cstartTime\u003e[\\\\w:]+)\\\\s+(?\u003cendTime\u003e[\\\\w:]+))?\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Matcher matcher \u003d parser.matcher(details);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_EDIT_INPUT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String day \u003d matcher.group(\"day\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        int indexInDay \u003d Integer.parseInt(matcher.group(\"indexInDay\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Slot slot;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        switch (fieldToEdit) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        case FIELD_KW_MODULE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            timetable.moveSlotToAnotherModule(day, indexInDay, matcher.group(\"firstArgument\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            message \u003d \"Slot moved to \" + matcher.group(\"firstArgument\").toUpperCase();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        case FIELD_KW_TITLE:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            slot \u003d timetable.getSlotByIndexInDay(day, indexInDay);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            slot.setTitle(matcher.group(\"firstArgument\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            message \u003d \"Slot title changed to \" + matcher.group(\"firstArgument\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        case FIELD_KW_TIME:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            slot \u003d timetable.getSlotByIndexInDay(day, indexInDay);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            message \u003d changeSlotTime("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    slot,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    matcher.group(\"firstArgument\"),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    matcher.group(\"startTime\"),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    matcher.group(\"endTime\"),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    timetable);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            message \u003d \"Unrecognized field!\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.print(message + System.lineSeparator());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Change a slot\u0027s start and end time with the given user input."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param slot The slot object with the day we want to change."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param startTimeInput The new start time as string."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param endTimeInput The new end time as string."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private String changeSlotTime("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            Slot slot, String dayInput, String startTimeInput, String endTimeInput, Timetable timetable)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throws ZoomasterException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        LocalTime startTime;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        LocalTime endTime;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            startTime \u003d LocalTime.parse(startTimeInput);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            endTime \u003d LocalTime.parse(endTimeInput);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIME_FORMAT);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (timetable.isOverlapTimeSlot(dayInput, startTime, endTime)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            return \"Timing clashes with another slot!\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        slot.setDay(dayInput);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        slot.setStartTime(startTime);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        slot.setEndTime(endTime);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return \"Slot time changed to \" + dayInput + \" \" + startTimeInput + \" \" + endTimeInput;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 124
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/timetable/LaunchModuleAndSlotBookmark.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class LaunchModuleAndSlotBookmark extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String LAUNCH_KW \u003d \"launch\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private List\u003cString\u003e  moduleAndSlotIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public LaunchModuleAndSlotBookmark(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert command.startsWith(LAUNCH_KW) : \"command should start with launch keyword\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String details \u003d command.substring(LAUNCH_KW.length());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_COMMAND, LAUNCH_KW);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        moduleAndSlotIndex \u003d Arrays.asList(details.trim().split(\"\\\\s+\", 2));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String moduleCode \u003d moduleAndSlotIndex.get(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Integer slotIndex \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (moduleAndSlotIndex.size() \u003d\u003d 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                slotIndex \u003d Integer.parseInt(moduleAndSlotIndex.get(1)) - 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.NON_INTEGER_INPUT);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Module module;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!timetable.moduleExists(moduleCode)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d \"module does not exist\" + System.lineSeparator();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            module \u003d timetable.getModule(moduleCode);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slotIndex \u003d\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d launchModuleBookmark(module);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                Slot slot \u003d module.getSlot(slotIndex);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message \u003d launchSlotBookmark(slot);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String launchModuleBookmark(Module module) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d module.launchBookmarks();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String launchSlotBookmark(Slot slot) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarkList \u003d slot.getBookmarkList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d bookmarkList.launchAllBookmarks();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 69
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/command/timetable/ShowTimetableCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import seedu.zoomaster.slot.Day;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.SlotContainer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ShowTimetableCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String SHOW_KW \u003d \"show\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private boolean showBookmarks \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String module \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new ShowTimetableCommand instance."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ShowTimetableCommand(String command) throws ZoomasterException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert command.startsWith(SHOW_KW) : \"command should start with show keyword\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (command.compareTo(SHOW_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            day \u003d \"ALL\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (command.charAt(SHOW_KW.length()) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            String details \u003d command.substring(SHOW_KW.length() + 1).trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (details.toLowerCase().equals(\"today\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                day \u003d Day.getDayToday();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (Day.isDay(details)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                day \u003d Day.getDayFromCommand(details);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                String[] something \u003d details.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                module \u003d something[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                if (something.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    if (something[1].compareTo(\"bookmarks\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        showBookmarks \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        throw new ZoomasterException(ZoomasterExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void execute(BookmarkList bookmarks, Timetable timetable, Ui ui) throws ZoomasterException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cModule\u003e modules \u003d timetable.getFullModuleList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (day !\u003d null) { // \"show\" and \"show day\" and \"show today\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            List\u003cSlot\u003e list \u003d new ArrayList\u003c\u003e(timetable.getFullSlotList());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message +\u003d getMessageLessonAtTime(modules, list, day);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (isShowModule()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (!timetable.moduleExists(module)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.INVALID_MODULE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Module matchedModule \u003d timetable.getModule(module);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message +\u003d getMessageForModule(matchedModule);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (isShowModuleBookmarks()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (!timetable.moduleExists(module)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                throw new ZoomasterException(ZoomasterExceptionType.INVALID_MODULE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            Module matchedModule \u003d timetable.getModule(module);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message +\u003d matchedModule.getBookmarks();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui.print(message);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String getMessageSlotsInADay(List\u003cModule\u003e modules, List\u003cSlot\u003e slots, String day) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean hasSlotOnDay \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean hasIndicatorOnDay \u003d false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (day.equals(Day.getDayToday())) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            hasIndicatorOnDay \u003d true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cSlot\u003e thisDaySlots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cString\u003e thisDayModuleCodesList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Slot s: slots) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            for (Module module : modules) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                if (module.slotExists(s) \u0026\u0026 s.getDay().equals(day)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    thisDaySlots.add(s);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    thisDayModuleCodesList.add(module.getModuleCode());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        SlotContainer slotContainer \u003d new SlotContainer(thisDaySlots, thisDayModuleCodesList);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        SlotContainer sortedSlotContainer \u003d SlotContainer.sortSlotsByTime(slotContainer);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cSlot\u003e sortedSlots \u003d sortedSlotContainer.getSlotList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cString\u003e sortedModuleCodes \u003d sortedSlotContainer.getModuleCodesList();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (int i \u003d 0; i \u003c sortedSlots.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            if (hasLessonNow(sortedSlots.get(i)) \u0026\u0026 !sortedSlots.get(i).getTitle().equals(\"\u003cempty slot\u003e\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                message.append(getHighlighBoxUpperMessage());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                message.append(i + 1).append(\". \")"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                        .append(sortedSlots.get(i).toString()).append(\" \")"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        .append(sortedModuleCodes.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                message.append(getHighlighBoxLowerMessage());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                hasIndicatorOnDay \u003d false;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                if (sortedSlots.get(i).getStartTime().isAfter(LocalTime.now())"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        \u0026\u0026 hasIndicatorOnDay) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    message.append(getIndicatorMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    hasIndicatorOnDay \u003d false;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                message.append(i + 1).append(\". \")"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                        .append(sortedSlots.get(i).toString()).append(\" \")"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        .append(sortedModuleCodes.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            hasSlotOnDay \u003d true;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!hasSlotOnDay) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message.append(\"No lessons\" + \"\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (hasIndicatorOnDay) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message.append(getIndicatorMessage());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        message.append(\"\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String getMessageTimetable(List\u003cModule\u003e modules, List\u003cSlot\u003e slots) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Day day: Day.values()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message.append(day.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message.append(getMessageSlotsInADay(modules, slots, day.toString()));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String getMessageLessonAtTime(List\u003cModule\u003e modules, List\u003cSlot\u003e slots,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                                          String dayInput) throws ZoomasterException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (slots.isEmpty()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.EMPTY_TIMETABLE);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (dayInput \u003d\u003d null) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_TIMETABLE_DAY);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (dayInput.compareTo(\"ALL\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return getMessageTimetable(modules,slots);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        message +\u003d \"Lessons for \" + dayInput + \"\\n\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        message +\u003d getMessageSlotsInADay(modules, slots, dayInput);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String getMessageForModule(Module module) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cSlot\u003e slots \u003d module.getSlotList();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (!slots.isEmpty()) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message +\u003d module.getModuleCode() + \"\\n\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            for (int i \u003d 0; i \u003c slots.size(); i++) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                Slot slot \u003d slots.get(i);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                String dayString \u003d (isShowModule() ? slot.getDay() + \" \" : \"\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"  \" + (i + 1) + \". \" + dayString + slot.toString() + \"\\n\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            message +\u003d \"no slots for \" + module.getModuleCode() + \"\\n\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static boolean hasLessonNow(Slot slot) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean isOverlap \u003d false;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        LocalTime timeNow \u003d LocalTime.now();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (slot.getStartTime().isBefore(timeNow) \u0026\u0026 slot.getEndTime().isAfter(timeNow)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                \u0026\u0026 Day.getDayToday().equals(slot.getDay())) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            isOverlap \u003d true;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return isOverlap;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static String getIndicatorMessage() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        DateTimeFormatter hoursAndMinutes \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String currentTimeMessage \u003d \"\u003c----\" + \"Current Time: \" + LocalTime.now().format(hoursAndMinutes)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                + \"----\u003e\" + \"\\n\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return \"\\u001b[33m\" + currentTimeMessage + \"\\u001b[0m\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static String getHighlighBoxUpperMessage() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"[\u003d\u003d\u003d\u003d\" + \"Lesson now\" + \"\u003d\u003d\u003d\u003d]\" + \"\\n\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return \"\\u001b[32m\" + message + \"\\u001b[0m\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static String getHighlighBoxLowerMessage() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String message \u003d \"[\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d]\" + \"\\n\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return \"\\u001b[32m\" + message + \"\\u001b[0m\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private boolean isShowModuleBookmarks() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return module !\u003d null \u0026\u0026 showBookmarks;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private boolean isShowModule() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return module !\u003d null \u0026\u0026 !showBookmarks;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 28,
      "TYS0n1": 178,
      "fchensan": 5,
      "jusufnathanael": 1
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/exception/ZoomasterException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * The class DukeException is a subclass of Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * It is thrown when an error specific to Duke occurs."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ZoomasterException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private ZoomasterExceptionType zoomasterExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String info;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new DukeException instance by storing the given DukeExceptionType."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param zoomasterExceptionType The type of dukeException."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ZoomasterException(ZoomasterExceptionType zoomasterExceptionType) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.zoomasterExceptionType \u003d zoomasterExceptionType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructs a new DukeException instance by storing the given DukeExceptionType and message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param zoomasterExceptionType The type of dukeException."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param info Additional information of the exception."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ZoomasterException(ZoomasterExceptionType zoomasterExceptionType, String info) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.zoomasterExceptionType \u003d zoomasterExceptionType;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.info \u003d info;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the dukeExceptionType of the dukeException."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return the dukeExceptionType."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ZoomasterExceptionType getError() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return zoomasterExceptionType;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return info;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 45
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/exception/ZoomasterExceptionType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Enumeration of all the types of DukeException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public enum ZoomasterExceptionType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    UNKNOWN_INPUT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    UNKNOWN_HELP_COMMAND,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_MODE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    WRITE_FILE_ERROR,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    ERROR_LOADING_FILE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_ADD_BOOKMARK_INPUT,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    EMPTY_BOOKMARK_LIST,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    EMPTY_DESCRIPTION,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    EMPTY_COMMAND,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    NON_INTEGER_INPUT,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    BOOKMARK_NUMBER_OUT_OF_BOUNDS,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    ZERO_SLOTS_IN_MODULE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_URL,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    ERROR_LAUNCHING_URL,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_MODULE,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_SLOT_NUMBER,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_TIME_FORMAT,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_SLOT_INPUT,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    INVALID_EDIT_INPUT,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    INVALID_TIMETABLE_DAY,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    EMPTY_TIMETABLE,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    CONNECTION_ERROR,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    JSON_PARSE_ERROR,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    EMPTY_FOLDER"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "TYS0n1": 27,
      "fchensan": 1,
      "jusufnathanael": 1,
      "Speedweener": 2
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/slot/Day.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public enum Day {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    MON,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    TUE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    WED,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    THU,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    FRI,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    SAT,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    SUN;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns String of today\u0027s day of the week."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return outputDay String of today\u0027s day of the week readable by Slot class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static String getDayToday() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String outputDay;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert (LocalDate.now().getDayOfWeek().getValue() \u003c\u003d 7) \u0026\u0026 (LocalDate.now().getDayOfWeek().getValue() \u003e\u003d 1) :"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                \"LocalDate.now().getDayOfWeek().getValue() only returns value within range 1 to 7\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        switch (LocalDate.now().getDayOfWeek().getValue()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d MON.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d TUE.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d WED.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d THU.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d FRI.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d SAT.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputDay \u003d SUN.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return outputDay;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static String getDayFromCommand(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String outputData;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (input.compareToIgnoreCase(MON.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d MON.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(TUE.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d TUE.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(WED.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d WED.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(THU.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d THU.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(FRI.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d FRI.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(SAT.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d SAT.toString();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(SUN.toString()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d SUN.toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            outputData \u003d null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return outputData;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static boolean isDay(String input) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        boolean isDay \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (getDayFromCommand(input) !\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            isDay \u003d true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return isDay;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String day;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case MON:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"mon\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case TUE:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"tue\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case WED:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"wed\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case THU:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"thu\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case FRI:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"fri\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case SAT:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"sat\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case SUN:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            day \u003d \"sun\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 113
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/slot/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String moduleCode;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private List\u003cSlot\u003e slots;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static ArrayList\u003cString\u003e moduleList; //List of all NUS module codes"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static ArrayList\u003cString\u003e getModuleList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return moduleList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static void setModuleList(ArrayList\u003cString\u003e moduleList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Module.moduleList \u003d moduleList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Module(String moduleCode) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.moduleCode \u003d moduleCode.toUpperCase();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        slots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void addSlot(Slot slot) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        slots.add(slot);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Collections.sort(slots, new Comparator\u003cSlot\u003e() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            public int compare(Slot s1, Slot s2) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                return s1.getStartTime().compareTo(s2.getStartTime());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean slotExists(String lesson, String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Slot slot : slots) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slot.match(lesson, day, startTime, endTime)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean slotExists(Slot slot) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slots.contains(slot);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Slot getSlot(String lesson, String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Slot slot : slots) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slot.match(lesson, day, startTime, endTime)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                return slot;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Slot getSlot(int index) throws ZoomasterException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Slot slot;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (slots.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.ZERO_SLOTS_IN_MODULE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            slot \u003d slots.get(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_SLOT_NUMBER, \"\" + slots.size());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slot;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Slot createSlotNew(String lesson, String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Slot slot \u003d new Slot(startTime, endTime, day, lesson);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slot;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void removeSlot(Slot slot) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assert slots.contains(slot) : \"Use getSlot to get reference of slot to be deleted before calling this method\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        slots.remove(slot);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean isModule(String moduleCode) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        boolean isModule \u003d false;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (this.moduleCode.compareToIgnoreCase(moduleCode) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            isModule \u003d true;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return isModule;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void addBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void removeAllBookmarks() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public List\u003cSlot\u003e getSlotList() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return slots;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String getBookmarks() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cBookmark\u003e bookmarkList \u003d bookmarks.getBookmarks();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Bookmark bookmark : bookmarkList) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d bookmark.getBookmarkAsString();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!message.isBlank()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d System.lineSeparator();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (bookmarkList.isEmpty()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            message +\u003d \"no bookmarks found in module itself\" + System.lineSeparator() + System.lineSeparator();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (int i \u003d 0; i \u003c slots.size(); i++) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Slot slot \u003d slots.get(i);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d (i + 1) + \". \" + slot.getDay() + \" \" + slot.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            List\u003cBookmark\u003e slotBookmarkList \u003d slot.getBookmarkList().getBookmarks();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            for (Bookmark bookmark : slotBookmarkList) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"  \" + bookmark.getBookmarkAsString();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (slotBookmarkList.isEmpty()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                message +\u003d \"  no bookmarks found in slot\" + System.lineSeparator();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d System.lineSeparator();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (message.isBlank()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d \"no bookmarks found in \" + moduleCode + System.lineSeparator();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String launchBookmarks() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d bookmarks.launchAllBookmarks();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String getModuleCode() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return moduleCode;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 123,
      "TYS0n1": 7,
      "fchensan": 9,
      "Speedweener": 9
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/slot/Slot.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Slot {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Slot(LocalTime startTimeInput, LocalTime endTimeInput, String dayInput, String titleInput) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        startTime \u003d startTimeInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        endTime \u003d endTimeInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        day \u003d dayInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        title \u003d titleInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public boolean match(String lesson, String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (title.compareToIgnoreCase(lesson) \u003d\u003d 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                \u0026\u0026 this.day.compareToIgnoreCase(day) \u003d\u003d 0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                \u0026\u0026 this.startTime.equals(startTime)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                \u0026\u0026 this.endTime.equals(endTime)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Bookmark getBookmark(int index) throws ZoomasterException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            bookmark \u003d bookmarks.getBookmark(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.BOOKMARK_NUMBER_OUT_OF_BOUNDS, \"\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                                         + bookmarks.getSize());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return bookmark;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public BookmarkList getBookmarkList() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return bookmarks;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void removeAllBookmarks() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void addBookmark(Bookmark bookmark) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setStartTime(LocalTime timeInput) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        startTime \u003d timeInput;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public LocalTime getStartTime() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public int getStartMinutes() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int hours \u003d Integer.parseInt(startTime.toString().substring(0,2));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int minutes \u003d Integer.parseInt(startTime.toString().substring(3));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return hours * 60 + minutes;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setEndTime(LocalTime timeInput) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        endTime \u003d timeInput;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public LocalTime getEndTime() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public int getEndMinutes() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int hours \u003d Integer.parseInt(endTime.toString().substring(0,2));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int minutes \u003d Integer.parseInt(endTime.toString().substring(3));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return hours * 60 + minutes;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static LocalTime convertIntToLocalTime(int hours, int minutes) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String h \u003d String.valueOf(hours);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String m \u003d String.valueOf(minutes);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (hours \u003c 10) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            h \u003d \"0\" + h;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (minutes \u003c 10) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            m \u003d \"0\" + m;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return LocalTime.parse(h + \":\" + m);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setDay(String dayInput) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        day \u003d dayInput;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getDay() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setTitle(String titleInput) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        title \u003d titleInput;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return String.format(startTime.toString() + \"-\" + endTime.toString() + \" \" + title);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 4,
      "TYS0n1": 114
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/slot/SlotContainer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Stores an ArrayList of Slots and Strings."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Used to help produce a sorted timetable of Slots and its associated module code."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class SlotContainer {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private ArrayList\u003cSlot\u003e thisDaySlots;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private ArrayList\u003cString\u003e thisDayModuleCodesList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructor of SlotContainer object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Initializes the ArrayLists to be stored in SlotContainer object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param slotsListInput The ArrayList of Slots to be stored in SlotContainer object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param moduleCodesListInput The ArrayList of Strings to be stored in SlotContainer object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public SlotContainer(ArrayList\u003cSlot\u003e slotsListInput, ArrayList\u003cString\u003e moduleCodesListInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.thisDaySlots \u003d slotsListInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        this.thisDayModuleCodesList \u003d moduleCodesListInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the ArrayList of Slots stored in SlotContainer object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return thisDaySlots."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ArrayList\u003cSlot\u003e getSlotList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return thisDaySlots;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Replaces the existing ArrayList of Slots stored in SlotContainer object with a new"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * ArrayList of Slots."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param slotsListInput The ArrayList of Slots replacing the existing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setToSlotList(ArrayList\u003cSlot\u003e slotsListInput) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        thisDaySlots \u003d slotsListInput;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns the ArrayList of Strings stored in SlotContainer object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return thisDayModuleCodesList."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public ArrayList\u003cString\u003e getModuleCodesList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return thisDayModuleCodesList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Replaces the existing ArrayList of String stored in SlotContainer object with a new"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * ArrayList of String."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param moduleCodeListInput The ArrayList of Strings replacing the existing."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setModuleCodesList(ArrayList\u003cString\u003e moduleCodeListInput) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        thisDayModuleCodesList \u003d moduleCodeListInput;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Sorts the timetable, ArrayList of Slots and The ArrayList of Strings of ModuleCodes"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * based on day of the week and 24 hour timing."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * It sorts the timetable day from monday and ends with sunday."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * It sorts the timetable timing from 00:00 to 23:59."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param slotContainer The container containing the timetable to be sorted."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return new SlotContainer(sortedThisDaySlots, sortedThisDayModuleCodesList)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static SlotContainer sortSlotsByTime(SlotContainer slotContainer) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cSlot\u003e thisDaySlots \u003d slotContainer.getSlotList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cString\u003e thisDayModuleCodesList \u003d slotContainer.getModuleCodesList();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cSlot\u003e sortedThisDaySlots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cString\u003e sortedThisDayModuleCodesList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int indexEarliestTimeSlot;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Slot earliestTimeSlot;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        while (thisDaySlots.size() !\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            earliestTimeSlot \u003d thisDaySlots.get(0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            indexEarliestTimeSlot \u003d 0;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            for (int i \u003d 1; i \u003c thisDaySlots.size(); i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                if (earliestTimeSlot.getStartTime().isAfter(thisDaySlots.get(i).getStartTime())) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    earliestTimeSlot \u003d thisDaySlots.get(i);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    indexEarliestTimeSlot \u003d i;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            sortedThisDaySlots.add(thisDaySlots.get(indexEarliestTimeSlot));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            sortedThisDayModuleCodesList.add(thisDayModuleCodesList.get(indexEarliestTimeSlot));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            thisDaySlots.remove(indexEarliestTimeSlot);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            thisDayModuleCodesList.remove(indexEarliestTimeSlot);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return new SlotContainer(sortedThisDaySlots, sortedThisDayModuleCodesList);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 98
    }
  },
  {
    "path": "src/main/java/seedu/zoomaster/slot/Timetable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Timetable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private List\u003cModule\u003e modules;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Timetable() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public boolean moduleExists(String moduleCode) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean moduleExists \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Module module : modules) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (module.isModule(moduleCode)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                moduleExists \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return moduleExists;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Module addModule(String moduleCode) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Module module \u003d new Module(moduleCode);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        modules.add(module);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void addModule(Module module) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        modules.add(module);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public List\u003cSlot\u003e getFullSlotList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cSlot\u003e slotList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Module module : modules) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            slotList.addAll(module.getSlotList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return slotList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void clearAllModule() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        modules.removeAll(modules);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public List\u003cModule\u003e getFullModuleList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return modules;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Module getModule(String moduleCode) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Module module \u003d null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (Module mod : modules) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (mod.isModule(moduleCode)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                module \u003d mod;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assert module !\u003d null : \"module should not be null\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Module getModuleContainingSlot(Slot slot) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        for (Module module: modules) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            if (module.getSlotList().contains(slot)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                return module;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void deleteModule(Module module) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        modules.remove(module);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public boolean isOverlapTimeSlot(String day, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        boolean isOverlap \u003d false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        List\u003cSlot\u003e slotList \u003d getFullSlotList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        for (Slot slot : slotList) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            if (slot.getDay().equals(day)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                if ((isTimeAGreaterEqualsTimeB(startTime, slot.getEndTime())"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                        \u0026\u0026 isTimeAGreaterEqualsTimeB(endTime, slot.getEndTime()))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                        || (isTimeAGreaterEqualsTimeB(slot.getStartTime(), startTime)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                        \u0026\u0026 isTimeAGreaterEqualsTimeB(slot.getStartTime(), endTime))) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                isOverlap \u003d true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return isOverlap;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public boolean isTimeAGreaterEqualsTimeB(LocalTime timeA, LocalTime timeB) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        boolean isGreaterEquals \u003d false;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (timeA.isAfter(timeB) || timeA.equals(timeB)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            isGreaterEquals \u003d true;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return isGreaterEquals;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Slot getSlotByIndexInDay(String day, int index) throws ZoomasterException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ArrayList\u003cSlot\u003e slots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ArrayList\u003cString\u003e moduleCodeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        for (Module module: modules) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            for (Slot s: module.getSlotList()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                if (s.getDay().equals(day)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    slots.add(s);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    moduleCodeList.add(module.getModuleCode());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        SlotContainer slotContainer \u003d new SlotContainer(slots, moduleCodeList);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        slotContainer \u003d SlotContainer.sortSlotsByTime(slotContainer);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            return slotContainer.getSlotList().get(index - 1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new ZoomasterException(ZoomasterExceptionType.INVALID_SLOT_NUMBER);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    //@@author fchensan"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Move a slot to another module given a user input module code."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param dayOfSlot The day of slot to be moved."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param indexInDay The index of the slot within its day."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param newModuleCode The module code where the slot will be moved to."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void moveSlotToAnotherModule(String dayOfSlot, int indexInDay, String newModuleCode)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throws ZoomasterException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Slot slot \u003d getSlotByIndexInDay(dayOfSlot, indexInDay);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        getModuleContainingSlot(slot).removeSlot(slot);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Module newModule;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (moduleExists(newModuleCode)) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            newModule \u003d getModule(newModuleCode);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            newModule \u003d addModule(newModuleCode);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        newModule.addSlot(slot);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return modules.isEmpty();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 59,
      "fchensan": 90,
      "jusufnathanael": 4
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.zoomaster;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void parseInvalidCommandThrowsUnknownInputException() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"iNvAlidCOmmand\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, e.getError());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException f \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"iNvAlidCOmmand\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, f.getError());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 2;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException g \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"iNvAlidCOmmand\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, g.getError());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void parseEmptyCommandMode1ThrowsUnknownInputException() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, e.getError());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException f \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, f.getError());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 2;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException g \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, g.getError());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void parseHelpCommandWithInvalidCommandThrowsUnknownHelpCommand() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"helpextrawords\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_HELP_COMMAND, e.getError());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException f \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"helpextrawords\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_HELP_COMMAND, f.getError());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 2;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException g \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"helpextrawords\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_HELP_COMMAND, g.getError());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void parseInvalidCommandsMode0ThrowsUnknownInputException() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"add\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, e.getError());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException f \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"delete\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, f.getError());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException g \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"show\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, g.getError());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException h \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"find\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, h.getError());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException i \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"launch\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, i.getError());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void parseInvalidCommandsMode1ThrowsUnknownInputException() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"load\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, e.getError());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void parseInvalidCommandsMode2ThrowsUnknownInputException() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 2;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"find\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, e.getError());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException f \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"load\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, f.getError());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void parseInvalidCommandsMode3ThrowsUnknownInputException() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 3;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"find\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, e.getError());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException f \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"delete\"));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, f.getError());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException h \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"find\"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, h.getError());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException i \u003d assertThrows(ZoomasterException.class, () -\u003e Parser.parse(\"launch\"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.UNKNOWN_INPUT, i.getError());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Parser.programMode \u003d 0;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void getProgramMode() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 102
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/StorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package seedu.zoomaster;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.lang.reflect.InvocationTargetException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void loadTimetableWithInvalidFilePath() throws ZoomasterException, NoSuchMethodException,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            IllegalAccessException, InvocationTargetException, InstantiationException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Storage test \u003d new Storage(\"iNvAlIdPaThNaMe/data/timetable/\", Timetable.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertTrue(test.load() instanceof Timetable);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void loadStorageWithInvalidFilePath() throws ZoomasterException, NoSuchMethodException,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            IllegalAccessException, InvocationTargetException, InstantiationException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Storage test \u003d new Storage(\"iNvAlIdPaThNaMe/data/bookmark/\", BookmarkList.class);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertTrue(test.load() instanceof BookmarkList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void loadWithBaseClassThrowsErrorLoadingFileException() throws ZoomasterException,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            NoSuchMethodException, IllegalAccessException, InvocationTargetException, InstantiationException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Storage test \u003d new Storage(\"iNvAlIdPaThNaMe/data/timetable/\", Bookmark.class);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e test.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.ERROR_LOADING_FILE, e.getError());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void getFiles() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void loadPlanner() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void saveNullObjectThrowsWriteFileErrorException() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Storage test \u003d new Storage(\"/data/timetable/\", Timetable.class);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e test.save(null));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.WRITE_FILE_ERROR, e.getError());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void loadModuleListWithInvalidPathThrowsFileNotFoundException() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Storage test \u003d new Storage(\"iNvAlIdPaThNaMe/data/timetable/\", Timetable.class);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertThrows(FileNotFoundException.class, () -\u003e test.loadModuleList());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 61
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/ZoomasterTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "class ZoomasterTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 2,
      "TYS0n1": 1,
      "-": 9
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/bookmark/BookmarkListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "class BookmarkListTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private final Bookmark bookmarkTest \u003d new Bookmark(\"tutorial\", \"www.google.com\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private final String lineSeparator \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void addBookmark() throws IndexOutOfBoundsException, ZoomasterException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.addBookmark(bookmark);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmark, bookmarks.getBookmark(0));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void initializeBookmarkListWithArrayList_validBookmark_addsToBookmarkList() throws IndexOutOfBoundsException,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            ZoomasterException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getBookmark(0).getExport(), \"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getBookmark(1).getExport(), \"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Adds 1 valid and 1 invalid bookmark to the BookmarkList."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Asserts IndexOutOfBoundsException for index 1 as only 1 bookmark will be added to index 0."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void initializeBookmarkListWithArrayList_invalidBookmark_throwsIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e bookmarks.getBookmark(1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getData() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getData(), \"tutorial | www.google.com\" + System.lineSeparator()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getSize() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | https://www.youtube.com/\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getSize(), 3);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void getBookmark() throws IndexOutOfBoundsException, ZoomasterException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.addBookmark(bookmarkTest);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarkTest, bookmarks.getBookmark(0));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getBookmarkList_returnsListOfBookmarks() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.addBookmark(bookmarkTest);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cBookmark\u003e bookmarksExpected \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarksExpected.add(bookmarkTest);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarksExpected, bookmarks.getBookmarks());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Adds 4 valid bookmarks to the BookmarkList."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Checks that size decreases to 4 after deletion."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Checks that bookmark at index 2 changes after deletion."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void deleteBookmark() throws IndexOutOfBoundsException, ZoomasterException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2113T | www.google.com\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2113T | www.yahoo.com\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS1010 | https://www.youtube.com/\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"GEH1049 | https://www.stackoverflow.com/\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getSize(), 4);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getBookmark(2).getBookmarkAsString(),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                \"[CS1010] https://www.youtube.com/\" + System.lineSeparator());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        bookmarks.deleteBookmark(bookmarks.getBookmark(2));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getSize(), 3);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(bookmarks.getBookmark(2).getBookmarkAsString(),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                \"[GEH1049] https://www.stackoverflow.com/\" + System.lineSeparator());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void showBookmark() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2113T | www.google.com\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2113T | www.yahoo.com\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"Here are the bookmarks in your list:\" + lineSeparator"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"  \" + (1) + \".\" + \"[CS2113T] www.google.com\" + lineSeparator"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"  \" + (2) + \".\" + \"[CS2113T] www.yahoo.com\" + lineSeparator + lineSeparator,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.showBookmarks());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void findBookmark_matchingBookmark() throws IndexOutOfBoundsException, ZoomasterException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2112T | www.google.com\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2113T | www.yahoo.com\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"Here are your matching bookmarks\" + lineSeparator + (2) + \".\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        + bookmarks.getBookmark(1).getBookmarkAsString() + lineSeparator,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.findBookmarks(\"CS2113T\"));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void findBookmark_emptyList_returnsEmptyListMessage() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"Empty List\" + lineSeparator,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.findBookmarks(\"CS2113T\"));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void findBookmark_noMatchingKeyword_returnsNoMatchingBookmarkMessage() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2112T | www.google.com\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"CS2113T | www.yahoo.com\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"No bookmarks contain the specified keyword!\" + lineSeparator,"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.findBookmarks(\"CS3113T\"));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void launchBookmark_matchingBookmark() throws IndexOutOfBoundsException, ZoomasterException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"Launched these bookmarks:\" + lineSeparator"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + (2) + \".\" + bookmarks.getBookmark(1).getBookmarkAsString() + lineSeparator,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.launchBookmarks(\"lecture\"));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void launchBookmark_emptyBookmarkList_returnEmptyListMessage() throws IndexOutOfBoundsException,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            ZoomasterException {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e bookmarks.launchBookmarks(\"lecture\"));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        assertEquals(ZoomasterExceptionType.EMPTY_BOOKMARK_LIST, e.getError());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    void launchBookmark_noMatchingBookmarks() throws ZoomasterException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d \"NONMATCHINGTERM\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"No bookmarks contain the specified keyword!\" + lineSeparator,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.launchBookmarks(description));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void launchAllBookmark_returnLaunchBookmarksMessage() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"tutorial | www.google.com\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        input.add(\"lecture | www.yahoo.com\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList(input);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"Launched these bookmarks:\" + lineSeparator"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        + \"1.[tutorial] www.google.com\" + lineSeparator"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                        + \"2.[lecture] www.yahoo.com\" + lineSeparator,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.launchAllBookmarks());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void launchAllBookmark_emptyBookmarkList_returnEmptyListMessage() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"Empty List\" + lineSeparator,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                bookmarks.launchAllBookmarks());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 188,
      "TYS0n1": 1,
      "Speedweener": 20
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/bookmark/BookmarkTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class BookmarkTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void extractModuleDescriptionAndUrl_returnsDescAndUrl() throws ZoomasterException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        List\u003cString\u003e expectedUrlAndDescription \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        expectedUrlAndDescription.add(\"tutorial\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        expectedUrlAndDescription.add(\"www.google.com\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String input \u003d \"tutorial www.google.com\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(expectedUrlAndDescription, Bookmark.extractDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void extractModuleDescriptionAndUrl_missingDescription_throwsZoomasterException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String input \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e Bookmark.extractDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(ZoomasterExceptionType.INVALID_ADD_BOOKMARK_INPUT, e.getError());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void extractModuleDescriptionAndUrl_invalidUrl_throwsZoomasterException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String input \u003d \"CS2113T google.com\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e Bookmark.extractDescriptionAndUrl(input));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(ZoomasterExceptionType.INVALID_URL, e.getError());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void launch() throws ZoomasterException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d \"desc\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String expectedOutput \u003d \"  [\" + description + \"] \" + url;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(expectedOutput, bookmark.launch());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getUrl_validModuleDescriptionAndUrl_returnsUrl() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(url, bookmark.getUrl());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getDescription_validModuleDescriptionAndUrl_returnsDescription() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(description, bookmark.getDescription());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getBookmarkAsString_returnsDescriptionAndUrl() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String expectedString \u003d \"[something] www.google.com\" + System.lineSeparator();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(expectedString, bookmark.getBookmarkAsString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getExport_returnsDescriptionAndUrl() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d \"something\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark bookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String expectedString \u003d description + \" | \" + url;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(expectedString, bookmark.getExport());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void initBookmark_validDataString_returnsBookmark() throws ZoomasterException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String data \u003d \"tutorial | www.google.com\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String description \u003d \"tutorial\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String url \u003d \"www.google.com\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Bookmark expectedBookmark \u003d new Bookmark(description, url);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(expectedBookmark.getBookmarkAsString(), Bookmark.initBookmark(data).getBookmarkAsString());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void initBookmark_missingSeparator_throwsIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String data \u003d \"tutorial www.google.com\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e Bookmark.initBookmark(data));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void initBookmark_invalidUrl_throwsZoomasterException() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String data \u003d \"tutorial | google com\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ZoomasterException e \u003d assertThrows(ZoomasterException.class, () -\u003e Bookmark.initBookmark(data));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(ZoomasterExceptionType.INVALID_URL, e.getError());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "TYS0n1": 101
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/command/ChangeModeCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ChangeModeCommandTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testChangeToBookmarkMode() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(1, new ChangeModeCommand(\"mode bookmark\").setToMode);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testChangeToTimetableMode() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(2, new ChangeModeCommand(\"mode timetable\").setToMode);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testInvalidModeInput() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(0, new ChangeModeCommand(\"mode abcd\").setToMode);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testShortLenghtInput() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(0, new ChangeModeCommand(\"mode\").setToMode);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 29
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/command/bookmark/AddBookmarkCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class AddBookmarkCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 12
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/command/bookmark/DeleteBookmarkCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class DeleteBookmarkCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 12
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/command/timetable/AddSlotCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class AddSlotCommandTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    void constructor_invalidInput_throwsDukeException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String input \u003d AddSlotCommand.ADD_KW;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            AddSlotCommand command \u003d new AddSlotCommand(input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            fail();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            assertEquals(e.getError(), DukeExceptionType.EMPTY_COMMAND);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        input \u003d AddSlotCommand.ADD_KW + \"1111 12:00 mon CS1231 lecture\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            AddSlotCommand command \u003d new AddSlotCommand(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            fail();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            assertEquals(e.getError(), DukeExceptionType.INVALID_TIME_FORMAT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    void execute_validInput_addsSlotInSlotSlit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String startTime \u003d \"10:00\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String endTime \u003d \"12:00\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String title \u003d \"CS1231 Lecture\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String input \u003d AddSlotCommand.ADD_KW + \" \" + startTime + \" \" + endTime + \" \" + Slot.FRI + \" \" + title;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        SlotList expectedSlots \u003d new SlotList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        expectedSlots.addSlot(new Slot(LocalTime.parse(startTime),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                LocalTime.parse(endTime),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                Slot.FRI,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                title"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                ));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        AddSlotCommand command;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            command \u003d new AddSlotCommand(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            command.execute(new BookmarkList(),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                    slots,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                    new Ui(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                    new Storage(\"test.txt\"),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                    new Storage(\"test.txt\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            fail(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        assertEquals(expectedSlots.getData(), slots.getData());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 59
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/command/timetable/DeleteSlotCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class DeleteSlotCommandTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    void constructor_invalidInput_throwsDukeException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String input \u003d DeleteSlotCommand.DEL_KW + \" 0\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            DeleteSlotCommand command \u003d new DeleteSlotCommand(input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            assertEquals(e.getError(), DukeExceptionType.INVALID_SLOT_NUMBER);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    void execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String startTime \u003d \"10:00\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String endTime \u003d \"12:00\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String title \u003d \"CS1231 Lecture\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        SlotList slots \u003d new SlotList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        slots.addSlot(new Slot(LocalTime.parse(startTime),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                LocalTime.parse(endTime),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                Slot.FRI,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//                title"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        ));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        String input \u003d DeleteSlotCommand.DEL_KW + \" 1\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            DeleteSlotCommand command \u003d new DeleteSlotCommand(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            command.execute(new BookmarkList(), slots, new Ui(), new Storage(\"test.txt\"), new Storage(\"test.txt\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//            fail(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//        assertEquals(new SlotList().getData(), slots.getData());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 42
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/command/timetable/EditSlotCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Slot;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class EditSlotCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static final String DEFAULT_START_TIME \u003d \"10:00\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static final String DEFAULT_END_TIME \u003d \"12:00\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static final String DEFAULT_DAY \u003d \"fri\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static final String DEFAULT_TITLE \u003d \"lecture\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static final String DEFAULT_MODULE_TITLE \u003d \"lecture\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    Timetable timetable;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    BookmarkList bookmarks \u003d new BookmarkList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void setupTimetable() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        timetable \u003d new Timetable();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Module m1 \u003d new Module(DEFAULT_MODULE_TITLE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        m1.addSlot(new Slot(LocalTime.parse(DEFAULT_START_TIME),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                LocalTime.parse(DEFAULT_END_TIME),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                DEFAULT_DAY,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                DEFAULT_TITLE"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        timetable.addModule(m1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void constructor_invalidInput_throwsZoomasterException() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String input \u003d EditSlotCommand.EDIT_KW + \" mon 1 abcd abcd abcd\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        setupTimetable();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            EditSlotCommand command \u003d new EditSlotCommand(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command.execute(bookmarks, timetable, ui);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(e.getError(), ZoomasterExceptionType.INVALID_EDIT_INPUT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void execute_editModule_changesSuccessfully() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        setupTimetable();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String input \u003d EditSlotCommand.EDIT_KW + \" module fri 1 CS2113\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        EditSlotCommand command \u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Slot s \u003d null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new EditSlotCommand(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command.execute(bookmarks, timetable, ui);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            s \u003d timetable.getModule(\"CS2113\").getSlot(0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(s.getStartTime(), LocalTime.parse(DEFAULT_START_TIME));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(s.getEndTime(), LocalTime.parse(DEFAULT_END_TIME));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(s.getDay(), DEFAULT_DAY);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(s.getTitle(), DEFAULT_TITLE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void execute_editTitle_changesSuccessfully() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        setupTimetable();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String newTitle \u003d \"tutorial\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String input \u003d EditSlotCommand.EDIT_KW + \" title fri 1 \" + newTitle;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        EditSlotCommand command \u003d null;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Slot s \u003d null;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new EditSlotCommand(input);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command.execute(bookmarks, timetable, ui);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            s \u003d timetable.getModule(DEFAULT_MODULE_TITLE).getSlot(0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(s.getStartTime(), LocalTime.parse(DEFAULT_START_TIME));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(s.getEndTime(), LocalTime.parse(DEFAULT_END_TIME));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(s.getDay(), DEFAULT_DAY);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(s.getTitle(), newTitle);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void execute_editTime_changesSuccessfully() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        setupTimetable();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String newDay \u003d \"wed\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String newStartTime \u003d \"15:00\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String newEndTime \u003d \"17:00\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String input \u003d EditSlotCommand.EDIT_KW + \" time fri 1 \" + newDay + \" \" + newStartTime + \" \" + newEndTime;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        EditSlotCommand command \u003d null;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Slot s \u003d null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command \u003d new EditSlotCommand(input);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            command.execute(bookmarks, timetable, ui);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            s \u003d timetable.getModule(DEFAULT_MODULE_TITLE).getSlot(0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(s.getStartTime().toString(), newStartTime);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(s.getEndTime().toString(), newEndTime);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(s.getDay(), newDay);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(s.getTitle(), DEFAULT_TITLE);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 131
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/command/timetable/ShowTimetableCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.exception.ZoomasterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.slot.Timetable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class ShowTimetableCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    static Timetable time1 \u003d new Timetable();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testShowAllSlots() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testMondaySlots() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show mon\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testTuesdaySlots() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show tue\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testWednesdaySlots() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show wed\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testThursdaySlots() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show thu\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testFridaySlots() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show fri\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testSatudaySlots() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show sat\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testSundaySlots() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show sun\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            setupTimetable();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testInvalidSlots1() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show1\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(true, true);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void testInvalidSlots2() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ShowTimetableCommand timetable;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            timetable \u003d new ShowTimetableCommand(\"show abc\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void setupTimetable() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            AddSlotCommand addSlot1 \u003d new AddSlotCommand(\"add laj1201 tutorial_1 mon 08:00 10:00\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            addSlot1.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            AddSlotCommand addSlot2 \u003d new AddSlotCommand(\"add cs2101 tutorial_1 tue 10:00 12:00\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            addSlot2.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            AddSlotCommand addSlot3 \u003d new AddSlotCommand(\"add cg2271 lecture wed 09:00 11:00 \");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            addSlot3.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            AddSlotCommand addSlot4 \u003d new AddSlotCommand(\"add laj1201 tutorial_2 thu 08:00 10:00 \");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            addSlot4.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            AddSlotCommand addSlot5 \u003d new AddSlotCommand(\"add cg2271 lab fri 08:00 10:00 \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            addSlot5.execute(new BookmarkList(), time1, new Ui());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ZoomasterException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            assertEquals(false, true);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 150
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/slot/DayTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "class DayTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void isDay_invalidDay_false() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertFalse(Day.isDay(\"monday\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertFalse(Day.isDay(\"mond\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertFalse(Day.isDay(\"invalid\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void isDay_validDay_true() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertTrue(Day.isDay(\"mon\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertTrue(Day.isDay(\"Tue\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertTrue(Day.isDay(\"WED\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getDayFromCommand_validDayInputs_smallLetterAbbreviationOfDays() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"mon\", Day.getDayFromCommand(\"mon\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"tue\", Day.getDayFromCommand(\"Tue\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(\"wed\", Day.getDayFromCommand(\"WED\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    void getDayFromCommand_invalidDayInputs_null() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertNull(Day.getDayFromCommand(\"monday\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertNull(Day.getDayFromCommand(\"hello\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertNull(Day.getDayFromCommand(\"mon \"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 39
    }
  },
  {
    "path": "src/test/java/seedu/zoomaster/slot/SlotTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package seedu.zoomaster.slot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import seedu.zoomaster.bookmark.Bookmark;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "class SlotTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    Slot slotTest;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void initEachSlotTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        slotTest \u003d new Slot(LocalTime.parse(\"10:00\"), LocalTime.parse(\"11:00\"), \"mon\", \"tutorial\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getDay_oneTimeSlot_returnsDay() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(\"mon\", slotTest.getDay());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void match_validDetails_returnsTrue() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertTrue(slotTest.match(\"tutorial\", \"mon\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                LocalTime.parse(\"10:00\"), LocalTime.parse(\"11:00\")));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void match_invalidDetails_returnsFalse() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertFalse(slotTest.match(\"lecture\", \"mon\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                LocalTime.parse(\"10:00\"), LocalTime.parse(\"11:00\")));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getBookmark() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getBookmarkList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        assertEquals(new ArrayList\u003cBookmark\u003e(), slotTest.getBookmarkList().getBookmarks());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void removeBookmark() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void removeAllBookmarks() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void addBookmark() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void setStartTime() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getStartTime() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void setEndTime() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getEndTime() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void setDay() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getDay() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void setTitle() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void getTitle() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(\"tutorial\", slotTest.getTitle());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        assertEquals(\"10:00-11:00 tutorial\", slotTest.toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 13,
      "TYS0n1": 86
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "mode bookmark"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "show"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add description www.bookmark.com"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "show"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add description2 www.bookmark2.com"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "show"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "show"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "mode timetable"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add laj1201 tutorial_1 mon 08:00 10:00"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add geh1034 lecture mon 14:00 16:00"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add laj1201 lecture tue 14:00 16:00"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cs2101 tutorial_1 tue 10:00 12:00"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cg2271 lecture wed 09:00 11:00"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cs2113t tutorial wed 11:00 12:00"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add laj1201 tutorial_2 thu 08:00 10:00"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cg2271 tutorial thu 11:00 12:00"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cg2271 lab fri 08:00 10:00"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cs2101 tutorial_2 fri 10:00 12:00"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add cs2113t lecture fri 16:00 18:00"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "add 1111"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 16,
      "TYS0n1": 8
    }
  }
]
