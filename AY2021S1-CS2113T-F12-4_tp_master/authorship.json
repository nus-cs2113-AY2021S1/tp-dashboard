[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "    mainClassName \u003d \"seedu.modtracker.ModTracker\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "    archiveBaseName \u003d \"modtracker\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 2,
      "-": 44,
      "KennethEer": 1
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Display | Name | Github Profile | Portfolio| "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|:--------:|:----:|:--------------:|:---------:|"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kenneth Eer | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ker Chin Tian | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kwa Jun Liang, Desmond | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lee Hao Yuan | [Github](https://github.com/lhydl) | [Portfolio](docs/team/johndoe.md)|"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lim Gang Le | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)|"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "[Home Page](https://ay2021s1-cs2113t-f12-4.github.io/tp/)"
      }
    ],
    "authorContributionMap": {
      "lhydl": 10,
      "-": 2
    }
  },
  {
    "path": "docs/Configuration.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "# Configuration Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "[Home Page](https://ay2021s1-cs2113t-f12-4.github.io/tp/)"
      }
    ],
    "authorContributionMap": {
      "DesmondKJL": 4
    }
  },
  {
    "path": "docs/DevOps.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "# DevOps Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "## Table of contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "1. [Build automation](#1)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "2. [Making a release](#2)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "## 1. Build automation \u003ca name\u003d\"1\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "This project uses Gradle for **build automation and dependency management**."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Given below are how to use Gradle for some important project tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "  e.g. `./gradlew clean`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "  e.g. `./gradlew shadowJar`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **`run`**: Builds and runs the application.\u003cbr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "  **`runShadow`**: Builds the application as a fat JAR, and then runs it."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "  **`checkstyleTest`**: Runs the code style check for the test code base."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **`test`**: Runs all tests.\u003c"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "  * `./gradlew test` — Runs all tests"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "  * `./gradlew clean test` — Cleans the project and runs tests"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "## 2. Making a release \u003ca name\u003d\"2\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Here are the steps to create a new release."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "1. Update the version number in [`MainApp.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "2. Generate a fat JAR file using Gradle (i.e., `gradlew shadow`)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "3. Tag the repo with the version number. e.g. `v0.1`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "4. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "5. We have created 3 releases.**V1.0, V2.0 and V2.1**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "[Home Page](https://ay2021s1-cs2113t-f12-4.github.io/tp/)"
      }
    ],
    "authorContributionMap": {
      "DesmondKJL": 44
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. [Introduction](#1)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. [Setting Up, Getting Started](#2)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.1 [Setting up the project in your local machine](#2.1)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.2 [Before writing the code](#2.2)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. [Design](#3)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;3.1 [Architecture](#3.1)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;3.2 [UI component](#3.2)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;3.3 [Parser component](#3.3)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;3.4 [Model component](#3.4)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;3.5 [Storage component](#3.5)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. [Implementation](#4)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;4.1 [Store Data](#4.1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;4.2 [Add Module](#4.2) "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;4.3 [Add Time](#4.3)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;4.4 [Minus Time](#4.4)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;4.5 [View modules](#4.5)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;4.6 [Breakdown and analysis](#4.6)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;4.7 [Add Task](#4.7)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;4.8 [Mark Task as Done](#4.8)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. [Documentation, logging, testing, configuration, dev-ops](#5)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. [Appendix: Requirements](#6)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;6.1 [Product Scope](#6.1)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;6.2 [User Stories](#6.2)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;6.3 [Use Cases](#6.3)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;6.4 [Non-Functional Requirements](#6.4)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;6.5 [Glossary](#6.5)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. [Appendix: Instructions for Manual Testing](#7)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## 1. Introduction \u003ca name\u003d\"1\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "_ModTracker_ is a desktop app for NUS students to track the time spent "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "as well as tasks to do for each of their modules."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lhydl"
        },
        "content": "It helps students prioritise their work and "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lhydl"
        },
        "content": "balance their time spent amongst their modules. "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lhydl"
        },
        "content": "This app uses a Command Line Interface (CLI) and is written in Java 11."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## 2. Setting Up, Getting Started \u003ca name\u003d\"2\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 2.1 Setting up the project in your local machine \u003ca name\u003d\"2.1\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Ensure that you have JDK 11 or above installed on your computer. "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lhydl"
        },
        "content": "First, **fork** this [repo](https://github.com/AY2021S1-CS2113T-F12-4/tp), and **clone** a copy to your computer by using any Git client."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lhydl"
        },
        "content": "If you plan to use IntelliJ IDEA (highly recommended):"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Ensure IntelliJ is configured to use JDK 11."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Start up IntelliJ into the welcome page."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Click on `Configure` -\u003e `Structure for New Projects` -\u003e `Project Settings` -\u003e `Project`."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Under the `Project SDK:` section, ensure that the correct SDK (**java version \"11.0.8\"** or higher) is selected."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Import the project as a Gradle project."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * At the same welcome page, click on `Open or Import`."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Navigate to the folder where you cloned the repo, locate the `build.gradle` file within the folder and select it."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Choose the `Open as Project` option when asked."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * The project may take a couple of minutes to import depending on your actual computer hardware setup."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Verify the setup."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Under the `seedu.modtracker` package, locate the `ModTracker` class and run it."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Try a few commands. You may want to refer to the [user guide](https://ay2021s1-cs2113t-f12-4.github.io/tp/UserGuide.html)."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Run the [tests](Testing.md) to ensure they all pass."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 2.2 Before writing the code \u003ca name\u003d\"2.2\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Configure the coding style"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerct"
        },
        "content": "    * If using IntelliJ IDEA, follow this [guide](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Set up CI"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    it will run the CI for the project automatically at each push to the `master` branch or to any PR."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    No setup is required for this."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Learn the design"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * When you are ready to start coding, we recommend that you look at [ModTracker\u0027s architecture](#3.1) to get some "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    sense of the overall design."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## 3. Design \u003ca name\u003d\"3\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 3.1 Architecture \u003ca name\u003d\"3.1\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "![Architecture](diagrams/Architecture.png)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "`Main` has a `ModTracker` class. It is the main entry point for the ModTracker application. It contains the main, loadData, run, "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lhydl"
        },
        "content": "startAndGetName and runCommandLoopUntilExitCommand methods. The methods are responsible for:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* At app launch:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Creation of a ModTracker object."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Load previously saved data from the text file into ModTracker."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Run the ModTracker app."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* At runtime:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Continuously prompt the user for input until app termination."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* At shut down:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Save user data into a text file."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Invoke clean up methods where necessary."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "The rest of the app consists of 4 packages:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* `Ui` : The user interface of the app."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* `Parser` : Parses the user input and calls the corresponding methods."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* `Model` : Holds the data of the app in-memory, containing the classes: ModuleList, Module, TaskList and Task."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* `Storage` : Saves and loads data to and from the hard disk."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "##### How the architecture components interact with each other"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "The Sequence Diagram below shows how the components interact with each other for the scenario where the user types "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "the command `addmod CS2113T`.  "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "![highlevelsequencediagram](diagrams/highlevelsequencediagram.png)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 3.2 UI component \u003ca name\u003d\"3.2\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "`UI` consists of a UI class that is responsible for dealing with user interaction. "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* Reads in the user input and passes the user input to the `Parser` component."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* Displays the message to the user based on the commands inputted by the user. "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 3.3 Parser component \u003ca name\u003d\"3.3\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kerct"
        },
        "content": "The `Parser` component,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kerct"
        },
        "content": "* Determines whether the user input is valid."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kerct"
        },
        "content": "* Identifies the command to be executed."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kerct"
        },
        "content": "* Passes the required information and calls the respective function"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kerct"
        },
        "content": "to execute the command."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 3.4 Model component \u003ca name\u003d\"3.4\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "![modelcomponent](diagrams/modelcomponent.png)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kerct"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kerct"
        },
        "content": "* Consists of ModuleList class that supports functions to execute module-related commands, "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "  such as addmod, deletemod etc."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kerct"
        },
        "content": "* Consists of Module class that represents the module."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kerct"
        },
        "content": "* Consists of TaskList class that supports functions to execute task-related commands, "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "  such as addtask, deletetask etc."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kerct"
        },
        "content": "* Consists of Task class that represents the task."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 3.5 Storage component \u003ca name\u003d\"3.5\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kerct"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kerct"
        },
        "content": "* Loads data from an external file at the start of the program."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kerct"
        },
        "content": "* Saves valid data to the file after any changes. "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kerct"
        },
        "content": "* Locks the file to read-only mode before the program ends."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## 4. Implementation \u003ca name\u003d\"4\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lhydl"
        },
        "content": "{Insert your own respective implementations here}"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "This section describes some noteworthy details on how certain features are being implemented."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 4.1 Store Data \u003ca name\u003d\"4.1\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kerct"
        },
        "content": "The storage feature saves the data of the user so that "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kerct"
        },
        "content": "the ModTracker application continues from where the user left off the previous time. "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kerct"
        },
        "content": "#### Current Implementation "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kerct"
        },
        "content": "The `Storage` class facilitates the data saving and loading mechanism. "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kerct"
        },
        "content": "The constructor `Storage(filePath)` accepts a String which is the file path to an external file."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kerct"
        },
        "content": "This external file stores the user\u0027s data locally."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kerct"
        },
        "content": "Inside the external file, it stores the name of the user "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kerct"
        },
        "content": "followed by any valid inputs which modifies the data."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kerct"
        },
        "content": "The format of the data inside the external file is as follows:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kerct"
        },
        "content": "username"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kerct"
        },
        "content": "valid user input 1"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kerct"
        },
        "content": "valid user input 2"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kerct"
        },
        "content": "valid user input 3"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kerct"
        },
        "content": "..."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kerct"
        },
        "content": "When the user runs the program again, "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kerct"
        },
        "content": "the program will first load data from the external file."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kerct"
        },
        "content": "The `Parser` class then parses these data "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kerct"
        },
        "content": "before the program prompts the user for input."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kerct"
        },
        "content": "Given below is an example usage scenario, showing the 2 different times "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kerct"
        },
        "content": "when a user starts the application."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kerct"
        },
        "content": "##### First Use"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kerct"
        },
        "content": "The user launches the application for the first time."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. `ModTracker` creates a new `Storage` object "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kerct"
        },
        "content": "with file path at `data/modtracker.txt`. "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The newly created `Storage` object checks that there is no file "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kerct"
        },
        "content": "at the specified file path, and creates a new file there."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The program prompts the user to input his/ her name."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The `Storage` object writes this username into the external file."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The program prompts the user for further inputs."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The user enters `help`, and the program displays the help message. "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kerct"
        },
        "content": "Since this command does not modify the data, "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kerct"
        },
        "content": "the external file remains unchanged."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The user enters `addmod CS1010 10`, "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kerct"
        },
        "content": "and the program adds the new module correspondingly. "
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kerct"
        },
        "content": "Since this is a valid command which modifies the data,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kerct"
        },
        "content": " the `Storage` object appends `addmod CS1010 10` to the external file."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The user enters `exit`, and the program terminates."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kerct"
        },
        "content": "##### Second Use"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kerct"
        },
        "content": "The same user starts the application again (on the same device as the first use)."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. `ModTracker` creates a new `Storage` object "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kerct"
        },
        "content": "with the same specified file path at `data/modtracker.txt`."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kerct"
        },
        "content": "   "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The `Storage` object checks that the file at `data/modtracker.txt` exists,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kerct"
        },
        "content": "and reads the first line of the file to obtain the user\u0027s name."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The `Storage` object passes the username to `ModTracker`, "
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kerct"
        },
        "content": "which calls `Ui` to greet the user."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. `ModTracker` then obtains the remaining lines in the file via `Storage`,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kerct"
        },
        "content": "and passes it to `Parser` to load the data into `ModuleList` and `TaskList`."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. The program prompts the user for further inputs,"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kerct"
        },
        "content": "and it continues as per normal, with the data loaded."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kerct"
        },
        "content": "The following sequence diagram shows how the storage feature works,"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kerct"
        },
        "content": "with a focus on how it obtains the username:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kerct"
        },
        "content": "![Storage Sequence Diagram](diagrams/Storage%20Sequence%20Diagram.svg)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kerct"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kerct"
        },
        "content": "* **Alternative 1 (current choice)**: Saves the user input to the file"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kerct"
        },
        "content": "    * Pros: Easy to implement as code from `Parser` can be reused"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kerct"
        },
        "content": "    * Cons: Increases coupling as it depends on the `Parser` class "
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kerct"
        },
        "content": "    to make sense of the data"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kerct"
        },
        "content": "* **Alternative 2**: Parses input into a different format "
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kerct"
        },
        "content": "storing the different modules, time expected, time spent and tasks"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kerct"
        },
        "content": "    * Pros: Independent of how `Parser` takes in user input"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kerct"
        },
        "content": "    * Cons: Requires additional work to parse data into the required"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kerct"
        },
        "content": "    storage format"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 4.2 Add Module \u003ca name\u003d\"4.2\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "#### Current Implementation"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "The add module feature will implement the checks of the module code input by the user through the following operations:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "`checkIfModuleValid()` – Checks if the module code starts with 2 - 3 characters, followed by 4 digits, followed by an "
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                         optional character."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "`checkIfModuleExist()` – Checks if the module already exists in the list of modules"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "If the module code is valid and does not exist, the add module feature will proceed to create the module and adds it to "
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "the list of modules.  "
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "\u003e **_NOTE:_**  A module is identfied by its module code"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "The following activity diagram summarizes what happens when a user executes `addmod CS2113T` command for the first time.  "
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "![addmod](diagrams/addmod%20activity%20diagram.png)"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Given below is a detailed explanation on how the add module mechanism behaves at each step."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 1. The user launches the application for the first time and hence, the list of modules is empty. "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        The user types in a command: `addmod CS2113T`. "
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 2. The parser class makes sense of the user input and calls the `addMod()` function in ModuleList class."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 3. Within the `addMod()` function, it will first check if the module code is valid by calling "
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        `checkIfModuleValid()` function. The `checkIfModuleValid()` function will return true if the module code is "
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        valid, and return false otherwise. If `checkIfModuleValid()` function returns true, proceed to step 4."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 4. Within the addmod function, it will then check if the module already exists in the list of modules by "
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        calling `checkIfModuleExist()` function. The `checkIfModuleExist()` function will return true if the module "
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        already exists in the modlist, and false otherwise. If `checkIfModuleValid()` function returns true, "
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        proceed to step 5.  "
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 5. A new module with module code \"CS2113T” is created by calling the constructor of Module class."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 6. The newly created module is added to the list of modules."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 7. The `printAdd()` function of the Ui class is called, displaying “CS2113T is added.” to the user."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Step 8. The newly created module is saved to storage.  "
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "  "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "The following sequence diagram shows how the `addmod CS2113T` command works."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "![Addmodseq](diagrams/Addmodseq.png)  "
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "##### Aspect: Checking existence of module by `checkIfModuleExist()` within `addmod()` function"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Alternative 1 (Current choice): Checks that module does not exist in the list of modules before adding a new module"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "-\tPros: Ensure that there will be no duplicate modules in the list of modules"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "-\tCons: User cannot have 2 same modules in the list of modules."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Alternative 2: Always add a new module"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "-\tPros: The user can have 2 same modules in the list of modules."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "-\tCons: If the user had inputted 2 same modules and wants to add the workload for these modules, the current "
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "          application will only update the module that was inputted earlier, ignoring the second module, resulting in "
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "          inconsistency."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "-\tCons: If the user does not want duplicate modules, the user must ensure he/she does not add a module that is "
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "          already in the list of modules.  "
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "          "
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 4.3 Add Time \u003ca name\u003d\"4.3\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "The add time feature edits the actual workload for a specific module as indicated by the user. "
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "This is done by adding time spent on the module. The actual workload is broken down into academic weeks and"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "hours spent in the respective academic weeks."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "kerct"
        },
        "content": "#### Current Implementation"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "The feature will implement the same checks as the add module feature as shown earlier."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "If the module code is valid and exists the add time feature will proceed to add time from the module"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "as indicated by the user."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Given below is an example usage scenario and how the add time command behaves at each step."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.1 The user launches the application and does all the required steps to add a module with module code `CS2113T`"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "to a list of modules. This is done by inputting the command `addMod CS2113T`."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.2 The user now types in a command: `addTime CS2113T 2 4`. This calls the add time command from `Parser`."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`Parser` then calls the `addTime()` method in `ModuleList` and passes `CS2113T`,`2` and `4` as parameters into the"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "method. "
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003e **_NOTE:_**  The first number is the hours spent in that week. The second number is the academic week that is being"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003eupdated."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.3 Within the `addTime()` function, it will first check if the module code is valid by calling"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`checkIfModuleValid()` function. If the module code is valid, `checkIfModuleValid()` function will return true."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.4 Within the `addTime()` function, it will then check if the module exists in the module list storage by calling"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`checkIfModuleExist()` function. If the module does exist, the `checkIfModuleExist()` function will return true."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.5 A time of `2` hours in academic week `4` will now be added to the actual workload of the `CS2113T` module. "
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.6 The system will print the string `2 hours have been added to CS2113T`"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.7 The actual workload is updated in storage."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "The following sequence diagram illustrates what happens when a user executes `addTime CS2113T 2 4`."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "[insert diagram here]"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **Alternative 1 (current choice)**: adding time with academic weeks associated"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Pros: Easy to manage for user as the user only needs to focus on the current academic week to track his workload"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Cons: User might prefer to manage his time spent in totality"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **Alternative 2**: adding time in totality "
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Pros: Able to cumulatively add time and manage workload based on overall total time spent."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Cons: May not be useful to know total time spent as workload may be better managed weekly."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 4.4 Minus Time \u003ca name\u003d\"4.4\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "The minus time feature edits the actual workload for a specific module as indicated by the user. "
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "This is done by removing time spent on the module. The actual workload is broken down into academic weeks and"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "hours spent in the respective academic weeks. This feature is the opposite of the add time feature. "
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "kerct"
        },
        "content": "#### Current Implementation"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "The feature will implement the same checks as the add module feature as shown earlier."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "As the command now is minus time, there would be two additional checks implemented."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`doesActualTimeExist()` - checks if the module code has existing actual workload stored to it."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`doesHoursExceedTotal()` - checks if the hours the user wishes to remove exceed the total hours in the actual workload."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "If the module code is valid, exists and has an actual workload the minus time feature will proceed to minus"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "time from the module as indicated by the user."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Given below is an example usage scenario and how the minus time command behaves at each step."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.1 The user launches the application and does all the required steps to add a module with module code `CS2113T`"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "to a list of modules. This is done by inputting the command `addMod CS2113T`."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.2 The user then does all the required steps to add `2` hours of time spent in academic week `4` on `CS2113T`. This"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "is done by inputting the command `addTime CS2113T 2 4`."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.3 The user now types in a command: `minusTime CS2113T 2 4`. This calls the minus time command from `Parser`."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`Parser` then calls the `minusTime()` method in `ModuleList` and passes `CS2113T`,`2` and `4` as parameters into the"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "method."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003e **_NOTE:_**  The first number is the hours spent in that week. The second number is the academic week that is being"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003eupdated."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.4 Within the `minusTime()` function, it will first check if the module code is valid by calling"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`checkIfModuleValid()` function. If the module code is valid, `checkIfModuleValid()` function will return true."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.5 Within the `minusTime()` function, it will then check if the module exists in the module list storage by calling"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`checkIfModuleExist()` function. If the module does exist, the `checkIfModuleExist()` function will return true."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.6 Within the `minusTime()` function, it will then check if there is an existing actual workload for this module by"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "calling the `doesActualTimeExist()` function. If the module has an existing workload, the `doesActualTimeExist()`"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "function will return true."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.7 Within the `minusTime()` function, it will then check if the hours the user wish to remove is more than the"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "existing hours by"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "calling the `doesHoursExceedTotal()` function. If the module has an existing workload, the `doesHoursExceedTotal()`"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "function will return true."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.8 A time of `2` hours in academic week `4` will now be removed from the actual workload of the `CS2113T` module. "
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.9 The system will print the string `2 hours have been removed from CS2113T`"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Step.10 The actual workload is updated in storage."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "The following sequence diagram illustrates what happens when a user executes `minusTime CS2113T 2 4`."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "[insert diagram here]"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **Alternative 1 (current choice)**: removing time with academic weeks associated"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Pros: Easy to manage for user as the user only needs to focus on the current academic week to track his workload"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Cons: User might prefer to manage his time spent in totality"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **Alternative 2**: minus time in totality "
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Pros: Able to cumulatively remove time and manage workload based on overall total time spent."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    * Cons: May not be useful to know total time spent as workload may be better managed weekly."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 4.5 View modules \u003ca name\u003d\"4.5\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "lhydl"
        },
        "content": "#### Current Implementation"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "The view module command allows the user to view all the modules taken,"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "the respective time spent and expected module workload at a glance. It prints "
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "`weekNumber`,`moduleCode`, `expectedWorkload` and `actualWorkload` in the specified "
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "week for all the modules taken in a table format. "
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Given below is an example usage scenario and how the view module command behaves at each step."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. User calls the view module command from the `Parser`. `Parser` then calls the `printTable()`"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "method in `Ui`. `printTable()` then instantiates `ModView` class and calls the `printAllModuleInformation()`"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "method from the `ModView` class."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. User input is subjected to `validateInputs()` to verify that "
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "both of the following conditions are satisfied."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "  * `weekNumber` is an integer between 1 and 13 inclusive."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "  * `modlist` in `list` is not empty."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "If any of the above conditions is not satisfied, an error message will be printed"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "and `printAllModuleInformation()` terminates."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. A method `getMaxModuleLength()` will be called to find out the maximum length "
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "of module code of modules taken. This is to facilitate the resizing of the printed table."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. `updateTemplates()` then updates the table templates such as `border`, `header` "
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "and `contents` are updated accordingly based on the output of `getMaxModuleLength()`."
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. For each `Module` in `modList`, `updateContent()` will be called to update the contents"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "to be printed."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "The following sequence diagram shows how the view module command works. "
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "![view-module](diagrams/ModViewSequence.jpg)"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 4.6 Breakdown and Analysis \u003ca name\u003d\"4.6\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "lhydl"
        },
        "content": "#### Current Implementation"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "The analysis command allows the user to view the breakdown of the total time spent"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "in the week across all modules and provides a simple analysis of how they are doing."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. User calls the view module command from the `Parser`. `Parser` then calls the `printBreakdownAnalysis()`"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   method in `Ui`. `printBreakdownAnalysis()` then instantiates `ViewTimeBreakdownAnalysis` class. "
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   and calls the `printTimeBreakdownAndAnalysis()` method. "
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   "
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. The user input is subjected to `validateInputs()` to verify that "
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   both of the following conditions are satisfied."
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * `weekNumber` is an integer between 1 and 13 inclusive."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * `modlist` in `list` is not empty."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   "
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   If any of the above conditions is not satisfied, an error message will be printed"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   and `printTimeBreakdownAndAnalysis()` terminates."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. `printTime()` method in `printTimeBreakdownAndAnalysis()` is first called. For each `Module` "
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "in `modList`, `printTime()` prints `actualWorkload` and `expectedWorkload` in form of a "
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "horizontal bar graph. The existence of the desired data is checked using `doesActualTimeExist()` "
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "and `doesExpectedTimeExist()` methods of the `Module` class. If the desired data does not exist, a `NO INPUT` will be printed. "
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. `printBreakdown()` then calculates the total time spent by the user on the modules taken in the specified "
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "week. It then prints out `actualTime` of each `Module` as a percentage of `totalTimeSpent`. If there is no input, "
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "a `NO INPUT` message will be printed. `printBreakdown()` return **TRUE** if there exists a `Module` that has a "
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "valid input, else **False** is returned."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. If output of `printBreakdown()` is `True`, `printAnalysis()` will be called. `computeAnalysisOfTimeSpent()` "
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "is called to determine the outcome of the analysis. A message will be printed depending on the output"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "of the analysis. "
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "The following sequence diagram shows how the analysis command works. "
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "![analysis](diagrams/AnalysisSequence.jpg)"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "#### Design Considerations"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "* **Alternative 1 (current choice)**: Printing data as a bar graph"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * Pros: Easy implementation as the bar graph is printed as a `String`."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * Cons: It might be difficult to compare across modules using a bar graph."
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "* **Alternative 2**: Printing data as a line graph"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * Pros: Easier to compare across different modules."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * Cons: Difficult to implement as it requires external libraries."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    * Cons: Difficult to test due to additional dependencies on external libraries. "
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 4.7 Add Task \u003ca name\u003d\"4.7\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "lhydl"
        },
        "content": "The add task feature allows user to add a task under an existing module. "
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "lhydl"
        },
        "content": "#### Current Implementation"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "lhydl"
        },
        "content": "The `addtask` command is executed by the `parse` method in the `Parser` class, which then calls the `addTask` method "
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "lhydl"
        },
        "content": "in the `TaskList` class. The `addTask` method performs all the necessary logic for the add task feature."
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Given below is an example usage scenario."
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The user input the `addtask` command and the `parse` method in `Parser` parses the command."
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. `parse` calls the `addTask` method in `TaskList`."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `addTask` method splits the user input into 3 sections:"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * `Section 1`: command"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * `Section 2`: module code"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * `Section 3`: task description"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `addTask` method calls the `checkIfModuleValid` method in `ModuleList` class to check if `Section 2` is a "
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "lhydl"
        },
        "content": "valid module code."
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * If module code is not valid, the `addTask` method will return and `Ui` will prompt the user to enter a "
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    valid module code."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Else if module code is valid, the `addTask` method will execute the next step."
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `addTask` method calls the `checkIfModuleExist` method to check if `Secion 2` (module code) exists in the database."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * If module code does not exist in the database, the `addTask` method will return and `Ui` will prompt the user to"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    execute the `addmod` or `addexp` command first."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Else if module code exists, the `addTask` method will execute the next step."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `addTask` method will create a new `Task` object by the constructor in `Task` class, with `Section 3` (task description). "
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `addTask` method adds the `Task` object to the array list `tasks`."
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "lhydl"
        },
        "content": "![addtask](diagrams/addtask.png)"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "lhydl"
        },
        "content": "#### Future Implementation"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "lhydl"
        },
        "content": "A future implementation requires user to enter the expected time required to complete the task. The `addTask` method will split the "
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "lhydl"
        },
        "content": "user input into 4 sections, with `Section 4` as the expected time required to complete the task. `Section 4` will then be"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "lhydl"
        },
        "content": "used in the future implementation of mark task as done feature, as further illustrated in the [mark task as done](#mark-task-as-done)"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "lhydl"
        },
        "content": "section."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 4.8 Mark Task as Done \u003ca name\u003d\"4.8\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "lhydl"
        },
        "content": "The mark task as done feature allows user to mark an existing task as done."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "lhydl"
        },
        "content": "#### Current Implementation"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "lhydl"
        },
        "content": "The `done` command is executed by the `parse` method in the `Parser` class, which then calls the `setDone` method in the"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`TaskList` class. The `setDone` method performs all the necessary logic for the mark task as done feature."
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Given below is an example usage scenario."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The user input the `done` command and the `parse` method in `Parser` parses the command."
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. `parse` calls the `setDone` method in `TaskList`."
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `setDone` method splits the user input into 2 sections:"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * `Section 1`: command"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * `Section 2`: task number corresponding to the index of `Task` object in array list `tasks`"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `setDone` method will check if the array list `tasks` is empty."
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * If array list is empty, `Ui` will notify the user that there is no `Task` to mark as done."
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Else if array list is not empty, `setDone` method will execute the next step."
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `setDone` method will check the validity of `Section 2` (task number)."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * If task number is not an integer, an exception will be thrown and the `setDone` method terminates."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * If task number is out of bounds, `Ui` will prompt the user to enter a valid task number."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * Else if task number is valid, `setDone` method will execute the next step."
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The `setDone` method will then call the `setAsDone` method in `Task` class to mark the `Task` corresponding to "
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`Section 2` (task number) as done. "
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    "
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "lhydl"
        },
        "content": "![markdone](diagrams/markdone.png)  "
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   "
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "lhydl"
        },
        "content": "#### Future Implementation"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. When the `Task` is set as done, the `setDone` method will call the `addTime` method in `ModuleList` class"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "lhydl"
        },
        "content": "to add the expected time required to complete the task to the actual time spent on the module."
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    * This future implementation requires `Section 4` (expected time required to complete the task) from the future "
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    implementation of the `addTask` method to be passed as a parameter to the `setDone` method and then to the "
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    `addTime` method."
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## 5. Documentation, Logging, Testing, Configuration, Dev-Ops \u003ca name\u003d\"5\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* [Documentation guide](Documentation.md)"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* [Testing guide](Testing.md)"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* [Logging guide](Logging.md)"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* [Configuration guide](Configuration.md)"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* [DevOps guide](DevOps.md)"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## 6. Appendix: Requirements \u003ca name\u003d\"6\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 6.1 Product Scope \u003ca name\u003d\"6.1\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "lhydl"
        },
        "content": "#### Target User Profile"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "NUS students"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* spend too much time on certain modules and neglecting other modules"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* want a timetable to view and breakdown all the module workload easily"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* need help to manage the time spent on each module"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "lhydl"
        },
        "content": "#### Value Proposition"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* helps to track the time spent on every module  "
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* better prioritize their work for each module "
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* relieves the stress of NUS students by achieving a work-life balance"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 6.2 User Stories \u003ca name\u003d\"6.2\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|v1.0|student|input my modules|keep track of modules that I am taking|"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|v1.0|student|input the expected module workload|keep track of the recommended time I should spend on the module|"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|v1.0|busy student|view breakdown of my time spent on each module|pinpoint in detail where i spend most of time on|"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|v1.0|student|input the actual time spent on each module|keep track of the actual time I spent|"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|v1.0|careless user|edit the data easily|correct any mistakes I inputted wrongly/"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|v1.0|user|save my data permanently|save the trouble of re-entering my data everytime I start the app|"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|v2.0|user of ModTracker|add tasks related to a module|know what are the outstanding tasks for each module"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|v2.0|user|save tasks related to a module|be reminded of what tasks I have to do|"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|v2.0|user|save my username|I don\u0027t have to re-enter it every time|"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|v2.0|user|manage the task list|use the app as a planner|"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 6.3 Use Cases \u003ca name\u003d\"6.3\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "(For all use cases below, the System is the `ModTracker` and the Actor is the `User`, unless specified otherwise.)"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "#### Use case: UC1 - Add module"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "##### MSS: "
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. User requests to add a module"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. System prompts user to enter a module code"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. User enters a module code"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. System adds module to the database\u003cbr\u003e"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Use case ends "
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "##### Extensions:"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "* 3a. Module code is invalid"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "  * 3a1. System shows an error message\u003cbr\u003e"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "* 3b. Module code already exists in database"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "  * 3b1. System shows an error message\u003cbr\u003e"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "#### Use case: UC2 - View analysis of time spent"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "##### MSS: "
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. User requests to view analysis of time spent"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. System prompts user to enter a week number"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. User enters a week number"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. System displays analysis of time spent to user\u003cbr\u003e"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Use case ends "
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "##### Extensions:"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "* 3a. Week number is invalid\u003cbr\u003e"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "  * 3a1. System shows an error message\u003cbr\u003e "
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "* 3b. Module list is empty\u003cbr\u003e"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "  * 3b1. System shows an error message\u003cbr\u003e"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "* 4a. No time is spent in the specified week"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "  * 4a1. System shows only time spent and no analysis\u003cbr\u003e"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "#### Use case: UC3 - Open notifications"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "##### MSS: "
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. User requests to open notifications"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. System displays notifications\u003cbr\u003e"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Use case ends "
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "##### Extensions: "
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "* 2a. No notifications"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "  * 2a1. System displays an encouraging message\u003cbr\u003e"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 6.4 Non-Functional Requirements \u003ca name\u003d\"6.4\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Should work on any _mainstream OS_ as long as they have Java 11 or above installed."
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. The commands should be short and succinct such that a user with average typing speed should be"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "lhydl"
        },
        "content": "able to accomplish the tasks faster than using a regular _GUI app_."
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 6.5 Glossary \u003ca name\u003d\"6.5\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* *mainstream OS* - Windows, Linux, macOS"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* *GUI app* - An app that utilises GUI (graphical user interface). It allows users to interact with electronic devices "
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "lhydl"
        },
        "content": "through graphical icons and audio indicator. Most apps like the mobile apps that we are familiar with utilises the GUI."
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## 7. Appendix: Instructions for Manual Testing \u003ca name\u003d\"7\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Given below are the instructions to test the app manually."
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### Initial Launch"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. Initial launch\u003cbr\u003e"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Double-click the jar file\u003cbr\u003e"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: A folder called `data` will be created and in the folder "
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      there will be a file named `modtracker.txt`.\u003cbr\u003e"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### Functions"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. Add module function `addmod`"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Prerequisites: List all modules using `list` command. Empty list."
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addmod CS1231`\u003cbr\u003e"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: CS1231 will be added to the module list."
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addmod CS1231` \u003cbr\u003e"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. CS1231 will not be added as"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      as it is already in the module list."
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addmod CS111` \u003cbr\u003e"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. CS111 will not be added as it falls"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      of the minimum module length."
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addmod CS1111111`\u003cbr\u003e"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. CS1111111 will not be added as it "
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      exceeds the minimum module length."
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addmod `\u003cbr\u003e"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter a module"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      code."
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. Add expected module workload function: `addexp`"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Prerequisites: List all modules using `list` command. List contains "
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    only one module `CS1231` with an expected workload of 5 hours."
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addexp CS2113T 3`\u003cbr\u003e"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: `CS2113T` will be added to the module list and has an expected"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    workload of 3 hours."
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addexp CS1231 8` \u003cbr\u003e"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Expected workload of `CS1231` will be changed to 8 H instead of 5 H."
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addexp CS1231 -6`\u003cbr\u003e"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. Expected workload should not be negative."
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addexp CS1231 `\u003cbr\u003e"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter an expected workload."
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addexp`\u003cbr\u003e"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter a module code"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    and an expected workload."
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. Add actual time spent function `addtime`"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Prerequisites: List all modules using `list` command. List contains "
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "           only one module `CS1231`."
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addtime CS1231 2 4`\u003cbr\u003e"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: 2 H will be added to CS1231 in week 4."
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addtime CS1010 2 4`\u003cbr\u003e"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted that the specified module "
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      not exist in the module list."
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addtime CS1231 2` \u003cbr\u003e"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter a week number."
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Other incorrect addtime commands to try `addtime CS1231`,`addtime CS1231 2 s t` etc."
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Similar to previous."
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addtime CS1231 2 14`\u003cbr\u003e"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter a valid"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      week number between 1 and 13 inclusive."
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Other incorrect addtime commands to try `addtime CS1231 3 X` where X \u003c\u003d0 or X\u003e\u003d 14.\u003cbr\u003e"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Similar to previous."
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        "
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. Minus from actual time spent function: `minus`"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Prerequisites: List all modules using `list` command. List contains "
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "       only one module `CS1231`. `CS1231` has no input for actual time for all the weeks."
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `minus CS1231 2 4`\u003cbr\u003e"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: 2 H will be subtracted from CS1231 in week 4."
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `minus CS1010 2 4`\u003cbr\u003e"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted that the specified module "
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      not exist in the module list."
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `minus CS1231 2` \u003cbr\u003e"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter a week number."
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Other incorrect addtime commands to try `minus CS1231`,`minus CS1231 2 s t` etc.\u003cbr\u003e"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Similar to previous."
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `minus CS1231 2 14`"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter a valid"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      week number between 1 and 13 inclusive."
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Other incorrect addtime commands to try `addtime CS1231 3 X` where X \u003c\u003d 0 or X \u003e\u003d 14. \u003cbr\u003e"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Similar to previous. "
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `minus CS1231 8 7`\u003cbr\u003e"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: User will be prompted that there is not input for the specified week so"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      time cannot be subtracted from that week."
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    "
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. Analyse actual time spent function: `analyse`"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Prerequisite: List all modules using `list` command. List contains at least "
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      one module."
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `analyse 3` \u003cbr\u003e"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Analysis of time spent on the modules in the specified week will be displayed."
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `analyse 0` \u003cbr\u003e"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter a valid "
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      week number between 1 and 13 inclusive."
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Other incorrect analysis commands `analyse 0`, `analyse x` where X \u003c\u003d 0 or X \u003e\u003d 14. \u003cbr\u003e"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Similar to previous. "
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Prerequisite: List all modules using `list` command. List is empty."
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `analyse x` for all numeric values of x \u003cbr\u003e"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted that module list is empty."
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      "
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. Delete module function: `deletemod`"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Prerequisites: List all modules using `list` command. List contains a module `CS1231`."
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `deletemod CS1010` \u003cbr\u003e"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted that `CS1010` is not does not"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      exist in the database."
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `deletemod CS1231` \u003cbr\u003e"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: `CS1231` and all related tasks would be removed from the database."
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `deletemod C1213` \u003cbr\u003e"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter a valid module code."
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Other incorrect delete module commands to try `deletemod C1`, `deletemod CS12345678` or"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      any other invalid module codes. \u003cbr\u003e"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Similar to previous."
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      "
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. Delete expected module workload function: `deleteexp`"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Prerequisites: List all modules using `list` command. List contains a module `CS1231`."
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `deletexp CS1010`\u003cbr\u003e"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted that `CS1010` does not"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      exist in the database."
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `delete CS1231`\u003cbr\u003e"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: `Expected workload` of `CS1231` will be removed from the database."
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `deleteexp C1213` \u003cbr\u003e"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "       Expected: Error message will be shown. User will be prompted to enter a valid module code."
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Other incorrect delete module commands to try `deleteexp C1`, `deleteexp CS12345678` or"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      any other invalid module codes. \u003cbr\u003e"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Similar to previous."
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. Delete actual time spent function: `deletetime`"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Prerequisites: List all modules using `list` command. List contains a module `CS1231`."
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      `CS1231` has valid actual time spent for week 1 to 13."
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `deletetime CS1231 7` \u003cbr\u003e"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Actual time spent on CS1231 in week 7 will be deleted."
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `deletetime` \u003cbr\u003e"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected Error message will be shown. User will be prompted to enter a valid module code"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      and week number."
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `deletetime CS1231` \u003cbr\u003e"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter a valid week number."
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. Add tasks function: `addtask`"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Prerequisites: List all modules using `list` command. List contains a module `CS1231`."
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addtask CS1010` \u003cbr\u003e"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted that `CS1010` does not exist."
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addtask` \u003cbr\u003e"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter a valid module code"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      and week number."
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addtask CS1231` \u003cbr\u003e"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter a task description."
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `addtask CS1231 do homework` \u003cbr\u003e"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "       Expected: `do homework` task will be added to the tasklist of CS1231."
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "       "
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. Mark task as done function: `done`"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Prerequisites: List all modules using `list` command. List contains a module `CS1231`."
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      `CS1231` has 2 tasks attached to it, `do homework` and `revise for exam`."
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `done 1` \u003cbr\u003e"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Task number 1, `do homework` will be marked as done."
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `done 8` \u003cbr\u003e"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter a task number between"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      1 and total number of tasks (2 in this case)."
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Other incorrect done commands to try `done 0` `done x` where  x\u003c0 or x\u003e total number of task \u003cbr\u003e"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Similar to previous."
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. Delete task function: `deletetask`"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Prerequisites: List all modules using `list` command. List contains a module `CS1231`."
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      `CS1231` has 2 tasks attached to it, `do homework` and `revise for exam`."
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `deletetask 1` \u003cbr\u003e"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Task number 1, `do homework` will be deleted."
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Test case: `deletetask 8` \u003cbr\u003e"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Error message will be shown. User will be prompted to enter a task number between"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      1 and total number of tasks (1 in this case)."
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. Other incorrect done commands to try `deletetask 0` `deletetask x` where  x\u003c0 or x\u003e total number of task \u003cbr\u003e"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      Expected: Similar to previous."
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      "
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "   "
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "lhydl"
        },
        "content": "[Home Page](https://ay2021s1-cs2113t-f12-4.github.io/tp/)"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 298,
      "lhydl": 190,
      "DesmondKJL": 117,
      "kerct": 108,
      "-": 35,
      "KennethEer": 105
    }
  },
  {
    "path": "docs/Documentation.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "# Documentation Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "##Table of contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "1. [Setting up and maintaining the project website](#1)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "2. [Style guidance](#2)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "3. [Diagrams](#3)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "4. [Converting a document to the PDF format](#4)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "#### 1. Setting up and maintaining the project website \u003ca name\u003d\"1\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* We use Intellij\u0027s inbuilt markdown editor to maintain our documentations of this project"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* The `docs/` folder is used for documentation."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "#### 2. Style guidance \u003ca name\u003d\"2\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* We follow the [**_Google developer documentation style guide_**](https://developers.google.com/style)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* We also refer to [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "#### 3. Diagrams \u003ca name\u003d\"3\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* We use PlantUML diagrams[_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* We also use Draw.io for our diagrams [_**Using Draw.io**_](https://drawio-app.com/learning/step-by-step-guides/)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "#### 4. Converting a document to the PDF format \u003ca name\u003d\"4\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* We follow this guide to convert our documents to PDF[_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "      "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "[Home Page](https://ay2021s1-cs2113t-f12-4.github.io/tp/)"
      }
    ],
    "authorContributionMap": {
      "DesmondKJL": 34
    }
  },
  {
    "path": "docs/Logging.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "# Logging Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "[Home Page](https://ay2021s1-cs2113t-f12-4.github.io/tp/)"
      }
    ],
    "authorContributionMap": {
      "DesmondKJL": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lhydl"
        },
        "content": "# ModTracker"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": "_ModTracker_ is a desktop app for NUS students to track the time spent "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "as well as tasks to do for each of their modules."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": "It helps students prioritise their work and "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "balance their time spent amongst their modules. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "This app uses a Command Line Interface (CLI)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "lhydl": 1,
      "kerct": 5,
      "-": 5
    }
  },
  {
    "path": "docs/Testing.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "# Testing"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "1. [Running tests](#1)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "2. [Types of tests](#2)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "### 1. Running tests \u003ca name\u003d\"1\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "There are two ways to run tests."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **Method 1: Using IntelliJ JUnit test runner**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "  * To run a subset of tests, you can right-click on a test package,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    test class, or a test and choose `Run \u0027ABC\u0027`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* **Method 2: Using Gradle**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "### 2. Types of tests \u003ca name\u003d\"2\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "This project uses JUnit testing in IntelliJ."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "1. We test each class and its methods.\u003cbr\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "   e.g. `seedu.modTrackerTest.ParserTest` Tests the methods in the `Parser` class"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "[Home Page](https://ay2021s1-cs2113t-f12-4.github.io/tp/)"
      }
    ],
    "authorContributionMap": {
      "DesmondKJL": 33
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "_ModTracker_ is a desktop app for NUS students to track the time spent "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "as well as tasks to do for each of their modules."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "It helps students prioritise their work and "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": "balance their time spent amongst their modules. "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": "This app uses a Command Line Interface (CLI)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. [Quick Start](#quickstart)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. [Features](#features)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.1 [View help: `help`](#help)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.2 [Add a module: `addmod`](#addmod)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.3 [Add expected module workload: `addexp`](#addexp) "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.4 [Add actual time spent on a module: `addtime`](#addtime)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.5 [List expected and actual time spent of all modules: `list`](#list)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.6 [Analyse actual time spent on all modules: `analyse`](#analyse)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.7 [Delete a module: `deletemod`](#deletemod)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.8 [Delete expected module workload: `deleteexp`](#deleteexp)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.9 [Minus from actual time spent on a module: `minustime`](#minus) "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.10 [Edit actual time spent on a module: `edittime`](#edit)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.11 [Delete actual time spent on a module: `deletetime`](#deletetime)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.12 [Add tasks: `addtask`](#addtask)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.13 [List all tasks: `listtask`](#listtask)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.14 [Mark task as done: `done`](#done)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.15 [Delete a task: `deletetask`](#deletetask)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.16 [Open notification: `open`](#open)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.17 [Exit the program : `exit`](#exit)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.18 [Save user data](#save)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.19 [Clear module and task data: `clear`](#clear)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "    \u003cbr/\u003e\u0026nbsp;2.20 [Delete user data: `reset`](#reset)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. [FAQ](#faq)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. [Command Summary](#summary)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## 1. Quick Start \u003ca name\u003d\"quickstart\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "1. Download the latest version of `ModTracker` from [here](https://github.com/AY2021S1-CS2113T-F12-4/tp/releases)."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Save the jar file to a folder of your choice."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Open a command prompt and navigate to the folder that contains the jar file. Command: `cd [directory/filename]`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Type in the `java -jar modtracker.jar` command and press enter to run the program."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. A welcome screen as shown below will be displayed if the program "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "has successfully executed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   ````"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   |\\\\        /|         |\u003d\u003d\u003d\u003d\u003d\u003d            ||"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   ||\\\\      / |  __   __|  ||  __  ___ ___ ||    ___   ____"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   || \\\\    /  |//  \\//  |  ||//  \\/  |/    ||// / _ \\ //   \\"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   ||  \\\\  /   |||   ||  |  |||   ||  ||    ||\\\\ | __/ ||"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   ||   \\\\/    |\\\\__/\\\\__|  |||   \\\\__|\\___ || \\\\\\___| ||"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   *****************************************************|"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   Full user guide available at: https://ay2021s1-cs2113t-f12-4.github.io/tp/"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   Enter \u003chelp\u003e for a quick view of available commands."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   What is your name?"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   ````"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Refer to the Features section below for more details on the application\u0027s available commands."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## 2. Features \u003ca name\u003d\"features\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "### Notes:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. Items in \u003c\u003e are the parameters to be supplied by the user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lhydl"
        },
        "content": "   e.g. in addmod \u003cmodule code\u003e, module code is a parameter which can be used as addmod CS2113T."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "1. The module code is valid if it starts with 2 - 3 characters, followed by 4 digits, followed by an optional character."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "1. Definition of too much / too little time spent on module. "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. A user is considered to spend too little time on a module if the user\u0027s actual workload is less than the expected "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "workload by more than 30%. For example, if the expected workload is 10 hours, a user is considered to spend too "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "little time on the module if his actual workload is less than 7 hours."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. A user is considered to spend too much time on a module if the user exceeds the expected workload by at least 30%. "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "For example, if the expected workload is 10 hours, a user is considered to spend too much time on the module if "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "his actual workload is 13 hours or more."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    1. A user is considered to spend just right amount of time on a module if the user spends between 70% to 130% of the "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "expected workload. For example, if the expected workload is 10 hours, a user is considered to spend just right amount of"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "time on the module if his actual workload is between 7 hours and 13 hours."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 2.1 View help: `help` \u003ca name\u003d\"help\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Shows a list of the commands available."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lhydl"
        },
        "content": "\u003cA list of available commands will be shown here\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 2.2 Add a module: `addmod` \u003ca name\u003d\"addmod\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Adds a module to the database."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `addmod \u003cmodule code\u003e`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` is valid. "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` does not exist in the database."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`addmod cs2113t`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lhydl"
        },
        "content": "CS2113T is added."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 2.3 Add expected module workload: `addexp` \u003ca name\u003d\"addexp\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Adds the expected workload of the module to the database."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `addexp \u003cmodule code\u003e \u003cexpected workload\u003e`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` is valid."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `expected workload` is expressed in hours. It has to be a whole number between 1 and 24 inclusive."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* If the `module code` already exists, this command replaces its expected workload with the new expected workload."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* If the `module code` does not exist, this command creates a new module and adds its expected workload to the database."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`addexp cs2113t 10`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lhydl"
        },
        "content": "CS2113T, Expected Workload: 10h is added."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 2.4 Add actual time spent on a module: `addtime` \u003ca name\u003d\"addtime\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Adds the time spent on the indicated module. At the end there is also a summary for the total hours spent in that week."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `addtime \u003cmodule code\u003e \u003ctime spent\u003e \u003cweek number\u003e`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` is valid."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `time spent` is in hours."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `week number` must be between 1 and 13 inclusive."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`addtime CS2113T 3 1`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "3 hours have been added to CS2113T."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "3.0 hours have been spent on this module in week 1."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 2.5 List expected and actual time spent of all modules: `list` \u003ca name\u003d\"list\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Shows a list of the modules, their expected module workload, and the actual time spent for the specific week."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `list \u003cweek number\u003e`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `week number` must be between 1 and 13 inclusive."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`list 1`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lhydl"
        },
        "content": "+------+---------+----------+----------+"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lhydl"
        },
        "content": "| Week | Module  | Expected |  Actual  |"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lhydl"
        },
        "content": "+------+---------+----------+----------+"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|  01  | CS2113T |    10    |    3.0   |"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lhydl"
        },
        "content": "+------+---------+----------+----------+"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 2.6 Analyse actual time spent on all modules: `analyse` \u003ca name\u003d\"analyse\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Shows the breakdown and analysis for actual time spent for the specific week."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Format: `analyse \u003cweek number\u003e`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "* The `week number` must be between 1 and 13 inclusive."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "`analyse 1`"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "````"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Module    Week 1"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "CS2113T"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Actual   | ███ 3.0"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Expected | ██████████ 10.0"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "CS1231"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Actual   | ███████ 7.0"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Expected | ████████ 8.0"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Total time spent: 10.0 H"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "30% of time is spent on CS2113T"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "70% of time is spent on CS1231"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Analysis:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "CS2113T"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "You seem to be spending too little time on the module."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Perhaps you should spend more time on this module."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "CS1231"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Good Job! Great time management!"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "````"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 2.7 Delete a module: `deletemod` \u003ca name\u003d\"deletemod\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Deletes the specified module code from the database."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `deletemod \u003cmodule code\u003e`"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` is valid."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` exists in the database."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`deletemod CS2113T`"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lhydl"
        },
        "content": "CS2113T is removed."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 2.8 Delete expected module workload: `deleteexp` \u003ca name\u003d\"deleteexp\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Deletes the expected workload of specified module code from the database."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `deleteexp \u003cmodule code\u003e`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` is valid."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` exists in the database."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`deleteexp CS2113T`"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected Workload of CS2113T is removed."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lhydl"
        },
        "content": "### 2.9 Minus from actual time spent on a module: `minustime` \u003ca name\u003d\"minus\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Minus the actual time spent on a specified module. At the end there is also a summary for the total hours spent in that "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "week."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `minustime \u003cmodule code\u003e \u003ctime spent\u003e \u003cweek number\u003e` "
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` is valid."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `time spent` is in hours."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `week number` must be between 1 and 13 inclusive."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`minustime CS2113T 3 1`"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "3 hours have been removed from CS2113T."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "2.0 hours have been spent on this module in week 1."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "### 2.10 Edit actual time spent on a module: `edittime` \u003ca name\u003d\"edit\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Edits the actual time spent on a specified module."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Format: `edittime \u003cmodule code\u003e \u003ctime spent\u003e \u003cweek number\u003e` "
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* The `module code` is valid."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* The `time spent` is in hours."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "* The `week number` must be between 1 and 13 inclusive."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "`edittime CS2113T 3 1`"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "````"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "3 hours is the new actual workload for the module CS2113T."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "3.0 hours have been spent on this module in week 1."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "````"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "### 2.11 Delete actual time spent on a module: `deletetime` \u003ca name\u003d\"deletetime\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Deletes the actual time spent on a specified module."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Format: `deletetime \u003cmodule code\u003e \u003cweek number\u003e` "
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` is valid."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `week number` must be a whole number between 1 and 13 inclusive."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "`deletetime CS2113T 3`"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "````"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Actual time of CS2113T of week 3 is removed."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "````"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "### 2.12 Add tasks: `addtask` \u003ca name\u003d\"addtask\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "kerct"
        },
        "content": "Adds a task under a specified module."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `addtask \u003cmodule code\u003e \u003ctask description\u003e`"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "* The `module code` is valid."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* The `module code` specified by the user must exist in the database. "
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`addtask CS2113T finish project`"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Got it. I\u0027ve added this task under CS2113T:"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "lhydl"
        },
        "content": "[X] [CS2113T] finish project"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "### 2.13 List all tasks: `listtask` \u003ca name\u003d\"listtask\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "kerct"
        },
        "content": "Lists all tasks in the database."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `listtask`"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "lhydl"
        },
        "content": "1. [X] [CS2113T] finish project"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "### 2.14 Mark task as done: `done` \u003ca name\u003d\"done\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "kerct"
        },
        "content": "Marks a specified task as done."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `done \u003ctask number\u003e`"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* `task number` is between 1 and the number of tasks in the database inclusive."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "lhydl"
        },
        "content": "[/] [CS2113T] finish project"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "### 2.15 Delete a task: `deletetask` \u003ca name\u003d\"deletetask\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "kerct"
        },
        "content": "Deletes a specified task from the database."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `deletetask \u003ctask number\u003e`"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "lhydl"
        },
        "content": "* `task number` is between 1 and the number of tasks in the database inclusive."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "lhydl"
        },
        "content": "`deletetask 1`"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "lhydl"
        },
        "content": "[/] [CS2113T] finish project"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "lhydl"
        },
        "content": "You currently have no task :-)"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "### 2.16 Open notification: `open` \u003ca name\u003d\"open\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Opens the notification with a randomised encouraging message."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "The user is notified on the progress of the current week."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "The current week is defined by the latest week that has at least one actual time input."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Format: `open`"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "`open`"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "A possible expected output:"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "```"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Oh no! It appears you are spending too little time on CS1010."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "   "
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "The harder you work, the closer you are to success!"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "````"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "Note: The actual output may differ as the encouraging message is randomised."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "### 2.17 Exit the program : `exit` \u003ca name\u003d\"exit\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "lhydl"
        },
        "content": "All changes saved."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "lhydl"
        },
        "content": "Bye \u003cusername\u003e. Hope to see you again soon!"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "lhydl"
        },
        "content": "````"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "### 2.18 Save user data \u003ca name\u003d\"save\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "kerct"
        },
        "content": "The program will save your data such as your name, modules, time spent and tasks"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "kerct"
        },
        "content": "to the hard disk automatically. There is no need to save these manually. "
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "kerct"
        },
        "content": "When you exit and run the program again, your data will be loaded from the"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "kerct"
        },
        "content": "hard disk, and you can use the app as per normal, "
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "kerct"
        },
        "content": "continuing from where you left off."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "kerct"
        },
        "content": "The external file which stores your data will be locked to read-only "
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "kerct"
        },
        "content": "when it is not in use, keeping your data safe and secure."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "kerct"
        },
        "content": "### 2.19 Clear module and task data: `clear` \u003ca name\u003d\"clear\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "kerct"
        },
        "content": "Deletes all module and tasks data."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "kerct"
        },
        "content": "The program will also prompt the user to confirm this action."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "kerct"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "kerct"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "kerct"
        },
        "content": "---WARNING!---"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "kerct"
        },
        "content": "This will delete all modules and tasks data."
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "kerct"
        },
        "content": "Type \u0027yes\u0027 if you wish to continue."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "kerct"
        },
        "content": "Enter any key to cancel this operation."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "kerct"
        },
        "content": "**Case 1: User enters `yes`**"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "kerct"
        },
        "content": "Note: `yes` is case-insensitive here."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "kerct"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "kerct"
        },
        "content": "Okay, your data has been deleted :("
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "kerct"
        },
        "content": "**Case 2: User enters `no`**"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "kerct"
        },
        "content": "Note: any other input will fall under this case."
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "kerct"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "kerct"
        },
        "content": "Clearing of data not confirmed. Your data is safe :)"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "kerct"
        },
        "content": " "
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "kerct"
        },
        "content": "### 2.20 Delete user data: `reset` \u003ca name\u003d\"reset\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "kerct"
        },
        "content": "Deletes all module and tasks data, and the username."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "kerct"
        },
        "content": "The program will also prompt the user to confirm this action."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "kerct"
        },
        "content": "If confirmed, the program will restart and prompt for a new username."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "kerct"
        },
        "content": "Format: `reset`"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "kerct"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "kerct"
        },
        "content": "---WARNING!---"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "kerct"
        },
        "content": "This will delete all your past data and reset the whole program."
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "kerct"
        },
        "content": "Type \u0027yes\u0027 if you wish to continue."
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "kerct"
        },
        "content": "Enter any key to cancel this operation."
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "kerct"
        },
        "content": "**Case 1: User enters `yes`**"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "kerct"
        },
        "content": "Note: `yes` is case-insensitive here."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "kerct"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "kerct"
        },
        "content": "Okay, the program will reset now..."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "kerct"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "kerct"
        },
        "content": "|\\\\        /|         |\u003d\u003d\u003d\u003d\u003d\u003d            ||"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "kerct"
        },
        "content": "||\\\\      / |  __   __|  ||  __  ___ ___ ||    ___   ____"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "kerct"
        },
        "content": "|| \\\\    /  |//  \\//  |  ||//  \\/  |/    ||// / _ \\ //   \\"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "kerct"
        },
        "content": "||  \\\\  /   |||   ||  |  |||   ||  ||    ||\\\\ | __/ ||"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "kerct"
        },
        "content": "||   \\\\/    |\\\\__/\\\\__|  |||   \\\\__|\\___ || \\\\\\___| ||"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "kerct"
        },
        "content": "*****************************************************|"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "kerct"
        },
        "content": "Full user guide available at: https://ay2021s1-cs2113t-f12-4.github.io/tp/UserGuide.html"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "kerct"
        },
        "content": "Enter \u003chelp\u003e for a quick view of available commands."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "kerct"
        },
        "content": "What is your name?"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "kerct"
        },
        "content": "**Case 2: User enters `no`**"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "kerct"
        },
        "content": "Note: any other input will fall under this case."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "kerct"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "kerct"
        },
        "content": "Reset not confirmed. Your data is safe :)"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "kerct"
        },
        "content": "````"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## 3. FAQ \u003ca name\u003d\"faq\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "kerct"
        },
        "content": "**Q**: Are the commands case-sensitive? "
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "kerct"
        },
        "content": "**A**: No, all the commands are case-insensitive. Eg. typing in `HELP` will be taken in as a `help` command."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "lhydl"
        },
        "content": "## 4. Command Summary \u003ca name\u003d\"summary\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Feature|Command|"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|--------|--------|"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Viewing help|`help`|"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Adding a module|`addmod \u003cmodule code\u003e`|"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Adding expected module workload|`addexp \u003cmodule code\u003e \u003cexpected workload\u003e`|"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Add to actual time spent on a module|`addtime \u003cmodule code\u003e \u003ctime spent\u003e \u003cweek number\u003e`|"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Listing all modules|`list \u003cweek number\u003e`|"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Analyse actual time spent on all modules|`analyse \u003cweek number\u003e`|"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Deleting a module|`deletemod \u003cmodule code\u003e`|"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Deleting expected module workload|`deleteexp \u003cmodule code\u003e`|"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Minus from time spent on the module|`minus \u003cmodule code\u003e \u003ctime spent\u003e \u003cweek number\u003e`|"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|Deleting actual time spent on the module|`deletetime \u003cmodule code\u003e \u003cweek number\u003e`|"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Add tasks|`addtask \u003cmodule code\u003e \u003ctask description\u003e`|"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|List all tasks|`listtask`|"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Mark task as done|`done \u003ctask number\u003e`|"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Delete a task|`deletetask \u003ctask number\u003e`|"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "|Open notification|`open`|"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Exiting the program|`exit`|"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "lhydl"
        },
        "content": "|Deleting module and task data|`reset`|"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "lhydl"
        },
        "content": "[Home Page](https://ay2021s1-cs2113t-f12-4.github.io/tp/)"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 47,
      "lhydl": 243,
      "DesmondKJL": 42,
      "kerct": 93,
      "-": 30,
      "KennethEer": 57
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Analysis.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public enum Analysis {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    tooMuchTimeSpent, tooLittleTimeSpent, justRight, noInput"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 5
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/ModTracker.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Main entry-point for the java.seedu.modtracker application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class ModTracker {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private ModuleList modList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private Notification notification;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": "        ModTracker modTracker;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "            modTracker \u003d new ModTracker(\"data/modtracker.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "            modTracker.run();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } while (modTracker.toRestart());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public ModTracker(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "        modList \u003d new ModuleList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        notification \u003d new Notification();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Runs the program until termination."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ui.printWelcomeScreen();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "        storage.unlockFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String name \u003d storage.getName();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "            name \u003d ui.printNamePrompt();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": "            storage.appendToFile(name);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerct"
        },
        "content": "        ui.printGreeting(name);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": "        storage.loadData(this);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "        notification.start();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerct"
        },
        "content": "        runCommandLoopUntilExitCommand(name);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "        storage.lockFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Reads the user command until the user enters the exit command and terminates the program."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param name name of user"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private void runCommandLoopUntilExitCommand(String name) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        while (!parser.isExit()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            parser.parse(input, modList, name, storage, true, taskList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public ModuleList getModList() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return modList;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public boolean toRestart() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return parser.isRestart();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lhydl": 21,
      "kerct": 45,
      "-": 6,
      "KennethEer": 4
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/ModView.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class ModView {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int LENGTH_OF_MODULE_CODE \u003d 6;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String FIRST_PART_OF_BORDER \u003d \"+------+-\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String SECOND_PART_OF_BORDER \u003d \"-------+----------+----------+\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String FIRST_PART_OF_HEADER \u003d \"| Week | Module \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String SECOND_PART_OF_HEADER \u003d \"| Expected |  Actual  |\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String NO_INPUT \u003d \" No Input \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int DECIMAL_PLACES \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int MIN_WEEK_VALUE \u003d 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int MAX_WEEK_VALUE \u003d 13;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String WEEK_NUMBER_PADDING_CHAR \u003d \"0\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int FACTOR \u003d 10;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String REPLACE_BY_WEEK_NUMBER \u003d \"WK\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String REPLACE_BY_MODULE_CODE \u003d \"XXXXXX\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String FIRST_PART_OF_CONTENT \u003d \"|  \" + REPLACE_BY_WEEK_NUMBER"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            + \"  | \" + REPLACE_BY_MODULE_CODE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String PADDING_CHAR \u003d \" \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String REPLACE_BY_EXPECTED_WORKLOAD \u003d \"YY\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String REPLACE_BY_NO_EXPECTED_WORKLOAD_FOUND \u003d \"    YY    \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String REPLACE_BY_ACTUAL_WORKLOAD \u003d \"ZZZZ\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String REPLACE_BY_NO_ACTUAL_WORKLOAD_FOUND \u003d \"   ZZZZ   \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String SECOND_PART_OF_CONTENT \u003d \" |\" + REPLACE_BY_NO_EXPECTED_WORKLOAD_FOUND"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            + \"|\" + REPLACE_BY_NO_ACTUAL_WORKLOAD_FOUND + \"|\" + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String INVALID_WEEK_NUMBER \u003d \"Please input a week number between 1 and 13 inclusive.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String EMPTY_MODULE_LIST \u003d \"The module list is empty. Please input some modules to be tracked.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints the week number, module code, expected workload and actual time spent"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * in the specified week for all the modules taken in a table format."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param list       list class containing all the modules taken."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param weekNumber specified week number."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printAllModuleInformation(ModuleList list, int weekNumber) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d list.getData();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!validateInputs(weekNumber, modList)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assert weekNumber \u003e\u003d MIN_WEEK_VALUE : \"Week number should be between 1 and 13 inclusive.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assert weekNumber \u003c\u003d MAX_WEEK_VALUE : \"Week number should be between 1 and 13 inclusive.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assert !modList.isEmpty() : \"modList should not be empty\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cString\u003e moduleCodes \u003d list.getModuleCodes();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int maxLength \u003d getMaxModuleLength(moduleCodes);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int extraCharsToBeAdded \u003d maxLength - LENGTH_OF_MODULE_CODE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String[] updatedTemplates \u003d updateTemplates(extraCharsToBeAdded);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String border \u003d updatedTemplates[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String header \u003d updatedTemplates[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String contents \u003d updatedTemplates[2];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String crossToBeAdded \u003d updatedTemplates[3];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.print(border + header + border);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (Module m : modList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            String updatedContent \u003d contents;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            updatedContent \u003d updateContent(weekNumber, crossToBeAdded, m, updatedContent);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.print(updatedContent + border);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private String updateContent(int weekNumber, String crossToBeAdded, Module m, String out) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String crosses \u003d REPLACE_BY_MODULE_CODE + crossToBeAdded;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String weekNum \u003d (isTwoDigitNumber(weekNumber) ? \"\" : WEEK_NUMBER_PADDING_CHAR) + weekNumber;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        out \u003d out.replace(REPLACE_BY_WEEK_NUMBER, weekNum);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        StringBuilder moduleCode \u003d new StringBuilder(m.getModuleCode());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        while (moduleCode.length() \u003c crosses.length()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            moduleCode.append(\" \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        out \u003d out.replace(crosses, moduleCode.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (m.doesExpectedWorkLoadExist()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            String expectedWorkLoad \u003d (isTwoDigitNumber(m.getExpectedWorkload()) ? \"\" : PADDING_CHAR)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    + m.getExpectedWorkload();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            out \u003d out.replace(REPLACE_BY_EXPECTED_WORKLOAD, expectedWorkLoad);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            out \u003d out.replace(REPLACE_BY_NO_EXPECTED_WORKLOAD_FOUND, NO_INPUT);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (m.doesActualTimeExist(weekNumber)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            double actualTime \u003d m.getActualTime()[weekNumber - INDEX_OFFSET];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            actualTime \u003d round(actualTime, DECIMAL_PLACES);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            String actualWorkLoad \u003d (isTwoDigitNumber((int) actualTime) ? \"\" : PADDING_CHAR)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    + actualTime;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            out \u003d out.replace(REPLACE_BY_ACTUAL_WORKLOAD, actualWorkLoad);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            out \u003d out.replace(REPLACE_BY_NO_ACTUAL_WORKLOAD_FOUND, NO_INPUT);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private int getMaxModuleLength(ArrayList\u003cString\u003e moduleCodes) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int maxLength \u003d 0;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (String s : moduleCodes) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (s.length() \u003e maxLength) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                maxLength \u003d s.length();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return maxLength;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private boolean validateInputs(int weekNumber, ArrayList\u003cModule\u003e modList) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (weekNumber \u003c MIN_WEEK_VALUE || weekNumber \u003e MAX_WEEK_VALUE) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(INVALID_WEEK_NUMBER + System.lineSeparator());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (modList.isEmpty()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(EMPTY_MODULE_LIST + System.lineSeparator());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private double round(double value, int decimalPlaces) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int scale \u003d (int) Math.pow(FACTOR, decimalPlaces);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return (double) Math.round(value * scale) / scale;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private boolean isTwoDigitNumber(int num) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return String.valueOf(num).length() \u003d\u003d 2;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private String[] updateTemplates(int extraCharsToBeAdded) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String[] output \u003d new String[4];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        StringBuilder dashToBeAdded \u003d new StringBuilder();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        StringBuilder spaceToBeAdded \u003d new StringBuilder();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        StringBuilder crossToBeAdded \u003d new StringBuilder();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (int i \u003d 0; i \u003c extraCharsToBeAdded; i++) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            dashToBeAdded.append(\"-\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            spaceToBeAdded.append(\" \");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            crossToBeAdded.append(\"X\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        output[0] \u003d FIRST_PART_OF_BORDER + dashToBeAdded + SECOND_PART_OF_BORDER;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        output[1] \u003d FIRST_PART_OF_HEADER + spaceToBeAdded + SECOND_PART_OF_HEADER;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        output[2] \u003d FIRST_PART_OF_CONTENT + crossToBeAdded + SECOND_PART_OF_CONTENT;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        output[3] \u003d crossToBeAdded.toString();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 152,
      "kerct": 2
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents a module. A \u003ccode\u003eModule\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * a module with its moduleCode, expected time and actual time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final int NO_INPUT \u003d -1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final int INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private String moduleCode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private int expected \u003d NO_INPUT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private final double[] actualTime \u003d new double[13];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Module(String mod) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "        moduleCode \u003d mod;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Arrays.fill(actualTime, NO_INPUT);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Module(String mod, String expected) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "        moduleCode \u003d mod;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.expected \u003d Integer.parseInt(expected);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Arrays.fill(actualTime, NO_INPUT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (expected \u003d\u003d NO_INPUT) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return moduleCode;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return moduleCode + \", Expected Workload: \" + expected + \"h\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getModuleCode() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return moduleCode;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public int getExpectedWorkload() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return expected;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void setExpectedWorkload(int expected) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerct"
        },
        "content": "        this.expected \u003d expected;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public double[] getActualTime() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return actualTime;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public double getActualTimeInSpecificWeek(String week) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        int i \u003d Integer.parseInt(week);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        return actualTime[i - INDEX_OFFSET];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void deleteActualTime(int week) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (this.actualTime[week - INDEX_OFFSET] !\u003d NO_INPUT) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            this.actualTime[week - INDEX_OFFSET] \u003d NO_INPUT;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void addActualTime(String time, String week) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        double d \u003d Double.parseDouble(time);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        int i \u003d Integer.parseInt(week);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        double timeDifference \u003d 99 - this.actualTime[i - INDEX_OFFSET];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (timeDifference \u003c d) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            throw new IllegalArgumentException(\"Total workload cannot be more than 99 hours.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (this.actualTime[i - INDEX_OFFSET] \u003d\u003d NO_INPUT) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            this.actualTime[i - INDEX_OFFSET] \u003d d;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            this.actualTime[i - INDEX_OFFSET] +\u003d d;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void minusActualTime(String time, String week) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        double d \u003d Double.parseDouble(time);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        int i \u003d Integer.parseInt(week);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kerct"
        },
        "content": "        //assert this.actualTime[i - INDEX_OFFSET] !\u003d NO_INPUT : \"Cannot minus if actual time is not initialised\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (this.actualTime[i - INDEX_OFFSET] !\u003d NO_INPUT) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            this.actualTime[i - INDEX_OFFSET] -\u003d d;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void editsActualTime(String time, String week) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        double d \u003d Double.parseDouble(time);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        int i \u003d Integer.parseInt(week);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        this.actualTime[i - INDEX_OFFSET] \u003d d;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (!(obj instanceof Module)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Module m \u003d (Module) obj;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return moduleCode.equals(m.moduleCode);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return moduleCode.hashCode();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public boolean doesExpectedWorkLoadExist() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return (expected !\u003d NO_INPUT);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public boolean doesActualTimeExist(int weekNumber) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return (actualTime[weekNumber - INDEX_OFFSET] !\u003d NO_INPUT);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public boolean doesHoursExceedTotal(double time, int weekNumber) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        return (actualTime[weekNumber - INDEX_OFFSET] \u003c time);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 35,
      "DesmondKJL": 30,
      "kerct": 12,
      "KennethEer": 45
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/ModuleList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents a module list. A \u003ccode\u003eModuleList\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * a list of modules and a Ui object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class ModuleList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static ArrayList\u003cModule\u003e modList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String MODULECODE_LENGTH \u003d Ui.MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String INVALID_EXP_HOURS \u003d \"Please input a whole number between 1 and 24 for the \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            + \"expected workload.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String NEGATIVE_TIME_ERROR \u003d \"Please input a positive number for time.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String INVALID_TIME_ERROR \u003d \"Please input a number between 0 and 99 for time.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_ADDMOD \u003d \"Please type addmod \u003cmodule code\u003e\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_ADDEXP \u003d \"Please type addexp \u003cmodule code\u003e \u003cexpected workload\u003e\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_DELETEMOD \u003d \"Please type deletemod \u003cmodule code\u003e\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_DELETEEXP \u003d \"Please type deleteexp \u003cmodule code\u003e\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String NO_WORKLOAD_ERROR \u003d \"Cannot minus actual time as there is no actual time inputted.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String HOURS_EXCEED_ERROR \u003d \"Sorry you are trying to remove too many hours.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String HOURS_REMOVAL \u003d \" hours have been removed from \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String HOUR_REMOVAL \u003d \" hour has been removed from \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String HOURS_ADD \u003d \" hours have been added to \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String HOUR_ADD \u003d \" hour has been added to \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String HOUR_EDIT \u003d \" hour is the new actual workload for the module \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String HOURS_EDIT \u003d \" hours is the new actual workload for the module \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String SUMMARY \u003d \" hours have been spent on this module in week \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String FULL_STOP \u003d \".\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final int MAX_EXP_HOURS \u003d 24;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final int MAX_TIME_HOURS \u003d 99;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final int MIN_MOD_LENGTH \u003d 6;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final int MAX_MOD_LENGTH \u003d 8;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final int NO_INPUT \u003d -1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Checks if the module exists in the list of modules."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input module code typed in by user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return true if module is found in the list of modules, false otherwise."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public boolean checkIfModuleExist(String input) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Module currentMod \u003d new Module(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (Module mod : modList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (mod.equals(currentMod)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Checks if the module is valid."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param module  module code typed in by user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return true if module code is valid, false otherwise."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public boolean checkIfModuleValid(String module, boolean toPrint) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String regexType1 \u003d \"[A-Z]{2}\\\\d{4}\";               //example: CS2113"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String regexType2 \u003d \"[A-Z]{2}\\\\d{4}[A-Z]\";          //example: CS2113T"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String regexType3 \u003d \"[A-Z]{3}\\\\d{4}\";               //example: GER1000"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String regexType4 \u003d \"[A-Z]{3}\\\\d{4}[A-Z]\";          //example: GES1000T"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Pattern pattern;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Matcher matcher;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Pattern secondPattern;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Matcher secondMatcher;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean matchFound;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String trimmedMod \u003d module.trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (trimmedMod.contains(\" \")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            ui.printInvalidModuleSpacing(toPrint);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (trimmedMod.length() \u003c MIN_MOD_LENGTH || trimmedMod.length() \u003e MAX_MOD_LENGTH) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            ui.printInvalidModuleLength(toPrint);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (trimmedMod.length() \u003d\u003d MIN_MOD_LENGTH) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            pattern \u003d Pattern.compile(regexType1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            matcher \u003d pattern.matcher(trimmedMod);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            matchFound \u003d matcher.find();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (matchFound) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                ui.printInvalidModuleType(toPrint);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (trimmedMod.length() \u003d\u003d (MIN_MOD_LENGTH + 1)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            pattern \u003d Pattern.compile(regexType2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            matcher \u003d pattern.matcher(trimmedMod);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            secondPattern \u003d Pattern.compile(regexType3);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            secondMatcher \u003d secondPattern.matcher(trimmedMod);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            matchFound \u003d (matcher.find() || secondMatcher.find());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (matchFound) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                ui.printInvalidModuleType(toPrint);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            pattern \u003d Pattern.compile(regexType4);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            matcher \u003d pattern.matcher(trimmedMod);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            matchFound \u003d matcher.find();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (matchFound) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                ui.printInvalidModuleType(toPrint);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Checks if the time is valid."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param hours   number of hours typed in by user."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return true if number of hours is valid, false otherwise."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public boolean checkIfExpTimeValid(double hours, boolean toPrint) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (hours \u003c 1 || hours \u003e MAX_EXP_HOURS) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                System.out.println(INVALID_EXP_HOURS + System.lineSeparator());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * Checks if the time is valid when using add time, minus time and edit time functions."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param hours   number of hours typed in by user."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @return true if number of hours is valid, false otherwise."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public boolean checkIfTimeValid(double hours, boolean toPrint) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (hours \u003c 0) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                System.out.println(NEGATIVE_TIME_ERROR + System.lineSeparator());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        } else if (hours \u003e MAX_TIME_HOURS) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                System.out.println(INVALID_TIME_ERROR + System.lineSeparator());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Creates a module and adds the module to the list of modules if the module"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * does not exist."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input   module code typed in by user."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage storage object where data is stored."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addMod(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] modInfo \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            String modCode \u003d modInfo[1];"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            modCode \u003d modCode.toUpperCase();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            assert modCode.length() \u003e\u003d MIN_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            assert modCode.length() \u003c\u003d MAX_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    ui.printExist(modCode);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                Module currentModule \u003d new Module(modCode);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                modList.add(currentModule);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    ui.printAdd(currentModule);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    storage.appendToFile(input);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(ERROR_ADDMOD + System.lineSeparator());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Creates a module and adds the module with expected time to the"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * list of modules if module does not exist."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * If module already exist, update expected time based on user input."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input   module code and expected time typed in by user."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage storage object where data is stored."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addExp(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] modInfo \u003d input.trim().split(\" \", 3);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            String modCode \u003d modInfo[1];"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            String expTime \u003d modInfo[2];"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            modCode \u003d modCode.toUpperCase();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            int expectedTime \u003d Integer.parseInt(expTime);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            if (!checkIfExpTimeValid(expectedTime, toPrint)) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            assert expectedTime \u003e\u003d 0 : \"The expected time should be positive\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            Module currentMod \u003d new Module(modCode, expTime);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                modList.add(currentMod);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                int index \u003d modList.indexOf(currentMod);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                modList.get(index).setExpectedWorkload(expectedTime);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                ui.printAdd(currentMod);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                storage.appendToFile(input);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(ERROR_ADDEXP + System.lineSeparator());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(ERROR_ADDEXP);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                System.out.println(INVALID_EXP_HOURS + System.lineSeparator());"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Deletes the module if module exists."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input   module code typed in by user."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage storage object where data is stored."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void deleteMod(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] modInfo \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            String modCode \u003d modInfo[1];"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            modCode \u003d modCode.toUpperCase();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                Module inputMod \u003d new Module(modCode);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                modList.remove(inputMod);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    ui.printDelete(modCode);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    storage.appendToFile(input);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    ui.printNotExist(modCode);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskData();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            int i;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            for (i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                String mod \u003d tasks.get(i - 1).getModCode().trim();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                if (mod.equals(modCode)) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    tasks.remove(i - 1);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    i--;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(ERROR_DELETEMOD + System.lineSeparator());"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Deletes the expected time of the module if module exists."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input   module code and expected time typed in by user."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage storage object where data is stored."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void deleteExp(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] modInfo \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            String modCode \u003d modInfo[1];"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            modCode \u003d modCode.toUpperCase();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                Module inputMod \u003d new Module(modCode);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                int index \u003d modList.indexOf(inputMod);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                modList.get(index).setExpectedWorkload(NO_INPUT);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    ui.printDeleteExp(modCode);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    storage.appendToFile(input);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    ui.printNotExist(modCode);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(ERROR_DELETEEXP + System.lineSeparator());"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void deleteTime(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String[] commandInfo \u003d input.trim().split(\" \", 3);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String modCode;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modCode \u003d commandInfo[1].toUpperCase();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assert modCode.length() \u003e\u003d MIN_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assert modCode.length() \u003c\u003d MAX_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (!checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                ui.printNotExist(modCode);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            Module currentModule \u003d new Module(modCode);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            int index \u003d modList.indexOf(currentModule);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            int week \u003d Integer.parseInt(commandInfo[2]);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (week \u003c 1 || week \u003e 13) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(\"The week number should be between 1 and 13.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            modList.get(index).deleteActualTime(week);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(\"Actual time of \" + modCode + \" of week \" + commandInfo[2] + \" is removed.\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                storage.appendToFile(input);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * Adds time to actual workload to an existing module."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     *"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param input   module code, added time spent and week input by user."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param storage storage object where data is stored."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     */"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addTime(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String[] commandInfo \u003d input.trim().split(\" \", 4);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String modCode;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        double hours;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modCode \u003d commandInfo[1].toUpperCase();"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        hours \u003d Double.parseDouble(commandInfo[2]);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assert modCode.length() \u003e\u003d MIN_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assert modCode.length() \u003c\u003d MAX_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (!checkIfTimeValid(hours, toPrint)) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (!checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                ui.printNotExist(modCode);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            Module currentModule \u003d new Module(modCode);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            int index \u003d modList.indexOf(currentModule);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            modList.get(index).addActualTime(commandInfo[2], commandInfo[3]);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                if (hours \u003e 1) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    System.out.println(commandInfo[2] + HOURS_ADD + modCode + FULL_STOP);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    System.out.println(modList.get(index).getActualTimeInSpecificWeek(commandInfo[3])"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                            + SUMMARY + commandInfo[3] + FULL_STOP + System.lineSeparator());"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    System.out.println(commandInfo[2] + HOUR_ADD + modCode + FULL_STOP);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    System.out.println(modList.get(index).getActualTimeInSpecificWeek(commandInfo[3])"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                            + SUMMARY + commandInfo[3] + FULL_STOP + System.lineSeparator());"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                storage.appendToFile(input);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * Minus time from actual workload to an existing module."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     *"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param input   module code, removed time spent and week input by user."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param storage storage object where data is stored."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     */"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void minusTime(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String modCode;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        double hours;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String[] commandInfo \u003d input.trim().split(\" \", 4);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modCode \u003d commandInfo[1].toUpperCase();"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        hours \u003d Double.parseDouble(commandInfo[2]);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assert modCode.length() \u003e\u003d MIN_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assert modCode.length() \u003c\u003d MAX_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (!checkIfTimeValid(hours, toPrint)) {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (!checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                ui.printNotExist(modCode);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            Module currentModule \u003d new Module(modCode);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            int index \u003d modList.indexOf(currentModule);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            int week \u003d Integer.parseInt(commandInfo[3]);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (modList.get(index).doesActualTimeExist(week)) {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                if (!modList.get(index).doesHoursExceedTotal(hours, week)) {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    modList.get(index).minusActualTime(commandInfo[2], commandInfo[3]);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    if (toPrint) {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                        if (hours \u003e 1) {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                            System.out.println(commandInfo[2] + HOURS_REMOVAL"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                                    + modCode + FULL_STOP);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                            System.out.println(modList.get(index).getActualTimeInSpecificWeek(commandInfo[3])"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                                    + SUMMARY + commandInfo[3] + FULL_STOP + System.lineSeparator());"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                            System.out.println(commandInfo[2] + HOUR_REMOVAL"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                                    + modCode + FULL_STOP);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                            System.out.println(modList.get(index).getActualTimeInSpecificWeek(commandInfo[3])"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                                    + SUMMARY + commandInfo[3] + FULL_STOP + System.lineSeparator());"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                        storage.appendToFile(input);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    if (toPrint) {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                        System.out.println(HOURS_EXCEED_ERROR"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                                + System.lineSeparator());"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    System.out.println(NO_WORKLOAD_ERROR"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                            + System.lineSeparator());"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * Edits time to actual workload to an existing module."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     *"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param input   module code, edited time spent and week input by user."
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param toPrint whether the UI should print the output."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     * @param storage storage object where data is stored."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "     */"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void editTime(String input, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String[] commandInfo \u003d input.trim().split(\" \", 4);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String modCode;"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        double hours;"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modCode \u003d commandInfo[1].toUpperCase();"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        hours \u003d Double.parseDouble(commandInfo[2]);"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (!checkIfModuleValid(modCode, toPrint)) {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assert modCode.length() \u003e\u003d MIN_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assert modCode.length() \u003c\u003d MAX_MOD_LENGTH : MODULECODE_LENGTH;"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (!checkIfTimeValid(hours, toPrint)) {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        if (!checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                ui.printNotExist(modCode);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            }"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            Module currentModule \u003d new Module(modCode);"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            int index \u003d modList.indexOf(currentModule);"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            modList.get(index).editsActualTime(commandInfo[2], commandInfo[3]);"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                if (hours \u003e 1) {"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    System.out.println(commandInfo[2] + HOURS_EDIT + modCode + FULL_STOP);"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    System.out.println(modList.get(index).getActualTimeInSpecificWeek(commandInfo[3])"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                            + SUMMARY + commandInfo[3] + FULL_STOP + System.lineSeparator());"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    System.out.println(commandInfo[2] + HOUR_EDIT + modCode + FULL_STOP);"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                    System.out.println(modList.get(index).getActualTimeInSpecificWeek(commandInfo[3])"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                            + SUMMARY + commandInfo[3] + FULL_STOP + System.lineSeparator());"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                }"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                storage.appendToFile(input);"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public ArrayList\u003cModule\u003e getData() {"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return modList;"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Gets all the module codes of modules taken by the user."
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return a list containing all the modules codes."
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public ArrayList\u003cString\u003e getModuleCodes() {"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (Module m : modList) {"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            output.add(m.getModuleCode());"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "kerct"
        },
        "content": "        modList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "limgl1998": 13,
      "DesmondKJL": 185,
      "lhydl": 24,
      "kerct": 4,
      "KennethEer": 299
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Notification.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "import static seedu.modtracker.ModuleList.modList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Notification {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static int numOfNotification \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static int currentWeek;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String ON_TRACK \u003d \"You are on track. Well Done!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String MAINTAIN \u003d \"Keep up the good work!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String SUCCESS \u003d \"Good time management boosts productivity!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String TIME_MANAGEMENT \u003d \"Good time management is the key to success!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String HARD_WORK \u003d \"The harder you work, the closer you are to success!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String PUSH_ON \u003d \"Never give up!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String STRONGER \u003d \"When we push ourselves, we come back stronger.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String CAPABLE \u003d \"You are capable of achieving better.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String TODAY \u003d \"Today is a perfect day to become better.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String TOO_MUCH_TIME \u003d \"Beware! Seems like you are spending too much time on %s.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String TOO_LITTLE_TIME \u003d \"Oh no! It appears you are spending too little time on %s.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String OPEN \u003d \"Please type `open` to view the notification and an encouraging message.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String[] lines \u003d {MAINTAIN, SUCCESS, TIME_MANAGEMENT};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String[] pushForward \u003d {HARD_WORK, PUSH_ON, STRONGER, CAPABLE, TODAY};"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    //update week number with user input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void updateCurrentWeek() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        currentWeek \u003d 13;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        while (currentWeek \u003e 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            for (Module mod : modList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (hasExpAndAct(mod)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            currentWeek--;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    //check if module has actual and expected time"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private boolean hasExpAndAct(Module mod) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return mod.doesExpectedWorkLoadExist() \u0026\u0026 mod.doesActualTimeExist(currentWeek);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public int getNumNotification(ModuleList list) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        numOfNotification \u003d 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d list.getData();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": "        updateCurrentWeek();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (currentWeek \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (Module mod : modList) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            ViewTimeBreakdownAnalysis breakDown \u003d new ViewTimeBreakdownAnalysis();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            Analysis analysis;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (hasExpAndAct(mod)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                analysis \u003d breakDown.computeAnalysisOfTimeSpent(mod, currentWeek);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                switch (analysis) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                case tooMuchTimeSpent:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                case tooLittleTimeSpent:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    numOfNotification++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return numOfNotification;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void randomise(String[] lines) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String currentLine;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Random rand \u003d new Random();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        currentLine \u003d lines[rand.nextInt(lines.length)];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(currentLine + System.lineSeparator());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printNotification(ModuleList list) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        numOfNotification \u003d getNumNotification(list);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (numOfNotification \u003d\u003d 0 || currentWeek \u003d\u003d 0) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(ON_TRACK);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            randomise(lines);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d list.getData();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean isBehind \u003d false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean isFine \u003d true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (Module mod : modList) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            ViewTimeBreakdownAnalysis breakDown \u003d new ViewTimeBreakdownAnalysis();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            Analysis analysis;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (hasExpAndAct(mod)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                analysis \u003d breakDown.computeAnalysisOfTimeSpent(mod, currentWeek);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                switch (analysis) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                case tooMuchTimeSpent:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    System.out.println(String.format(TOO_MUCH_TIME, mod.getModuleCode()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                case tooLittleTimeSpent:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    System.out.println(String.format(TOO_LITTLE_TIME, mod.getModuleCode()));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    isBehind \u003d true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (isBehind) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            randomise(pushForward);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kerct"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kerct"
        },
        "content": "        numOfNotification \u003d getNumNotification(list);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (numOfNotification \u003e 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"You have \" + numOfNotification + \" notifications.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(OPEN + System.lineSeparator());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 9,
      "KennethEer": 117
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "    protected boolean exit \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": "    protected boolean restart \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_ADDMOD \u003d \"addmod\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_ADDEXP \u003d \"addexp\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_DELETEMOD \u003d \"deletemod\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_DELETEEXP \u003d \"deleteexp\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String COMMAND_OPEN_NOTIFICATION \u003d \"open\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_MINUSTIME \u003d \"minustime\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public static final String COMMAND_EDITTIME \u003d \"edittime\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public static final String COMMAND_DELETETIME \u003d \"deletetime\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public static final String COMMAND_ADDTIME \u003d \"addtime\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_EXIT \u003d \"exit\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_ANALYSIS \u003d \"analyse\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_ADDTASK \u003d \"addtask\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_DELETETASK \u003d \"deletetask\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String COMMAND_LISTTASK \u003d \"listtask\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public static final String COMMAND_CLEAR \u003d \"clear\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public static final String COMMAND_RESET \u003d \"reset\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Parses user inputs."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param input    user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param modList  module list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param name     name entered by the user"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param storage  storage object to load and store data"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param toPrint  whether the UI should print the output"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param taskList task list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void parse(String input, ModuleList modList, String name, Storage storage,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                      boolean toPrint, TaskList taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Notification notification \u003d new Notification();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert input !\u003d null : \"Input should not be null\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String[] command \u003d input.trim().split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        switch (command[0].toLowerCase()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_ADDMOD:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerct"
        },
        "content": "            modList.addMod(input, toPrint, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_ADDEXP:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": "            modList.addExp(input, toPrint, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_DELETEMOD:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerct"
        },
        "content": "            modList.deleteMod(input, toPrint, storage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        case COMMAND_EDITTIME:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                modList.editTime(input, toPrint, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printErrorMessage(COMMAND_EDITTIME);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_DELETEEXP:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerct"
        },
        "content": "            modList.deleteExp(input, toPrint, storage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        case COMMAND_OPEN_NOTIFICATION:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            input \u003d input.toLowerCase().trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (input.equals(COMMAND_OPEN_NOTIFICATION)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                notification.printNotification(modList);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                ui.printInvalidCommand();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_ADDTIME:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                modList.addTime(input, toPrint, storage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "            } catch (IllegalArgumentException b) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                System.out.println(\"Total workload cannot be more than 99 hours.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printErrorMessage(COMMAND_ADDTIME);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_MINUSTIME:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kerct"
        },
        "content": "                modList.minusTime(input, toPrint, storage);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printErrorMessage(COMMAND_MINUSTIME);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        case COMMAND_DELETETIME:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                modList.deleteTime(input, toPrint, storage);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printErrorMessage(COMMAND_DELETETIME);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                ui.printTable(modList, Integer.parseInt(command[1]));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printErrorMessage(COMMAND_LIST);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        case COMMAND_ANALYSIS:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kerct"
        },
        "content": "                assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                ui.printBreakDownAnalysis(modList, Integer.parseInt(command[1]));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printErrorMessage(COMMAND_ANALYSIS);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_ADDTASK:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kerct"
        },
        "content": "            taskList.addTask(input, toPrint, storage);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_DELETETASK:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kerct"
        },
        "content": "            taskList.deleteTasks(input, toPrint, storage);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kerct"
        },
        "content": "            taskList.setDone(input, toPrint, storage);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_LISTTASK:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_HELP:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (!input.toLowerCase().trim().equals(COMMAND_HELP)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printInvalidCommand();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printHelpList();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case COMMAND_EXIT:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (!input.toLowerCase().trim().equals(COMMAND_EXIT)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printInvalidCommand();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printExitScreen(name);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                exit \u003d true;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kerct"
        },
        "content": "        case COMMAND_CLEAR:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kerct"
        },
        "content": "            if (ui.confirmClear()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kerct"
        },
        "content": "                storage.clearData();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kerct"
        },
        "content": "                modList.clear();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kerct"
        },
        "content": "                taskList.clear();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kerct"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kerct"
        },
        "content": "        case COMMAND_RESET:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kerct"
        },
        "content": "            if (ui.confirmReset()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kerct"
        },
        "content": "                storage.reset();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kerct"
        },
        "content": "                modList.clear();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kerct"
        },
        "content": "                taskList.clear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kerct"
        },
        "content": "                restart \u003d true;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kerct"
        },
        "content": "                exit \u003d true;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kerct"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            ui.printInvalidCommand();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Checks for exit status."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return status of exit."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Checks for whether the program wants to restart."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return status of restart."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public boolean isRestart() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return restart;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lhydl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 3,
      "lhydl": 108,
      "DesmondKJL": 9,
      "kerct": 49,
      "KennethEer": 17
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Deals with loading tasks from and saving tasks to a file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Creates a new Storage object with a File created at the specified file path."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param filePath File path whereby data is loaded from and stored at."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (filePath \u003d\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "            file \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns a scanner object to read the file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return Scanner to read the file of the Storage object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerct"
        },
        "content": "    protected Scanner getReader() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert file !\u003d null : \"File should not be null\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return new Scanner(file);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns the username, if any."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return Name found in the file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Scanner reader \u003d getReader();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert reader !\u003d null : \"Reader should not be null\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (!reader.hasNext()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return reader.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Loads the rest of the data from the file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void loadData(ModTracker modTracker) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Scanner reader \u003d getReader();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert reader !\u003d null : \"Reader should not be null\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert reader.hasNext() : \"First line should be filled with the name\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerct"
        },
        "content": "        reader.nextLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kerct"
        },
        "content": "        while (reader.hasNext()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerct"
        },
        "content": "            String input \u003d reader.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kerct"
        },
        "content": "            parser.parse(input, modTracker.getModList(), \"\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    this, false, modTracker.getTaskList());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Appends the specified input to the storage file and creates a new line."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param input The input to be appended to the file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void appendToFile(String input) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert filePath !\u003d null : \"File path should not be null\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assert file !\u003d null : \"File should not be null\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kerct"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kerct"
        },
        "content": "            // creates a FileWriter in append mode"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kerct"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kerct"
        },
        "content": "            fw.write(input + System.lineSeparator());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kerct"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kerct"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void clearData() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String name \u003d getName();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kerct"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kerct"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kerct"
        },
        "content": "            fw.write(name + System.lineSeparator());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kerct"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kerct"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void reset() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kerct"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kerct"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kerct"
        },
        "content": "            fw.write(\"\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kerct"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kerct"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void unlockFile() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kerct"
        },
        "content": "        boolean unlock \u003d file.setWritable(true);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (!unlock) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"Error setting file to be writable\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void lockFile() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kerct"
        },
        "content": "        boolean lock \u003d file.setReadOnly();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (!lock) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"Error making data file read-only\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 133
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lhydl"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": " * Creates a Task object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    protected String modCode;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param modCode module code"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param description name of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public Task(String modCode, String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        this.modCode \u003d modCode;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Gets the done status of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @return isDone"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Returns a cross if task is not done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Returns a tick if task is done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @return tick or cross symbol"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return (isDone ? \"/\" : \"X\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public String getModCode() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return modCode;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Formats the display of tasks according to tasks type."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @return the required display format depending on type of task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + \"[\" + modCode + \"] \" + description.trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lhydl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lhydl": 62
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lhydl"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": " * Contains the task list and operations to manipulate the tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public ModuleList modList \u003d new ModuleList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String MARKED_DONE_PREVIOUSLY \u003d \"Task is already marked as done previously.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String MARKED_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String TASK_DELETED \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Marks a selected task as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Can only take in one task number at a time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param str input entered by user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void setDone(String str, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] digit \u003d str.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            int num \u003d Integer.parseInt(digit[1]); //change string to int"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "                assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } else if (num \u003c\u003d tasks.size() \u0026\u0026 num \u003e 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                if (tasks.get(num - 1).getDoneStatus()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    System.out.println(MARKED_DONE_PREVIOUSLY + System.lineSeparator());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    tasks.get(num - 1).setAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    if (toPrint) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                        System.out.println(MARKED_DONE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                        System.out.println(tasks.get(num - 1) + System.lineSeparator());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "                        storage.appendToFile(str);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": "                assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printInvalidTaskNumber(taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            ui.printErrorMessage(Parser.COMMAND_DONE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Deletes a selected task from the task list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Can only take in one task number at a time."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param str input entered by user"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void deleteTasks(String str, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] digit \u003d str.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            int num \u003d Integer.parseInt(digit[1]); //change string to int"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerct"
        },
        "content": "                assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } else if (num \u003c\u003d tasks.size() \u0026\u0026 num \u003e 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerct"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    System.out.println(TASK_DELETED);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    System.out.println(tasks.get(num - 1));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerct"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                tasks.remove(num - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kerct"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    ui.printNumberOfTasks(taskList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    storage.appendToFile(str);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerct"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kerct"
        },
        "content": "                assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printInvalidTaskNumber(taskList);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            ui.printErrorMessage(Parser.COMMAND_DELETETASK);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param str input entered by user"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void addTask(String str, boolean toPrint, Storage storage) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String[] split \u003d str.trim().split(\" \", 3);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            String modCode \u003d split[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            modCode \u003d modCode.toUpperCase();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (!modList.checkIfModuleValid(modCode, true)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            if (!modList.checkIfModuleExist(modCode)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kerct"
        },
        "content": "                assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                /*Module currentModule \u003d new Module(modCode);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                modList.modList.add(currentModule);*/"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printNotExist(modCode);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            tasks.add(new Task(modCode, split[2]));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kerct"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printTaskIsAdded(taskList, modCode);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                ui.printNumberOfTasks(taskList);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kerct"
        },
        "content": "                storage.appendToFile(str);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kerct"
        },
        "content": "            assert toPrint : \"toPrint should be true\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            ui.printErrorMessage(Parser.COMMAND_ADDTASK);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskData() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kerct"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lhydl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lhydl": 99,
      "kerct": 27
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": " * Text UI of the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    private static final Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String INVALID_MODULETYPE \u003d \"The module code should have 2 - 3 characters, followed by \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        + \"4 digits, followed by an optional character.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String MODULETYPE_EXAMPLE \u003d \"The accepted module code is of the following forms: CG1111, \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        + \"CS2113T, GER1000, GES1000T.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String MODULECODE_SPACING \u003d \"Please type module code without any spacing.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String INVALID_MODULECODE \u003d \"Please check module code again.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String MODULECODE_LENGTH \u003d \"The module code should have 6 - 8 characters without any spacing.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String INVALID_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String ENTER_HELP \u003d \"Enter \u003chelp\u003e for a quick view of available commands.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String HELP_LIST \u003d \"Available Commands:\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"1. addmod \u003cmodule code\u003e\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: addmod CS2113T\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"2. addexp \u003cmodule code\u003e \u003cexpected workload\u003e\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: addexp CS2113T 5\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"3. addtime \u003cmodule code\u003e \u003cactual time spent\u003e \u003cweek number\u003e\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: addtime CS2113T 2 1\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"4. list \u003cweek number\u003e\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: list 2\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"5. deletemod \u003cmodule code\u003e\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: deletemod CS2113T\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"6. deleteexp \u003cmodule code\u003e\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: deleteexp CS2113T\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"7. minustime \u003cmodule code\u003e \u003ctime\u003e \u003cweek number\u003e\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: minustime CS2113T 2 1\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"8. edittime \u003cmodule code\u003e \u003cactual time spent\u003e \u003cweek number\u003e\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: edittime CS2113T 8 1\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"9. deletetime \u003cmodule code\u003e \u003cweek number\u003e\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            + \"   example: deletetime CS2113T 1\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"10.analyse \u003cweek number\u003e\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: analyse 1\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"11.addtask \u003cmodule code\u003e \u003ctask description\u003e\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: addtask CS2113T revise for exam\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"12.deletetask \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: deletetask 1\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"13.done \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"   example: done 1\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"14.listtask\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"15.open\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"16.exit\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerct"
        },
        "content": "            + \"17.clear\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": "            + \"18.reset\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String LOGO \u003d \"|\\\\\\\\        /|         |\u003d\u003d\u003d\u003d\u003d\u003d            ||\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||\\\\\\\\      / |  __   __|  ||  __  ___ ___ ||    ___   ____\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"|| \\\\\\\\    /  |//  \\\\//  |  ||//  \\\\/  |/    ||// / _ \\\\ //   \\\\\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||  \\\\\\\\  /   |||   ||  |  |||   ||  ||    ||\\\\\\\\ | __/ ||\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||   \\\\\\\\/    |\\\\\\\\__/\\\\\\\\__|  |||   \\\\\\\\__|\\\\___ || \\\\\\\\\\\\___| ||\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"*****************************************************|\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String BYE_LOGO \u003d  \"_______    _______\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||   \\\\\\\\\\\\  //||\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||___//\\\\\\\\// ||___\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||   \\\\\\\\ ||  ||\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            + \"||___// ||  ||____\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public static final String CONFIRMATION \u003d \"yes\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public static final String WRONG_FORMAT \u003d \"Oops!!! Wrong format entered.\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Reads input entered by the user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @return input entered by the user"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints the invalid command line."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printInvalidCommand() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(INVALID_COMMAND);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(ENTER_HELP + System.lineSeparator());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints the welcome screen when the program starts."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printWelcomeScreen() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Hello from\" + System.lineSeparator() + LOGO);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Full user guide available at: https://ay2021s1-cs2113t-f12-4.github.io/tp/UserGuide.html\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(ENTER_HELP + System.lineSeparator());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prompts the user to enter his/her name."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public String printNamePrompt() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"What is your name?\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String name \u003d in.nextLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            printInvalidCommand();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kerct"
        },
        "content": "            name \u003d printNamePrompt();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Greets the user by his/ her name."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void printGreeting(String name) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Hello \" + name + \"!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"What can I do for you?\" + System.lineSeparator());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints the exit line when user entered \"bye\"."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printExitScreen(String name) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"All changes saved.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(BYE_LOGO);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Bye \" + name + \". Hope to see you again soon!\" + System.lineSeparator());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints all the module information in a table."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param modList list of modules."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param week    specified week number."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printTable(ModuleList modList, int week) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModView view \u003d new ModView();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(modList, week);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints all available commands."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printHelpList() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(HELP_LIST);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message when module code has spacing."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printInvalidModuleSpacing(boolean toPrint) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (toPrint) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(MODULECODE_SPACING + System.lineSeparator());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message when the length of module code is invalid."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printInvalidModuleLength(boolean toPrint) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (toPrint) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(INVALID_MODULECODE + \" \" + MODULECODE_LENGTH + System.lineSeparator());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message when module type is invalid."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printInvalidModuleType(boolean toPrint) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (toPrint) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(INVALID_MODULETYPE);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(MODULETYPE_EXAMPLE + System.lineSeparator());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message when module does not exist."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printNotExist(String moduleCode) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(moduleCode + \" does not exist.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message when module exists."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printExist(String moduleCode) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(moduleCode + \" already exists.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message when module is deleted."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printDelete(String moduleCode) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(moduleCode + \" is removed.\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"All tasks under \" + moduleCode + \" are deleted.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message when module is deleted."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printDeleteExp(String moduleCode) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(\"Expected Workload of \" + moduleCode + \" is removed.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message when module is added to modList."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void printAdd(Module moduleDetail) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(moduleDetail + \" is added.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints the analysis of actual time spent."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param modList module list"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param week week number"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printBreakDownAnalysis(ModuleList modList, int week) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ViewTimeBreakdownAnalysis breakDown \u003d new ViewTimeBreakdownAnalysis();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        breakDown.printTimeBreakDownAndAnalysis(modList, week);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints the task added line when the user added a task to the task list."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param list task list"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printTaskIsAdded(TaskList list, String modCode) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.getTaskData();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task under \" + modCode + \":\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints the number of tasks stored in the task list."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param list task list"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printNumberOfTasks(TaskList list) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.getTaskData();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Now you have 1 task in the list.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        } else if (tasks.size() \u003e 1) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"You currently have no task :-)\" + System.lineSeparator());"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints invalid task number when task number entered does not exist."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param list task list"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printInvalidTaskNumber(TaskList list) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.getTaskData();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Invalid task number.\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Enter a task number from 1 to \" + tasks.size() + \".\" + System.lineSeparator());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints out the task list."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * @param list task list"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printTaskList(TaskList list) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d list.getTaskData();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"The current task list is empty.\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                System.out.println(i + \". \" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Confirms with the user whether he/ she wants to reset all data."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return true if user wants to reset data."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public boolean confirmReset() {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"---WARNING!---\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"This will delete all your past data and reset the whole program.\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"Type \u0027\" + CONFIRMATION + \"\u0027 if you wish to continue.\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Enter any key to cancel this operation.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (input.equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"Okay, the program will reset now...\" + System.lineSeparator());"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.out.println(\"Reset not confirmed. Your data is safe :)\" + System.lineSeparator());"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Confirms with the user whether he/ she wants to clear all data."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return true if user wants to clear data."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public boolean confirmClear() {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"---WARNING!---\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"This will delete all modules and tasks data.\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"Type \u0027\" + CONFIRMATION + \"\u0027 if you wish to continue.\");"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"Enter any key to cancel this operation.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (input.equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"Okay, your data has been deleted :(\" + System.lineSeparator());"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"Clearing of data not confirmed. Your data is safe :)\" + System.lineSeparator());"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     * Prints the given error message."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "lhydl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void printErrorMessage(String command) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case Parser.COMMAND_ADDTIME:"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(WRONG_FORMAT);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Format: addtime \u003cmodule code\u003e \u003cactual time spent\u003e \u003cweek number\u003e\""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    + System.lineSeparator());"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case Parser.COMMAND_MINUSTIME:"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(WRONG_FORMAT);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Format: minustime \u003cmodule code\u003e \u003ctime\u003e \u003cweek number\u003e\" + System.lineSeparator());"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case Parser.COMMAND_EDITTIME:"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(WRONG_FORMAT);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Format: edittime \u003cmodule code\u003e \u003cactual time spent\u003e \u003cweek number\u003e\""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                    + System.lineSeparator());"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case Parser.COMMAND_DELETETIME:"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(WRONG_FORMAT);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"Format: deletetime \u003cmodule code\u003e \u003cweek number\u003e\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"The week number should be a whole number between 1 and 13.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case Parser.COMMAND_LIST:"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(WRONG_FORMAT);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Format: list \u003cweek number\u003e\" + System.lineSeparator());"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case Parser.COMMAND_ANALYSIS:"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(WRONG_FORMAT);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Format: analyse \u003cweek number\u003e\" + System.lineSeparator());"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case Parser.COMMAND_DONE:"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(WRONG_FORMAT);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Format: done \u003ctask number\u003e\" + System.lineSeparator());"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case Parser.COMMAND_DELETETASK:"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(WRONG_FORMAT);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Format: deletetask \u003ctask number\u003e\" + System.lineSeparator());"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        case Parser.COMMAND_ADDTASK:"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(WRONG_FORMAT);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            System.out.println(\"Format: addtask \u003cmodule code\u003e \u003ctask description\u003e\" + System.lineSeparator());"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "lhydl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "lhydl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 15,
      "lhydl": 220,
      "kerct": 51,
      "KennethEer": 74
    }
  },
  {
    "path": "src/main/java/seedu/modtracker/ViewTimeBreakdownAnalysis.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static seedu.modtracker.Analysis.justRight;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static seedu.modtracker.Analysis.noInput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static seedu.modtracker.Analysis.tooLittleTimeSpent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static seedu.modtracker.Analysis.tooMuchTimeSpent;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class ViewTimeBreakdownAnalysis {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int LOWER_BOUND_OF_JUST_NICE \u003d -30;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String FULL_BAR \u003d \"█\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String HALF_BAR \u003d \"▌\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String NO_INPUT \u003d \"NO INPUT\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String ACTUAL \u003d \"Actual   | \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String EXPECTED \u003d \"Expected | \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String ANALYSIS \u003d \"Analysis:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int UPPER_BOUND_OF_JUST_NICE \u003d 30;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String TOO_LITTLE_TIME_SPENT \u003d \"You seem to be spending too little time on the module.\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            + \"Perhaps you should spend more time on this module.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String JUST_RIGHT \u003d \"Good Job! Great time management!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public static final String TOO_MUCH_TIME_SPENT \u003d \"Seems like you are spending too much time on this module.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            + \"Do you perhaps need help for this module?\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String MODULE_WEEK \u003d \"Module    Week \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int NONE \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String NO_VALID_INPUTS \u003d \"None of the modules has any valid inputs.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final int INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int MIN_WEEK_VALUE \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int MAX_WEEK_VALUE \u003d 13;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String INVALID_WEEK_NUMBER \u003d \"Please input a week number between 1 and 13 inclusive.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String EMPTY_MODULE_LIST \u003d \"The module list is empty. Please input some modules to be tracked.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String NO_TIME_SPENT \u003d \"Seems like you didn\u0027t spend any time on your modules this week.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints the breakdown and analysis of the"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * time spent in the specified week."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param list       list class containing all the modules taken."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param weekNumber specified week number."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printTimeBreakDownAndAnalysis(ModuleList list, int weekNumber) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!validateInputs(list, weekNumber)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assert weekNumber \u003e\u003d MIN_WEEK_VALUE : \"Week number should be between 1 and 13 inclusive.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assert weekNumber \u003c\u003d MAX_WEEK_VALUE : \"Week number should be between 1 and 13 inclusive.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assert !list.getData().isEmpty() : \"modList should not be empty\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        printTime(list, weekNumber);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean toPrintAnalysis \u003d printBreakdown(list, weekNumber);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (toPrintAnalysis) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            printAnalysis(list, weekNumber);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public boolean validateInputs(ModuleList list, int weekNumber) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (weekNumber \u003c MIN_WEEK_VALUE || weekNumber \u003e MAX_WEEK_VALUE) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(INVALID_WEEK_NUMBER + System.lineSeparator());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (list.getData().isEmpty()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(EMPTY_MODULE_LIST + System.lineSeparator());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints the breakdown of the time spent in the specified week."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param list       class containing all the modules taken."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param weekNumber specified week number."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return true if total time spent on the modules is greater than zero, otherwise false."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public boolean printBreakdown(ModuleList list, int weekNumber) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        double totalTimeSpent \u003d 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d list.getData();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean modsWithValidInputExist \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (Module m : modList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (m.doesActualTimeExist(weekNumber)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                totalTimeSpent +\u003d m.getActualTime()[weekNumber - INDEX_OFFSET];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                modsWithValidInputExist \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!modsWithValidInputExist) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(NO_VALID_INPUTS + System.lineSeparator());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"Total time spent: \" + totalTimeSpent + \" H\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (totalTimeSpent \u003d\u003d NONE) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(NO_TIME_SPENT + System.lineSeparator());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (Module m : modList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (m.doesActualTimeExist(weekNumber)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                double actualTime \u003d m.getActualTime()[weekNumber - INDEX_OFFSET];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                if (actualTime \u003e NONE) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    int percentage;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    percentage \u003d (int) (actualTime * 100 / totalTimeSpent);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    System.out.println(percentage + \"% of time is spent on \" + m.getModuleCode());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    System.out.println(\"Seems like you didn\u0027t spend any time on \" + m.getModuleCode() + \" this week.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(\"No input for \" + m.getModuleCode());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints the time spent in the specified week"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * in form of a horizontal bar graph."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param list       list class containing all the modules taken."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param weekNumber specified week number."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printTime(ModuleList list, int weekNumber) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(MODULE_WEEK + weekNumber + System.lineSeparator());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d list.getData();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (Module m : modList) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(m.getModuleCode());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.print(ACTUAL);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (m.doesActualTimeExist(weekNumber)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                printBarGraph(m.getActualTime()[weekNumber - INDEX_OFFSET]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(NO_INPUT);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.print(EXPECTED);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (m.doesExpectedWorkLoadExist()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                printBarGraph(m.getExpectedWorkload());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(NO_INPUT);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints the analysis of the time spent in the specified week."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param list       list class containing all the modules taken."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param weekNumber specified week number."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printAnalysis(ModuleList list, int weekNumber) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d list.getData();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(ANALYSIS);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (Module m : modList) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Analysis analysis \u003d computeAnalysisOfTimeSpent(m, weekNumber);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            switch (analysis) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            case tooMuchTimeSpent:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(m.getModuleCode());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(TOO_MUCH_TIME_SPENT);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            case justRight:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(m.getModuleCode());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(JUST_RIGHT);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            case tooLittleTimeSpent:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(m.getModuleCode());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(TOO_LITTLE_TIME_SPENT);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            case noInput:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Computes the analysis of actual time spent on the module for the week."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param m          module taken."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param weekNumber specified week number."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return analysis of actual time spent compare to the expected workload."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Analysis computeAnalysisOfTimeSpent(Module m, int weekNumber) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        double actualTime \u003d m.getActualTime()[weekNumber - INDEX_OFFSET];"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int expectedTime \u003d m.getExpectedWorkload();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        double percentageDifference \u003d (actualTime - expectedTime) / expectedTime * 100.0;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!m.doesActualTimeExist(weekNumber)) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return noInput;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else if (percentageDifference \u003c LOWER_BOUND_OF_JUST_NICE) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return tooLittleTimeSpent;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (percentageDifference \u003c UPPER_BOUND_OF_JUST_NICE || actualTime \u003d\u003d expectedTime) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return justRight;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return tooMuchTimeSpent;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private void printBarGraph(double time) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean endsWithHalfBlock \u003d !hasDecimalPlaces(time);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (int i \u003d 0; i \u003c (int) time; i++) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            output.append(FULL_BAR);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (endsWithHalfBlock) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            output.append(HALF_BAR);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        output.append(\" \").append(time);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private boolean hasDecimalPlaces(double input) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return ((input * 10) % 10 \u003d\u003d 0);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 223,
      "kerct": 1,
      "KennethEer": 2
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/ModTrackerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "class ModTrackerTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 2,
      "-": 10
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/ModViewTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "class ModViewTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private final ModView view \u003d new ModView();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_emptyList_emptyModuleList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList emptyList \u003d new ModuleList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        emptyList.getData().clear();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(emptyList, 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(ModView.EMPTY_MODULE_LIST + System.lineSeparator()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_invalidWeekNumber_invalidWeekNumber() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList emptyList \u003d new ModuleList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        emptyList.getData().clear();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(emptyList, 0);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(ModView.INVALID_WEEK_NUMBER + System.lineSeparator()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(emptyList, -1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(ModView.INVALID_WEEK_NUMBER + System.lineSeparator()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(emptyList, 14);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(ModView.INVALID_WEEK_NUMBER + System.lineSeparator()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_6CharLongModuleCode_tableAdjustedTo6Char() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList filledList \u003d new ModuleList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d filledList.getData();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.add(new Module(\"CS1231\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ModView.FIRST_PART_OF_BORDER + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_HEADER + ModView.SECOND_PART_OF_HEADER"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|  01  | CS1231 | No Input | No Input |\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + ModView.SECOND_PART_OF_BORDER;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(filledList, 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected + System.lineSeparator(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                outContent.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_7CharLongModuleCode_tableAdjustedTo7Char() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList filledList \u003d new ModuleList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d filledList.getData();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.clear();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.add(new Module(\"GER1000\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ModView.FIRST_PART_OF_BORDER + \"-\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_HEADER + \" \" + ModView.SECOND_PART_OF_HEADER"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"-\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|  01  | GER1000 | No Input | No Input |\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"-\" + ModView.SECOND_PART_OF_BORDER;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(filledList, 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected + System.lineSeparator(),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                outContent.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_8CharLongModuleCode_tableAdjustedTo8Char() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList filledList \u003d new ModuleList();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d filledList.getData();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.clear();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.add(new Module(\"GER1000H\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_HEADER + \"  \" + ModView.SECOND_PART_OF_HEADER"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|  01  | GER1000H | No Input | No Input |\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(filledList, 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected + System.lineSeparator(),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                outContent.toString());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_hasExpectedWorkload_displaysExpectedWorkLoad() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList filledList \u003d new ModuleList();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d filledList.getData();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.clear();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.add(new Module(\"GER1000H\", \"8\"));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_HEADER + \"  \" + ModView.SECOND_PART_OF_HEADER"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|  01  | GER1000H |     8    | No Input |\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(filledList, 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected + System.lineSeparator(),"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                outContent.toString());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAllModuleInformation_hasActualWorkload_displaysActualWorkLoad() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList filledList \u003d new ModuleList();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ArrayList\u003cModule\u003e modList \u003d filledList.getData();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.clear();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module mod \u003d new Module(\"GER1000H\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        mod.addActualTime(\"8\", \"1\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        modList.add(mod);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_HEADER + \"  \" + ModView.SECOND_PART_OF_HEADER"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|  01  | GER1000H | No Input |    8.0   |\\n\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + \"--\" + ModView.SECOND_PART_OF_BORDER;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAllModuleInformation(filledList, 1);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected + System.lineSeparator(),"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                outContent.toString());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 159
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/ModuleListMinusAddTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import org.junit.jupiter.api.MethodOrderer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import org.junit.jupiter.api.Order;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import org.junit.jupiter.api.TestMethodOrder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "@TestMethodOrder(MethodOrderer.OrderAnnotation.class)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "class ModuleListMinusAddTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private final ModView view \u003d new ModView();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    private static final String TEST_FILEPATH \u003d \"test/data/modlist.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    Storage storage \u003d new Storage(TEST_FILEPATH);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    ModuleList modulesTest \u003d new ModuleList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Order(1)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void addTime_AddOnlyAnHour_ModuleWithoutActualWorkload_ModuleWithWorkloadAdded() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.addMod(\"addmod CS3030\", true, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.addTime(\"addtime CS3030 1 4\", true, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String expected \u003d \"1 hour has been added to CS3030.\" + System.lineSeparator()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                + \"1.0 hours have been spent on this module in week 4.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Order(2)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void addTime_ModuleWithoutActualWorkload_ModuleWithWorkloadAdded() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.addMod(\"addmod CS3030\", true, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.addTime(\"addtime CS3030 4 4\", true, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String expected \u003d \"4 hours have been added to CS3030.\" + System.lineSeparator()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                + \"5.0 hours have been spent on this module in week 4.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Order(3)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void minusTime_ModuleWithActualWorkload_ModuleWithWorkloadSubtracted() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.minusTime(\"minustime CS3030 2 4\", true, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String expected \u003d \"2 hours have been removed from CS3030.\" + System.lineSeparator()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                + \"3.0 hours have been spent on this module in week 4.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Order(4)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void minusTime_MinusOnlyAnHour_ModuleWithActualWorkload_ModuleWithWorkloadSubtracted() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.minusTime(\"minustime CS3030 1 4\", true, storage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String expected \u003d \"1 hour has been removed from CS3030.\" + System.lineSeparator()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                + \"2.0 hours have been spent on this module in week 4.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Order(5)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void minusTime_CheckIfHoursExceed() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.minusTime(\"minustime CS3030 5 4\", true, storage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String expected \u003d \"Sorry you are trying to remove too many hours.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Order(6)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void editTime_ModuleWithActualWorkload() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        modulesTest.editTime(\"edittime CS3030 5 4\", true, storage);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String expected \u003d \"5 hours is the new actual workload for the module CS3030.\" + System.lineSeparator()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                + \"5.0 hours have been spent on this module in week 4.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    @Order(7)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    public void viewModule_checkIfTimeIsEditedCorrectly() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        view.printAllModuleInformation(modulesTest, 4);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        String expected \u003d ModView.FIRST_PART_OF_BORDER + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                + ModView.FIRST_PART_OF_HEADER + ModView.SECOND_PART_OF_HEADER"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + ModView.SECOND_PART_OF_BORDER"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                + \"|  04  | CS3030 | No Input |    5.0   |\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "                + ModView.FIRST_PART_OF_BORDER + ModView.SECOND_PART_OF_BORDER;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "DesmondKJL"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DesmondKJL": 107
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/ModuleListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "class ModuleListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String TEST_FILEPATH \u003d \"test/data/modlist.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    Storage storage \u003d new Storage(TEST_FILEPATH);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    ModuleList modulesTest \u003d new ModuleList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addExp_emptyModuleList_newModuleWithExpTimeAdded() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ArrayList\u003cModule\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Module testMod \u003d new Module(\"CS3030\", \"4\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        testList.add(testMod);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.addExp(\"addExp CS3030 4\", true, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"CS3030, Expected Workload: 4h is added.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertArrayEquals(testList.toArray(), modulesTest.modList.toArray());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addModule_emptyModuleList_newModuleAdded() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"CS5000 is added.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.addMod(\"addMod CS5000\", true, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertTrue(modulesTest.checkIfModuleExist(\"CS5000\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addModule_invalidInput_printErrorMessage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"Please type addmod \u003cmodule code\u003e\" + System.lineSeparator();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.addMod(\"addMod\", true, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addModule_invalidModuleSpacing_printErrorMessage() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"Please type module code without any spacing.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.addMod(\"addmod cs 1010\", true, storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void addModule_invalidModuleChar_printErrorMessage() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"Please check module code again. The module code should have 6 - 8 \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                + \"characters without any spacing.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.addMod(\"addmod cs1234567\", true, storage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void deleteModule_removeModule_ModuleRemoved() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String expected \u003d \"CS5000 is removed.\" + System.lineSeparator()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                + \"All tasks under CS5000 are deleted.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.deleteMod(\"deleteMod CS5000\", true, storage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertFalse(modulesTest.checkIfModuleExist(\"CS5000\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void deleteModule_removeNonExistingModule_printErrorMessage() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"CS0000 does not exist.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.deleteMod(\"deleteMod CS0000\", true, storage);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void deleteExp_ModuleWithExpTime_ModuleWithExpTimeRemoved() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modulesTest.deleteExp(\"deleteExp CS3030\", true, storage);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"Expected Workload of CS3030 is removed.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lhydl": 2,
      "KennethEer": 102
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/NotificationTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static seedu.modtracker.Notification.CAPABLE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static seedu.modtracker.Notification.HARD_WORK;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static seedu.modtracker.Notification.MAINTAIN;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static seedu.modtracker.Notification.PUSH_ON;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static seedu.modtracker.Notification.STRONGER;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static seedu.modtracker.Notification.SUCCESS;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static seedu.modtracker.Notification.TIME_MANAGEMENT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import static seedu.modtracker.Notification.TODAY;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "class NotificationTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String TEST_FILEPATH \u003d \"test/data/notification.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    Storage storage \u003d new Storage(TEST_FILEPATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    ModuleList modules \u003d new ModuleList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    Notification notification \u003d new Notification();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /*void insert() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addExp(\"addExp CS1010 8\", true, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addTime(\"addtime cs1010 2 1\", true, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "    void start_addOneModuleWithTooLittleTime_startMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "        modules.clear();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addExp(\"addExp CS5555 3\", true, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addTime(\"addtime cs5555 1 1\", true, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        notification.start();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String commandMsg \u003d \"Please type `open` to view the notification and an encouraging message.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String notification \u003d \"You have 1 notifications.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d notification + commandMsg + System.lineSeparator();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.clear();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    void getNumNotification_addModuleWithoutExp_NumOfNotification() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addMod(\"addMod CS1000\", true, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        notification.printNotification(modules);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(0, notification.getNumNotification(modules));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    void getNumNotification_addOneModuleWithOnlyExp_NumOfNotification() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addExp(\"addExp CS1000 8\", true, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        notification.printNotification(modules);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(0, notification.getNumNotification(modules));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerct"
        },
        "content": "    void getNumNotification_addOneModuleWithTooLittleTime_NumOfNotification() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addExp(\"addExp CS1010 8\", true, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addTime(\"addtime cs1010 2 1\", true, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        notification.printNotification(modules);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(1, notification.getNumNotification(modules));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerct"
        },
        "content": "    void printNotification_ModuleWithTooLittleTime_tooLittleTimeMessage() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addExp(\"addExp CS2000 8\", true, storage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addTime(\"addtime cs2000 2 1\", true, storage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        notification.printNotification(modules);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean isPresent \u003d false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean expIsPresent \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String[] possibleInputs \u003d {HARD_WORK, PUSH_ON, STRONGER, CAPABLE, TODAY};"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (int i \u003d 0; i \u003c possibleInputs.length; i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (outContent.toString().contains(possibleInputs[i])) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                isPresent \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"Oh no! It appears you are spending too little time on CS2000.\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (outContent.toString().contains(expected)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            expIsPresent \u003d true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertTrue(isPresent);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertTrue(expIsPresent);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    void printNotification_ModuleWithJustRightTime_JustRightTimeMessage() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.clear();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addExp(\"addExp CS3000 8\", true, storage);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addTime(\"addtime cs3000 8 1\", true, storage);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        notification.printNotification(modules);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean msgIsPresent \u003d false;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean expIsPresent \u003d false;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String[] successInputs \u003d {MAINTAIN, SUCCESS, TIME_MANAGEMENT};"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (int i \u003d 0; i \u003c successInputs.length; i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (outContent.toString().contains(successInputs[i])) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                msgIsPresent \u003d true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"You are on track. Well Done!\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (outContent.toString().contains(expected)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            expIsPresent \u003d true;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertTrue(msgIsPresent);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertTrue(expIsPresent);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    void printNotification_ModuleWithTooMuchTime_tooLMuchTimeMessage() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.clear();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addExp(\"addExp CS4000 5\", false, storage);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        modules.addTime(\"addtime cs4000 10 1\", false, storage);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        notification.printNotification(modules);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean expIsPresent \u003d false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String expected \u003d \"Beware! Seems like you are spending too much time on CS4000.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 4,
      "KennethEer": 129
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lhydl"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    ModuleList modList \u003d new ModuleList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void parse_invalidInput_expectPrintInvalid() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input1 \u003d \"exit addmod \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input1, modList, null, null, true, null);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String expected \u003d Ui.INVALID_COMMAND + System.lineSeparator() + Ui.ENTER_HELP + System.lineSeparator();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input2 \u003d \"addexps\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input2, modList, null, null, true, null);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input3 \u003d \"help 1\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input3, modList, null, null, true, null);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void parse_blankInput_expectPrintInvalid() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input, modList, null, null, true, null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String expected \u003d Ui.INVALID_COMMAND + System.lineSeparator() + Ui.ENTER_HELP + System.lineSeparator();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void parse_exitInput_expectPrintExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input \u003d \"exit\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String name \u003d \"Lee\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input, modList, name, null, true, null);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String expected \u003d \"All changes saved.\" + System.lineSeparator() + Ui.BYE_LOGO + System.lineSeparator()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                + \"Bye \" + name + \". Hope to see you again soon!\" + System.lineSeparator();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void parse_exitInput_expectExitStatusTrue() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input \u003d \"exit\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input, modList, null, null, true, null);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertTrue(parser.isExit());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void parse_anyInput_expectExitStatusFalse() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String input \u003d \"addexp \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        parser.parse(input, modList, null, null, true, null);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertFalse(parser.isExit());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lhydl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lhydl": 75
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/StorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private static final String TEST_DATA_FILEPATH \u003d \"test/data/modtracker.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void constructor_nullFilePath_exceptionThrown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Storage(null));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void testIfFileExists_validFilePath_success() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "        new Storage(TEST_DATA_FILEPATH);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assertTrue(new File(TEST_DATA_FILEPATH).isFile());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void getReader_validFilePath_success() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Storage storage \u003d new Storage(TEST_DATA_FILEPATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assertNotNull(storage.getReader());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void getName_validName_success() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Storage storage \u003d new Storage(TEST_DATA_FILEPATH);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assertEquals(\"John Doe\", storage.getName());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void load_validFormat_success() throws Exception {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerct"
        },
        "content": "        ModTracker modTracker \u003d new ModTracker(TEST_DATA_FILEPATH);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerct"
        },
        "content": "        modTracker.getStorage().loadData(modTracker);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "        ModuleList actualModList \u003d modTracker.getModList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertTrue(actualModList.checkIfModuleExist(\"CS1000\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertTrue(actualModList.checkIfModuleExist(\"EE2000\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        assertFalse(actualModList.checkIfModuleExist(\"CS1231\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerct"
        },
        "content": "        TaskList actualTaskList \u003d modTracker.getTaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assertEquals(\"CS1000\", actualTaskList.getTaskData().get(0).getModCode());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerct"
        },
        "content": "        assertEquals(1, actualTaskList.getTaskData().size());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 50,
      "KennethEer": 3
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/TaskListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lhydl"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void addTask_nonExistingModule_expectTaskNotAdded() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "        taskList.addTask(\"addtask CS2101 study\", true, null);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String expected \u003d \"CS2101 does not exist.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    public void addTask_invalidModule_expectTaskNotAdded() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "        taskList.addTask(\"addtask cs21 study\", true, null);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        String expected \u003d \"Please check module code again. The module code should have \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lhydl"
        },
        "content": "                + \"6 - 8 characters without any spacing.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lhydl"
        },
        "content": "        assertEquals(expected + System.lineSeparator(), outContent.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lhydl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lhydl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lhydl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lhydl": 31,
      "kerct": 4
    }
  },
  {
    "path": "src/test/java/seedu/modtracker/ViewTimeBreakdownAnalysisTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package seedu.modtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "class ViewTimeBreakdownAnalysisTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private final ViewTimeBreakdownAnalysis view \u003d new ViewTimeBreakdownAnalysis();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printBreakdown_modulesWithNoValidInput_printNoValidInputsReturnFalse() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module2 \u003d new Module(\"CS2113t\", \"10\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output \u003d view.printBreakdown(list, 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertFalse(output);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.NO_VALID_INPUTS + System.lineSeparator() + System.lineSeparator();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printBreakdown_modulesWithValidInputButNoTimeSpent_printTimeSpentEqualsZeroReturnFalse() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module.addActualTime(\"0\", \"2\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output \u003d view.printBreakdown(list, 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertFalse(output);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d \"Total time spent: 0.0 H\" + System.lineSeparator()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.NO_TIME_SPENT + System.lineSeparator()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printBreakdown_modulesWithTimeEqualsZeroTimeEqualsFiveAndInvalidTime_ReturnTrue() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module1.addActualTime(\"5\", \"2\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module2 \u003d new Module(\"CS2113t\", \"8\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module2.addActualTime(\"0\", \"2\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module3 \u003d new Module(\"CS2101\", \"8\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module3);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output \u003d view.printBreakdown(list, 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertTrue(output);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d \"Total time spent: 5.0 H\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"100% of time is spent on CS1231\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"Seems like you didn\u0027t spend any time on CS2113t this week.\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"No input for CS2101\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + System.lineSeparator();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAnalysis_modulesWithInvalidInput_noInput() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module2 \u003d new Module(\"CS2113t\", \"10\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module2);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAnalysis(list, 2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.ANALYSIS + System.lineSeparator();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAnalysis_modulesWithTooLittleTimeSpent_tooLitteTimeSpent() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module1.addActualTime(\"0\", \"2\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module2 \u003d new Module(\"CS2113t\", \"8\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module2.addActualTime(\"5.6\", \"2\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module2);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAnalysis(list, 2);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.ANALYSIS + System.lineSeparator()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"CS1231\" + System.lineSeparator()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.TOO_LITTLE_TIME_SPENT + System.lineSeparator()"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"CS2113t\" + System.lineSeparator()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.TOO_LITTLE_TIME_SPENT + System.lineSeparator()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAnalysis_modulesWithJustRightTimeSpent_justRightTimeSpent() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module1.addActualTime(\"10.39\", \"2\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module2 \u003d new Module(\"CS2113t\", \"8\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module2.addActualTime(\"5.61\", \"2\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module2);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAnalysis(list, 2);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.ANALYSIS + System.lineSeparator()"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"CS1231\" + System.lineSeparator()"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.JUST_RIGHT + System.lineSeparator()"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"CS2113t\" + System.lineSeparator()"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.JUST_RIGHT + System.lineSeparator()"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printAnalysis_modulesWithTooMuchTimeSpent_tooMuchTimeSpent() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module1.addActualTime(\"10.4\", \"2\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module2 \u003d new Module(\"CS2113t\", \"8\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module2.addActualTime(\"15\", \"2\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module2);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printAnalysis(list, 2);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.ANALYSIS + System.lineSeparator()"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"CS1231\" + System.lineSeparator()"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.TOO_MUCH_TIME_SPENT + System.lineSeparator()"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"CS2113t\" + System.lineSeparator()"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.TOO_MUCH_TIME_SPENT + System.lineSeparator()"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void validateInputs_weekNumberLessThanMinListNotEmpty_returnFalse() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output1 \u003d view.validateInputs(list, 0);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output2 \u003d view.validateInputs(list, -1);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertFalse(output1);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertFalse(output2);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void validateInputs_weekNumberMoreThanMaxListNotEmpty_returnFalse() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output1 \u003d view.validateInputs(list, 14);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertFalse(output1);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void validateInputs_weekNumberValidListNotEmpty_returnTrue() {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"8\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output1 \u003d view.validateInputs(list, 7);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertTrue(output1);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void validateInputs_weekNumberValidListIsEmpty_returnFalse() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean output1 \u003d view.validateInputs(list, 7);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertFalse(output1);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printTime_actualTimeExistsExpectedWorkloadExist_barGraphForActualTimeAndExpectedWorkload() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"5\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module1.addActualTime(\"3.4\", \"2\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printTime(list, 2);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.MODULE_WEEK + \"2\" + System.lineSeparator()"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"CS1231\" + System.lineSeparator()"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.ACTUAL + \"███▌ 3.4\""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.EXPECTED + \"█████ 5.0\" + System.lineSeparator()"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printTime_actualTimeDoesNotExistExpectedWorkloadExist_noInputForActualTimeAndBarGraphForExpectedWorkload() {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\", \"5\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printTime(list, 2);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.MODULE_WEEK + \"2\" + System.lineSeparator()"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"CS1231\" + System.lineSeparator()"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.ACTUAL + ViewTimeBreakdownAnalysis.NO_INPUT"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.EXPECTED + \"█████ 5.0\" + System.lineSeparator()"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    void printTime_actualTimeExistsNoExpectedWorkload_barGraphForActualTimeAndNoInputForExpectedWorkload() {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ModuleList list \u003d new ModuleList();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().clear();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Module module1 \u003d new Module(\"CS1231\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        module1.addActualTime(\"3.4\", \"2\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.getData().add(module1);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        view.printTime(list, 2);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String expected \u003d ViewTimeBreakdownAnalysis.MODULE_WEEK + \"2\" + System.lineSeparator()"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator() + \"CS1231\" + System.lineSeparator()"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.ACTUAL + \"███▌ 3.4\""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + ViewTimeBreakdownAnalysis.EXPECTED + ViewTimeBreakdownAnalysis.NO_INPUT + System.lineSeparator()"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 317
    }
  },
  {
    "path": "test/data/modtracker.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "John Doe"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "addmod cs1000"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "addmod ee2000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": "addtask cs1000 revision"
      }
    ],
    "authorContributionMap": {
      "kerct": 2,
      "KennethEer": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "James Gosling"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "addmod CS1000"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "addmod CS2113t"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "addexp CS3000 6"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "addexp CS3200 8"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "addexp CS1000 8"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "addtime CS1000 7 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "list 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lhydl"
        },
        "content": "analyse 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lhydl"
        },
        "content": "addtask cs1000 study"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lhydl"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lhydl"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "deletemod CS1000"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "deletemod cs2113t"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "deletemod CS3200"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lhydl"
        },
        "content": "exit"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "limgl1998": 4,
      "lhydl": 5,
      "kerct": 2,
      "-": 1,
      "KennethEer": 5
    }
  }
]
